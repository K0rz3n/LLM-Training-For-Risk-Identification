[
  {
    "filename":"50ebf3dd4bf63d7e4973630bb5d06c4f772d41aa.dockerfile",
    "file_content":"FROM ubuntu:trusty\nMAINTAINER Evan Cordell <cordell.evan@gmail.com>\n\n## Prepare\nRUN apt-get clean all && apt-get update && apt-get upgrade -y\n\n# Build Tools\nRUN apt-get update && \\\n    apt-get install -y build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev pkg-config software-properties-common && \\\n    apt-add-repository ppa:ubuntu-lxc\/lxd-stable && \\\n    apt-get install -y make wget tar git curl && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n## Install libsodium\nENV LIBSODIUM_VERSION 1.0.8\n\nRUN wget https:\/\/github.com\/jedisct1\/libsodium\/releases\/download\/$LIBSODIUM_VERSION\/libsodium-$LIBSODIUM_VERSION.tar.gz && \\\n  tar xzvf libsodium-$LIBSODIUM_VERSION.tar.gz && \\\n  cd libsodium-$LIBSODIUM_VERSION && \\\n  .\/configure && \\\n  make && make check && sudo make install && \\\n  cd .. && rm -rf libsodium-$LIBSODIUM_VERSION && \\\n  sudo ldconfig\n\n# Install Python\nRUN apt-get update && \\\n    apt-get install -y python3-pip python3-dev python3-software-properties && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Install Ruby\nRUN cd \/tmp && \\\n  wget -q http:\/\/cache.ruby-lang.org\/pub\/ruby\/2.1\/ruby-2.1.2.tar.gz && \\\n  tar xzf ruby-2.1.2.tar.gz && \\\n  cd ruby-2.1.2 && \\\n  .\/configure --enable-shared --prefix=\/usr && \\\n  make && \\\n  make install && \\\n  cd .. && \\\n  rm -rf ruby-2.1.2* && \\\n  cd ..\n\n# Install Node\nENV NODE_PREFIX \/usr\/local\nENV NODE_PATH $NODE_PREFIX\/lib\/node_modules\nENV NODE_VERSION 0.11.14\nENV NPM_VERSION 2.1.6\n\nRUN wget -q \"http:\/\/nodejs.org\/dist\/v$NODE_VERSION\/node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n  && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C $NODE_PREFIX --strip-components=1 \\\n  && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" \\\n  && npm install -g npm@\"$NPM_VERSION\" \\\n  && npm cache clear\n\n# Install Go\nRUN apt-get update && \\\n    apt-get install -y golang bzr && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* && \\\n    mkdir \/usr\/go\nENV GOROOT \/usr\/lib\/go\nENV GOPATH \/usr\/go\n\n# Install PHP\nRUN apt-get update && \\\n    apt-get install -y php5 php5-dev php-pear && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Install Rust\nENV RUST_VERSION 1.12.0\nRUN apt-get update && \\\n    curl -sO https:\/\/static.rust-lang.org\/dist\/rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \\\n    tar -xvzf rust-$RUST_VERSION-x86_64-unknown-linux-gnu.tar.gz && \\\n    .\/rust-$RUST_VERSION-x86_64-unknown-linux-gnu\/install.sh && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* rust-$RUST_VERSION-x86_64-unknown-linux-gnu{,.tar.gz}\n\n# Install libmacaroons\nRUN wget -O - http:\/\/ubuntu.hyperdex.org\/hyperdex.gpg.key | apt-key add - && \\\n    echo \"deb [arch=amd64] http:\/\/ubuntu.hyperdex.org trusty main\" >> \/etc\/apt\/sources.list.d\/hyperdex.list && \\\n    apt-get update && \\\n    apt-get install -y python-macaroons && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nWORKDIR \/usr\/src\n\n# Install pymacaroons\nRUN pip3 install pymacaroons pytest pytest-html\n\n# Install ruby-macaroons\nRUN gem install macaroons -v 0.6.1\n\n# Install macaroons.js\nRUN npm install -g macaroons.js\n\n# Install go-macaroons\nRUN go get launchpad.net\/gorun && \\\n    go get gopkg.in\/macaroon.v1 && \\\n    go get gopkg.in\/macaroon-bakery.v1\/bakery\n\n# Install php-macaroons\nADD implementations\/php-macaroons \/usr\/src\/implementations\/php-macaroons\nRUN pecl install libsodium-1.0.6 && \\\n    echo \"extension=libsodium.so\" >> \/etc\/php5\/cli\/php.ini && \\\n    curl -sS https:\/\/getcomposer.org\/installer | php && \\\n    mv composer.phar \/usr\/bin\/composer && \\\n    cd implementations\/php-macaroons && \\\n    composer install\n\n# Install rust-macaroons\nRUN mkdir \/usr\/rust && cd \/usr\/rust && \\\n    git clone https:\/\/github.com\/cryptosphere\/rust-macaroons.git \/usr\/rust\/rust-macaroons && \\\n    cd rust-macaroons && \\\n    cargo build\n\n# Add source\nADD . \/usr\/src\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":67,
        "text":"MAINTAINER Evan Cordell <cordell.evan@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":185,
        "end":301,
        "text":"apt-get install -y build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev pkg-config software-properties"
      },
      {
        "label":"apt-install-without-version",
        "start":185,
        "end":301,
        "text":"apt-get install -y build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev pkg-config software-properties"
      },
      {
        "label":"use-cd-change-dir",
        "start":821,
        "end":826,
        "text":"cd .."
      },
      {
        "label":"use-cd-change-dir",
        "start":1092,
        "end":1103,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-sudo-run",
        "start":796,
        "end":816,
        "text":"sudo make install &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3309,
        "end":3381,
        "text":"ADD implementations\/php-macaroons \/usr\/src\/implementations\/php-macaroons"
      },
      {
        "label":"pip-install-without-version",
        "start":2976,
        "end":3023,
        "text":"RUN pip3 install pymacaroons pytest pytest-html"
      },
      {
        "label":"use-cd-change-dir",
        "start":716,
        "end":747,
        "text":"cd libsodium-$LIBSODIUM_VERSION"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":933,
        "end":1003,
        "text":"apt-get install -y python3-pip python3-dev python3-software-properties"
      },
      {
        "label":"apt-install-without-version",
        "start":933,
        "end":1003,
        "text":"apt-get install -y python3-pip python3-dev python3-software-properties"
      },
      {
        "label":"use-cd-change-dir",
        "start":1319,
        "end":1329,
        "text":"cd .. && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1358,
        "end":1363,
        "text":"cd .."
      },
      {
        "label":"use-cd-change-dir",
        "start":1217,
        "end":1233,
        "text":"cd ruby-2.1.2 &&"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1835,
        "end":1864,
        "text":"apt-get install -y golang bzr"
      },
      {
        "label":"apt-install-without-version",
        "start":1835,
        "end":1869,
        "text":"apt-get install -y golang bzr && \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2827,
        "end":2865,
        "text":"apt-get install -y python-macaroons &&"
      },
      {
        "label":"apt-install-without-version",
        "start":2827,
        "end":2865,
        "text":"apt-get install -y python-macaroons &&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3868,
        "end":3882,
        "text":"ADD . \/usr\/src"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"8264c69b3e2b62a4646fb590e0f05b5c6e997a02.dockerfile",
    "file_content":"FROM cptobvious\/go-ethereum-base\n\n# Buildslave dependencies\nRUN apt-get install --fix-missing -y python-pip python-dev supervisor inotify-tools\n\n# Clone latest buildbot\nRUN git clone https:\/\/github.com\/buildbot\/buildbot.git\n\n# Install buildbot\nRUN cd buildbot && git checkout eight && pip install -e slave\nRUN pip install pip-tools requests\n# RUN pip-review -a\n\n# Create buildslave\nRUN buildslave create-slave -r -l 3 -s 512000 slave build.ethdev.com:9989 dockerslave pass\n# Add manually set buildslave config, use .sample file or previously created buildslave config\nADD buildbot.tac slave\/buildbot.tac\n\n# Set slave\/info\/admin and slave\/info\/host\nRUN echo \"caktux <caktux@gmail.com>\" > slave\/info\/admin\nRUN echo `lsb_release -ds` > slave\/info\/host\n\n# Setup supervisord\nRUN \/bin\/echo -e \"[supervisord]\\n\\\nnodaemon=true\\n\\\n\\n\\\n[program:buildslave]\\n\\\ndirectory=\/slave\\n\\\nuser=root\\n\\\ncommand=twistd --nodaemon --no_save -y buildbot.tac\" > \/etc\/supervisor\/conf.d\/buildbot.conf\n\n# CMD [\"start\", \"slave\"]\n# ENTRYPOINT [\"buildslave\"]\nCMD [\"-n\", \"-c\", \"\/etc\/supervisor\/conf.d\/buildbot.conf\"]\nENTRYPOINT [\"\/usr\/bin\/supervisord\"]\n",
    "risk_labels":[
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":32,
        "text":"FROM cptobvious\/go-ethereum-base"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":60,
        "end":143,
        "text":"RUN apt-get install --fix-missing -y python-pip python-dev supervisor inotify-tools"
      },
      {
        "label":"apt-install-without-version",
        "start":60,
        "end":143,
        "text":"RUN apt-get install --fix-missing -y python-pip python-dev supervisor inotify-tools"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":568,
        "end":603,
        "text":"ADD buildbot.tac slave\/buildbot.tac"
      },
      {
        "label":"use-cd-change-dir",
        "start":244,
        "end":284,
        "text":"RUN cd buildbot && git checkout eight &&"
      },
      {
        "label":"pip-install-without-version",
        "start":306,
        "end":340,
        "text":"RUN pip install pip-tools requests"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"d290efddb60a17644c145f559ce5dd52bf2165e7.dockerfile",
    "file_content":"FROM imapp\/blender\n\nMAINTAINER Paweł Bylica <chfast@gmail.com>\n\n# Install python and dependencies for dependencies:\n#   python-dev, g++\n#   Pillow: libjpeg-dev, zlib1g-dev\n#   OpenEXR: libopenexr-dev\n#   pycrypto: libgmp-dev\n#   ethereum: libssl-dev\nRUN apt-get update && apt-get install -y \\\n    python-pip \\\n    python-dev \\\n    g++ dh-autoreconf \\\n    libjpeg-dev zlib1g-dev libopenexr-dev libgmp-dev libffi-dev \\\n    libssl-dev ca-certificates \\\n    pkg-config \\\n&& apt-get clean \\\n&& rm -rf \/var\/lib\/apt\/lists\/* \\\n&& pip install --upgrade pip setuptools cffi \\\n&& pip install ipfs-api\n\n# Quite stupid, but GNR is not independent yet\nCOPY . \/opt\/golem\n\nRUN cd \/opt\/golem && python setup.py develop\n\nENV GOLEM=\/opt\/golem \\\n    PATH=\/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin:\/usr\/local\/blender\n\n# use ENTRYPOINT from imunes\/vroot:\nENTRYPOINT [\"\/usr\/bin\/iinit.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM imapp\/blender"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":62,
        "text":"MAINTAINER Paweł Bylica <chfast@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":272,
        "end":466,
        "text":"apt-get install -y \\\\npython-pip \\\\npython-dev \\\\ng++ dh-autoreconf \\\\nlibjpeg-dev zlib1g-dev libopenexr-dev libgmp-dev libffi-dev \\\\nlibssl-dev ca-certificates \\\\npkg-config \\"
      },
      {
        "label":"apt-install-without-version",
        "start":272,
        "end":466,
        "text":"apt-get install -y \\\\npython-pip \\\\npython-dev \\\\ng++ dh-autoreconf \\\\nlibjpeg-dev zlib1g-dev libopenexr-dev libgmp-dev libffi-dev \\\\nlibssl-dev ca-certificates \\\\npkg-config \\"
      },
      {
        "label":"pip-install-without-version",
        "start":569,
        "end":589,
        "text":"pip install ipfs-api"
      },
      {
        "label":"pip-install-without-version",
        "start":522,
        "end":563,
        "text":"pip install --upgrade pip setuptools cffi"
      },
      {
        "label":"use-cd-change-dir",
        "start":657,
        "end":674,
        "text":"RUN cd \/opt\/golem"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"cbc397f69306a845d4ee29c9be0eba46d04afdb8.dockerfile",
    "file_content":"FROM        debian\nMAINTAINER  Love Nyberg \"love.nyberg@lovemusic.se\"\nENV REFRESHED_AT 2014-09-30\n\n# Update the package repository\nRUN apt-get update -qq && \\ \n  apt-get upgrade -yqq\n\n# Compiling and installing node.js\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -yqq wget curl python g++ make checkinstall fakeroot && \\\n  apt-get -yqq clean && \\\n  src=$(mktemp -d) && cd $src && \\\n  wget -N http:\/\/nodejs.org\/dist\/node-latest.tar.gz && \\\n  tar xzvf node-latest.tar.gz && cd node-v* && \\\n  .\/configure && \\\n  fakeroot checkinstall -y --install=no --pkgversion $(echo $(pwd) | sed -n -re's\/.+node-v(.+)$\/\\1\/p') make -j$(($(nproc)+1)) install && \\\n  dpkg -i node_*\n\n# Installing possible node executers\nRUN npm install -g nodemon forever\n\n# Add node application into container\nADD src \/var\/www\n\n# Install node dependences\nRUN cd \/var\/www && npm install\n\n# Expose application port\nEXPOSE 8080\n\n# Add docker start script\nADD start.sh \/start.sh\nCMD [\"bash\", \"start.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM debian"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":69,
        "text":"MAINTAINER Love Nyberg \"love.nyberg@lovemusic.se\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":254,
        "end":322,
        "text":"apt-get install -yqq wget curl python g++ make checkinstall fakeroot"
      },
      {
        "label":"apt-install-without-version",
        "start":254,
        "end":322,
        "text":"apt-get install -yqq wget curl python g++ make checkinstall fakeroot"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":782,
        "end":798,
        "text":"ADD src \/var\/www"
      },
      {
        "label":"use-cd-change-dir",
        "start":827,
        "end":842,
        "text":"RUN cd \/var\/www"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":924,
        "end":946,
        "text":"ADD start.sh \/start.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"e88fb43160e54fe652b16bbd401187c86692a84c.dockerfile",
    "file_content":"FROM ngraph_test_base\n\nRUN apt-get install -y bzip2 wget coreutils libjasper1 libjpeg8 libpng12-0\n\n# Get and build Open MPI\nRUN wget -q https:\/\/www.open-mpi.org\/software\/ompi\/v1.10\/downloads\/openmpi-1.10.3.tar.gz && \\\n    tar -xzvf .\/openmpi-1.10.3.tar.gz && \\\n    cd openmpi-1.10.3 && \\\n    .\/configure --prefix=\/usr\/local\/mpi && \\\n    make -j all && \\\n    make install && cd .. && \\\n    rm -rf openmpi-1.10.3 openmpi-1.10.3.tar.gz\n\n# Add Open MPI to path\nENV PATH \"\/usr\/local\/mpi\/bin:$PATH\"\nENV LD_LIBRARY_PATH \"\/usr\/local\/mpi\/lib:$LD_LIBRARY_PATH\"\nENV MPI_ROOT \"\/usr\/local\/mpi\"\n\n# Get and install CNTK Binary Distribution\nENV CNTK_WHEEL_2_7 https:\/\/cntk.ai\/PythonWheel\/CPU-Only\/cntk-2.2-cp27-cp27mu-linux_x86_64.whl\nENV CNTK_WHEEL_3_4 https:\/\/cntk.ai\/PythonWheel\/CPU-Only\/cntk-2.2-cp34-cp34m-linux_x86_64.whl\nENV CNTK_WHEEL_3_5 https:\/\/cntk.ai\/PythonWheel\/CPU-Only\/cntk-2.2-cp35-cp35m-linux_x86_64.whl\nRUN if [ \"$(python -c 'import sys; print(sys.version_info[0])')\" = \"2\" ]; then \\\n    pip install --trusted-host cntk.ai $CNTK_WHEEL_2_7; \\\n    else \\\n      if [ \"$(python -c 'import sys; print(sys.version_info[1])')\" = \"4\" ]; then \\\n      pip install $CNTK_WHEEL_3_4; fi;\\\n      if [ \"$(python -c 'import sys; print(sys.version_info[1])')\" = \"5\" ]; then \\\n      pip install $CNTK_WHEEL_3_5; fi; \\\n    fi\n\n# necessary for tests\/test_walkthrough.py which requires that ngraph is\n# importable from an entrypoint not local to ngraph.\nADD . \/root\/ngraph-test\nRUN pip install -e .\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":21,
        "text":"FROM ngraph_test_base"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":23,
        "end":97,
        "text":"RUN apt-get install -y bzip2 wget coreutils libjasper1 libjpeg8 libpng12-0"
      },
      {
        "label":"apt-install-without-version",
        "start":23,
        "end":97,
        "text":"RUN apt-get install -y bzip2 wget coreutils libjasper1 libjpeg8 libpng12-0"
      },
      {
        "label":"use-cd-change-dir",
        "start":265,
        "end":282,
        "text":"cd openmpi-1.10.3"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1435,
        "end":1453,
        "text":"ADD . \/root\/ngraph"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":990,
        "end":1024,
        "text":"pip install --trusted-host cntk.ai"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"0ce8919fcab9dae329b304e3030f9fbec82d05f2.dockerfile",
    "file_content":"\nFROM debian:latest\n\nMAINTAINER Contextual Dynamics Lab <contextualdynamics@gmail.com>\n\nRUN apt-get update && apt-get install -y eatmydata\nRUN eatmydata apt-get install -y wget bzip2 ca-certificates \\\n    git \\\n    swig \\\n    mpich \\\n    pkg-config \\\n    gcc \\\n    wget \\\n    curl \\\n    vim \\\n    nano\n\nRUN echo 'export PATH=\/opt\/conda\/bin:$PATH' > \/etc\/profile.d\/conda.sh && \\\n    wget --quiet https:\/\/repo.continuum.io\/archive\/Anaconda3-5.3.1-Linux-x86_64.sh -O ~\/anaconda.sh && \\\n    \/bin\/bash ~\/anaconda.sh -b -p \/opt\/conda && \\\n    rm ~\/anaconda.sh\nENV PATH \/opt\/conda\/bin:$PATH\n\nRUN conda install pystan -y\nRUN pip install --upgrade pip\nRUN pip install hypertools\nRUN conda update numpy scipy pandas scikit-learn seaborn matplotlib\n\n\nRUN pip install pytest \\\nipytest\n\nADD PANDAS \/PANDAS\nADD coding \/coding\nADD docker \/docker\nADD testing \/testing\nADD tutorial_template \/tutorial_template\nADD STAN \/STAN\n# ENV GOOGLE_APPLICATION_CREDENTIALS=\/data\/credentials.json\n\nEXPOSE 9999",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":1,
        "end":19,
        "text":"FROM debian:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":86,
        "text":"MAINTAINER Contextual Dynamics Lab <contextualdynamics@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":110,
        "end":301,
        "text":"apt-get install -y eatmydata\\nRUN eatmydata apt-get install -y wget bzip2 ca-certificates \\\\ngit \\\\nswig \\\\nmpich \\\\npkg-config \\\\ngcc \\\\nwget \\\\ncurl \\\\nvim \\\\nnano"
      },
      {
        "label":"apt-install-without-version",
        "start":110,
        "end":301,
        "text":"apt-get install -y eatmydata\\nRUN eatmydata apt-get install -y wget bzip2 ca-certificates \\\\ngit \\\\nswig \\\\nmpich \\\\npkg-config \\\\ngcc \\\\nwget \\\\ncurl \\\\nvim \\\\nnano"
      },
      {
        "label":"pip-install-without-version",
        "start":613,
        "end":669,
        "text":"RUN pip install --upgrade pip\\nRUN pip install hypertools"
      },
      {
        "label":"pip-install-without-version",
        "start":740,
        "end":772,
        "text":"RUN pip install pytest \\\\nipytest"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":774,
        "end":907,
        "text":"ADD PANDAS \/PANDAS\\nADD coding \/coding\\nADD docker \/docker\\nADD testing \/testing\\nADD tutorial_template \/tutorial_template\\nADD STAN \/STAN"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"1dec560117d7ea7a1d8f0ecc52f1a3dbe7bf37d8.dockerfile",
    "file_content":"FROM ubuntu\nMAINTAINER Adam Butler\n\nRUN apt-get update\nRUN apt-get install -y python-software-properties python\nRUN add-apt-repository ppa:chris-lea\/node.js\nRUN echo \"deb http:\/\/us.archive.ubuntu.com\/ubuntu\/ precise universe\" >> \/etc\/apt\/sources.list\nRUN apt-get update\nRUN apt-get install -y nodejs\n\nRUN npm install -g coffee-script\n\nADD . \/src\n\nRUN cd \/src; npm install\n\nEXPOSE  1337\n\nCMD [\"coffee\", \"\/src\/app.coffee\"]\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":12,
        "end":34,
        "text":"MAINTAINER Adam Butler"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":55,
        "end":111,
        "text":"RUN apt-get install -y python-software-properties python"
      },
      {
        "label":"apt-install-without-version",
        "start":55,
        "end":111,
        "text":"RUN apt-get install -y python-software-properties python"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":335,
        "end":345,
        "text":"ADD . \/src"
      },
      {
        "label":"use-cd-change-dir",
        "start":347,
        "end":358,
        "text":"RUN cd \/src"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":270,
        "end":299,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":270,
        "end":299,
        "text":"RUN apt-get install -y nodejs"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"4261fbf74e402166286ef0b63fe10cac66e749e6.dockerfile",
    "file_content":"# Basic install of couchdb\n#\n#\n# Currently installs couchdb 1.3.1\n\nFROM ubuntu\nMAINTAINER Kimbro Staken\n\nRUN echo \"deb http:\/\/us.archive.ubuntu.com\/ubuntu\/ precise universe\" >> \/etc\/apt\/sources.list\nRUN apt-get -y update\nRUN apt-get install -y g++\nRUN apt-get install -y erlang-dev erlang-manpages erlang-base-hipe erlang-eunit erlang-nox erlang-xmerl erlang-inets\n\nRUN apt-get install -y libmozjs185-dev libicu-dev libcurl4-gnutls-dev libtool wget\n\nRUN cd \/tmp ; wget http:\/\/www.bizdirusa.com\/mirrors\/apache\/couchdb\/source\/1.3.1\/apache-couchdb-1.3.1.tar.gz\n\nRUN cd \/tmp && tar xvzf apache-couchdb-1.3.1.tar.gz\nRUN apt-get install -y make\nRUN cd \/tmp\/apache-couchdb-* ; .\/configure && make install\n\nRUN printf \"[httpd]\\nport = 5984\\nbind_address = 0.0.0.0\" > \/usr\/local\/etc\/couchdb\/local.d\/docker.ini\n\nADD .\/usr-local-etc-couchdb-local.ini \/usr\/local\/etc\/couchdb\/local.ini\n\nEXPOSE 5984\nCMD [\"\/usr\/local\/bin\/couchdb\"]\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":67,
        "end":78,
        "text":"FROM ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":79,
        "end":103,
        "text":"MAINTAINER Kimbro Staken"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":248,
        "end":364,
        "text":"RUN apt-get install -y erlang-dev erlang-manpages erlang-base-hipe erlang-eunit erlang-nox erlang-xmerl erlang-inets"
      },
      {
        "label":"apt-install-without-version",
        "start":248,
        "end":364,
        "text":"RUN apt-get install -y erlang-dev erlang-manpages erlang-base-hipe erlang-eunit erlang-nox erlang-xmerl erlang-inets"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":366,
        "end":448,
        "text":"RUN apt-get install -y libmozjs185-dev libicu-dev libcurl4-gnutls-dev libtool wget"
      },
      {
        "label":"apt-install-without-version",
        "start":366,
        "end":448,
        "text":"RUN apt-get install -y libmozjs185-dev libicu-dev libcurl4-gnutls-dev libtool wget"
      },
      {
        "label":"use-cd-change-dir",
        "start":450,
        "end":461,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":559,
        "end":570,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":639,
        "end":665,
        "text":"RUN cd \/tmp\/apache-couchdb"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":802,
        "end":872,
        "text":"ADD .\/usr-local-etc-couchdb-local.ini \/usr\/local\/etc\/couchdb\/local.ini"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"4292c3b392ea86afcdc6e186aeedfe6f43c37245.dockerfile",
    "file_content":"#Docker Image for Open Comment Box\n\nFROM ubuntu\nMAINTAINER Arunoda Susiripala, arunoda.susiripala@gmail.com\n\nRUN echo deb http:\/\/archive.ubuntu.com\/ubuntu precise universe >> \/etc\/apt\/sources.list\nRUN apt-get update -y\n\n#install dependencies\nRUN apt-get -y install build-essential libssl-dev wget\n\n#configuration for node\nENV NODE_VERSION 0.10.21\nENV NODE_ARCH x64\n\n#installation node\nWORKDIR \/tmp\nRUN wget http:\/\/nodejs.org\/dist\/v$NODE_VERSION\/node-v$NODE_VERSION-linux-$NODE_ARCH.tar.gz\nRUN tar xvzf node-v$NODE_VERSION-linux-$NODE_ARCH.tar.gz\nRUN rm -rf \/opt\/nodejs\nRUN mv node-v$NODE_VERSION-linux-$NODE_ARCH \/opt\/nodejs\n\nRUN ln -sf \/opt\/nodejs\/bin\/node \/usr\/bin\/node\nRUN ln -sf \/opt\/nodejs\/bin\/npm \/usr\/bin\/npm\n\n#install mongodb\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv 7F0CEB10\nRUN echo 'deb http:\/\/downloads-distro.mongodb.org\/repo\/ubuntu-upstart dist 10gen' | tee \/etc\/apt\/sources.list.d\/10gen.list\nRUN apt-get update -y\nRUN apt-get install mongodb-10gen=2.4.5\n\n#initialize system\nRUN mkdir -p \/opt\/ocb\nWORKDIR \/opt\/ocb\n\nRUN npm install -g node-gyp\n\n#downloading app\nRUN wget --no-check-certificate https:\/\/github.com\/arunoda\/open-comment-box\/archive\/v0.2.0.tar.gz\nRUN tar xvzf v0.2.0.tar.gz\nRUN mv open-comment-box-0.2.0 app\nRUN cd app && npm install\n\n#db setup\nRUN mkdir -p \/data\/db\n\n#copy running scripts\nADD start.sh \/opt\/ocb\/start.sh\nENTRYPOINT [\"bash\", \"start.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":36,
        "end":47,
        "text":"FROM ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":48,
        "end":107,
        "text":"MAINTAINER Arunoda Susiripala, arunoda.susiripala@gmail.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":242,
        "end":296,
        "text":"RUN apt-get -y install build-essential libssl-dev wget"
      },
      {
        "label":"apt-install-without-version",
        "start":242,
        "end":296,
        "text":"RUN apt-get -y install build-essential libssl-dev wget"
      },
      {
        "label":"use-cd-change-dir",
        "start":1258,
        "end":1268,
        "text":"RUN cd app"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1340,
        "end":1370,
        "text":"ADD start.sh \/opt\/ocb\/start.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"405a9b7a25df12c1d65dab41be059cc54d7a9b2d.dockerfile",
    "file_content":"FROM ubuntu:14.04\n\nMAINTAINER  Vyacheslav Murashkin <mvjacheslav@gmail.com>\n\nRUN apt-get update && apt-get -y install curl git-core\n\n# PYTHON3\nRUN ln -s \/usr\/bin\/python3 \/usr\/bin\/python\n\nRUN apt-get -y install build-essential python3-dev python3-setuptools python3-distutils-extra \nRUN easy_install3 pip\n\nRUN pip3 install --upgrade pip\nRUN pip3 install --upgrade awscli \\\n                           jupyter \\\n                           matplotlib \\\n                           mrjob \\\n                           tweepy \\\n                           numpy \\\n                           sklearn \\\n                           scipy\n\n# JAVA\nENV JAVA_VER 8\nENV JAVA_HOME \/usr\/lib\/jvm\/java-8-oracle\n\nRUN echo 'deb http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu trusty main' >> \/etc\/apt\/sources.list && \\\n    echo 'deb-src http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu trusty main' >> \/etc\/apt\/sources.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C2518248EEA14886 && \\\n    apt-get update && \\\n    echo oracle-java${JAVA_VER}-installer shared\/accepted-oracle-license-v1-1 select true | sudo \/usr\/bin\/debconf-set-selections && \\\n    apt-get install -y --force-yes --no-install-recommends oracle-java${JAVA_VER}-installer oracle-java${JAVA_VER}-set-default && \\\n    apt-get clean && \\\n    rm -rf \/var\/cache\/oracle-jdk${JAVA_VER}-installer\n\n# SPARK\nARG SPARK_ARCHIVE=http:\/\/d3kbcqa49mib13.cloudfront.net\/spark-2.1.0-bin-hadoop2.7.tgz\nRUN curl -s $SPARK_ARCHIVE | tar -xz -C \/usr\/local\/\n\nENV SPARK_HOME \/usr\/local\/spark-2.1.0-bin-hadoop2.7\nENV PATH $SPARK_HOME\/bin:$PATH\nENV PYTHONPATH $SPARK_HOME\/python:$SPARK_HOME\/python\/build:$PYTHONPATH\nENV PYTHONPATH $SPARK_HOME\/python\/lib\/py4j-0.10.4-src.zip:$PYTHONPATH\n\nRUN echo \"#!\/bin\/bash \\n\\\naws emr create-cluster --release-label emr-5.5.0\\\n  --name 'emr-5.5.0 sparklyr + jupyter cli example'\\\n  --applications Name=Hadoop Name=Hive Name=Spark Name=Pig Name=Tez Name=Ganglia Name=Presto\\\n  --ec2-attributes KeyName=\\${1},InstanceProfile=EMR_EC2_DefaultRole\\\n  --service-role EMR_DefaultRole\\\n  --instance-groups\\\n    InstanceGroupType=MASTER,InstanceCount=1,InstanceType=c3.4xlarge\\\n    InstanceGroupType=CORE,InstanceCount=4,InstanceType=c3.4xlarge\\\n  --region us-east-1\\\n  --log-uri s3:\/\/\\${2}\/emr-logs\/\\\n  --bootstrap-actions Name='Install Jupyter notebook',Path='s3:\/\/aws-bigdata-blog\/artifacts\/aws-blog-emr-jupyter\/install-jupyter-emr5.sh',\\\nArgs=[--ds-packages,--ml-packages,--python-packages,'matplotlib tweepy sklearn scipy',--port,8880,--password,jupyter,--jupyterhub,--jupyterhub-port,8001,--cached-install,--notebook-dir,s3:\/\/\\${2}\/notebooks\/,--copy-samples]\" > \/usr\/local\/bin\/create-emr-cluster\n\nRUN chmod +x \/usr\/local\/bin\/create-emr-cluster\n\n# USER\nRUN useradd --create-home --shell \/bin\/bash student\nUSER student\n\n# GITHUB\nRUN cd \/home\/student && git clone https:\/\/github.com\/a4tunado\/lectures-hse-spark.git\n\nEXPOSE 4040 6066 7077 8080 8888\n\nWORKDIR \/home\/student\/lectures-hse-spark\n\nCMD jupyter notebook --ip 0.0.0.0 --port 8888 --no-browser --NotebookApp.token=''\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":75,
        "text":"MAINTAINER Vyacheslav Murashkin <mvjacheslav@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":99,
        "end":131,
        "text":"apt-get -y install curl git-core"
      },
      {
        "label":"apt-install-without-version",
        "start":99,
        "end":131,
        "text":"apt-get -y install curl git-core"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":187,
        "end":280,
        "text":"RUN apt-get -y install build-essential python3-dev python3-setuptools python3-distutils-extra"
      },
      {
        "label":"apt-install-without-version",
        "start":187,
        "end":303,
        "text":"RUN apt-get -y install build-essential python3-dev python3-setuptools python3-distutils-extra\\nRUN easy_install3 pip"
      },
      {
        "label":"pip-install-without-version",
        "start":305,
        "end":624,
        "text":"RUN pip3 install --upgrade pip\\nRUN pip3 install --upgrade awscli \\\\njupyter \\\\nmatplotlib \\\\nmrjob \\\\ntweepy \\\\nnumpy \\\\nsklearn \\\\nscipy"
      },
      {
        "label":"use-cd-change-dir",
        "start":2801,
        "end":2824,
        "text":"RUN cd \/home\/student &&"
      },
      {
        "label":"use-sudo-run",
        "start":1105,
        "end":1141,
        "text":"sudo \/usr\/bin\/debconf-set-selections"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "use-sudo-run"
    ]
  },
  {
    "filename":"41d3e30c24c70c4ef63f92f564f41c7520098289.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER Jonathan Cran <jcran@intrigue.io>\n\nRUN apt-get update -qq && apt-get -y upgrade && \\\n\tapt-get -y install libxml2-dev libxslt-dev zmap nmap sudo default-jre \\\n\tlibsqlite3-dev sqlite3 git gcc g++ make libpcap-dev zlib1g-dev curl \\\n\tlibcurl4-openssl-dev libpq-dev wget libgdbm-dev \\\n\tlibncurses5-dev automake libtool bison libffi-dev libgmp-dev \\\n\tsoftware-properties-common bzip2 gawk libreadline6-dev libyaml-dev pkg-config \\\n\tredis-server net-tools clang\n\n# set up postgres\nRUN sudo sh -c 'echo \"deb http:\/\/apt.postgresql.org\/pub\/repos\/apt\/ `lsb_release -cs`-pgdg main\" >> \/etc\/apt\/sources.list.d\/pgdg.list'\nRUN wget -q https:\/\/www.postgresql.org\/media\/keys\/ACCC4CF8.asc -O - | sudo apt-key add -\nRUN sudo apt-get update\nRUN sudo apt-get -y install postgresql postgresql-contrib\n\n# Set up nginx?\n# TODO\n\n# Masscan build and installation\nWORKDIR \/usr\/share\nRUN git clone https:\/\/github.com\/robertdavidgraham\/masscan\nWORKDIR \/usr\/share\/masscan\nRUN make -j 3 && make install\n\n# create an app user (would require us setting up sudo)\n#RUN useradd -ms \/bin\/bash app\n#USER app\n\n# Install rbenv and ruby-build\nWORKDIR \/root\nRUN git clone https:\/\/github.com\/sstephenson\/rbenv.git \/root\/.rbenv\nRUN git clone https:\/\/github.com\/sstephenson\/ruby-build.git \/root\/.rbenv\/plugins\/ruby-build\nRUN git clone https:\/\/github.com\/rbenv\/rbenv-default-gems.git \/root\/.rbenv\/plugins\/rbenv-default-gems\nRUN \/root\/.rbenv\/plugins\/ruby-build\/install.sh\nENV PATH \/root\/.rbenv\/bin:$PATH\n#RUN echo 'eval \"$(rbenv init -)\"' >> \/etc\/profile.d\/rbenv.sh\nRUN echo 'eval \"$(rbenv init -)\"' >> .bashrc\n\n# Install multiple versions of ruby\nENV CONFIGURE_OPTS --disable-install-doc\nRUN rbenv install 2.4.0\nRUN rbenv global 2.4.0\n\n# Fix an rbenv path issue\nRUN echo export PATH=\/root\/.rbenv\/shims:$PATH >> \/etc\/profile.d\/rbenv.sh\nRUN echo export PATH=\/root\/.rbenv\/shims:$PATH >> .bashrc\n\n# Install the deps\n# https:\/\/medium.com\/@fbzga\/how-to-cache-bundle-install-with-docker-7bed453a5800#.f2hrjsvnz\nCOPY Gemfile* \/tmp\/\nWORKDIR \/tmp\nENV BUNDLE_JOBS=12\nRUN \/bin\/bash -l -c \"gem install bundler\"\nRUN \/bin\/bash -l -c \"bundle config --global silence_root_warning 1\"\nRUN \/bin\/bash -l -c \"bundle install --system\"\n\n# get intrigue-core code\nRUN \/bin\/bash -l -c \"rm -rf \/core && mkdir -p \/core\"\nADD . \/core\/\n\n# check networks\n#RUN \/bin\/bash -l -c \"apt-get install net-tools && ifconfig && netstat -lnt\"\n\n# Migrate!\nWORKDIR \/core\n\n# Ensure we listen on all ipv4 interfaces, and background the file\nRUN cp \/core\/config\/puma.rb.default \/core\/config\/puma.rb\nRUN sed -i \"s\/tcp:\\\/\\\/127.0.0.1:7777\/tcp:\\\/\\\/0.0.0.0:7777\/g\" \/core\/config\/puma.rb\nRUN sed -i \"s\/daemonize true\/daemonize false\/g\" \/core\/config\/puma.rb\n\n# Expose a port\nEXPOSE 7777\n\n# Set up the service file\nRUN cp \/core\/util\/control.sh.default \/core\/util\/control.sh\nRUN sed -i \"s\/\\\/path\\\/to\\\/install\\\/directory\/\\\/core\/g\" \/core\/util\/control.sh\nRUN ln -s \/core\/util\/control.sh \/etc\/init.d\/intrigue\n\n# Configure postgres\nRUN \/bin\/bash -l -c \"sed -i 's\/md5\/trust\/g' \/etc\/postgresql\/9.6\/main\/pg_hba.conf\"\n\n# start the app (also migrates DB)\nCMD \/bin\/bash -l -c \"PATH=\/root\/.rbenv\/shims:$PATH && service postgresql start && service redis-server start && su - postgres -c 'createuser -d -w intrigue && createdb intrigue_dev' && service intrigue start\"\n\n#ENTRYPOINT \"\/bin\/bash\"",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":62,
        "text":"MAINTAINER Jonathan Cran <jcran@intrigue.io>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":115,
        "end":483,
        "text":"apt-get -y install libxml2-dev libxslt-dev zmap nmap sudo default-jre \\\\nlibsqlite3-dev sqlite3 git gcc g++ make libpcap-dev zlib1g-dev curl \\\\nlibcurl4-openssl-dev libpq-dev wget libgdbm-dev \\\\nlibncurses5-dev automake libtool bison libffi-dev libgmp-dev \\\\nsoftware-properties-common bzip2 gawk libreadline6-dev libyaml-dev pkg-config \\\\nredis-server net-tools clang"
      },
      {
        "label":"apt-install-without-version",
        "start":115,
        "end":483,
        "text":"apt-get -y install libxml2-dev libxslt-dev zmap nmap sudo default-jre \\\\nlibsqlite3-dev sqlite3 git gcc g++ make libpcap-dev zlib1g-dev curl \\\\nlibcurl4-openssl-dev libpq-dev wget libgdbm-dev \\\\nlibncurses5-dev automake libtool bison libffi-dev libgmp-dev \\\\nsoftware-properties-common bzip2 gawk libreadline6-dev libyaml-dev pkg-config \\\\nredis-server net-tools clang"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":750,
        "end":807,
        "text":"RUN sudo apt-get -y install postgresql postgresql-contrib"
      },
      {
        "label":"apt-install-without-version",
        "start":750,
        "end":807,
        "text":"RUN sudo apt-get -y install postgresql postgresql-contrib"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2274,
        "end":2286,
        "text":"ADD . \/core\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-sudo-run",
        "start":503,
        "end":523,
        "text":"RUN sudo sh -c 'echo"
      },
      {
        "label":"use-sudo-run",
        "start":701,
        "end":723,
        "text":"O - | sudo apt-key add"
      },
      {
        "label":"use-sudo-run",
        "start":726,
        "end":749,
        "text":"RUN sudo apt-get update"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"420e2ff1290395565388861540d534e73f9669fb.dockerfile",
    "file_content":"FROM badele\/debian-mybase  \nMAINTAINER Bruno Adelé \"bruno@adele.im\"  \n# Upgrade the distribution  \nRUN apt-get update  \nRUN apt-get -yf upgrade  \nRUN apt-get -yf dist-upgrade  \n  \n# Requirement package  \nRUN apt-get -y install curl  \n  \n# Install nodejs  \nRUN curl --silent --location https:\/\/deb.nodesource.com\/setup_0.12 | bash -  \nRUN apt-get install -y nodejs build-essential  \n  \n# Clean the cache and unused packages  \nRUN apt-get clean  \nRUN apt-get autoremove  \n  \n# Configure app nodejs server  \nWORKDIR \/srv\/nodejs\/  \nADD files\/srv\/hello\/hello.js hello\/  \n  \nEXPOSE 8080  \nCMD node hello\/hello.js  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":25,
        "text":"FROM badele\/debian-mybase"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":28,
        "end":67,
        "text":"MAINTAINER Bruno Adelé \"bruno@adele.im\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":204,
        "end":231,
        "text":"RUN apt-get -y install curl"
      },
      {
        "label":"apt-install-without-version",
        "start":204,
        "end":231,
        "text":"RUN apt-get -y install curl"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":334,
        "end":379,
        "text":"RUN apt-get install -y nodejs build-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":334,
        "end":379,
        "text":"RUN apt-get install -y nodejs build-essential"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":528,
        "end":563,
        "text":"ADD files\/srv\/hello\/hello.js hello\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"280af6400777669190b6ab0815bd267822f41473.dockerfile",
    "file_content":"#Dockerfile for building \"nb_config_manager\"\nFROM ubuntu:18.04\nMAINTAINER Priya Seth <sethp@us.ibm.com>\nRUN apt-get update -y \\\n\n# Installing dependent packages\n    && apt-get install -y python-dev python-pip python-setuptools git \\\n\tpkg-config libzmq3-dev \\\n    && pip install -U pytest jupyter \\\n\n#Clone repo and Build\n    && git clone https:\/\/github.com\/Anaconda-Platform\/nb_config_manager.git \\\n    && cd nb_config_manager \\\n    && python setup.py install &&  py.test \\\n    && apt-get purge -y git \\\n    && apt-get -y autoremove && cd .. && rm -rf nb_config_manager\n\t\nCMD [\"python\", \"\/bin\/bash\"]\t\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":63,
        "end":103,
        "text":"MAINTAINER Priya Seth <sethp@us.ibm.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":168,
        "end":258,
        "text":"apt-get install -y python-dev python-pip python-setuptools git \\\\npkg-config libzmq3-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":168,
        "end":258,
        "text":"apt-get install -y python-dev python-pip python-setuptools git \\\\npkg-config libzmq3-dev \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":406,
        "end":426,
        "text":"cd nb_config_manager"
      },
      {
        "label":"use-cd-change-dir",
        "start":536,
        "end":541,
        "text":"cd .."
      },
      {
        "label":"pip-install-without-version",
        "start":266,
        "end":297,
        "text":"pip install -U pytest jupyter \\"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"0aaef1956a50e99366c30744845c818c15a7c046.dockerfile",
    "file_content":"#based on https:\/\/hub.docker.com\/r\/geographica\/gdal2\/~\/dockerfile\/\nFROM pywps\/flask-ubuntu:latest\nMAINTAINER Jorge S. Mendes de Jesus <jorge.dejesus@geocat.net>\n\n#For Gunicorn\nARG GU_WORKERS=5\nENV GU_WORKERS=${GU_WORKERS}\n \nRUN apt-get update -y && apt-get install -y \\\n\tnginx\n\nRUN rm \/etc\/nginx\/sites-enabled\/default\nCOPY pywps.conf \/etc\/nginx\/sites-enabled\/pywps.conf\n \nWORKDIR \/pywps-flask\nRUN pip3 install gunicorn\nRUN ln -s \/pywps-flask\/wsgi\/pywps.wsgi  \/pywps-flask\/wsgi\/pywps_app.py\n\n\nCOPY pywps4_service.sh \/etc\/service\/pywps4\/run\nRUN chmod +x \/etc\/service\/pywps4\/run\n\nRUN mkdir \/etc\/service\/nginx\nCOPY nginx_service.sh \/etc\/service\/nginx\/run\nRUN chmod +x \/etc\/service\/nginx\/run\n\nEXPOSE 80\n\n\n#docker build -t pywps\/nginx-ubuntu . \n#docker run -p 80:80 pywps\/nginx-ubuntu\n#http:\/\/localhost:5000\/wps?request=GetCapabilities&service=WPS\n#http:\/\/localhost:5000\/wps?request=DescribeProcess&service=WPS&identifier=all&version=1.0.0    \n   \t",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":67,
        "end":97,
        "text":"FROM pywps\/flask-ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":98,
        "end":160,
        "text":"MAINTAINER Jorge S. Mendes de Jesus <jorge.dejesus@geocat.net>"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":249,
        "end":276,
        "text":"apt-get install -y \\\\nnginx"
      },
      {
        "label":"apt-install-without-version",
        "start":249,
        "end":276,
        "text":"apt-get install -y \\\\nnginx"
      },
      {
        "label":"pip-install-without-version",
        "start":393,
        "end":418,
        "text":"RUN pip3 install gunicorn"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"0d00c413f7c76864ab3cc234a99cbe6d91ab406b.dockerfile",
    "file_content":"#\n# Dockerfile\n#\n# @author zhibiao.pan@bitmain.com\n# @copyright btc.com\n# @since 2016-08-01\n#\n#\nFROM phusion\/baseimage:0.9.19\nMAINTAINER PanZhibiao <zhibiao.pan@bitmain.com>\n\nENV HOME \/root\nENV TERM xterm\nCMD [\"\/sbin\/my_init\"]\n\n# use aliyun source\n#ADD sources-aliyun.com.list \/etc\/apt\/sources.list\n\nRUN apt-get update\nRUN apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils yasm\nRUN apt-get install -y libboost-all-dev libzmq3-dev curl wget\n\n# build bitcoind\nRUN mkdir ~\/source\nRUN cd ~\/source && wget https:\/\/github.com\/Bitcoin-ABC\/bitcoin-abc\/archive\/v0.14.5.tar.gz\nRUN cd ~\/source \\\n  && tar zxf v0.14.5.tar.gz && cd bitcoin-abc-0.14.5 \\\n  && .\/autogen.sh \\\n  && .\/configure --disable-wallet --disable-tests \\\n  && make && make install\n  #&& make -j$(nproc) && make install\n\n# mkdir bitcoind data dir\nRUN mkdir -p \/root\/.bitcoin\nRUN mkdir -p \/root\/scripts\n\n# scripts\nADD bitmain-monitor-bitcoind.sh   \/root\/scripts\/bitmain-monitor-bitcoind.sh\n\n# crontab shell\nADD crontab.txt \/etc\/cron.d\/bitcoind\n\n# logrotate\nADD logrotate-bitcoind \/etc\/logrotate.d\/bitcoind\n\n#\n# services\n#\n\n# service for mainnet\nRUN mkdir    \/etc\/service\/bitcoind\nADD run      \/etc\/service\/bitcoind\/run\nRUN chmod +x \/etc\/service\/bitcoind\/run\n\n#service for testnet\n#RUN mkdir        \/etc\/service\/bitcoind_testnet\n#ADD run_testnet \/etc\/service\/bitcoind_testnet\/run\n#RUN chmod +x     \/etc\/service\/bitcoind_testnet\/run\n\n# remove source & build files\nRUN rm -rf ~\/source\n\n# clean\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":126,
        "end":173,
        "text":"MAINTAINER PanZhibiao <zhibiao.pan@bitmain.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":319,
        "end":503,
        "text":"RUN apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils yasm\\nRUN apt-get install -y libboost-all-dev libzmq3-dev curl wget"
      },
      {
        "label":"apt-install-without-version",
        "start":319,
        "end":503,
        "text":"RUN apt-get install -y build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils yasm\\nRUN apt-get install -y libboost-all-dev libzmq3-dev curl wget"
      },
      {
        "label":"use-cd-change-dir",
        "start":541,
        "end":556,
        "text":"RUN cd ~\/source"
      },
      {
        "label":"use-cd-change-dir",
        "start":631,
        "end":646,
        "text":"RUN cd ~\/source"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":933,
        "end":1008,
        "text":"ADD bitmain-monitor-bitcoind.sh \/root\/scripts\/bitmain-monitor-bitcoind.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1026,
        "end":1062,
        "text":"ADD crontab.txt \/etc\/cron.d\/bitcoind"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1076,
        "end":1124,
        "text":"ADD logrotate-bitcoind \/etc\/logrotate.d\/bitcoind"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1199,
        "end":1237,
        "text":"ADD run \/etc\/service\/bitcoind\/run"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"0f66a2aa2afa12f1ecf6295257fc53dfcf5d581d.dockerfile",
    "file_content":"#####################################################################\n#\n# This Dockerfile has all the packages needed to programmatically\n# interact with CIMC 3.0 using Python.  This Dockerfile installs the\n# following CentOS packages needed to interact with 3.0:\n#\n#   1. Python 2.7.13 (Python >= 2.7.9 is needed for CIMC 3.0)\n#   2. pip with Python 2.7.13\n#   3. OpenSSL 1.0.1\n#   4. Cisco's Python imcsdk library\n#   5. DMTF's Python RedFish library (python-redfish-library)\n#   6. epel-release and latest Ansible (if the user want to automate\n#      anything with CIMC 3.0)\n#   7. Python requests library needed to interact with RedFish URIs\n#      \/redfish\/v1\/*\n#\n# Author: Vikram Hosakote (vhosakot@cisco.com)\n#\n#####################################################################\n\nFROM centos:latest\nMAINTAINER vhosakot@cisco.com\n\nRUN yum -y update && yum -y upgrade && yum clean all\nRUN yum -y install which wget gcc zlib-devel openssl-devel\nRUN yum -y groupinstall \"Development tools\"\n\n# Install Python 2.7.13\nRUN wget https:\/\/www.python.org\/ftp\/python\/2.7.13\/Python-2.7.13.tgz && \\\n    tar xzf Python-2.7.13.tgz && \\\n    cd Python-2.7.13 && \\\n    .\/configure --prefix=\/usr\/local && \\\n    make && \\\n    make altinstall && \\\n    ln -s \/usr\/local\/bin\/python2.7 \/usr\/bin\/python2.7.13 && \\\n    cd .. && \\\n    rm -rf Python-2.7.13.tgz && \\\n    rm -rf Python-2.7.13 && \\\n    python2.7.13 -V\n\n# Install pip with Python 2.7.13\nRUN wget https:\/\/bootstrap.pypa.io\/get-pip.py && \\\n    python2.7.13 get-pip.py && \\\n    rm -rf get-pip.py && \\\n    pip --version\n\n# Install OpenSSL 1.0.1\nRUN yum -y install openssl && \\\n    openssl version\n\n# Install imcsdk\nRUN pip install imcsdk\n\n# Install RedFish Python SDK\nRUN git clone https:\/\/github.com\/DMTF\/python-redfish-library.git && \\\n    cd python-redfish-library && \\\n    python2.7.13 setup.py sdist --formats=zip && \\\n    cd dist && \\\n    z=`ls *.zip` && \\\n    pip install $z && \\\n    cd ..\/.. && \\\n    rm -rf python-redfish-library\n\n# Install epel-release latest Ansible\nRUN yum -y install epel-release && \\\n    yum -y install ansible && \\\n    ansible --version\n\n# Install Python requests library\nRUN pip install requests\n\nCMD [\"sleep\", \"infinity\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":789,
        "end":807,
        "text":"FROM centos:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":808,
        "end":837,
        "text":"MAINTAINER vhosakot@cisco.com"
      },
      {
        "label":"yum-install-without-version",
        "start":892,
        "end":950,
        "text":"RUN yum -y install which wget gcc zlib-devel openssl-devel"
      },
      {
        "label":"yum-install-without-version",
        "start":951,
        "end":993,
        "text":"RUN yum -y groupinstall \"Development tools"
      },
      {
        "label":"use-cd-change-dir",
        "start":1132,
        "end":1148,
        "text":"cd Python-2.7.13"
      },
      {
        "label":"use-cd-change-dir",
        "start":1300,
        "end":1305,
        "text":"cd .."
      },
      {
        "label":"yum-install-without-version",
        "start":1583,
        "end":1609,
        "text":"RUN yum -y install openssl"
      },
      {
        "label":"pip-install-without-version",
        "start":1653,
        "end":1675,
        "text":"RUN pip install imcsdk"
      },
      {
        "label":"use-cd-change-dir",
        "start":1929,
        "end":1931,
        "text":"cd"
      },
      {
        "label":"yum-install-without-version",
        "start":2016,
        "end":2079,
        "text":"RUN yum -y install epel-release && \\\\nyum -y install ansible"
      },
      {
        "label":"pip-install-without-version",
        "start":2142,
        "end":2166,
        "text":"RUN pip install requests"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"1135aaf3f7f826416791adc2bb61debc59b0f860.dockerfile",
    "file_content":"# Ubuntu PostgreSQL.\n\nFROM ubuntu:14.04\nMAINTAINER Thomas Quintana <thomas@bettervoice.com>\n\n# Install.\nRUN apt-get update && apt-get install -y daemontools libffi-dev libssl-dev lzop postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 postgresql-9.3-pgpool2 postgresql-9.3-postgis-2.1 pv python python-dev python-pip\nADD bin\/get-pip.py \/usr\/local\/bin\/get-pip.py\nRUN python \/usr\/local\/bin\/get-pip.py\nRUN pip install --upgrade six\nRUN pip install Jinja2 wal-e\n\n# Post Install Configuration.\nADD bin\/start-postgres \/usr\/bin\/start-postgres\nRUN chmod +x \/usr\/bin\/start-postgres\nADD bin\/heartbeat.template \/usr\/share\/postgresql\/9.3\/heartbeat.template\nADD conf\/postgresql.conf.template \/usr\/share\/postgresql\/9.3\/postgresql.conf.template\nADD conf\/pg_hba.conf.template \/usr\/share\/postgresql\/9.3\/pg_hba.conf.template\nADD conf\/recovery.conf.template \/usr\/share\/postgresql\/9.3\/recovery.conf.template\n\n# Open the container up to the world.\nEXPOSE 5432\/tcp\n\n# Start PostgreSQL.\nCMD start-postgres",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":40,
        "end":91,
        "text":"MAINTAINER Thomas Quintana <thomas@bettervoice.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":126,
        "end":325,
        "text":"apt-get install -y daemontools libffi-dev libssl-dev lzop postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 postgresql-9.3-pgpool2 postgresql-9.3-postgis-2.1 pv python python-dev python-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":126,
        "end":325,
        "text":"apt-get install -y daemontools libffi-dev libssl-dev lzop postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 postgresql-9.3-pgpool2 postgresql-9.3-postgis-2.1 pv python python-dev python-pip"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":326,
        "end":370,
        "text":"ADD bin\/get-pip.py \/usr\/local\/bin\/get-pip.py"
      },
      {
        "label":"pip-install-without-version",
        "start":408,
        "end":466,
        "text":"RUN pip install --upgrade six\\nRUN pip install Jinja2 wal-e"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":498,
        "end":896,
        "text":"ADD bin\/start-postgres \/usr\/bin\/start-postgres\\nRUN chmod +x \/usr\/bin\/start-postgres\\nADD bin\/heartbeat.template \/usr\/share\/postgresql\/9.3\/heartbeat.template\\nADD conf\/postgresql.conf.template \/usr\/share\/postgresql\/9.3\/postgresql.conf.template\\nADD conf\/pg_hba.conf.template \/usr\/share\/postgresql\/9.3\/pg_hba.conf.template\\nADD conf\/recovery.conf.template \/usr\/share\/postgresql\/9.3\/recovery.conf.template"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"08df60844f365d11a4f7e8771a01fafabb818ad2.dockerfile",
    "file_content":"FROM ppc64le\/r-base \nMAINTAINER \"Vibhuti Sawant <Vibhuti.Sawant@ibm.com>\"\n\nENV _R_CHECK_FORCE_SUGGESTS_ false\nRUN apt-get update \\\n      && apt-get install git -y \\\n      && git clone https:\/\/github.com\/r-lib\/R6.git \\\n      && cd R6 && git checkout v2.3.0 \\\n      && R -e 'install.packages(\"knitr\",dependencies= TRUE,repos=\"http:\/\/cran.rstudio.com\/\")' \\\n      && R CMD check R6 --no-manual \\\n      && cd .. && rm -rf R6 \\\n      && apt-get purge --auto-remove git -y\n\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM ppc64le\/r-base"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":73,
        "text":"MAINTAINER \"Vibhuti Sawant <Vibhuti.Sawant@ibm.com>\""
      },
      {
        "label":"use-cd-change-dir",
        "start":227,
        "end":232,
        "text":"cd R6"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":140,
        "end":164,
        "text":"apt-get install git -y \\"
      },
      {
        "label":"apt-install-without-version",
        "start":140,
        "end":164,
        "text":"apt-get install git -y \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":401,
        "end":406,
        "text":"cd .."
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"c3c4cdad978dab559afb6ada27d91bc2cb00bfab.dockerfile",
    "file_content":"FROM ubuntu:latest  \n  \n#Autor  \nMAINTAINER ÁNGEL VALERA MOTOS <angelvalera.epal@gmail.com>  \n  \n#Actualizar Sistema Base  \nRUN sudo apt-get -y update  \n  \n#Descargar aplicacion  \nRUN sudo apt-get install -y git  \nRUN sudo git clone https:\/\/github.com\/AngelValera\/bares-y-tapas-DAI  \n  \n# Instalar Python y PostgreSQL  \nRUN sudo apt-get install -y python-setuptools  \nRUN sudo apt-get -y install python-dev  \nRUN sudo apt-get -y install build-essential  \nRUN sudo apt-get -y install python-psycopg2  \nRUN sudo apt-get -y install libpq-dev  \nRUN sudo easy_install pip  \nRUN sudo pip install --upgrade pip  \n  \n#Instalar la app  \nRUN ls  \nRUN cd bares-y-tapas-DAI\/ && ls -l  \nRUN cd bares-y-tapas-DAI\/ && cat requirements.txt  \nRUN cd bares-y-tapas-DAI\/ && sudo pip install -r requirements.txt  \n  \n#Migraciones  \nRUN cd bares-y-tapas-DAI\/ && python populate_app.py  \nRUN cd bares-y-tapas-DAI\/ && python manage.py migrate --noinput  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":33,
        "end":91,
        "text":"MAINTAINER ÁNGEL VALERA MOTOS <angelvalera.epal@gmail.com>"
      },
      {
        "label":"use-sudo-run",
        "start":124,
        "end":150,
        "text":"RUN sudo apt-get -y update"
      },
      {
        "label":"use-sudo-run",
        "start":180,
        "end":232,
        "text":"RUN sudo apt-get install -y git\\nRUN sudo git clone"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":180,
        "end":211,
        "text":"RUN sudo apt-get install -y git"
      },
      {
        "label":"apt-install-without-version",
        "start":180,
        "end":211,
        "text":"RUN sudo apt-get install -y git"
      },
      {
        "label":"use-sudo-run",
        "start":320,
        "end":603,
        "text":"RUN sudo apt-get install -y python-setuptools\\nRUN sudo apt-get -y install python-dev\\nRUN sudo apt-get -y install build-essential\\nRUN sudo apt-get -y install python-psycopg2\\nRUN sudo apt-get -y install libpq-dev\\nRUN sudo easy_install pip\\nRUN sudo pip install --upgrade pip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":320,
        "end":538,
        "text":"RUN sudo apt-get install -y python-setuptools\\nRUN sudo apt-get -y install python-dev\\nRUN sudo apt-get -y install build-essential\\nRUN sudo apt-get -y install python-psycopg2\\nRUN sudo apt-get -y install libpq-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":320,
        "end":538,
        "text":"RUN sudo apt-get install -y python-setuptools\\nRUN sudo apt-get -y install python-dev\\nRUN sudo apt-get -y install build-essential\\nRUN sudo apt-get -y install python-psycopg2\\nRUN sudo apt-get -y install libpq-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":578,
        "end":603,
        "text":"pip install --upgrade pip"
      },
      {
        "label":"use-cd-change-dir",
        "start":637,
        "end":661,
        "text":"RUN cd bares-y-tapas-DAI"
      },
      {
        "label":"use-cd-change-dir",
        "start":674,
        "end":694,
        "text":"RUN cd bares-y-tapas"
      },
      {
        "label":"use-cd-change-dir",
        "start":726,
        "end":746,
        "text":"RUN cd bares-y-tapas"
      },
      {
        "label":"use-sudo-run",
        "start":755,
        "end":791,
        "text":"sudo pip install -r requirements.txt"
      },
      {
        "label":"use-cd-change-dir",
        "start":812,
        "end":826,
        "text":"RUN cd bares-y"
      },
      {
        "label":"use-cd-change-dir",
        "start":866,
        "end":886,
        "text":"RUN cd bares-y-tapas"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"9648903363cd4e4ee6199804b0454f88e938148d.dockerfile",
    "file_content":"FROM ann-benchmarks\n\nRUN apt-get install -y python-setuptools python-pip\nRUN pip3 install pybind11 numpy setuptools\nRUN git clone https:\/\/github.com\/nmslib\/hnsw.git;cd hnsw; git checkout denorm\n\nRUN cd hnsw\/python_bindings; python3 setup.py install\n\nRUN python3 -c 'import hnswlib'\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM ann-benchmarks"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":21,
        "end":72,
        "text":"RUN apt-get install -y python-setuptools python-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":21,
        "end":72,
        "text":"RUN apt-get install -y python-setuptools python-pip"
      },
      {
        "label":"pip-install-without-version",
        "start":73,
        "end":115,
        "text":"RUN pip3 install pybind11 numpy setuptools"
      },
      {
        "label":"use-cd-change-dir",
        "start":195,
        "end":222,
        "text":"RUN cd hnsw\/python_bindings"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"b92f4b2326b2b4108dbd67290284b44a4f444cdb.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER Christian Decker <decker@blockstream.com>\nRUN apt-get update -q && apt-get install -y supervisor git software-properties-common && \\\n    add-apt-repository ppa:bitcoin\/bitcoin && \\\n    apt-get update -q && \\\n    apt-get install -y \\\n    \t    autoconf \\\n\t    libtool \\\n\t    libprotobuf-c-dev \\\n\t    libsodium-dev \\\n\t    libsqlite3-dev \\\n\t    libgmp-dev \\\n\t    build-essential \\\n\t    libsqlite3-dev \\\n\t    bitcoind \\\n\t    protobuf-c-compiler \\\n\t    g++ \\\n\t    curl \\\n\t    gcc \\\n\t    libc6-dev \\\n\t    make \\\n\t    pkg-config && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN apt-get install -y build-essential\nRUN git clone https:\/\/github.com\/luke-jr\/libbase58.git \/opt\/libbase58 && cd \/opt\/libbase58 && .\/autogen.sh && .\/configure && make && make install\nRUN useradd lightning; mkdir \/lightning \/bitcoin; chown lightning:users \/lightning \/bitcoin\nRUN git clone https:\/\/github.com\/ElementsProject\/lightning.git \/opt\/lightning; cd \/opt\/lightning; make\n\nADD supervisor.conf \/etc\/supervisor\/conf.d\/\nRUN echo \"testnet=1\\nrpcuser=rpcuser\\nrpcpassword=rpcpass\" > \/bitcoin\/bitcoin.conf\n\nRUN sed -i 's\/^\\(\\[supervisord\\]\\)$\/\\1\\nnodaemon=true\/' \/etc\/supervisor\/supervisord.conf\nCMD [\"supervisord\", \"-c\", \"\/etc\/supervisor\/supervisord.conf\"]\n\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n\nENV GOLANG_VERSION 1.7.3\nENV GOLANG_DOWNLOAD_URL https:\/\/golang.org\/dl\/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 508028aac0654e993564b6e2014bf2d4a9751e3b286661b0b0040046cf18028e\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n\t&& echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n\t&& tar -C \/usr\/local -xzf golang.tar.gz \\\n\t&& rm golang.tar.gz\n\nENV GOPATH \/go\nENV PATH $GOPATH\/bin:\/usr\/local\/go\/bin:$PATH\n\nRUN mkdir -p \"$GOPATH\/src\" \"$GOPATH\/bin\" && chmod -R 777 \"$GOPATH\"\n\nRUN go get github.com\/cdecker\/kugelblitz\/...\n\nVOLUME ['\/bitcoin', '\/lightning']\nEXPOSE 19735\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":66,
        "text":"MAINTAINER Christian Decker <decker@blockstream."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":241,
        "end":549,
        "text":"apt-get install -y \\\\nautoconf \\\\nlibtool \\\\nlibprotobuf-c-dev \\\\nlibsodium-dev \\\\nlibsqlite3-dev \\\\nlibgmp-dev \\\\nbuild-essential \\\\nlibsqlite3-dev \\\\nbitcoind \\\\nprotobuf-c-compiler \\\\ng++ \\\\ncurl \\\\ngcc \\\\nlibc6-dev \\\\nmake \\\\npkg-config"
      },
      {
        "label":"apt-install-without-version",
        "start":241,
        "end":549,
        "text":"apt-get install -y \\\\nautoconf \\\\nlibtool \\\\nlibprotobuf-c-dev \\\\nlibsodium-dev \\\\nlibsqlite3-dev \\\\nlibgmp-dev \\\\nbuild-essential \\\\nlibsqlite3-dev \\\\nbitcoind \\\\nprotobuf-c-compiler \\\\ng++ \\\\ncurl \\\\ngcc \\\\nlibc6-dev \\\\nmake \\\\npkg-config"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":969,
        "end":1012,
        "text":"ADD supervisor.conf \/etc\/supervisor\/conf.d\/"
      },
      {
        "label":"apt-install-without-version",
        "start":1272,
        "end":1368,
        "text":"apt-get install -y --no-install-recommends \\\\ng++ \\\\ngcc \\\\nlibc6-dev \\\\nmake \\\\npkg-config"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"bf84a2652442e7fe9f2259ba311d2d692eccacb5.dockerfile",
    "file_content":"# Dockerfile to build a discoursegraphs container image\nFROM ubuntu:16.04\n\nMAINTAINER Arne Neumann <discoursegraphs.programming@arne.cl>\n\nRUN apt-get update && \\\n    apt-get install -y python-dev python-pip git graphviz graphviz-dev \\\n        libxml2-dev libxslt-dev && \\\n    easy_install -U setuptools && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nWORKDIR \/opt\/discoursegraphs\/\nADD docs docs\/\nADD src src\/\nADD tests tests\/\nADD LICENSE Makefile NEWS.rst README.rst requirements.txt setup.py .\/\n\n# on current Ubuntu systems you will need to install pygraphviz manually,\n# cf. http:\/\/stackoverflow.com\/questions\/32885486\/pygraphviz-importerror-undefined-symbol-agundirected\nRUN pip2 install pygraphviz==1.3.1 \\\n    --install-option=\"--include-path=\/usr\/include\/graphviz\" \\\n    --install-option=\"--library-path=\/usr\/lib\/graphviz\/\" && \\\n    pip2 install -U pip && \\\n    pip2 install -r requirements.txt\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":75,
        "end":136,
        "text":"MAINTAINER Arne Neumann <discoursegraphs.programming@arne.cl>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":166,
        "end":234,
        "text":"apt-get install -y python-dev python-pip git graphviz graphviz-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":166,
        "end":234,
        "text":"apt-get install -y python-dev python-pip git graphviz graphviz-dev \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":371,
        "end":485,
        "text":"ADD docs docs\/\\nADD src src\/\\nADD tests tests\/\\nADD LICENSE Makefile NEWS.rst README.rst requirements.txt setup.py .\/"
      },
      {
        "label":"pip-install-without-version",
        "start":829,
        "end":848,
        "text":"pip2 install -U pip"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"aae4285946a249cc4ffa85e8046b8211b84010d8.dockerfile",
    "file_content":"FROM floydhub\/buildpack-deps:cuda9.1-cudnn7-1.1\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n\n# Add Bazel distribution URI as a package source\nRUN echo \"deb [arch=amd64] http:\/\/storage.googleapis.com\/bazel-apt stable jdk1.8\" | sudo tee \/etc\/apt\/sources.list.d\/bazel.list \\\n    && curl https:\/\/bazel.build\/bazel-release.pub.gpg | sudo apt-key add -\n\n# Install some dependencies\nRUN apt-get update && apt-get install -y \\\n        tcl \\\n        tk \\\n        ant \\\n        apt-utils \\\n        bazel \\\n        bc \\\n        build-essential \\\n        cmake \\\n        default-jdk \\\n        doxygen \\\n        gfortran \\\n        golang \\\n        iptables \\\n        libav-tools \\\n        libboost-all-dev \\\n        libeigen3-dev \\\n        libfreetype6-dev \\\n        libhdf5-dev \\\n        libjpeg-turbo8-dev \\\n        liblcms2-dev \\\n        libopenblas-dev \\\n        liblapack-dev \\\n        libpng12-dev \\\n        libprotobuf-dev \\\n        libsdl2-dev \\\n        libtiff-dev \\\n        libtiff5-dev \\\n        libvncserver-dev \\\n        libzmq3-dev \\\n        nano \\\n        net-tools \\\n        openmpi-bin \\\n        pkg-config \\\n        protobuf-compiler \\\n        rsync \\\n        software-properties-common \\\n        swig \\\n        unzip \\\n        vim \\\n        webp \\\n        xorg-dev \\\n        xvfb \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf \/var\/lib\/apt\/lists\/* \\\n    && rm -rf \/var\/cache\/apt\/archives\/* \\\n# Link BLAS library to use OpenBLAS using the alternatives mechanism (https:\/\/www.scipy.org\/scipylib\/building\/linux.html#debian-ubuntu)\n    && update-alternatives --set libblas.so.3 \/usr\/lib\/openblas-base\/libblas.so.3\n\n# Install Git LFS\nRUN apt-get update \\\n    && add-apt-repository ppa:git-core\/ppa \\\n    && curl -s https:\/\/packagecloud.io\/install\/repositories\/github\/git-lfs\/script.deb.sh | bash && \\\n    apt-get install -y git-lfs \\\n    && git lfs install \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf \/var\/cache\/apt\/archives\/* \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n\n# Install opencv\nARG OPENCV_VERSION=3.4.0\n\nRUN apt-get update && apt-get install -y \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libav-tools \\\n        libavresample-dev \\\n        libdc1394-22-dev \\\n        libgdal-dev \\\n        libgphoto2-dev \\\n        libgtk2.0-dev \\\n        libjasper-dev \\\n        liblapacke-dev \\\n        libopencore-amrnb-dev \\\n        libopencore-amrwb-dev \\\n        libopenexr-dev \\\n        libswscale-dev \\\n        libtbb2 \\\n        libtbb-dev \\\n        libtheora-dev \\\n        libv4l-dev \\\n        libvorbis-dev \\\n        libvtk6-dev \\\n        libx264-dev \\\n        libxine2-dev \\\n        libxvidcore-dev \\\n        qt5-default \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf \/var\/lib\/apt\/lists\/* \\\n    && rm -rf \/var\/cache\/apt\/archives\/*\n\nRUN cd ~\/ && \\\n    git clone https:\/\/github.com\/Itseez\/opencv.git --branch ${OPENCV_VERSION} --single-branch && \\\n    git clone https:\/\/github.com\/Itseez\/opencv_contrib.git --branch ${OPENCV_VERSION} --single-branch && \\\n    cd opencv && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n        -DWITH_QT=ON \\\n        -DWITH_OPENGL=ON \\\n        -D WITH_CUDA=ON \\\n        -D CUDA_CUDA_LIBRARY=\/usr\/local\/cuda\/lib64\/stubs\/libcuda.so \\\n        -D ENABLE_FAST_MATH=1 \\\n        -D CUDA_FAST_MATH=1 \\\n        -D WITH_CUBLAS=1 \\\n        -DFORCE_VTK=ON \\\n        -DWITH_TBB=ON \\\n        -DWITH_GDAL=ON \\\n        -DWITH_XINE=ON \\\n        -DBUILD_EXAMPLES=ON \\\n        -D OPENCV_EXTRA_MODULES_PATH=~\/opencv_contrib\/modules \\\n        .. && \\\n    make -j\"$(nproc)\" && \\\n    make install && \\\n    ldconfig && \\\n # Remove the opencv folders to reduce image size\n    rm -rf ~\/opencv*",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":48,
        "end":92,
        "text":"MAINTAINER Floyd Labs \"support@floydhub.com\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":399,
        "end":1288,
        "text":"apt-get install -y \\\\ntcl \\\\ntk \\\\nant \\\\napt-utils \\\\nbazel \\\\nbc \\\\nbuild-essential \\\\ncmake \\\\ndefault-jdk \\\\ndoxygen \\\\ngfortran \\\\ngolang \\\\niptables \\\\nlibav-tools \\\\nlibboost-all-dev \\\\nlibeigen3-dev \\\\nlibfreetype6-dev \\\\nlibhdf5-dev \\\\nlibjpeg-turbo8-dev \\\\nliblcms2-dev \\\\nlibopenblas-dev \\\\nliblapack-dev \\\\nlibpng12-dev \\\\nlibprotobuf-dev \\\\nlibsdl2-dev \\\\nlibtiff-dev \\\\nlibtiff5-dev \\\\nlibvncserver-dev \\\\nlibzmq3-dev \\\\nnano \\\\nnet-tools \\\\nopenmpi-bin \\\\npkg-config \\\\nprotobuf-compiler \\\\nrsync \\\\nsoftware-properties-common \\\\nswig \\\\nunzip \\\\nvim \\\\nwebp \\\\nxorg-dev \\\\nxvfb \\"
      },
      {
        "label":"apt-install-without-version",
        "start":399,
        "end":1288,
        "text":"apt-get install -y \\\\ntcl \\\\ntk \\\\nant \\\\napt-utils \\\\nbazel \\\\nbc \\\\nbuild-essential \\\\ncmake \\\\ndefault-jdk \\\\ndoxygen \\\\ngfortran \\\\ngolang \\\\niptables \\\\nlibav-tools \\\\nlibboost-all-dev \\\\nlibeigen3-dev \\\\nlibfreetype6-dev \\\\nlibhdf5-dev \\\\nlibjpeg-turbo8-dev \\\\nliblcms2-dev \\\\nlibopenblas-dev \\\\nliblapack-dev \\\\nlibpng12-dev \\\\nlibprotobuf-dev \\\\nlibsdl2-dev \\\\nlibtiff-dev \\\\nlibtiff5-dev \\\\nlibvncserver-dev \\\\nlibzmq3-dev \\\\nnano \\\\nnet-tools \\\\nopenmpi-bin \\\\npkg-config \\\\nprotobuf-compiler \\\\nrsync \\\\nsoftware-properties-common \\\\nswig \\\\nunzip \\\\nvim \\\\nwebp \\\\nxorg-dev \\\\nxvfb \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2076,
        "end":2681,
        "text":"apt-get install -y \\\\nlibavcodec-dev \\\\nlibavformat-dev \\\\nlibav-tools \\\\nlibavresample-dev \\\\nlibdc1394-22-dev \\\\nlibgdal-dev \\\\nlibgphoto2-dev \\\\nlibgtk2.0-dev \\\\nlibjasper-dev \\\\nliblapacke-dev \\\\nlibopencore-amrnb-dev \\\\nlibopencore-amrwb-dev \\\\nlibopenexr-dev \\\\nlibswscale-dev \\\\nlibtbb2 \\\\nlibtbb-dev \\\\nlibtheora-dev \\\\nlibv4l-dev \\\\nlibvorbis-dev \\\\nlibvtk6-dev \\\\nlibx264-dev \\\\nlibxine2-dev \\\\nlibxvidcore-dev \\\\nqt5-default \\"
      },
      {
        "label":"apt-install-without-version",
        "start":2076,
        "end":2681,
        "text":"apt-get install -y \\\\nlibavcodec-dev \\\\nlibavformat-dev \\\\nlibav-tools \\\\nlibavresample-dev \\\\nlibdc1394-22-dev \\\\nlibgdal-dev \\\\nlibgphoto2-dev \\\\nlibgtk2.0-dev \\\\nlibjasper-dev \\\\nliblapacke-dev \\\\nlibopencore-amrnb-dev \\\\nlibopencore-amrwb-dev \\\\nlibopenexr-dev \\\\nlibswscale-dev \\\\nlibtbb2 \\\\nlibtbb-dev \\\\nlibtheora-dev \\\\nlibv4l-dev \\\\nlibvorbis-dev \\\\nlibvtk6-dev \\\\nlibx264-dev \\\\nlibxine2-dev \\\\nlibxvidcore-dev \\\\nqt5-default \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3036,
        "end":3045,
        "text":"cd opencv"
      },
      {
        "label":"use-cd-change-dir",
        "start":3076,
        "end":3084,
        "text":"cd build"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-sudo-run",
        "start":143,
        "end":347,
        "text":"RUN echo \"deb [arch=amd64] http:\/\/storage.googleapis.com\/bazel-apt stable jdk1.8\" | sudo tee \/etc\/apt\/sources.list.d\/bazel.list \\\\n&& curl https:\/\/bazel.build\/bazel-release.pub.gpg | sudo apt-key add -"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"ad35ecdd9cb2a2e931d1689adaaec90a836e1eaf.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nMAINTAINER Iliyan Trifonov <iliyan.trifonov@gmail.com>\n\nRUN echo \"deb mirror:\/\/mirrors.ubuntu.com\/mirrors.txt xenial main restricted universe multiverse\" > \/etc\/apt\/sources.list;\\\n\techo \"deb mirror:\/\/mirrors.ubuntu.com\/mirrors.txt xenial-updates main restricted universe multiverse\" >> \/etc\/apt\/sources.list;\\\n\techo \"deb mirror:\/\/mirrors.ubuntu.com\/mirrors.txt xenial-backports main restricted universe multiverse\" >> \/etc\/apt\/sources.list;\\\n\techo \"deb mirror:\/\/mirrors.ubuntu.com\/mirrors.txt xenial-security main restricted universe multiverse\" >> \/etc\/apt\/sources.list\n\nRUN apt-key adv --keyserver keys.gnupg.net --recv-keys 1C4CBDCDCD2EFD2A;\\\n\techo \"deb http:\/\/repo.percona.com\/apt xenial main\" >> \/etc\/apt\/sources.list;\\\n\techo \"deb-src http:\/\/repo.percona.com\/apt xenial main\" >> \/etc\/apt\/sources.list\n\nRUN export DEBIAN_FRONTEND=noninteractive;\\\n\tapt-get update;\\\n\tapt-get -qq install percona-server-server-5.5 percona-server-client-5.5 \\\n\tphp-fpm php-mysqlnd php-mcrypt php-cli \\\n\tnginx-full \\\n\tcurl openssh-server\n\nRUN mkdir \/var\/run\/sshd;\\\n\techo \"root:root\"|chpasswd;\\\n\tsed -i 's|session.*required.*pam_loginuid.so|session optional pam_loginuid.so|' \/etc\/pam.d\/sshd;\\\n\techo LANG=\"en_US.UTF-8\" > \/etc\/default\/locale\n\nRUN curl -L https:\/\/raw.github.com\/wp-cli\/builds\/gh-pages\/phar\/wp-cli.phar > wp-cli.phar;\\\n\tchmod +x wp-cli.phar;\\\n\tmv wp-cli.phar \/usr\/bin\/wp\n\nRUN sed -i '0,\/listen.*=.*\/ s\/listen.*=.*\/listen=127.0.0.1:9000\/' \/etc\/php\/7.0\/fpm\/pool.d\/www.conf;\\\n\tsed -i 's|;cgi.fix_pathinfo.*=.*|cgi.fix_pathinfo=0|' \/etc\/php\/7.0\/fpm\/php.ini;\\\n\tsed -i 's|;date.timezone.*=.*|date.timezone=Europe\/Sofia|' \/etc\/php\/7.0\/fpm\/php.ini\n\nRUN mkdir -p \/var\/www\/wordpress;\\\n\tchown -R www-data:www-data \/var\/www;\\\n\tchmod 0755 \/var\/www\n\nADD nginx\/default \/etc\/nginx\/sites-available\/default\n\nRUN \/etc\/init.d\/mysql start;\\\n\tsleep 3;\\\n\techo 'CREATE DATABASE wordpress; GRANT ALL PRIVILEGES ON wordpress.* TO \"wordpress\"@\"127.0.0.1\" IDENTIFIED BY \"wordpress\"; FLUSH PRIVILEGES;' | mysql -h127.0.0.1 -uroot;\\\n\tcd \/var\/www\/wordpress;\\\n\twp --allow-root core download;\\\n\twp --allow-root core config --dbhost=\"127.0.0.1\" --dbname=\"wordpress\" --dbuser=\"wordpress\" --dbpass=\"wordpress\";\\\n\twp --allow-root core install --url=\"127.0.0.1\" --title=\"My Docker Wordpress Blog!\" --admin_user=\"admin\" --admin_password=\"admin\" --admin_email=\"me@127.0.0.1\";\\\n\tchown -R www-data:www-data .\/*;\\\n\t\/etc\/init.d\/mysql stop\n\nADD shell\/run_all_servers.sh \/\n\nEXPOSE 80 22\n\nCMD [\"sh\", \"\/run_all_servers.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":72,
        "text":"MAINTAINER Iliyan Trifonov <iliyan.trifonov@gmail.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":889,
        "end":1039,
        "text":"apt-get -qq install percona-server-server-5.5 percona-server-client-5.5 \\\\nphp-fpm php-mysqlnd php-mcrypt php-cli \\\\nnginx-full \\\\ncurl openssh-server"
      },
      {
        "label":"apt-install-without-version",
        "start":889,
        "end":1039,
        "text":"apt-get -qq install percona-server-server-5.5 percona-server-client-5.5 \\\\nphp-fpm php-mysqlnd php-mcrypt php-cli \\\\nnginx-full \\\\ncurl openssh-server"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1751,
        "end":1803,
        "text":"ADD nginx\/default \/etc\/nginx\/sites-available\/default"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1751,
        "end":1803,
        "text":"ADD nginx\/default \/etc\/nginx\/sites-available\/default"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2411,
        "end":2441,
        "text":"ADD shell\/run_all_servers.sh \/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":2019,
        "end":2040,
        "text":"cd \/var\/www\/wordpress"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"adb8b0f879c6a6e9b09b619fc8c56b47fdc04ffd.dockerfile",
    "file_content":"FROM        ubuntu\nMAINTAINER  Matthew Fisher <me@bacongobbler.com>\n\n# install nginx\nRUN apt-get update\nRUN apt-get install -y software-properties-common python-software-properties\nRUN add-apt-repository -y ppa:nginx\/stable\nRUN apt-get update\nRUN apt-get install -y nginx\n\nADD nginx.conf  \/etc\/nginx\/nginx.conf\nADD default     \/etc\/nginx\/sites-enabled\/default\n\nWORKDIR \/etc\/nginx\n\nEXPOSE  80\n\nCMD nginx\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":67,
        "text":"MAINTAINER Matthew Fisher <me@bacongobbler.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":104,
        "end":180,
        "text":"RUN apt-get install -y software-properties-common python-software-properties"
      },
      {
        "label":"apt-install-without-version",
        "start":104,
        "end":180,
        "text":"RUN apt-get install -y software-properties-common python-software-properties"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":243,
        "end":271,
        "text":"RUN apt-get install -y nginx"
      },
      {
        "label":"apt-install-without-version",
        "start":243,
        "end":271,
        "text":"RUN apt-get install -y nginx"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":273,
        "end":359,
        "text":"ADD nginx.conf \/etc\/nginx\/nginx.conf\\nADD default \/etc\/nginx\/sites-enabled\/default"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"adcd31262108b8030973b07281a3db493dbb6ea9.dockerfile",
    "file_content":"############################################################\n# Dockerfile to build Nginx Amplify Agent autotests\n# Based on Ubuntu\n############################################################\n\n# Set the base image to Ubuntu\nFROM ubuntu:14.04\n\n# File Author \/ Maintainer\nMAINTAINER Mike Belov\n\n# create required groups\/users\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\n# install NGINX OS and some other applications\nRUN echo \"deb http:\/\/archive.ubuntu.com\/ubuntu\/ $(lsb_release -sc) main universe\" >> \/etc\/apt\/sources.list \\\n && apt-get update \\\n && apt-get install -y --fix-missing \\\n     build-essential \\\n     curl \\\n     dialog \\\n     mysql-server-5.5 \\\n     nano \\\n     net-tools \\\n     nginx \\\n     php5-fpm \\\n     python \\\n     python-dev \\\n     python-distribute \\\n     tar \\\n     wget\n\n# copy nginx binary\nRUN cp \/usr\/sbin\/nginx \/usr\/sbin\/nginx2\n\n# prepare mysql init file\nRUN echo \"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('root');\" > \/mysql.init \\\n && echo \"CREATE USER 'amplify-agent'@'localhost' IDENTIFIED BY 'amplify-agent';\" >> \/mysql.init\n\n# configure for php-fpm\nRUN rm -rf \/run && mkdir -p \/run\/php\/\n\n# add fastcgi_params and php-fpm.conf for nginx\nADD docker\/test\/fastcgi_params \/etc\/nginx\/fastcgi_params\nADD docker\/test\/php-fpm.conf \/etc\/nginx\/conf.d\/php-fpm.conf\n\n# overwrite default www.conf for php5.0-fpm and add second one\nADD docker\/test\/php-fpm-www.conf \/etc\/php5\/fpm\/pool.d\/www.conf\nADD docker\/test\/php-fpm-www2.conf \/etc\/php5\/fpm\/pool.d\/www2.conf\n\n# add test .php file to \/var\/www\/php-fpm root\nADD docker\/test\/test.php \/var\/www\/php-fpm\/test.php\n\n# install basic python tools\nRUN curl https:\/\/bootstrap.pypa.io\/get-pip.py | python - 'pip==18.1.0' \\\n && pip install supervisor\n\n# install agent requirements:\nADD docker\/test\/requirements.txt \/etc\/naas\/requirements.txt\nRUN pip install -I -r \/etc\/naas\/requirements.txt\n\n# install test requirements\nRUN pip install \\\n    pytest \\\n    pytest-xdist \\\n    pyhamcrest \\\n    requests_mock \\\n    timeout-decorator \\\n    freezegun \\\n    mock\n\n# set some environment variables\nENV AMPLIFY_ENVIRONMENT testing\nENV PYTHONPATH \/amplify\n\n# set the default directory where CMD will execute\nWORKDIR \/amplify\n\n# add config files\nADD docker\/test\/nginx.conf \/etc\/nginx\/nginx.conf\nADD docker\/test\/nginx2.conf \/etc\/nginx\/nginx2.conf\nADD docker\/test\/nginx_bad_status.conf \/etc\/nginx\/nginx_bad_status.conf\nADD docker\/test\/nginx_syslog.conf \/etc\/nginx\/nginx_syslog.conf\nADD docker\/test\/supervisord.conf \/etc\/supervisord.conf\nADD docker\/test\/nginx_no_logs.conf \/etc\/nginx\/nginx_no_logs.conf\n\n# add ssl stuff\nADD docker\/test\/amplify-agent-test.crt \/etc\/nginx\/certs.d\/amplify-agent-test.crt\nADD docker\/test\/amplify-agent-test.key \/etc\/nginx\/certs.d\/amplify-agent-test.key\n\n# set the home dir of the mysql user\nRUN usermod -d \/var\/lib\/mysql\/ mysql\n\nCMD bash\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":270,
        "end":291,
        "text":"MAINTAINER Mike Belov"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":557,
        "end":800,
        "text":"apt-get install -y --fix-missing \\\\nbuild-essential \\\\ncurl \\\\ndialog \\\\nmysql-server-5.5 \\\\nnano \\\\nnet-tools \\\\nnginx \\\\nphp5-fpm \\\\npython \\\\npython-dev \\\\npython-distribute \\\\ntar \\\\nwget"
      },
      {
        "label":"apt-install-without-version",
        "start":557,
        "end":800,
        "text":"apt-get install -y --fix-missing \\\\nbuild-essential \\\\ncurl \\\\ndialog \\\\nmysql-server-5.5 \\\\nnano \\\\nnet-tools \\\\nnginx \\\\nphp5-fpm \\\\npython \\\\npython-dev \\\\npython-distribute \\\\ntar \\\\nwget"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1181,
        "end":1587,
        "text":"ADD docker\/test\/fastcgi_params \/etc\/nginx\/fastcgi_params\\nADD docker\/test\/php-fpm.conf \/etc\/nginx\/conf.d\/php-fpm.conf\\n\\n# overwrite default www.conf for php5.0-fpm and add second one\\nADD docker\/test\/php-fpm-www.conf \/etc\/php5\/fpm\/pool.d\/www.conf\\nADD docker\/test\/php-fpm-www2.conf \/etc\/php5\/fpm\/pool.d\/www2.conf\\n\\n# add test .php file to \/var\/www\/php-fpm root\\nADD docker\/test\/test.php \/var\/www\/php-fpm\/test.php"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1749,
        "end":1808,
        "text":"ADD docker\/test\/requirements.txt \/etc\/naas\/requirements.txt"
      },
      {
        "label":"pip-install-without-version",
        "start":1695,
        "end":1717,
        "text":"pip install supervisor"
      },
      {
        "label":"pip-install-without-version",
        "start":1887,
        "end":2022,
        "text":"RUN pip install \\\\npytest \\\\npytest-xdist \\\\npyhamcrest \\\\nrequests_mock \\\\ntimeout-decorator \\\\nfreezegun \\\\nmock"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2202,
        "end":2734,
        "text":"ADD docker\/test\/nginx.conf \/etc\/nginx\/nginx.conf\\nADD docker\/test\/nginx2.conf \/etc\/nginx\/nginx2.conf\\nADD docker\/test\/nginx_bad_status.conf \/etc\/nginx\/nginx_bad_status.conf\\nADD docker\/test\/nginx_syslog.conf \/etc\/nginx\/nginx_syslog.conf\\nADD docker\/test\/supervisord.conf \/etc\/supervisord.conf\\nADD docker\/test\/nginx_no_logs.conf \/etc\/nginx\/nginx_no_logs.conf\\n\\n# add ssl stuff\\nADD docker\/test\/amplify-agent-test.crt \/etc\/nginx\/certs.d\/amplify-agent-test.crt\\nADD docker\/test\/amplify-agent-test.key \/etc\/nginx\/certs.d\/amplify-agent-test.key"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"b30f281e8600bb8194e7fb1de6d113be3284492b.dockerfile",
    "file_content":"FROM ubuntu\n\nMAINTAINER Frank Austin Nothaft, fnothaft@berkeley.edu\n\nRUN apt-get update && \\\n  apt-get install -y python libnss3 openjdk-8-jre-headless curl\n\n# Install statically linked version of docker client\nRUN curl https:\/\/get.docker.com\/builds\/Linux\/x86_64\/docker-1.12.3.tgz \\\n    | tar -xvzf - --transform='s,[^\/]*\/,,g' -C \/usr\/local\/bin\/ \\\n    && chmod u+x \/usr\/local\/bin\/docker\n\n# pull down spark jar\nRUN mkdir \/opt\/apache-spark && \\\n  curl http:\/\/apache.osuosl.org\/spark\/spark-2.1.1\/spark-2.1.1-bin-hadoop2.6.tgz \\\n  | tar --strip-components=1 -xzC \/opt\/apache-spark\n\n# put spark on path\nENV PATH \/opt\/apache-spark\/bin:$PATH\n\n# set spark worker port\nENV SPARK_WORKER_PORT 7075\n\n# add worker runner\nADD run-worker.sh .\n\nENTRYPOINT [\"bash\", \"-x\", \"run-worker.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":13,
        "end":67,
        "text":"MAINTAINER Frank Austin Nothaft, fnothaft@berkeley.edu"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":95,
        "end":156,
        "text":"apt-get install -y python libnss3 openjdk-8-jre-headless curl"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-add-instead-of-copy",
        "start":708,
        "end":727,
        "text":"ADD run-worker.sh ."
      },
      {
        "label":"apt-install-without-version",
        "start":95,
        "end":156,
        "text":"apt-get install -y python libnss3 openjdk-8-jre-headless curl"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"ce4eac5cd9fc883850a992a57edbcd376f26d8aa.dockerfile",
    "file_content":"FROM nginx:latest  \nMAINTAINER Jonathan Hawk <jonathan@appertly.com>  \n  \nADD mime.types \/etc\/nginx\/mime.types  \nADD nginx.conf \/etc\/nginx\/nginx.conf  \nADD ssl.conf \/etc\/nginx\/conf.d\/ssl.conf  \nADD default.conf \/etc\/nginx\/conf.d\/default.conf  \nRUN apt-get update \\  \n&& apt-get install -y ca-certificates  \n  \nADD start.sh \/scripts\/start.sh  \nRUN chmod +x \/scripts\/start.sh  \n  \nCMD [\"\/scripts\/start.sh\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":17,
        "text":"FROM nginx:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":68,
        "text":"MAINTAINER Jonathan Hawk <jonathan@appertly.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":74,
        "end":241,
        "text":"ADD mime.types \/etc\/nginx\/mime.types\\nADD nginx.conf \/etc\/nginx\/nginx.conf\\nADD ssl.conf \/etc\/nginx\/conf.d\/ssl.conf\\nADD default.conf \/etc\/nginx\/conf.d\/default.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":310,
        "end":340,
        "text":"ADD start.sh \/scripts\/start.sh"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":270,
        "end":304,
        "text":"apt-get install -y ca-certificates"
      },
      {
        "label":"apt-install-without-version",
        "start":270,
        "end":304,
        "text":"apt-get install -y ca-certificates"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"d0dd330ac433f94f61cf9b320a1f319c5a9f7b66.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nEXPOSE 6667 27017\n\nRUN apt-get update -qq\nRUN apt-get install -qqy \\\n\tgit \\\n\tmongodb \\\n\tngircd \\\n\topenssl \\\n\tlibssl-dev \\\n\tpython-dev \\\n\tpython-pip \\\n\tpython-setuptools \\\n\tlibffi6 \\\n\tlibffi-dev\n\nADD . \/opt\/helga\nWORKDIR \/opt\/helga\n\nRUN sed -i -s 's\/^bind_ip = 127.0.0.1\/#bind_ip = 127.0.0.1\/' \/etc\/mongodb.conf && service mongodb restart\n\nRUN pip install --upgrade pip\nRUN pip install service_identity\n\nRUN cd \/opt\/helga && python setup.py install\n\n\nENTRYPOINT [\"\/usr\/local\/bin\/helga\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":214,
        "end":230,
        "text":"ADD . \/opt\/helga"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":61,
        "end":212,
        "text":"RUN apt-get install -qqy \\\\ngit \\\\nmongodb \\\\nngircd \\\\nopenssl \\\\nlibssl-dev \\\\npython-dev \\\\npython-pip \\\\npython-setuptools \\\\nlibffi6 \\\\nlibffi-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":61,
        "end":212,
        "text":"RUN apt-get install -qqy \\\\ngit \\\\nmongodb \\\\nngircd \\\\nopenssl \\\\nlibssl-dev \\\\npython-dev \\\\npython-pip \\\\npython-setuptools \\\\nlibffi6 \\\\nlibffi-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":358,
        "end":420,
        "text":"RUN pip install --upgrade pip\\nRUN pip install service_identity"
      },
      {
        "label":"use-cd-change-dir",
        "start":422,
        "end":439,
        "text":"RUN cd \/opt\/helga"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"868d0a2005fd84ac07ff74f792d0f581e05655a5.dockerfile",
    "file_content":"############################################################\n# Dockerfile to build Nginx Amplify Agent with N+ container\n# Based on Ubuntu 14.04\n############################################################\n\n# Set the base image to Ubuntu\nFROM ubuntu:14.04\n\n# File Author \/ Maintainer\nMAINTAINER Mike Belov\n\nRUN echo 'debconf debconf\/frontend select Noninteractive' | debconf-set-selections\nRUN apt-get update && apt-get install -y -q wget apt-transport-https \\\n && apt-get install -y -qq curl libcurl3 libcurl3-dev php5-curl && apt-get install -y -qq ca-certificates\n\n# Download certificate and key from the customer portal (https:\/\/cs.nginx.com)\n# and copy to the build context\nADD docker\/test-plus\/nginx-repo.crt \/etc\/ssl\/nginx\/\nADD docker\/test-plus\/nginx-repo.key \/etc\/ssl\/nginx\/\n\n# Get other files required for installation\nRUN wget -q -O - http:\/\/nginx.org\/keys\/nginx_signing.key | apt-key add -\nRUN wget -q -O \/etc\/apt\/apt.conf.d\/90nginx https:\/\/cs.nginx.com\/static\/files\/90nginx\n\n# Install NGINX Plus and  basic applications\nRUN printf \"deb https:\/\/plus-pkgs.nginx.com\/ubuntu `lsb_release -cs` nginx-plus\\n\" >\/etc\/apt\/sources.list.d\/nginx-plus.list \\\n && apt-get update \\\n && apt-get install -y nginx-plus \\\n && apt-get install -y --fix-missing tar curl nano wget dialog net-tools build-essential \\\n && cp \/usr\/sbin\/nginx \/usr\/sbin\/nginx2\n\n# Instal mysql and prepare init file\nRUN groupadd -r mysql && useradd -r -g mysql mysql\nRUN apt-get update && apt-get install -y mysql-server-5.5\nRUN echo \"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('root');\" > \/mysql.init\nRUN echo \"CREATE USER 'amplify-agent'@'localhost' IDENTIFIED BY 'amplify-agent';\" >> \/mysql.init\n\n# Install php-fpm and configure\nRUN rm -rf \/run \\\n && mkdir \/run \\\n && apt-get update \\\n && apt-get install -y php5-fpm \\\n && mkdir \/run\/php\/\n\n# add fastcgi_params and php-fpm.conf for nginx\nADD docker\/test-plus\/fastcgi_params \/etc\/nginx\/fastcgi_params\nADD docker\/test-plus\/php-fpm.conf \/etc\/nginx\/conf.d\/php-fpm.conf\n# overwrite default www.conf for php5.0-fpm and add second one\nADD docker\/test-plus\/php-fpm-www.conf \/etc\/php5\/fpm\/pool.d\/www.conf\nADD docker\/test-plus\/php-fpm-www2.conf \/etc\/php5\/fpm\/pool.d\/www2.conf\n# add test .php file to \/var\/www\/php-fpm root\nADD docker\/test-plus\/test.php \/var\/www\/php-fpm\/test.php\n\n# Install Python and Basic Python Tools\nRUN apt-get update \\\n && apt-get install -y python python-dev python-distribute \\\n && curl https:\/\/bootstrap.pypa.io\/get-pip.py | python - 'pip==18.1.0' \\\n && pip install supervisor\n\n# Copy the application folder inside the container\n#ADD . \/amplify\nADD docker\/test-plus\/requirements.txt \/etc\/naas\/requirements.txt\n\n# Install agent requirements:\nRUN pip install -I -r \/etc\/naas\/requirements.txt\n\n# Install test requirements\nRUN pip install \\\n    pytest \\\n    pytest-xdist \\\n    pyhamcrest \\\n    requests_mock \\\n    timeout-decorator \\\n    freezegun \\\n    mock\n\nENV AMPLIFY_ENVIRONMENT testing\nENV PYTHONPATH \/amplify\nENV PYTEST_ADDOPTS \"--ignore=test\/unit\/ext\/controller\"\n\n# Set the default directory where CMD will execute\nWORKDIR \/amplify\n\n# add config\nADD docker\/test-plus\/nginx.conf \/etc\/nginx\/nginx.conf\nADD docker\/test-plus\/nginx2.conf \/etc\/nginx\/nginx2.conf\nADD docker\/test-plus\/nginx_bad_status.conf \/etc\/nginx\/nginx_bad_status.conf\nADD docker\/test-plus\/nginx_syslog.conf \/etc\/nginx\/nginx_syslog.conf\nADD docker\/test-plus\/supervisord.conf \/etc\/supervisord.conf\nADD docker\/test-plus\/nginx_no_logs.conf \/etc\/nginx\/nginx_no_logs.conf\n\n# add ssl\nADD docker\/test-plus\/amplify-agent-test.crt \/etc\/nginx\/certs.d\/amplify-agent-test.crt\nADD docker\/test-plus\/amplify-agent-test.key \/etc\/nginx\/certs.d\/amplify-agent-test.key\n\nRUN usermod -d \/var\/lib\/mysql\/ mysql\n\nCMD bash\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":284,
        "end":305,
        "text":"MAINTAINER Mike Belov"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":390,
        "end":566,
        "text":"RUN apt-get update && apt-get install -y -q wget apt-transport-https \\\\n&& apt-get install -y -qq curl libcurl3 libcurl3-dev php5-curl && apt-get install -y -qq ca-certificates"
      },
      {
        "label":"apt-install-without-version",
        "start":379,
        "end":566,
        "text":"selections\\nRUN apt-get update && apt-get install -y -q wget apt-transport-https \\\\n&& apt-get install -y -qq curl libcurl3 libcurl3-dev php5-curl && apt-get install -y -qq ca-certificates"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":679,
        "end":781,
        "text":"ADD docker\/test-plus\/nginx-repo.crt \/etc\/ssl\/nginx\/\\nADD docker\/test-plus\/nginx-repo.key \/etc\/ssl\/nginx"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1457,
        "end":1492,
        "text":"apt-get install -y mysql-server-5.5"
      },
      {
        "label":"apt-install-without-version",
        "start":1457,
        "end":1492,
        "text":"apt-get install -y mysql-server-5.5"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1863,
        "end":2292,
        "text":"ADD docker\/test-plus\/fastcgi_params \/etc\/nginx\/fastcgi_params\\nADD docker\/test-plus\/php-fpm.conf \/etc\/nginx\/conf.d\/php-fpm.conf\\n# overwrite default www.conf for php5.0-fpm and add second one\\nADD docker\/test-plus\/php-fpm-www.conf \/etc\/php5\/fpm\/pool.d\/www.conf\\nADD docker\/test-plus\/php-fpm-www2.conf \/etc\/php5\/fpm\/pool.d\/www2.conf\\n# add test .php file to \/var\/www\/php-fpm root\\nADD docker\/test-plus\/test.php \/var\/www\/php-fpm\/test.php"
      },
      {
        "label":"pip-install-without-version",
        "start":2493,
        "end":2515,
        "text":"pip install supervisor"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2584,
        "end":2648,
        "text":"ADD docker\/test-plus\/requirements.txt \/etc\/naas\/requirements.txt"
      },
      {
        "label":"pip-install-without-version",
        "start":2758,
        "end":2893,
        "text":"RUN pip install \\\\npytest \\\\npytest-xdist \\\\npyhamcrest \\\\nrequests_mock \\\\ntimeout-decorator \\\\nfreezegun \\\\nmock"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3089,
        "end":3472,
        "text":"ADD docker\/test-plus\/nginx.conf \/etc\/nginx\/nginx.conf\\nADD docker\/test-plus\/nginx2.conf \/etc\/nginx\/nginx2.conf\\nADD docker\/test-plus\/nginx_bad_status.conf \/etc\/nginx\/nginx_bad_status.conf\\nADD docker\/test-plus\/nginx_syslog.conf \/etc\/nginx\/nginx_syslog.conf\\nADD docker\/test-plus\/supervisord.conf \/etc\/supervisord.conf\\nADD docker\/test-plus\/nginx_no_logs.conf \/etc\/nginx\/nginx_no_logs.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8d6cb0a340268c75236838fc717003edf0306900.dockerfile",
    "file_content":"FROM phusion\/baseimage:0.9.16\nMAINTAINER Philipz <philipzheng@gmail.com>\n\n# Pre config Nginx Repo\nRUN curl -o nginx.key http:\/\/nginx.org\/packages\/keys\/nginx_signing.key && \\\n    cat nginx.key | apt-key add -\nRUN echo deb http:\/\/nginx.org\/packages\/ubuntu\/ trusty nginx | tee \/etc\/apt\/sources.list.d\/nginx.list && \\\n    echo deb-src http:\/\/nginx.org\/packages\/ubuntu\/ trusty nginx >> \/etc\/apt\/sources.list.d\/nginx.list\nRUN apt-get update\nRUN apt-get -y upgrade\n\n# Basic Requirements\nRUN apt-get -y install nginx php5-mysql php-apc unzip\n\n# Wordpress Requirements\nRUN apt-get -y install php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-sqlite php5-tidy php5-xmlrpc php5-xsl\n\n# nginx config\nRUN sed -i -e\"s\/keepalive_timeout\\s*65\/keepalive_timeout 2\/\" \/etc\/nginx\/nginx.conf\nRUN sed -i -e\"s\/keepalive_timeout 2\/keepalive_timeout 2;\\n\\tclient_max_body_size 100m\/\" \/etc\/nginx\/nginx.conf\nRUN echo \"daemon off;\" >> \/etc\/nginx\/nginx.conf\n\n# HHVM install\nRUN curl http:\/\/dl.hhvm.com\/conf\/hhvm.gpg.key | sudo apt-key add -\nRUN echo deb http:\/\/dl.hhvm.com\/ubuntu trusty main | sudo tee \/etc\/apt\/sources.list.d\/hhvm.list\nRUN apt-get update && apt-get install -y hhvm\n\n# nginx site conf\nADD .\/nginx-site.conf \/etc\/nginx\/conf.d\/default.conf\nRUN mkdir \/usr\/share\/nginx\/www\nRUN chown -R www-data:www-data \/usr\/share\/nginx\/www\n\nRUN mkdir \/etc\/service\/nginx\nADD nginx.sh \/etc\/service\/nginx\/run\n\nRUN mkdir \/etc\/service\/hhvm\nADD hhvm.sh \/etc\/service\/hhvm\/run\n\nRUN sudo \/usr\/share\/hhvm\/install_fastcgi.sh\n\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Define mountable directories.\nVOLUME [\"\/usr\/share\/nginx\/www\",\"\/var\/log\/nginx\/\"]\n\n# private expose\nEXPOSE 80\nEXPOSE 443\n\nCMD [\"\/sbin\/my_init\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":30,
        "end":72,
        "text":"MAINTAINER Philipz <philipzheng@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":480,
        "end":753,
        "text":"RUN apt-get -y install nginx php5-mysql php-apc unzip\\n\\n# Wordpress Requirements\\nRUN apt-get -y install php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-sqlite php5-tidy php5-xmlrpc php5-xsl"
      },
      {
        "label":"apt-install-without-version",
        "start":480,
        "end":753,
        "text":"RUN apt-get -y install nginx php5-mysql php-apc unzip\\n\\n# Wordpress Requirements\\nRUN apt-get -y install php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-sqlite php5-tidy php5-xmlrpc php5-xsl"
      },
      {
        "label":"use-sudo-run",
        "start":1094,
        "end":1185,
        "text":"RUN echo deb http:\/\/dl.hhvm.com\/ubuntu trusty main | sudo tee \/etc\/apt\/sources.list.d\/hhvm."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1212,
        "end":1235,
        "text":"apt-get install -y hhvm"
      },
      {
        "label":"apt-install-without-version",
        "start":1212,
        "end":1235,
        "text":"apt-get install -y hhvm"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1255,
        "end":1307,
        "text":"ADD .\/nginx-site.conf \/etc\/nginx\/conf.d\/default.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1421,
        "end":1456,
        "text":"ADD nginx.sh \/etc\/service\/nginx\/run"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1486,
        "end":1519,
        "text":"ADD hhvm.sh \/etc\/service\/hhvm\/run"
      },
      {
        "label":"use-sudo-run",
        "start":1521,
        "end":1564,
        "text":"RUN sudo \/usr\/share\/hhvm\/install_fastcgi.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"59d743e8e2227016bef2325112baac9dcfa96e0e.dockerfile",
    "file_content":"FROM hypriot\/rpi-python\n\nWORKDIR \/app\nADD . \/app\nRUN apt-get update && apt-get install -y \\\n  python-dev \\\n  python-pip \\\n  python-smbus \\\n  libfreetype6-dev \\\n  libjpeg-dev \\\n  ttf-dejavu-core \\\n  build-essential \\\n  gcc \\\n  vim \\\n  iputils-ping \\\n  python-imaging && pip install --index-url=https:\/\/pypi.python.org\/simple\/ --upgrade pip && apt-get purge -y python-pip\nRUN pip install -r requirements.txt\nCMD \/bin\/bash\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":23,
        "text":"FROM hypriot\/rpi-python"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":38,
        "end":48,
        "text":"ADD . \/app"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":71,
        "end":265,
        "text":"apt-get install -y \\\\npython-dev \\\\npython-pip \\\\npython-smbus \\\\nlibfreetype6-dev \\\\nlibjpeg-dev \\\\nttf-dejavu-core \\\\nbuild-essential \\\\ngcc \\\\nvim \\\\niputils-ping \\\\npython-imaging"
      },
      {
        "label":"apt-install-without-version",
        "start":71,
        "end":265,
        "text":"apt-get install -y \\\\npython-dev \\\\npython-pip \\\\npython-smbus \\\\nlibfreetype6-dev \\\\nlibjpeg-dev \\\\nttf-dejavu-core \\\\nbuild-essential \\\\ngcc \\\\nvim \\\\niputils-ping \\\\npython-imaging"
      },
      {
        "label":"pip-install-without-version",
        "start":269,
        "end":338,
        "text":"pip install --index-url=https:\/\/pypi.python.org\/simple\/ --upgrade pip"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"4cd93a9616c4aa5847c6152a9587e125132291b4.dockerfile",
    "file_content":"#使用 python:3.6-slim 做基础镜像减少大小。其中tensorflow再用另外的镜像跑数据。\nFROM docker.io\/python:3.6-slim\n\n# https:\/\/opsx.alibaba.com\/mirror\n# 使用阿里云镜像地址。修改debian apt 更新地址，pip 地址，设置时区。\nRUN echo  \"deb http:\/\/mirrors.aliyun.com\/debian\/ stretch main non-free contrib\\n\\\ndeb-src http:\/\/mirrors.aliyun.com\/debian\/ stretch main non-free contrib\\n\\\ndeb http:\/\/mirrors.aliyun.com\/debian-security stretch\/updates main\\n\\\ndeb-src http:\/\/mirrors.aliyun.com\/debian-security stretch\/updates main\\n\\\ndeb http:\/\/mirrors.aliyun.com\/debian\/ stretch-updates main non-free contrib\\n\\\ndeb-src http:\/\/mirrors.aliyun.com\/debian\/ stretch-updates main non-free contrib\\n\\\ndeb http:\/\/mirrors.aliyun.com\/debian\/ stretch-backports main non-free contrib\\n\\\ndeb-src http:\/\/mirrors.aliyun.com\/debian\/ stretch-backports main non-free contrib\" > \/etc\/apt\/sources.list && \\\necho  \"[global]\\n\\\ntrusted-host=mirrors.aliyun.com\\n\\\nindex-url=http:\/\/mirrors.aliyun.com\/pypi\/simple\" > \/etc\/pip.conf && \\\nln -sf \/usr\/share\/zoneinfo\/Asia\/Shanghai \/etc\/localtime && \\\n    echo \"Asia\/Shanghai\" > \/etc\/timezone\n\n#安装 mysqlclient tushare (pandas ,numpy) tornado bokeh\n# apt-get autoremove -y 删除没有用的依赖lib。减少镜像大小。1MB 也要节省。\n# apt-get --purge remove 软件包名称 , 删除已安装包（不保留配置文件)。\nRUN apt-get update && apt-get install -y gcc make axel python3-dev default-libmysqlclient-dev libxml2-dev cron supervisor && \\\n    pip3 install mysqlclient sqlalchemy && \\\n    pip3 install requests && \\\n    pip3 install lxml bs4 && \\\n    pip3 install numpy pandas  && \\\n    pip3 install tushare && \\\n    pip3 install tornado torndb && \\\n    pip3 install bokeh stockstats && \\\n    cd \/tmp && axel https:\/\/nchc.dl.sourceforge.net\/project\/ta-lib\/ta-lib\/0.4.0\/ta-lib-0.4.0-src.tar.gz && \\\n    tar xvfz ta-lib-0.4.0-src.tar.gz && \\\n    cd ta-lib && .\/configure && make && make install  && cd \/tmp && rm -rf * && \\\n    pip3 install TA-Lib  && \\\n    apt-get --purge remove -y gcc make axel python3-dev default-libmysqlclient-dev libxml2-dev && \\\n    rm -rf \/root\/.cache\/* && apt-get clean && apt-get autoremove -y\n\n# \/usr\/local\/lib\/python3.6\/site-packages\/pandas\/\n#1.解决 pandas 数据插入问题。直接修改数据库驱动 sqlalchemy\n# 修改：statement.replace(\"INSERT INTO\",\"INSERT IGNORE INTO\")\n# \/usr\/local\/lib\/python3.6\/site-packages\/sqlalchemy\/dialects\/mysql\/mysqldb.py\n# 增加了一个 IGNORE 参数。\n#2.解决torndb在python3下面的问题：\n#http:\/\/blog.csdn.net\/littlethunder\/article\/details\/8917378\nRUN echo `date +%Y-%m-%d:%H:%M:%S` >> \/etc\/docker.build && \\\n    sed -i -e 's\/executemany(statement\/executemany(statement.replace\\(\"INSERT INTO\",\"INSERT IGNORE INTO\")\/g' \\\n        \/usr\/local\/lib\/python3.6\/site-packages\/sqlalchemy\/dialects\/mysql\/mysqldb.py && \\\n    rm -f \/etc\/cron.daily\/apt-compat \/etc\/cron.daily\/dpkg \/etc\/cron.daily\/passwd && \\\n    sed -i -e 's\/itertools\\.izip\/zip\/g' \\\n    \/usr\/local\/lib\/python3.6\/site-packages\/torndb.py\n\n#增加语言utf-8\nENV LANG=zh_CN.UTF-8\nENV LC_CTYPE=zh_CN.UTF-8\nENV LC_ALL=C\nENV PYTHONPATH=\/data\/stock\n\nWORKDIR \/data\n\n#add cron sesrvice.\n#每分钟，每小时1分钟，每天1点1分，每月1号执行\nRUN mkdir -p \/etc\/cron.minutely && mkdir -p \/etc\/cron.hourly && mkdir -p \/etc\/cron.monthly && \\\n    echo \"SHELL=\/bin\/sh \\n\\\nPATH=\/usr\/local\/sbin:\/usr\/local\/bin:\/sbin:\/bin:\/usr\/sbin:\/usr\/bin \\n\\\n# min   hour    day     month   weekday command \\n\\\n*\/1     *       *       *       *       \/bin\/run-parts \/etc\/cron.minutely \\n\\\n10       *       *       *       *       \/bin\/run-parts \/etc\/cron.hourly \\n\\\n30       16       *       *       *       \/bin\/run-parts \/etc\/cron.daily \\n\\\n30       17       1,10,20       *       *       \/bin\/run-parts \/etc\/cron.monthly \\n\" > \/var\/spool\/cron\/crontabs\/root && \\\n    chmod 600 \/var\/spool\/cron\/crontabs\/root\n\n\n#增加服务端口\nEXPOSE 8888 9999 6006 8500 9001\n\n#经常修改放到最后：\nADD jobs \/data\/stock\/jobs\nADD libs \/data\/stock\/libs\nADD web \/data\/stock\/web\nADD supervisor \/etc\/supervisor\n\nADD jobs\/cron.minutely \/etc\/cron.minutely\nADD jobs\/cron.hourly \/etc\/cron.hourly\nADD jobs\/cron.daily \/etc\/cron.daily\nADD jobs\/cron.monthly \/etc\/cron.monthly\n\nRUN mkdir -p \/data\/logs && ls \/data\/stock\/ && chmod 755 \/data\/stock\/jobs\/run_* &&  \\\n    chmod 755 \/etc\/cron.minutely\/* && chmod 755 \/etc\/cron.hourly\/* && \\\n    chmod 755 \/etc\/cron.daily\/* && chmod 755 \/etc\/cron.monthly\/*\n\nENTRYPOINT [\"supervisord\",\"-n\",\"-c\",\"\/etc\/supervisor\/supervisord.conf\"]",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":1225,
        "end":1324,
        "text":"apt-get install -y gcc make axel python3-dev default-libmysqlclient-dev libxml2-dev cron supervisor"
      },
      {
        "label":"apt-install-without-version",
        "start":1225,
        "end":1324,
        "text":"apt-get install -y gcc make axel python3-dev default-libmysqlclient-dev libxml2-dev cron supervisor"
      },
      {
        "label":"pip-install-without-version",
        "start":1334,
        "end":1578,
        "text":"pip3 install mysqlclient sqlalchemy && \\\\npip3 install requests && \\\\npip3 install lxml bs4 && \\\\npip3 install numpy pandas && \\\\npip3 install tushare && \\\\npip3 install tornado torndb && \\\\npip3 install bokeh stockstats && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1583,
        "end":1593,
        "text":"cd \/tmp &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1734,
        "end":1746,
        "text":"cd ta-lib &&"
      },
      {
        "label":"pip-install-without-version",
        "start":1816,
        "end":1828,
        "text":"pip3 install"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3643,
        "end":3906,
        "text":"ADD jobs \/data\/stock\/jobs\\nADD libs \/data\/stock\/libs\\nADD web \/data\/stock\/web\\nADD supervisor \/etc\/supervisor\\n\\nADD jobs\/cron.minutely \/etc\/cron.minutely\\nADD jobs\/cron.hourly \/etc\/cron.hourly\\nADD jobs\/cron.daily \/etc\/cron.daily\\nADD jobs\/cron.monthly \/etc\/cron.monthly"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8140580a8437360ebe634aab4a0960d2635d9d20.dockerfile",
    "file_content":"FROM gitlab\/dind  \n  \nMAINTAINER Shawn Seymour <shawn@devshawn.com>  \n  \nRUN curl -sL https:\/\/deb.nodesource.com\/setup_8.x | sudo -E bash -  \nRUN apt-get install -y nodejs  \n  \nRUN mkdir \/opt\/yarn  \nRUN wget https:\/\/yarnpkg.com\/latest.tar.gz -O \/tmp\/yarn.tar.gz && \\  \ntar zvxf \/tmp\/yarn.tar.gz --strip-components=1 -C \/opt\/yarn && \\  \nln -s \/opt\/yarn\/bin\/yarn \/usr\/local\/bin\/yarn  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":16,
        "text":"FROM gitlab\/dind"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":22,
        "end":67,
        "text":"MAINTAINER Shawn Seymour <shawn@devshawn.com>"
      },
      {
        "label":"use-sudo-run",
        "start":73,
        "end":139,
        "text":"RUN curl -sL https:\/\/deb.nodesource.com\/setup_8.x | sudo -E bash -"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":142,
        "end":171,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":142,
        "end":171,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "use-sudo-run",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"639a918ca02119b64b0170186f236e46872616e9.dockerfile",
    "file_content":"FROM ubuntu:bionic\nMAINTAINER patrick@oberdorf.net\n\nENV VERSION 1.9.2\n\nWORKDIR \/usr\/local\/src\/\nADD assets\/sha256checksum sha256checksum\n\nRUN apt-get update && apt-get install -y \\\n\tbuild-essential \\\n\ttar \\\n\twget \\\n\tlibssl-dev \\\n\tlibevent-dev \\\n\tlibevent-2.1-6 \\\n\tlibexpat1-dev \\\n\tlibexpat1 \\\n\tdnsutils \\\n\t&& wget http:\/\/www.unbound.net\/downloads\/unbound-${VERSION}.tar.gz -P \/usr\/local\/src\/ \\\n\t&& sha256sum -c sha256checksum \\\n\t&& tar -xvf unbound-${VERSION}.tar.gz \\\n\t&& rm unbound-${VERSION}.tar.gz \\\n\t&& cd unbound-${VERSION} \\\n\t&& .\/configure --prefix=\/usr\/local --with-libevent \\\n\t&& make \\\n\t&& make install \\\n\t&& cd ..\/ \\\n\t&& rm -R unbound-${VERSION} \\\n\t&& apt-get purge -y \\\n\tbuild-essential \\\n\tgcc \\\n\tgcc-4.8 \\\n\tcpp \\\n\tcpp-4.8 \\\n\tlibssl-dev \\\n\tlibevent-dev \\\n\tlibexpat1-dev \\\n\t&& apt-get autoremove --purge -y \\\n\t&& apt-get clean \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nRUN useradd --system unbound --home \/home\/unbound --create-home\nENV PATH $PATH:\/usr\/local\/lib\nRUN ldconfig\nADD assets\/unbound.conf \/usr\/local\/etc\/unbound\/unbound.conf\nRUN mkdir \/usr\/local\/etc\/unbound\/conf.d\nRUN chown -R unbound:unbound \/usr\/local\/etc\/unbound\/\n\nUSER unbound\nRUN unbound-anchor -a \/usr\/local\/etc\/unbound\/root.key ; true\nRUN unbound-control-setup \\\n\t&& wget ftp:\/\/FTP.INTERNIC.NET\/domain\/named.cache -O \/usr\/local\/etc\/unbound\/root.hints\n\nUSER root\nADD start.sh \/start.sh\nRUN chmod +x \/start.sh\n\nEXPOSE 53\/udp\nEXPOSE 53\n\nCMD [\"\/start.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":50,
        "text":"MAINTAINER patrick@oberdorf.net"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":95,
        "end":135,
        "text":"ADD assets\/sha256checksum sha256checksum"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":159,
        "end":303,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ntar \\\\nwget \\\\nlibssl-dev \\\\nlibevent-dev \\\\nlibevent-2.1-6 \\\\nlibexpat1-dev \\\\nlibexpat1 \\\\ndnsutils \\"
      },
      {
        "label":"apt-install-without-version",
        "start":159,
        "end":303,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ntar \\\\nwget \\\\nlibssl-dev \\\\nlibevent-dev \\\\nlibevent-2.1-6 \\\\nlibexpat1-dev \\\\nlibexpat1 \\\\ndnsutils \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":507,
        "end":527,
        "text":"cd unbound-${VERSION"
      },
      {
        "label":"use-cd-change-dir",
        "start":619,
        "end":627,
        "text":"cd ..\/ \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":998,
        "end":1052,
        "text":"ADD assets\/unbound.conf \/usr\/local\/etc\/unbound\/unbound"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1353,
        "end":1375,
        "text":"ADD start.sh \/start.sh"
      },
      {
        "label":"root-privilege-user",
        "start":1343,
        "end":1352,
        "text":"USER root"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"653f80eeb3475b26c0918309b62f07fec6656f8d.dockerfile",
    "file_content":"FROM openjdk:8\n\nMAINTAINER Entria <developers@entria.com.br>\n\nRUN mkdir -p \/opt\/app\nWORKDIR \/opt\/app\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install general dependencies\nRUN dpkg --add-architecture i386 && apt-get update && apt-get install -yq \\\n    apt-transport-https \\\n    autoconf \\\n    automake \\\n    build-essential \\\n    imagemagick \\\n    jq \\\n    libc6:i386 \\\n    libcurl3 \\\n    libcurl3-gnutls \\\n    libcurl4-openssl-dev \\\n    libncurses5:i386 \\\n    librsvg2-bin \\\n    libssl-dev \\\n    libstdc++6:i386 \\\n    pkg-config \\\n    python \\\n    python-dev \\\n    python-pip \\\n    python-setuptools \\\n    software-properties-common \\\n    zlib1g:i386 \\\n    zlib1g-dev \\\n    --no-install-recommends\n\n# Install AWS CLI\nRUN pip install --upgrade awscli\n\nENV RUBY_VERSION=\"2.4.4\"\nENV ANDROID_HOME=\"\/opt\/android-sdk-linux\"\nENV ANDROID_SDK=\"${ANDROID_HOME}\"\nENV PATH=\"${ANDROID_SDK}\/tools:${ANDROID_SDK}\/platform-tools:${ANDROID_SDK}\/tools\/bin:${PATH}\"\nRUN echo \"export PATH=${PATH}\" > \/root\/.profile\n\n# Install Android SDK (based on: https:\/\/github.com\/gfx\/docker-android-project\/blob\/master\/Dockerfile)\n# See for CircleCI Issue:\n#  https:\/\/discuss.circleci.com\/t\/failed-to-register-layer-error-processing-tar-file-exit-status-1-container-id-249512-cannot-be-mapped-to-a-host-id\/13453\/5\n# Grab URL from footer of https:\/\/developer.android.com\/studio\/index.html\n# Following URL is for 26.0.2\nENV ANDROID_SDK_URL https:\/\/dl.google.com\/android\/repository\/sdk-tools-linux-3859397.zip\n\n#ENV ANDROID_BUILD_TOOLS_VERSION 26.0.2,25.0.3\n#ENV ANDROID_API_LEVELS android-26,android-25\n#ENV ANDROID_COMPONENTS platform-tools,build-tools-${ANDROID_BUILD_TOOLS_VERSION},${ANDROID_API_LEVELS}\n#ENV GOOGLE_COMPONENTS extra-android-m2repository,extra-google-m2repository,extra-google-google_play_services,extra-google-gcm\n\nRUN curl -L \"${ANDROID_SDK_URL}\" -o \/tmp\/android-sdk-linux.zip && \\\n    unzip \/tmp\/android-sdk-linux.zip -d \/opt\/ && \\\n    chown -R root:root \/opt && \\\n    rm \/tmp\/android-sdk-linux.zip && \\\n    mkdir ${ANDROID_HOME} && \\\n    mv \/opt\/tools ${ANDROID_HOME}\/ && \\\n    ls ${ANDROID_HOME} && \\\n    ls ${ANDROID_HOME}\/tools && chown -R root:root ${ANDROID_HOME}\n\n# Install Android SDK components\nRUN echo y | sdkmanager \"platform-tools\" \"build-tools;26.0.2\" \"build-tools;25.0.3\" \"platforms;android-26\" \"platforms;android-25\" \\\n                \"extras;google;m2repository\" \"extras;android;m2repository\" \"extras;google;google_play_services\"\n\nRUN echo y | sdkmanager --licenses\n# Install Watchman\nRUN git clone https:\/\/github.com\/facebook\/watchman.git && \\\n    cd watchman && \\\n    git checkout v4.7.0 && \\\n    .\/autogen.sh && .\/configure && make && make install && cd .. && rm -rf watchman\n\n# Install Ruby and RubyGems\nRUN wget http:\/\/ftp.ruby-lang.org\/pub\/ruby\/ruby-${RUBY_VERSION}.tar.gz && \\\n    tar -xzf ruby-${RUBY_VERSION}.tar.gz && \\\n    rm ruby-${RUBY_VERSION}.tar.gz && \\\n    cd ruby-${RUBY_VERSION}\/ && \\\n    .\/configure --disable-install-rdoc && make && make install\n\n# Install bundler\nRUN gem install bundler\n\n# Install Slack CLI https:\/\/github.com\/rockymadden\/slack-cli\nRUN curl -O https:\/\/raw.githubusercontent.com\/rockymadden\/slack-cli\/master\/src\/slack && \\\n    chmod +x slack && \\\n    ln -s \/opt\/app\/slack \/usr\/local\/bin\/slack\n\n# Install Node JS and Yarn\n# https:\/\/github.com\/nodejs\/docker-node\/blob\/12ba2e5432cd50037b6c0cf53464b5063b028227\/8.1\/Dockerfile\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 10.13.0\nENV YARN_VERSION 1.12.3\n\nRUN groupadd --gid 1000 node && \\\n    useradd --uid 1000 --gid node --shell \/bin\/bash --create-home node\n\n# gpg keys listed at https:\/\/github.com\/nodejs\/node#release-keys\nRUN set -ex \\\n  && for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  ; do \\\n    gpg --no-tty --keyserver hkp:\/\/p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --no-tty --keyserver hkp:\/\/ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --no-tty --keyserver hkp:\/\/pgp.mit.edu:80 --recv-keys \"$key\" ; \\\n  done\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n  esac \\\n  && curl -fsSLO --compressed \"https:\/\/nodejs.org\/dist\/v$NODE_VERSION\/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https:\/\/nodejs.org\/dist\/v$NODE_VERSION\/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C \/usr\/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s \/usr\/local\/bin\/node \/usr\/local\/bin\/nodejs\n\nRUN set -ex \\\n  && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5 \\\n  ; do \\\n    gpg --no-tty --keyserver hkp:\/\/p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n    gpg --no-tty --keyserver hkp:\/\/ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --no-tty --keyserver hkp:\/\/pgp.mit.edu:80 --recv-keys \"$key\" ; \\\n  done \\\n  && curl -fsSLO --compressed \"https:\/\/yarnpkg.com\/downloads\/$YARN_VERSION\/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fsSLO --compressed \"https:\/\/yarnpkg.com\/downloads\/$YARN_VERSION\/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p \/opt \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C \/opt\/ \\\n  && ln -s \/opt\/yarn-v$YARN_VERSION\/bin\/yarn \/usr\/local\/bin\/yarn \\\n  && ln -s \/opt\/yarn-v$YARN_VERSION\/bin\/yarnpkg \/usr\/local\/bin\/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz\n\n# Clean\nRUN rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* && \\\n    apt-get autoremove -y && \\\n    apt-get clean\n\n# Support Gradle\nENV TERM dumb\n\n# Install code-push-cli\nRUN npm install -g code-push-cli && chown -R root:root \/usr\/local\/lib\/node_modules\/code-push-cli\/node_modules\n\nCOPY entrypoint.sh \/entrypoint.sh\n\nENTRYPOINT [\"\/entrypoint.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":16,
        "end":60,
        "text":"MAINTAINER Entria <developers@entria.com.br>"
      },
      {
        "label":"apt-install-without-version",
        "start":223,
        "end":695,
        "text":"apt-get install -yq \\\\napt-transport-https \\\\nautoconf \\\\nautomake \\\\nbuild-essential \\\\nimagemagick \\\\njq \\\\nlibc6:i386 \\\\nlibcurl3 \\\\nlibcurl3-gnutls \\\\nlibcurl4-openssl-dev \\\\nlibncurses5:i386 \\\\nlibrsvg2-bin \\\\nlibssl-dev \\\\nlibstdc++6:i386 \\\\npkg-config \\\\npython \\\\npython-dev \\\\npython-pip \\\\npython-setuptools \\\\nsoftware-properties-common \\\\nzlib1g:i386 \\\\nzlib1g-dev \\\\n--no-install-recommends"
      },
      {
        "label":"pip-install-without-version",
        "start":715,
        "end":747,
        "text":"RUN pip install --upgrade awscli"
      },
      {
        "label":"use-cd-change-dir",
        "start":2552,
        "end":2566,
        "text":"cd watchman &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":2877,
        "end":2899,
        "text":"cd ruby-${RUBY_VERSION"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6611c2641a56e10975cd6507bab4fe82fbe7b450.dockerfile",
    "file_content":"#\n# LAMP environment with apache2, mysql, memcached, php5 and php5-apcu\n#\n\nFROM nrpa\/base\nMAINTAINER gavinmroy@gmail.com\n\nRUN echo \"mysql-server mysql-server\/root_password password root\" | debconf-set-selections\nRUN echo \"mysql-server mysql-server\/root_password_again password root\" | debconf-set-selections\n\nRUN apt-get update && apt-get install -y apache2 php5 php5-apcu memcached mysql-server\n\nRUN mkdir -p \/etc\/service\/apache2 \/etc\/service\/memcached \/etc\/service\/mysqld\nADD bin\/apache2.sh \/etc\/service\/apache2\/run\nADD bin\/memcached.sh \/etc\/service\/memcached\/run\nADD bin\/mysqld.sh \/etc\/service\/mysqld\/run\n\nADD newrelic-plugin-agent.cfg \/etc\/newrelic\/newrelic-plugin-agent.cfg\n\nENV APACHE_RUN_USER www-data\nENV APACHE_RUN_GROUP www-data\nENV APACHE_LOG_DIR \/var\/log\/apache2\nENV APACHE_LOCK_DIR \/var\/run\/lock\/apache2\nENV APACHE_PID_FILE \/var\/run\/apache2\/apache2.pid\n\nRUN echo \"ServerName nrpa-lamp.docker\" >> \/etc\/apache2\/apache2.conf\n\nEXPOSE 80 3306 11211\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":75,
        "end":89,
        "text":"FROM nrpa\/base"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":90,
        "end":120,
        "text":"MAINTAINER gavinmroy@gmail.com"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":474,
        "end":607,
        "text":"ADD bin\/apache2.sh \/etc\/service\/apache2\/run\\nADD bin\/memcached.sh \/etc\/service\/memcached\/run\\nADD bin\/mysqld.sh \/etc\/service\/mysqld\/run"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":331,
        "end":395,
        "text":"apt-get install -y apache2 php5 php5-apcu memcached mysql-server"
      },
      {
        "label":"apt-install-without-version",
        "start":331,
        "end":395,
        "text":"apt-get install -y apache2 php5 php5-apcu memcached mysql-server"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":609,
        "end":678,
        "text":"ADD newrelic-plugin-agent.cfg \/etc\/newrelic\/newrelic-plugin-agent.cfg"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"6954e5674a928f1a2c17f72d1c4db30624054cb6.dockerfile",
    "file_content":"#\n# Debian image that has Foswiki installed from the release tgz\n#\n# docker build -t svendowideit\/foswiki .\n\nFROM debian\nMAINTAINER\tSven Dowideit <SvenDowideit@home.org.au>\n\nRUN apt-get update\nRUN apt-get install -yq vim-tiny wget \\\n\t\tapache2 rcs \\\n\t\tlibalgorithm-diff-perl libarchive-tar-perl libauthen-sasl-perl libcgi-pm-perl libcgi-session-perl libcrypt-passwdmd5-perl libdigest-sha-perl libencode-perl liberror-perl libfile-copy-recursive-perl libhtml-parser-perl libhtml-tree-perl libio-socket-ip-perl libio-socket-ssl-perl libjson-perl liblocale-maketext-perl liblocale-maketext-lexicon-perl liblocale-msgfmt-perl libwww-perl liburi-perl libversion-perl \\\n\t\tlibapache2-mod-fcgid \\\n\t\tperl-doc\n\nARG FOSWIKI_VERSION=2.0.3\n\nWORKDIR \/var\/lib\/foswiki\nRUN wget http:\/\/sourceforge.net\/projects\/foswiki\/files\/foswiki\/${FOSWIKI_VERSION}\/Foswiki-${FOSWIKI_VERSION}.tgz\nRUN\ttar zxv --strip-components=1 -f Foswiki-${FOSWIKI_VERSION}.tgz \nRUN chown -R www-data:www-data \/var\/lib\/foswiki\n\nADD foswiki.conf \/etc\/apache2\/sites-enabled\/\nRUN rm \/etc\/apache2\/sites-enabled\/000-default.conf\nRUN a2enmod rewrite\nRUN a2enmod cgi\n\nRUN .\/tools\/configure -save -noprompt -set {PubUrlPath}='\/pub' -set {ScriptUrlPath}='\/bin' -set {DefaultUrlHost}='' \\\n\t&& chown -R www-data:www-data \/var\/lib\/foswiki\/lib\/LocalSite.cfg\n\nRUN bash -c 'echo \"\/usr\/sbin\/apachectl start\" >> \/root\/.bashrc'\n\nEXPOSE 80\n\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":109,
        "end":120,
        "text":"FROM debian"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":121,
        "end":172,
        "text":"MAINTAINER Sven Dowideit <SvenDowideit@home.org.au>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":193,
        "end":698,
        "text":"RUN apt-get install -yq vim-tiny wget \\\\napache2 rcs \\\\nlibalgorithm-diff-perl libarchive-tar-perl libauthen-sasl-perl libcgi-pm-perl libcgi-session-perl libcrypt-passwdmd5-perl libdigest-sha-perl libencode-perl liberror-perl libfile-copy-recursive-perl libhtml-parser-perl libhtml-tree-perl libio-socket-ip-perl libio-socket-ssl-perl libjson-perl liblocale-maketext-perl liblocale-maketext-lexicon-perl liblocale-msgfmt-perl libwww-perl liburi-perl libversion-perl \\\\nlibapache2-mod-fcgid \\\\nperl-doc"
      },
      {
        "label":"apt-install-without-version",
        "start":193,
        "end":698,
        "text":"RUN apt-get install -yq vim-tiny wget \\\\napache2 rcs \\\\nlibalgorithm-diff-perl libarchive-tar-perl libauthen-sasl-perl libcgi-pm-perl libcgi-session-perl libcrypt-passwdmd5-perl libdigest-sha-perl libencode-perl liberror-perl libfile-copy-recursive-perl libhtml-parser-perl libhtml-tree-perl libio-socket-ip-perl libio-socket-ssl-perl libjson-perl liblocale-maketext-perl liblocale-maketext-lexicon-perl liblocale-msgfmt-perl libwww-perl liburi-perl libversion-perl \\\\nlibapache2-mod-fcgid \\\\nperl-doc"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":982,
        "end":1025,
        "text":"ADD foswiki.conf \/etc\/apache2\/sites-enabled"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"7483d9031ad1f787bd2c07734a8662880bcf2f55.dockerfile",
    "file_content":"FROM bbvainnotech\/ubuntu-base-os:latest\nMAINTAINER BBVA Innovation <eurocloud-oneteam.group@bbva.com>\n\nENV OPENSTACK_VERSION=mitaka \\\n    PBR=9.0.1 \\\n    CLIENT=1.22.0\n\n# Install requriments and the main packages\n\nRUN    curl -fSL https:\/\/github.com\/openstack\/keystone\/archive\/${PBR}.zip -o keystone-${PBR}.zip \\\n    && unzip keystone-${PBR}.zip \\\n    && cd keystone-${PBR} \\\n    && pip install -r requirements.txt \\\n    && PBR_VERSION=${PBR}  pip install . \\\n    && pip install uwsgi \\\n    && cp -r etc \/etc\/keystone \\\n    && mv \/etc\/keystone\/keystone.conf.sample \/etc\/keystone\/keystone.conf \\\n    && pip install git+https:\/\/github.com\/openstack\/python-openstackclient.git@stable\/${OPENSTACK_VERSION} \\\n    && pip install os-client-config==${CLIENT} \\\n    && cd - \\\n    && rm -rf keystone-${PBR}*\n\nADD     data \/\n\nRUN     chown root:root \/bootstrap\/*.sh && chmod a+x \/bootstrap\/*.sh\n\nENTRYPOINT  [\"\/bootstrap\/bootstrap.sh\"]\nEXPOSE      5000 35357\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":39,
        "text":"FROM bbvainnotech\/ubuntu-base-os:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":40,
        "end":101,
        "text":"MAINTAINER BBVA Innovation <eurocloud-oneteam.group@bbva.com>"
      },
      {
        "label":"use-cd-change-dir",
        "start":355,
        "end":372,
        "text":"cd keystone-${PBR"
      },
      {
        "label":"pip-install-without-version",
        "start":467,
        "end":486,
        "text":"pip install uwsgi \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":760,
        "end":766,
        "text":"cd - \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":799,
        "end":813,
        "text":"ADD data \/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"7883ea4e79c42fc301c1115d918ed26e033faa97.dockerfile",
    "file_content":"# pull ubuntu 18.04 from Docker repo\nFROM ubuntu:18.04\n\nMAINTAINER \"Zhicheng Geng <zhichenggeng@utexas.com>\"\n\n# install packages for madagascar\nRUN apt-get update && apt-get install -y \\\n        git \\\n        python2.7 \\\n        python-pip \\\n        openssh-client \\\n        tar \\\n        gzip \\\n        wget \\\n        vim \\\n        emacs \\\n        make \\\n        man \\\n && apt-get install -y \\\n        libblas-dev \\\n        liblapack-dev \\\n        swig \\\n        libxaw7-dev \\\n        freeglut3-dev \\\n        libnetpbm10-dev \\\n        libtiff5-dev \\\n        libgd-dev \\\n        libplplot-dev \\\n        libavcodec-dev \\\n        libcairo2-dev \\\n        libjpeg-dev \\\n        libopenmpi-dev \\\n        libfftw3-dev \\\n        libsuitesparse-dev \\\n && apt-get clean \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# install python packages\nRUN pip install numpy scipy\n\n# get code from sourceforge\nRUN  wget -O madagascar.tar.gz https:\/\/sourceforge.net\/projects\/rsf\/files\/latest\/download \\\n && tar -xzvf madagascar.tar.gz -C $HOME \\\n && rm madagascar.tar.gz\n\n# set environment variable for installing madagascar\nENV RSFROOT \/root\/RSFROOT\n\n# install madagascar\nRUN cd ~\/madagascar* \\\n && .\/configure \\\n && make install\n\n# install latex\nRUN apt-get update && apt-get install -y \\\n        texlive-latex-recommended \\\n\t\ttexlive-latex-extra \\\n\t\ttexlive-fonts-recommended \\\n\t\ttexlive-bibtex-extra \\\n\t\ttexlive-lang-english \\\n\t\ttexlive-generic-extra \\\n\t\tbiber \\\n        --no-install-recommends \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# install segtex\nRUN git clone https:\/\/github.com\/SEGTeX\/texmf $HOME\/texmf \\\n && texhash\n\nRUN echo 'export RSFROOT=\"$HOME\/RSFROOT\"'                   >> $HOME\/.bashrc \\\n && echo 'source $RSFROOT\/share\/madagascar\/etc\/env.sh'      >> $HOME\/.bashrc\n\nWORKDIR \/root\n\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":56,
        "end":108,
        "text":"MAINTAINER \"Zhicheng Geng <zhichenggeng@utexas.com>\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":166,
        "end":742,
        "text":"apt-get install -y \\\\ngit \\\\npython2.7 \\\\npython-pip \\\\nopenssh-client \\\\ntar \\\\ngzip \\\\nwget \\\\nvim \\\\nemacs \\\\nmake \\\\nman \\\\n&& apt-get install -y \\\\nlibblas-dev \\\\nliblapack-dev \\\\nswig \\\\nlibxaw7-dev \\\\nfreeglut3-dev \\\\nlibnetpbm10-dev \\\\nlibtiff5-dev \\\\nlibgd-dev \\\\nlibplplot-dev \\\\nlibavcodec-dev \\\\nlibcairo2-dev \\\\nlibjpeg-dev \\\\nlibopenmpi-dev \\\\nlibfftw3-dev \\\\nlibsuitesparse-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":166,
        "end":740,
        "text":"apt-get install -y \\\\ngit \\\\npython2.7 \\\\npython-pip \\\\nopenssh-client \\\\ntar \\\\ngzip \\\\nwget \\\\nvim \\\\nemacs \\\\nmake \\\\nman \\\\n&& apt-get install -y \\\\nlibblas-dev \\\\nliblapack-dev \\\\nswig \\\\nlibxaw7-dev \\\\nfreeglut3-dev \\\\nlibnetpbm10-dev \\\\nlibtiff5-dev \\\\nlibgd-dev \\\\nlibplplot-dev \\\\nlibavcodec-dev \\\\nlibcairo2-dev \\\\nlibjpeg-dev \\\\nlibopenmpi-dev \\\\nlibfftw3-dev \\\\nlibsuitesparse-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":822,
        "end":849,
        "text":"RUN pip install numpy scipy"
      },
      {
        "label":"use-cd-change-dir",
        "start":1141,
        "end":1160,
        "text":"RUN cd ~\/madagascar"
      },
      {
        "label":"apt-install-without-version",
        "start":1238,
        "end":1468,
        "text":"apt-get install -y \\\\ntexlive-latex-recommended \\\\ntexlive-latex-extra \\\\ntexlive-fonts-recommended \\\\ntexlive-bibtex-extra \\\\ntexlive-lang-english \\\\ntexlive-generic-extra \\\\nbiber \\\\n--no-install-recommends \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"791997d6d3a68d47944613e8cbd728bf98107a6c.dockerfile",
    "file_content":"# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io\/oss-fuzz-base\/base-builder\nMAINTAINER toppi.ale@gmail.com\nRUN apt-get update && apt-get install -y \\\n\tautoconf autoconf-archive \\\n\tautomake \\\n\tgengetopt \\\n\tgtk-doc-tools \\\n\tlibconfig-dev \\\n\tlibglib2.0-dev \\\n\tlibgnutls-dev \\\n\tlibini-config-dev \\\n\tlibjansson-dev \\\n\tlibnice-dev \\\n\tlibssl-dev \\\n\tlibtool \\\n\topenssl \\\n\tpkg-config\n\n# install libsrtp dep from source\nRUN git clone --single-branch --branch 2_2_x_throttle https:\/\/github.com\/cisco\/libsrtp.git libsrtp\nRUN cd libsrtp && .\/configure --enable-openssl && make -j$(nproc) shared_library && make install\n\n# fetch Janus code\nRUN git clone --single-branch --branch master https:\/\/github.com\/meetecho\/janus-gateway.git janus-gateway\n\nWORKDIR $SRC\nCOPY build.sh $SRC\/\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":699,
        "end":729,
        "text":"MAINTAINER toppi.ale@gmail.com"
      },
      {
        "label":"miss-specific-tags",
        "start":660,
        "end":698,
        "text":"FROM gcr.io\/oss-fuzz-base\/base-builder"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":752,
        "end":997,
        "text":"apt-get install -y \\\\nautoconf autoconf-archive \\\\nautomake \\\\ngengetopt \\\\ngtk-doc-tools \\\\nlibconfig-dev \\\\nlibglib2.0-dev \\\\nlibgnutls-dev \\\\nlibini-config-dev \\\\nlibjansson-dev \\\\nlibnice-dev \\\\nlibssl-dev \\\\nlibtool \\\\nopenssl \\\\npkg-config"
      },
      {
        "label":"apt-install-without-version",
        "start":752,
        "end":997,
        "text":"apt-get install -y \\\\nautoconf autoconf-archive \\\\nautomake \\\\ngengetopt \\\\ngtk-doc-tools \\\\nlibconfig-dev \\\\nlibglib2.0-dev \\\\nlibgnutls-dev \\\\nlibini-config-dev \\\\nlibjansson-dev \\\\nlibnice-dev \\\\nlibssl-dev \\\\nlibtool \\\\nopenssl \\\\npkg-config"
      },
      {
        "label":"use-cd-change-dir",
        "start":1132,
        "end":1146,
        "text":"RUN cd libsrtp"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"f0a2eb224105a91d0b88632160c0d74489de5ceb.dockerfile",
    "file_content":"FROM nvidia\/cuda:9.0-cudnn7-runtime\n\nMAINTAINER K-Lab Authors <service@kesci.com>\n\nUSER root\n\n# Configure environment\nENV CONDA_DIR \/opt\/conda\nENV PATH $CONDA_DIR\/bin:$PATH\nENV SHELL \/bin\/bash\nENV NB_USER kesci\nENV NB_UID 1000\nENV HOME \/home\/$NB_USER\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Install prerequisites\nRUN apt-get update && apt-get -yqq dist-upgrade && \\\n    # Basic utils\n    apt-get install -yqq --no-install-recommends \\\n    build-essential \\\n    cmake \\\n    bzip2 \\\n    ca-certificates \\\n    iptables \\\n    locales \\\n    sudo \\\n    wget \\\n    strace \\\n    # Install all OS dependencies for fully functional notebook server\n    build-essential \\\n    emacs \\\n    git \\\n    inkscape \\\n    jed \\\n    libsm6 \\\n    libxrender1 \\\n    pandoc \\\n    python-dev \\\n    texlive-fonts-extra \\\n    texlive-fonts-recommended \\\n    texlive-generic-recommended \\\n    texlive-latex-base \\\n    texlive-latex-extra \\\n    unzip \\\n    vim \\\n    && \\\n    # Setup locales\n    echo \"en_US.UTF-8 UTF-8\" > \/etc\/locale.gen && \\\n    locale-gen && \\\n    # Create kesci user with UID=1000 and in the 'users' group\n    useradd -m -s \/bin\/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p $CONDA_DIR && \\\n    chown $NB_USER $CONDA_DIR && \\\n    # Python pre-requisites\n    apt-get install -yqq \\\n    libfontconfig1 \\\n    libfreetype6-dev \\\n    libglib2.0-0 \\\n    libsm6 \\\n    libxext6 \\\n    libxrender1 \\\n    # Pillow dependencies\n    liblcms2-dev \\\n    libwebp-dev \\\n    zlib1g-dev \\\n    # R pre-requisites\n    ca-certificates \\\n    fonts-dejavu \\\n    gcc \\\n    gfortran \\\n    graphviz \\\n    libxml2-dev \\\n    xz-utils \\\n    libudunits2-dev \\\n    default-jdk && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    echo \"deb https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic main restricted universe multiverse\\n\\\ndeb-src https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic main restricted universe multiverse\\n\\\ndeb https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic-updates main restricted universe multiverse\\n\\\ndeb-src https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic-updates main restricted universe multiverse\\n\\\ndeb https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic-backports main restricted universe multiverse\\n\\\ndeb-src https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic-backports main restricted universe multiverse\\n\\\ndeb https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic-security main restricted universe multiverse\\n\\\ndeb-src https:\/\/mirrors.tuna.tsinghua.edu.cn\/ubuntu\/ bionic-security main restricted universe multiverse\\n\" > \/etc\/apt\/source.list\n\n# Setup kesci home directory and install conda\nRUN su -m -l $NB_USER -c '\\\n    mkdir \/home\/$NB_USER\/work && \\\n    mkdir \/home\/$NB_USER\/input && \\\n    mkdir \/home\/$NB_USER\/.jupyter && \\\n    echo \"cacert=\/etc\/ssl\/certs\/ca-certificates.crt\" > \/home\/$NB_USER\/.curlrc && \\\n    # Install conda as kesci\n    cd \/tmp && \\\n    mkdir -p $CONDA_DIR && \\\n    wget https:\/\/repo.continuum.io\/miniconda\/Miniconda3-4.4.10-Linux-x86_64.sh -O Miniconda3-latest-Linux-x86_64.sh && \\\n    sha256sum Miniconda3-latest-Linux-x86_64.sh && \\\n    \/bin\/bash Miniconda3-latest-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-latest-Linux-x86_64.sh && \\\n    $CONDA_DIR\/bin\/conda --version && \\\n    $CONDA_DIR\/bin\/conda config --set show_channel_urls yes && \\\n    $CONDA_DIR\/bin\/conda config --system --set auto_update_conda false && \\\n    $CONDA_DIR\/bin\/conda clean -tipsy \\\n    ' && \\\n    echo \"jpeg 9*\" >> \/opt\/conda\/conda-meta\/pinned\n\nUSER root\n\nRUN cd \/tmp && \\\n    wget https:\/\/bootstrap.pypa.io\/get-pip.py && \\\n    python2 get-pip.py && \\\n    rm get-pip.py && \\\n    python2 -m pip install ipykernel && \\\n    python2 -m ipykernel install && \\\n    chown $NB_USER \/usr\/local\/bin && \\\n    chown $NB_USER \/usr\/local\/share && \\\n    chown -R $NB_USER \/usr\/local\/lib\/python2.7\n\n# Julia dependencies\n# install Julia packages in \/opt\/julia instead of $HOME\nENV JULIA_DEPOT_PATH=\/opt\/julia\nENV JULIA_PKGDIR=\/opt\/julia\nENV JULIA_VERSION=1.0.0\n\nRUN mkdir \/opt\/julia-${JULIA_VERSION} && \\\n    cd \/tmp && \\\n    wget -q https:\/\/julialang-s3.julialang.org\/bin\/linux\/x64\/`echo ${JULIA_VERSION} | cut -d. -f 1,2`\/julia-${JULIA_VERSION}-linux-x86_64.tar.gz && \\\n    echo \"bea4570d7358016d8ed29d2c15787dbefaea3e746c570763e7ad6040f17831f3 *julia-${JULIA_VERSION}-linux-x86_64.tar.gz\" | sha256sum -c - && \\\n    tar xzf julia-${JULIA_VERSION}-linux-x86_64.tar.gz -C \/opt\/julia-${JULIA_VERSION} --strip-components=1 && \\\n    rm \/tmp\/julia-${JULIA_VERSION}-linux-x86_64.tar.gz\nRUN ln -fs \/opt\/julia-*\/bin\/julia \/usr\/local\/bin\/julia\n\n# Show Julia where conda libraries are \\\nRUN mkdir \/etc\/julia && \\\n    echo \"push!(Libdl.DL_LOAD_PATH, \\\"$CONDA_DIR\/lib\\\")\" >> \/etc\/julia\/juliarc.jl && \\\n    # Create JULIA_PKGDIR \\\n    mkdir $JULIA_PKGDIR && \\\n    chown $NB_USER $JULIA_PKGDIR\n\nUSER $NB_USER\n\nRUN echo \"Install R and R basic packages\" && \\\n    conda config --add channels conda-forge && \\\n    conda install -y \\\n    'r-essentials=3.5.1' && \\\n    conda config --add channels ataenzer && \\\n    conda config --add channels jsignell && \\\n    conda config --add channels pjones && \\\n    conda config --add channels omgarcia && \\\n    conda config --add channels cgat && \\\n    conda config --add channels sebp && \\\n    conda config --add channels https:\/\/mirrors.tuna.tsinghua.edu.cn\/anaconda\/cloud\/bioconda\/ && \\\n    conda config --add channels https:\/\/mirrors.tuna.tsinghua.edu.cn\/anaconda\/cloud\/conda-forge\/ && \\\n    conda install -y \\\n    'r-tm' \\\n    'r-rcolorbrewer' \\\n    'r-nnet' \\\n    'r-nlp' \\\n    'r-ggmap' \\\n    'r-chron' \\\n    'r-rocr' \\\n    'r-arules' \\\n    && \\\n    echo 'options(\"repos\" = c(CRAN=\"http:\/\/cran.us.r-project.org\"))' > ~\/.Rprofile && \\\n    R -e \"\\\n    install.packages('choroplethr'); \\\n    install.packages('choroplethrMaps'); \\\n    install.packages('Metrics'); \\\n    install.packages('DescTools'); \\\n    install.packages('tools'); \\\n    install.packages('grid'); \\\n    install.packages('WDI'); \\\n    install.packages('wordcloud'); \\\n    install.packages('wordcloud2'); \\\n    install.packages('xgboost'); \\\n    install.packages('plotly');\" && \\\n    echo 'options(\"repos\" = c(CRAN=\"https:\/\/mirrors.tuna.tsinghua.edu.cn\/CRAN\/\"))' > ~\/.Rprofile && \\\n    conda clean -tipsy\n\n# Add Julia packages. Only add HDF5 if this is not a test-only build since\n# it takes roughly half the entire build time of all of the images on Travis\n# to add this one package and often causes Travis to timeout.\n#\n# Install IJulia as jovyan and then move the kernelspec out\n# to the system share location. Avoids problems with runtime UID change not\n# taking effect properly on the .local folder in the jovyan home dir.\nRUN julia -e 'import Pkg; Pkg.update()' && \\\n    (test $TEST_ONLY_BUILD || julia -e 'import Pkg; Pkg.add(\"HDF5\")') && \\\n    julia -e 'import Pkg; Pkg.add(\"Gadfly\")' && \\\n    julia -e 'import Pkg; Pkg.add(\"RDatasets\")' && \\\n    julia -e 'import Pkg; Pkg.add(\"IJulia\")' && \\\n    # Precompile Julia packages \\\n    julia -e 'using IJulia' && \\\n    # move kernelspec out of home \\\n    mkdir -p $CONDA_DIR\/share\/jupyter\/kernels\/ && \\\n    mv $HOME\/.local\/share\/jupyter\/kernels\/julia* $CONDA_DIR\/share\/jupyter\/kernels\/ && \\\n    chmod -R go+rx $CONDA_DIR\/share\/jupyter && \\\n    rm -rf $HOME\/.local\n\nUSER root\n\n# Make sure \/usr\/local\/ and conda directories belong to user.\nRUN chown $NB_USER \/usr\/local\/bin && \\\n    chown $NB_USER \/usr\/local\/share && \\\n    chown -R $NB_USER \/usr\/local\/lib && \\\n    chown -R $NB_USER \/opt\/conda\/lib\/python3.6\/site-packages\/ && \\\n    chown -R $NB_USER \/usr\/local\/lib\/python2.7\/dist-packages\/ && \\\n    mkdir -p \/home\/$NB_USER\/.cache && chown $NB_USER -R \/home\/$NB_USER\/.cache && \\\n    rm -rf \/root\/.cache\/pip\/* && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* && \\\n    rm -rf \/home\/$NB_USER\/.cache\/matplotlib\/ && \\\n    # Allow kesci run sudo apt-get\n    echo \"kesci ALL=NOPASSWD: \/usr\/bin\/apt-get\" > \/etc\/sudoers.d\/kesci && chmod 0400 \/etc\/sudoers.d\/kesci\n\nWORKDIR \/home\/$NB_USER\/work\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":37,
        "end":81,
        "text":"MAINTAINER K-Lab Authors <service@kesci.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":420,
        "end":964,
        "text":"apt-get install -yqq --no-install-recommends \\\\nbuild-essential \\\\ncmake \\\\nbzip2 \\\\nca-certificates \\\\niptables \\\\nlocales \\\\nsudo \\\\nwget \\\\nstrace \\\\n# Install all OS dependencies for fully functional notebook server\\nbuild-essential \\\\nemacs \\\\ngit \\\\ninkscape \\\\njed \\\\nlibsm6 \\\\nlibxrender1 \\\\npandoc \\\\npython-dev \\\\ntexlive-fonts-extra \\\\ntexlive-fonts-recommended \\\\ntexlive-generic-recommended \\\\ntexlive-latex-base \\\\ntexlive-latex-extra \\\\nunzip \\\\nvim \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1281,
        "end":1651,
        "text":"apt-get install -yqq \\\\nlibfontconfig1 \\\\nlibfreetype6-dev \\\\nlibglib2.0-0 \\\\nlibsm6 \\\\nlibxext6 \\\\nlibxrender1 \\\\n# Pillow dependencies\\nliblcms2-dev \\\\nlibwebp-dev \\\\nzlib1g-dev \\\\n# R pre-requisites\\nca-certificates \\\\nfonts-dejavu \\\\ngcc \\\\ngfortran \\\\ngraphviz \\\\nlibxml2-dev \\\\nxz-utils \\\\nlibudunits2-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1281,
        "end":1649,
        "text":"apt-get install -yqq \\\\nlibfontconfig1 \\\\nlibfreetype6-dev \\\\nlibglib2.0-0 \\\\nlibsm6 \\\\nlibxext6 \\\\nlibxrender1 \\\\n# Pillow dependencies\\nliblcms2-dev \\\\nlibwebp-dev \\\\nzlib1g-dev \\\\n# R pre-requisites\\nca-certificates \\\\nfonts-dejavu \\\\ngcc \\\\ngfortran \\\\ngraphviz \\\\nlibxml2-dev \\\\nxz-utils \\\\nlibudunits2-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":2898,
        "end":2905,
        "text":"cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":3528,
        "end":3539,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":4064,
        "end":4071,
        "text":"cd \/tmp"
      },
      {
        "label":"pip-install-without-version",
        "start":3651,
        "end":3726,
        "text":"python2 -m pip install ipykernel && \\\\npython2 -m ipykernel install && \\"
      },
      {
        "label":"root-privilege-user",
        "start":7265,
        "end":7274,
        "text":"USER root"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"f208b84895e06429658dc04168a9f9b1f819d6e3.dockerfile",
    "file_content":"FROM ocaml\/opam:debian-stable_ocaml-4.03.0  \nMAINTAINER canopy  \nENV OPAMYES 1  \nRUN sudo apt-get update  \nRUN sudo apt-get -yy install npm  \nRUN sudo ln -s `which nodejs` \/usr\/bin\/node  \nRUN sudo npm install -g less browserify  \nRUN cd \/home\/opam\/opam-repository && git pull && opam update  \nRUN opam remote add mirage-dev git:\/\/github.com\/mirage\/mirage-dev.git  \nRUN opam update -u  \nADD package.json README.md config.ml \/src\/  \nWORKDIR \/src  \nADD tls \/src\/tls  \nRUN sudo chown -R opam:opam \/src; sudo chmod -R 700 \/src  \nENV TMP \/tmp  \nRUN opam pin add git git:\/\/github.com\/avsm\/ocaml-git#dirty-warning  \nRUN opam install -y -j2 mirage  \nRUN opam config exec \\-- mirage configure --no-assets-compilation  \nCOPY . \/src  \nADD assets \/src\/assets  \nRUN sudo chown -R opam:opam \/src; sudo chmod -R 700 \/src  \nRUN opam config exec \\-- mirage configure --no-opam --no-depext  \nRUN opam config exec \\-- make  \nEXPOSE 8080  \nENTRYPOINT [\"opam\", \"config\", \"exec\", \"--\", \".\/mir-canopy\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":45,
        "end":62,
        "text":"MAINTAINER canopy"
      },
      {
        "label":"use-sudo-run",
        "start":81,
        "end":227,
        "text":"RUN sudo apt-get update\\nRUN sudo apt-get -yy install npm\\nRUN sudo ln -s `which nodejs` \/usr\/bin\/node\\nRUN sudo npm install -g less browserify"
      },
      {
        "label":"use-cd-change-dir",
        "start":230,
        "end":263,
        "text":"RUN cd \/home\/opam\/opam-repository"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":386,
        "end":428,
        "text":"ADD package.json README.md config.ml \/src\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":446,
        "end":462,
        "text":"ADD tls \/src\/tls"
      },
      {
        "label":"use-sudo-run",
        "start":465,
        "end":497,
        "text":"RUN sudo chown -R opam:opam \/src"
      },
      {
        "label":"use-sudo-run",
        "start":499,
        "end":521,
        "text":"sudo chmod -R 700 \/src"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":723,
        "end":745,
        "text":"ADD assets \/src\/assets"
      },
      {
        "label":"use-sudo-run",
        "start":748,
        "end":804,
        "text":"RUN sudo chown -R opam:opam \/src; sudo chmod -R 700 \/src"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":116,
        "end":139,
        "text":"apt-get -yy install npm"
      },
      {
        "label":"apt-install-without-version",
        "start":116,
        "end":139,
        "text":"apt-get -yy install npm"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"f4a20bf8d57f8b9d44dbbbd3f8961e60c5cdeb85.dockerfile",
    "file_content":"###########################################################\n# Gargamelle WEB\n###########################################################\n#Build an image starting with debian:stretch image\n# wich contains all the source code of the app\nFROM debian:stretch\nMAINTAINER ISCPIF <gargantext@iscpif.fr>\n\nUSER root\n\n\n### Update and install base dependencies\nRUN echo \"############ DEBIAN LIBS ###############\"\nRUN apt-get update &&                                     \\\n    apt-get install -y                                     \\\n    apt-utils ca-certificates locales                       \\\n    sudo aptitude gcc g++ wget git vim                       \\\n    build-essential make                                      \\\n    curl                                                       \n#    postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6 \\\n#    postgresql-server-dev-9.6 libpq-dev libxml2                  \\\n#    postgresql-9.6 postgresql-client-9.6 postgresql-contrib-9.6\n\n# Install Stack\n\n### Configure timezone and locale\nRUN echo \"###########  LOCALES & TZ #################\"\nRUN echo \"Europe\/Paris\" > \/etc\/timezone\nENV TZ \"Europe\/Paris\"\n\nRUN sed -i -e 's\/# en_GB.UTF-8 UTF-8\/en_GB.UTF-8 UTF-8\/' \/etc\/locale.gen && \\\n    sed -i -e 's\/# fr_FR.UTF-8 UTF-8\/fr_FR.UTF-8 UTF-8\/' \/etc\/locale.gen &&  \\\n    dpkg-reconfigure --frontend=noninteractive locales                   &&   \\\n    echo 'LANG=\"fr_FR.UTF-8\"' > \/etc\/default\/locale\nENV LANG fr_FR.UTF-8\nENV LANGUAGE fr_FR.UTF-8\nENV LC_ALL fr_FR.UTF-8\n\n\n### Install main dependencies and python packages based on Debian distrib\nRUN echo \"############# PYTHON DEPENDENCIES ###############\"\nRUN apt-get update && apt-get install -y       \\\n        libxml2-dev xml-core libgfortran-6-dev  \\\n        libpq-dev                                \\\n        python3.5                                 \\\n        python3-dev                                \\\n        # for numpy, pandas and numpyperf           \\\n        python3-six python3-numpy python3-setuptools \\\n        python3-numexpr                               \\\n        # python dependencies                          \\\n        python3-pip                                     \\\n        # for lxml\n        libxml2-dev libxslt-dev libxslt1-dev zlib1g-dev\n\n\n# UPDATE AND CLEAN\nRUN apt-get update && apt-get autoclean \\ \n    && rm -rf \/var\/lib\/apt\/lists\/*\n#NB: removing \/var\/lib will avoid to significantly fill up your \/var\/ folder on your native system\n\n########################################################################\n### PYTHON ENVIRONNEMENT (as ROOT)\n########################################################################\n\nRUN adduser --disabled-password --gecos \"\" notebooks\n\nRUN pip3 install virtualenv\nRUN virtualenv \/env_3-5\nRUN echo 'alias venv=\"source \/env_3-5\/bin\/activate\"' >> ~\/.bashrc\n# CONFIG FILES\nADD requirements.txt \/\n#ADD psql_configure.sh \/\nADD django_configure.sh \/\n\nRUN . \/env_3-5\/bin\/activate && pip3 install -r requirements.txt                         && \\\n    pip3  install git+https:\/\/github.com\/zzzeek\/sqlalchemy.git@rel_1_1                  && \\\n    python3 -m nltk.downloader averaged_perceptron_tagger -d \/usr\/local\/share\/nltk_data\n\n#RUN .\/psql_configure.sh\n#RUN .\/django_configure.sh\nRUN chown notebooks:notebooks -R \/env_3-5\n\n########################################################################\n### POSTGRESQL DATA (as ROOT)\n########################################################################\n\n#RUN sed -iP \"s%^data_directory.*%data_directory = \\'\\\/srv\\\/gargandata\\'%\" \/etc\/postgresql\/9.5\/main\/postgresql.conf\n#RUN echo \"host all  all    0.0.0.0\/0  md5\" >> \/etc\/postgresql\/9.5\/main\/pg_hba.conf\n#RUN echo \"listen_addresses='*'\" >> \/etc\/postgresql\/9.5\/main\/postgresql.conf\n\nEXPOSE 5432 8899\n\nVOLUME [\"\/srv\/\",\"\/home\/notebooks\/\"]\n\n\n########################################################################\n### Notebook IHaskell and IPYTHON ENVIRONNEMENT\n########################################################################\n\nRUN apt-get update && apt-get install -y \\\n        libtinfo-dev                      \\\n        libzmq3-dev                        \\\n        libcairo2-dev                       \\\n        libpango1.0-dev                      \\\n        libmagic-dev                          \\\n        libblas-dev                            \\\n        liblapack-dev\n\n#USER notebooks\n#\n#RUN cd  \/home\/notebooks                              \\\n#    &&  curl -sSL https:\/\/get.haskellstack.org\/ | sh  \\\n#    &&  stack setup                                    \\\n#    &&  git clone https:\/\/github.com\/gibiansky\/IHaskell \\\n#    &&  . \/env_3-5\/bin\/activate                          \\\n#    &&  cd IHaskell                                       \\\n#    &&  stack install gtk2hs-buildtools                    \\\n#    &&  stack install --fast                                \\\n#    &&  \/root\/.local\/bin\/ihaskell install --stack\n#\n\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":255,
        "end":295,
        "text":"MAINTAINER ISCPIF <gargantext@iscpif.fr>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":466,
        "end":720,
        "text":"apt-get install -y \\\\napt-utils ca-certificates locales \\\\nsudo aptitude gcc g++ wget git vim \\\\nbuild-essential make \\\\ncurl"
      },
      {
        "label":"apt-install-without-version",
        "start":466,
        "end":720,
        "text":"apt-get install -y \\\\napt-utils ca-certificates locales \\\\nsudo aptitude gcc g++ wget git vim \\\\nbuild-essential make \\\\ncurl"
      },
      {
        "label":"apt-install-without-version",
        "start":1663,
        "end":1895,
        "text":"apt-get install -y \\\\nlibxml2-dev xml-core libgfortran-6-dev \\\\nlibpq-dev \\\\npython3.5 \\\\npython3-dev \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1663,
        "end":1895,
        "text":"apt-get install -y \\\\nlibxml2-dev xml-core libgfortran-6-dev \\\\nlibpq-dev \\\\npython3.5 \\\\npython3-dev \\"
      },
      {
        "label":"pip-install-without-version",
        "start":2686,
        "end":2713,
        "text":"RUN pip3 install virtualenv"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2819,
        "end":2841,
        "text":"ADD requirements.txt \/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2867,
        "end":2892,
        "text":"ADD django_configure.sh \/"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3992,
        "end":4313,
        "text":"apt-get install -y \\\\nlibtinfo-dev \\\\nlibzmq3-dev \\\\nlibcairo2-dev \\\\nlibpango1.0-dev \\\\nlibmagic-dev \\\\nlibblas-dev \\\\nliblapack-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":3992,
        "end":4313,
        "text":"apt-get install -y \\\\nlibtinfo-dev \\\\nlibzmq3-dev \\\\nlibcairo2-dev \\\\nlibpango1.0-dev \\\\nlibmagic-dev \\\\nlibblas-dev \\\\nliblapack-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"f53df77660bb6f6b9f4ad0beff573fc24a5ff0d3.dockerfile",
    "file_content":"# to build:\n# docker build -t=\"pgbovine\/opt-cpp-backend:v1\" .\n#\n# to test:\n# docker run -t -i --rm --user=netuser --net=none --cap-drop all pgbovine\/opt-cpp-backend:v1 bash\n#\n# remember --rm or else stale old containers will be left around!\n# use \"docker ps -a\" to see all containers\n\n# don't use 'latest' tag since that might change\nFROM ubuntu:14.04.1\nMAINTAINER Philip Guo <philip@pgbovine.net>\n\n# if apt-get doesn't work, then follow these instructions:\n# http:\/\/stackoverflow.com\/questions\/24991136\/docker-build-could-not-resolve-archive-ubuntu-com-apt-get-fails-to-install-a\n# Uncomment the following line in \/etc\/default\/docker DOCKER_OPTS=\"--dns 8.8.8.8 --dns 8.8.4.4\"\n# Restart the Docker service sudo service docker restart\n#\n# to get gcc and g++, Valgrind needs libc6-dbg apparently\nRUN apt-get update && apt-get install -y \\\n  build-essential \\\n  autotools-dev \\\n  automake \\\n  libc6-dbg \\\n  python\n\nRUN mkdir \/tmp\/opt-cpp-backend\nADD . \/tmp\/opt-cpp-backend\n\n# we need to compile Valgrind from scratch within the container (hence\n# 'make clean' first) to make it work from within the container, ergh\nRUN cd \/tmp\/opt-cpp-backend\/valgrind-3.11.0 && make clean && .\/autogen.sh && .\/configure --prefix=`pwd`\/inst && make && make install\n\nRUN useradd netuser\n\nRUN cd \/tmp\/ && find . | xargs chown netuser\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":354,
        "end":397,
        "text":"MAINTAINER Philip Guo <philip@pgbovine.net>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":816,
        "end":910,
        "text":"apt-get install -y \\\\nbuild-essential \\\\nautotools-dev \\\\nautomake \\\\nlibc6-dbg \\\\npython"
      },
      {
        "label":"apt-install-without-version",
        "start":816,
        "end":910,
        "text":"apt-get install -y \\\\nbuild-essential \\\\nautotools-dev \\\\nautomake \\\\nlibc6-dbg \\\\npython"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":943,
        "end":969,
        "text":"ADD . \/tmp\/opt-cpp-backend"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":1267,
        "end":1279,
        "text":"RUN cd \/tmp\/"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"dbd02e3121a0441a2e76a8ff0f0c42b1bcc096a3.dockerfile",
    "file_content":"# docker build -t opencog\/ros-indigo-zenorsm .\n# xhost +\n# docker run --rm --privileged -i -v \/dev\/ttyACM0:\/dev\/ttyACM0 -v \/tmp\/.X11-unix\/X0:\/tmp\/.X11-unix\/X0 -v \/dev\/dri:\/dev\/dri -v \/dev\/shm:\/dev\/shm -e DISPLAY=:0.0 -p 33433:33433\/udp -t opencog\/ros-indigo-zenorsm \n# Note: port 33433=faceshift, \/dev\/ttyACM0=pololu, \/dev\/dri=gpu, \/dev\/shm=gpu\n# ToDo: add MORSE robot simulator\n#       replace faceshift with OpenCV FaceRecognizer, etc.\n\nFROM opencog\/ros-indigo-dev\nMAINTAINER Mandeep Singh Bhatia \"mandeep.singh.bhatia@gmail.com\"\nMAINTAINER David Hart \"dhart@opencog.org\"\n\nRUN apt-get -y update\nRUN apt-get -y install blender\n\nRUN apt-get -y install python3-yaml python3-pip\nRUN pip3 install rospkg catkin_pkg\n\nRUN echo source \/catkin_ws\/devel\/setup.bash >> \/.bash_profile && \\\n    echo -e \"\\e[1;34m[$SELF_NAME] catkin devel setup\\.bash sourced\\e[0m\"\n\n# Install ITFTalk and prerequisites\nWORKDIR \/catkin_ws\/src\nRUN apt-get -y install mplayer python-pycurl libcurl3\nRUN apt-get install libavbin-dev libavbin0\n\nRUN git clone https:\/\/github.com\/geni-lab\/ITFTalk\n\n# Install ITFListen and prerequisites\nWORKDIR \/catkin_ws\/src\nRUN apt-get -y install sox python-simplejson\nRUN git clone https:\/\/github.com\/geni-lab\/ITFListen\n\n# Install ITFParrot to test ITFListen -> ITFTalk\nWORKDIR \/catkin_ws\/src\nRUN git clone https:\/\/github.com\/geni-lab\/ITFParrot\n\n# I figured it'd be undesirable to auto-start the aprrot, so\n# to Run ITFParrot, go to \/catkin_ws and then run:\n# source devel\/setup.bash\n# rosrun itf_parrot itf_parrot.py\n\n# Install openEAR prerequisites\nRUN apt-get -y install autoconf libtool g++ libportaudio2\n\n# Download ROS-enabled version of openEAR\n# WORKDIR \/\n# Line below is needed otherwise it keeps saying ros_open_ear exists\n# and is not empty\n# RUN rm -rf \/ros_open_ear\n# RUN git clone https:\/\/github.com\/Alex-van-der-Peet\/ros_open_ear\n\n# Unpack, make and install portaudio (openEAR prerequisite)\n# WORKDIR \/ros_open_ear\/thirdparty\n# RUN tar -xvf portaudio.tgz\n# WORKDIR \/ros_open_ear\/thirdparty\/portaudio\n# RUN .\/configure\n# RUN make\n# RUN make install\n\n# Configure, build and install the modified version of openEAR\n# WORKDIR \/ros_open_ear\n# Double run below is on purpose\n# ENV C_INCLUDE_PATH \/opt\/ros\/indigo\/include\/ros:\/opt\/ros\/indigo\/include\n# RUN .\/autogen.sh\n# RUN .\/autogen.sh\n# RUN .\/configure\n# RUN apt-get install libc6-dev build-essential\n# RUN echo \"C_INCLUDEPATH=$C_INCLUDE_PATH\"\n# RUN make\n# RUN make install\n\nWORKDIR \/catkin_ws\/src\nRUN cp \/opt\/ros\/indigo\/setup.sh \/etc\/profile.d\/ros_indigo.sh\nENV PYTHONPATH \/opt\/ros\/indigo\/lib\/python2.7\/dist-packages\nRUN \/usr\/bin\/python3 \/opt\/ros\/indigo\/bin\/catkin_init_workspace\n\nRUN git clone https:\/\/github.com\/hansonrobotics\/robo_blender\nRUN git clone https:\/\/github.com\/yantrabuddhi\/ros_pololu_servo\n# RUN git clone https:\/\/github.com\/yantrabuddhi\/ros_nmpt_saliency\n# Mandeep's saliency tracker above doesn't work, so I'm using the one I made\n# which is stored in Jamie's repo - Alex\nRUN git clone https:\/\/github.com\/jdddog\/ros_nmpt_saliency\nRUN git clone https:\/\/github.com\/yantrabuddhi\/ros_faceshift\nRUN git clone https:\/\/github.com\/yantrabuddhi\/simple_face_tracker\n#RUN git clone https:\/\/github.com\/OctoMap\/octomap\n#RUN git clone https:\/\/github.com\/Alex-van-der-Peet\/ITFOpenEar\n\nWORKDIR \/catkin_ws\nRUN bash -l -c \"\/usr\/bin\/python3 \/opt\/ros\/indigo\/bin\/catkin_make\"\n\nWORKDIR \/catkin_ws\/src\/robo_blender\/src\n\nENV STARTSCRIPT \"\\\necho evaluating startup script... &&\\\nsource \/catkin_ws\/devel\/setup.bash &&\\\ntmux new-session -d 'echo -e \\\"\\e[1;34mroscore\\e[0m\\\" ; roscore' &&\\\ntmux set -g set-remain-on-exit on &&\\\ntmux set-option -g set-remain-on-exit on &&\\\ntmux bind-key R respawn-window &&\\\ntmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_pololu_servo\\e[0m\\\" ;\\\n  rosrun ros_pololu_servo ros_pololu_servo_node' &&\\\ntmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mblender robo.blend\\e[0m\\\" ;\\\n  sleep 4 && blender robo.blend' &&\\\ntmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mbash shell\\e[0m\\\" ;\\\n  bash -l -i' &&\\\ntmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_talk\\e[0m\\\" ;\\\n  rosrun itf_talk itf_talk.py' &&\\\ntmux split-window -d -v -p 25 'echo -e \\\"\\e[1;34mros_itf_listen\\e[0m\\\" ;\\\n  rosrun itf_listen itf_listen.py' &&\\\ntmux select-layout even-vertical &&\\\ntmux attach \\\n\"\n\nCMD \/bin\/bash -l -c \"eval $STARTSCRIPT\"\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":439,
        "end":466,
        "text":"FROM opencog\/ros-indigo-dev"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":467,
        "end":573,
        "text":"MAINTAINER Mandeep Singh Bhatia \"mandeep.singh.bhatia@gmail.com\"\\nMAINTAINER David Hart \"dhart@opencog.org\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":597,
        "end":627,
        "text":"RUN apt-get -y install blender"
      },
      {
        "label":"apt-install-without-version",
        "start":597,
        "end":627,
        "text":"RUN apt-get -y install blender"
      },
      {
        "label":"pip-install-without-version",
        "start":677,
        "end":711,
        "text":"RUN pip3 install rospkg catkin_pkg"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":629,
        "end":676,
        "text":"RUN apt-get -y install python3-yaml python3-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":629,
        "end":676,
        "text":"RUN apt-get -y install python3-yaml python3-pip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":913,
        "end":1009,
        "text":"RUN apt-get -y install mplayer python-pycurl libcurl3\\nRUN apt-get install libavbin-dev libavbin0"
      },
      {
        "label":"apt-install-without-version",
        "start":913,
        "end":1009,
        "text":"RUN apt-get -y install mplayer python-pycurl libcurl3\\nRUN apt-get install libavbin-dev libavbin0"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1123,
        "end":1167,
        "text":"RUN apt-get -y install sox python-simplejson"
      },
      {
        "label":"apt-install-without-version",
        "start":1123,
        "end":1167,
        "text":"RUN apt-get -y install sox python-simplejson"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1551,
        "end":1608,
        "text":"RUN apt-get -y install autoconf libtool g++ libportaudio2"
      },
      {
        "label":"apt-install-without-version",
        "start":1551,
        "end":1608,
        "text":"RUN apt-get -y install autoconf libtool g++ libportaudio2"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"e632c8b5a8f53b801b7bd05bc59cb0d1af04066c.dockerfile",
    "file_content":"#\n#  From this base-image \/ starting-point\n#\nFROM debian:testing\n\n#\n#  Authorship\n#\nMAINTAINER ss34@sanger.ac.uk\n\n#\n# Pull in packages from testing\n#\nRUN apt-get update -qq\n\n#\n# Install dependencies\n# we need blast2 for ABACAS2 as it does not use BLAST+ yet\n#\nRUN apt-get install build-essential hmmer lua5.1 ncbi-blast+ blast2 snap \\\n                    unzip mummer infernal exonerate mafft fasttree \\\n                    circos libsvg-perl libgd-svg-perl python-setuptools \\\n                    libc6-i386 lib32stdc++6 lib32gcc1 netcat genometools \\\n                    last-align libboost-iostreams-dev libgslcblas0 libgsl-dev \\\n                    libcolamd2 liblpsolve55-dev libstdc++6 aragorn tantan \\\n                    libstorable-perl libbio-perl-perl libsqlite3-dev \\\n                    --yes\nRUN ln -fs \/usr\/bin\/fasttree \/usr\/bin\/FastTree\nRUN ln -s \/usr\/lib\/snap\/snap \/usr\/local\/bin\/snap\n\n# \n# Install AUGUSTUS\n# \nRUN apt-get install augustus --yes\n\n\n# \n# Install GenomeTools\n# \nRUN apt-get install genometools --yes\n\n\n#\n# Install and configure OrthoMCL\n#\nADD http:\/\/www.orthomcl.org\/common\/downloads\/software\/unsupported\/v1.4\/ORTHOMCL_V1.4_mcl-02-063.tar \/opt\/omcl.tar\nRUN cd \/opt && \\\n    tar -xvf omcl.tar && \\\n    tar -xzvf mcl-02-063.tar.gz && \\\n    rm -f omcl.tar mcl-02-063.tar.gz && \\\n    cd \/opt\/mcl-* && \\\n    .\/configure && \\\n    make -j3 && \\\n    make install && \\\n    cd \/ && \\\n    rm -rf \/opt\/mcl*\nRUN sed -i 's\/our .PATH_TO_ORTHOMCL.*=.*\/our $PATH_TO_ORTHOMCL = \".\\\/\";\/' \/opt\/ORTHOMCLV1.4\/orthomcl_module.pm && \\\n    sed -i 's\/our .BLASTALL.*=.*\/our $BLASTALL = \"\\\/usr\\\/bin\\\/blastall\";\/' \/opt\/ORTHOMCLV1.4\/orthomcl_module.pm && \\\n    sed -i 's\/our .FORMATDB.*=.*\/our $FORMATDB = \"\\\/usr\\\/bin\\\/formatdb\";\/' \/opt\/ORTHOMCLV1.4\/orthomcl_module.pm && \\\n    sed -i 's\/our .MCL.*=.*\/our $MCL = \"\\\/usr\\\/local\\\/bin\\\/mcl\";\/' \/opt\/ORTHOMCLV1.4\/orthomcl_module.pm\n\n#\n# Install Gblocks\n#\nADD http:\/\/molevol.cmima.csic.es\/castresana\/Gblocks\/Gblocks_Linux64_0.91b.tar.Z \/opt\/gblocks64.tar.Z\nRUN cd \/opt && \\\n    tar -xzvf gblocks64.tar.Z && \\\n    rm -rf gblocks64.tar.Z && \\\n    cp Gblocks_0.91b\/Gblocks \/usr\/bin\/Gblocks && \\\n    chmod 755 \/usr\/bin\/Gblocks\n\n#\n# get GO OBO file\n#\nADD http:\/\/geneontology.org\/ontology\/go.obo \/opt\/go.obo\n\n#\n# get Pfam pHMMs\n#\nRUN mkdir -p \/opt\/pfam\nADD http:\/\/ftp.ebi.ac.uk\/pub\/databases\/Pfam\/current_release\/Pfam-A.hmm.gz \/opt\/pfam\/Pfam-A.hmm.gz\nRUN cd \/opt\/pfam && \\\n    gunzip Pfam-A.hmm.gz && \\\n    hmmpress Pfam-A.hmm && \\\n    rm -f Pfam-A.hmm\n\n# \n# copy data dir\n#\nRUN mkdir -p \/opt\/data\nADD .\/data \/opt\/data\n\n#\n# install RATT (keep up to date from build directory)\n#\nADD .\/RATT \/opt\/RATT\n\n#\n# install ABACAS (keep up to date from build directory)\n#\nADD .\/ABACAS2 \/opt\/ABACAS2\n\nENV AUGUSTUS_CONFIG_PATH \/usr\/share\/augustus\/config\nENV RATT_HOME \/opt\/RATT\nENV GT_RETAINIDS yes\nENV PERL5LIB \/opt\/ORTHOMCLV1.4\/:\/opt\/RATT\/:\/opt\/ABACAS2\/:$PERL5LIB\nENV PATH \/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin:\/usr\/share\/augustus\/bin:\/usr\/share\/augustus\/scripts:\/opt\/ORTHOMCLV1.4:\/opt\/RATT:\/opt\/ABACAS2:$PATH\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":84,
        "end":112,
        "text":"MAINTAINER ss34@sanger.ac.uk"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":260,
        "end":805,
        "text":"RUN apt-get install build-essential hmmer lua5.1 ncbi-blast+ blast2 snap \\\\nunzip mummer infernal exonerate mafft fasttree \\\\ncircos libsvg-perl libgd-svg-perl python-setuptools \\\\nlibc6-i386 lib32stdc++6 lib32gcc1 netcat genometools \\\\nlast-align libboost-iostreams-dev libgslcblas0 libgsl-dev \\\\nlibcolamd2 liblpsolve55-dev libstdc++6 aragorn tantan \\\\nlibstorable-perl libbio-perl-perl libsqlite3-dev \\\\n--yes"
      },
      {
        "label":"apt-install-without-version",
        "start":260,
        "end":805,
        "text":"RUN apt-get install build-essential hmmer lua5.1 ncbi-blast+ blast2 snap \\\\nunzip mummer infernal exonerate mafft fasttree \\\\ncircos libsvg-perl libgd-svg-perl python-setuptools \\\\nlibc6-i386 lib32stdc++6 lib32gcc1 netcat genometools \\\\nlast-align libboost-iostreams-dev libgslcblas0 libgsl-dev \\\\nlibcolamd2 liblpsolve55-dev libstdc++6 aragorn tantan \\\\nlibstorable-perl libbio-perl-perl libsqlite3-dev \\\\n--yes"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":928,
        "end":962,
        "text":"RUN apt-get install augustus --yes"
      },
      {
        "label":"apt-install-without-version",
        "start":928,
        "end":962,
        "text":"RUN apt-get install augustus --yes"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":993,
        "end":1030,
        "text":"RUN apt-get install genometools --yes"
      },
      {
        "label":"apt-install-without-version",
        "start":993,
        "end":1030,
        "text":"RUN apt-get install genometools --yes"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1070,
        "end":1183,
        "text":"ADD http:\/\/www.orthomcl.org\/common\/downloads\/software\/unsupported\/v1.4\/ORTHOMCL_V1.4_mcl-02-063.tar \/opt\/omcl.tar"
      },
      {
        "label":"use-cd-change-dir",
        "start":1184,
        "end":1195,
        "text":"RUN cd \/opt"
      },
      {
        "label":"use-cd-change-dir",
        "start":1311,
        "end":1324,
        "text":"cd \/opt\/mcl-*"
      },
      {
        "label":"use-cd-change-dir",
        "start":1395,
        "end":1404,
        "text":"cd \/ && \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1903,
        "end":2003,
        "text":"ADD http:\/\/molevol.cmima.csic.es\/castresana\/Gblocks\/Gblocks_Linux64_0.91b.tar.Z \/opt\/gblocks64.tar.Z"
      },
      {
        "label":"use-cd-change-dir",
        "start":2004,
        "end":2018,
        "text":"RUN cd \/opt &&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2193,
        "end":2248,
        "text":"ADD http:\/\/geneontology.org\/ontology\/go.obo \/opt\/go.obo"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2294,
        "end":2391,
        "text":"ADD http:\/\/ftp.ebi.ac.uk\/pub\/databases\/Pfam\/current_release\/Pfam-A.hmm.gz \/opt\/pfam\/Pfam-A.hmm.gz"
      },
      {
        "label":"use-cd-change-dir",
        "start":2392,
        "end":2408,
        "text":"RUN cd \/opt\/pfam"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2539,
        "end":2559,
        "text":"ADD .\/data \/opt\/data"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2619,
        "end":2639,
        "text":"ADD .\/RATT \/opt\/RATT"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2701,
        "end":2727,
        "text":"ADD .\/ABACAS2 \/opt\/ABACAS2"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"e6a1e0f36f1969f5095a610535fad500674370fc.dockerfile",
    "file_content":"FROM ipython\/notebook:latest  \n  \nMAINTAINER Dan Isla <dan.isla@gmail.com>  \n  \nVOLUME \/notebooks  \nWORKDIR \/notebooks  \n  \nEXPOSE 8888  \nRUN apt-get install -y libncurses5-dev  \n  \nADD requirements.txt \/tmp\/  \n  \nRUN pip install -r \/tmp\/requirements.txt  \n  \nADD ipython-revealjs-example.ipynb \/notebooks\/  \n  \nCMD [\"\/notebook.sh\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":28,
        "text":"FROM ipython\/notebook:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":34,
        "end":74,
        "text":"MAINTAINER Dan Isla <dan.isla@gmail.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":182,
        "end":208,
        "text":"ADD requirements.txt \/tmp\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":260,
        "end":306,
        "text":"ADD ipython-revealjs-example.ipynb \/notebooks\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":138,
        "end":176,
        "text":"RUN apt-get install -y libncurses5-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":138,
        "end":176,
        "text":"RUN apt-get install -y libncurses5-dev"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"ea8265b61e044dd83fc807f4b0b8a7d0a3ea53cc.dockerfile",
    "file_content":"FROM cloudposse\/apache-php  \n  \nMAINTAINER Erik Osterman \"e@osterman.com\"  \nENV APACHE_EVENT_START_SERVERS 2  \nENV APACHE_EVENT_MIN_SPARE_THREADS 25  \nENV APACHE_EVENT_MAX_SPARE_THREADS 75  \nENV APACHE_EVENT_THREAD_LIMIT 64  \nENV APACHE_EVENT_THREADS_PER_CHILD 25  \nENV APACHE_EVENT_MAX_REQUEST_WORKERS 150  \nENV APACHE_EVENT_MAX_CONNECTIONS_PER_CHILD 0  \nENV PHP_FPM_PM ondemand  \nENV PHP_FPM_MAX_CHILDREN 10  \nENV PHP_FPM_START_SERVERS 1  \nENV PHP_FPM_SPARE_SERVERS 1  \nENV PHP_FPM_MAX_SPARE_SERVERS 10  \nENV PHP_FPM_PROCESS_IDLE_TIMEOUT 25s  \nENV PHP_FPM_MAX_REQUESTS 500  \nRUN apt-get update && \\  \napt-get install -y software-properties-common && \\  \napt-add-repository multiverse && \\  \napt-get update && \\  \napt-get -y install \\  \napache2-mpm-event \\  \nlibapache2-mod-fastcgi \\  \nphp5-fpm && \\  \napt-get clean && \\  \nrm -f \/var\/www\/html\/index.html && \\  \necho '<?php \/\/ silence is golden ?>' > \/var\/www\/html\/index.php  \n  \nADD conf-available\/ \/etc\/apache2\/conf-available\/  \nADD mods-available\/ \/etc\/apache2\/mods-available\/  \nADD fpm\/ \/etc\/php5\/fpm\/  \nADD start \/start  \n  \nRUN a2dismod mpm_prefork && \\  \na2dismod mpm_worker && \\  \na2dismod php5 && \\  \na2enmod mpm_event && \\  \na2enmod actions && \\  \na2enmod fastcgi && \\  \na2enmod alias && \\  \na2enconf php5-fpm  \n  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":26,
        "text":"FROM cloudposse\/apache-php"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":32,
        "end":73,
        "text":"MAINTAINER Erik Osterman \"e@osterman.com\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":603,
        "end":648,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":603,
        "end":648,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":715,
        "end":795,
        "text":"apt-get -y install \\\\napache2-mpm-event \\\\nlibapache2-mod-fastcgi \\\\nphp5-fpm"
      },
      {
        "label":"apt-install-without-version",
        "start":715,
        "end":795,
        "text":"apt-get -y install \\\\napache2-mpm-event \\\\nlibapache2-mod-fastcgi \\\\nphp5-fpm"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":930,
        "end":1074,
        "text":"ADD conf-available\/ \/etc\/apache2\/conf-available\/\\nADD mods-available\/ \/etc\/apache2\/mods-available\/\\nADD fpm\/ \/etc\/php5\/fpm\/\\nADD start \/start"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"e1752361a79de307c62066d7af2cbdc0d6e1eaa6.dockerfile",
    "file_content":"FROM yubikey-manager-qt-ci-base\n\nRUN apt-get update -qq && apt-get install -qq qtdeclarative5-dev-tools\nRUN pip3 install pre-commit flake8\n\nWORKDIR \/sources\/yubikey-manager-qt\n\nCOPY qmllint-qt5.sh  \/usr\/local\/bin\/qmllint\n\nCMD [\"pre-commit\", \"run\", \"--all-files\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":31,
        "text":"FROM yubikey-manager-qt-ci-base"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":59,
        "end":103,
        "text":"apt-get install -qq qtdeclarative5-dev-tools"
      },
      {
        "label":"apt-install-without-version",
        "start":59,
        "end":103,
        "text":"apt-get install -qq qtdeclarative5-dev-tools"
      },
      {
        "label":"pip-install-without-version",
        "start":104,
        "end":138,
        "text":"RUN pip3 install pre-commit flake8"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"e245a4f9c7db600fb14006fec69b645a83489c42.dockerfile",
    "file_content":"FROM multiarch\/crossbuild:latest\nARG MAKE_OPTS=-j12\nARG SDL_VERSION\nARG ISPACK_VERSION\nARG INNOEXTRACT_VERSION\n\n# multiarch is getting quite out of date at this point, and no longer has\n# security updates\nRUN grep -v http:\/\/security.debian.org \/etc\/apt\/sources.list >\/tmp\/sources.list && \\\n    mv \/tmp\/sources.list \/etc\/apt\/sources.list && \\\n    apt-get update && \\\n    apt-get install -y genisoimage pkgconf wine && \\\n    ln -sf \/usr\/bin\/genisoimage \/usr\/bin\/mkisofs\n\nCOPY vendor\/innoextract-${INNOEXTRACT_VERSION}-linux.tar.xz \/tmp\/\nRUN cd \/tmp && \\\n    tar xf innoextract-${INNOEXTRACT_VERSION}-linux.tar.xz && \\\n    cp innoextract-${INNOEXTRACT_VERSION}-linux\/bin\/amd64\/innoextract \/usr\/local\/bin && \\\n    rm -rf \/tmp\/innoextract-${INNOEXTRACT_VERSION}*\n\nENV PATH=\"\/usr\/x86_64-w64-mingw32\/bin:${PATH}\"\nCOPY vendor\/SDL2-${SDL_VERSION}.tar.gz \/tmp\/\nRUN cd \/tmp && \\\n    tar xzf SDL2-${SDL_VERSION}.tar.gz && \\\n    cd SDL2-${SDL_VERSION} && \\\n    .\/configure --host=x86_64-w64-mingw32 --prefix=\/usr\/x86_64-w64-mingw32 && \\\n    make ${MAKE_OPTS} && \\\n    make install && \\\n    rm -rf \/tmp\/SDL2-${SDL_VERSION}*\n\nCOPY vendor\/ispack-${ISPACK_VERSION}-unicode.exe \/tmp\/\nRUN mkdir \/innosetup && \\\n    innoextract -d \/innosetup \/tmp\/ispack-${ISPACK_VERSION}-unicode.exe && \\\n    rm -f \/tmp\/ispack-${ISPACK_VERSION}-unicode.exe\n    \n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":32,
        "text":"FROM multiarch\/crossbuild:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":370,
        "end":413,
        "text":"apt-get install -y genisoimage pkgconf wine"
      },
      {
        "label":"apt-install-without-version",
        "start":370,
        "end":413,
        "text":"apt-get install -y genisoimage pkgconf wine"
      },
      {
        "label":"use-cd-change-dir",
        "start":535,
        "end":546,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":916,
        "end":937,
        "text":"cd SDL2-${SDL_VERSION"
      },
      {
        "label":"use-cd-change-dir",
        "start":851,
        "end":862,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"e2feb2227bbe26d3953d618aa1711b161b875256.dockerfile",
    "file_content":"# Copyright 2016 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ==============================================================================\n#\n# Test server for TensorFlow GRPC server\n#\n# To build the image, use ..\/build_server.sh --test\n\nFROM ubuntu:14.04\n\nMAINTAINER Shanqing Cai <cais@google.com>\n\n# Pick up some TF dependencies\nRUN apt-get update && apt-get install -y \\\n        curl \\\n        dnsutils \\\n        python \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN curl -O https:\/\/bootstrap.pypa.io\/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\n# Install python panda for the census wide&deep test\nRUN pip install --upgrade pandas==0.18.1\n\n# Install TensorFlow wheel\nCOPY tensorflow-*.whl \/\nRUN pip install \/tensorflow-*.whl && \\\n    rm -f \/tensorflow-*.whl\n\n# Copy files, including the GRPC server binary at\n# server\/grpc_tensorflow_server.py\nADD . \/var\/tf-k8s\n\n# Download MNIST data for tests\nRUN mkdir -p \/tmp\/mnist-data\nRUN curl -o \/tmp\/mnist-data\/train-labels-idx1-ubyte.gz \\\n    http:\/\/yann.lecun.com\/exdb\/mnist\/train-labels-idx1-ubyte.gz\nRUN curl -o \/tmp\/mnist-data\/train-images-idx3-ubyte.gz \\\n    http:\/\/yann.lecun.com\/exdb\/mnist\/train-images-idx3-ubyte.gz\nRUN curl -o \/tmp\/mnist-data\/t10k-labels-idx1-ubyte.gz \\\n    http:\/\/yann.lecun.com\/exdb\/mnist\/t10k-labels-idx1-ubyte.gz\nRUN curl -o \/tmp\/mnist-data\/t10k-images-idx3-ubyte.gz \\\n    http:\/\/yann.lecun.com\/exdb\/mnist\/t10k-images-idx3-ubyte.gz\n\n# Download Census data for Wide & Deep test\nRUN mkdir -p \/tmp\/census-data\nRUN curl -o \/tmp\/census-data\/adult.data \\\n    http:\/\/mlr.cs.umass.edu\/ml\/machine-learning-databases\/adult\/adult.data\nRUN curl -o \/tmp\/census-data\/adult.test \\\n    http:\/\/mlr.cs.umass.edu\/ml\/machine-learning-databases\/adult\/adult.test\n\n# Container entry point\nENTRYPOINT [\"\/var\/tf-k8s\/server\/grpc_tensorflow_server_wrapper.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":806,
        "end":847,
        "text":"MAINTAINER Shanqing Cai <cais@google.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":902,
        "end":1038,
        "text":"apt-get install -y \\\\ncurl \\\\ndnsutils \\\\npython \\\\npython-dev \\\\npython-numpy \\\\npython-pip \\"
      },
      {
        "label":"apt-install-without-version",
        "start":902,
        "end":1038,
        "text":"apt-get install -y \\\\ncurl \\\\ndnsutils \\\\npython \\\\npython-dev \\\\npython-numpy \\\\npython-pip \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1507,
        "end":1524,
        "text":"ADD . \/var\/tf-k8s"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ac5531bfade9492a62f139829eaf82e9be9b253d.dockerfile",
    "file_content":"FROM ubuntu:trusty\nMAINTAINER John Dilts <john.dilts@enstratius.com>\n\nRUN apt-get update && apt-get install -y curl wget openssl redis-server supervisor\n\nADD https:\/\/raw.githubusercontent.com\/jbrien\/sensu-docker\/compose\/support\/install-sensu.sh \/tmp\/\nRUN chmod +x \/tmp\/install-sensu.sh\nRUN \/tmp\/install-sensu.sh\n\nADD redis-run.sh \/tmp\/\nADD supervisor.conf \/etc\/supervisor\/conf.d\/sensu.conf\n\nCMD \/tmp\/redis-run.sh\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":68,
        "text":"MAINTAINER John Dilts <john.dilts@enstratius.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":92,
        "end":152,
        "text":"apt-get install -y curl wget openssl redis-server supervisor"
      },
      {
        "label":"apt-install-without-version",
        "start":92,
        "end":152,
        "text":"apt-get install -y curl wget openssl redis-server supervisor"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":154,
        "end":250,
        "text":"ADD https:\/\/raw.githubusercontent.com\/jbrien\/sensu-docker\/compose\/support\/install-sensu.sh \/tmp\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":313,
        "end":389,
        "text":"ADD redis-run.sh \/tmp\/\\nADD supervisor.conf \/etc\/supervisor\/conf.d\/sensu.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ad8641e79600815ca6e68c3848b1a6da0e9d8981.dockerfile",
    "file_content":"FROM ubuntu\nMAINTAINER Tony Chong\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\n\nWORKDIR \/tmp\n\n# The bare necessities\nRUN apt-get install -y wget curl apt-transport-https openjdk-7-jre-headless\n# So can switch between deb packages and a repo for testing\nRUN wget http:\/\/downloads.mesosphere.io\/master\/ubuntu\/14.04\/mesos_0.20.1-1.0.ubuntu1404_amd64.deb -O mesos_0.20.1-1.0.ubuntu1404_amd64.deb\n\n# Get the latest repos\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv E56151BF \nRUN echo deb http:\/\/repos.mesosphere.io\/ubuntu trusty main > \/etc\/apt\/sources.list.d\/mesosphere.list \nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9\nRUN echo deb https:\/\/get.docker.io\/ubuntu docker main > \/etc\/apt\/sources.list.d\/docker.list\nRUN apt-get -y update \n\n# You need docker installed\nRUN apt-get install -y lxc-docker\n\n# This is where you can switch out how you want to install stuff\nRUN dpkg -i mesos_0.20.1-1.0.ubuntu1404_amd64.deb\n#RUN apt-get install mesos -y\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":12,
        "end":33,
        "text":"MAINTAINER Tony Chong"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":71,
        "end":89,
        "text":"RUN apt-get update"
      },
      {
        "label":"apt-install-without-version",
        "start":71,
        "end":89,
        "text":"RUN apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":128,
        "end":203,
        "text":"RUN apt-get install -y wget curl apt-transport-https openjdk-7-jre-headless"
      },
      {
        "label":"apt-install-without-version",
        "start":128,
        "end":203,
        "text":"RUN apt-get install -y wget curl apt-transport-https openjdk-7-jre-headless"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":859,
        "end":892,
        "text":"RUN apt-get install -y lxc-docker"
      },
      {
        "label":"apt-install-without-version",
        "start":859,
        "end":892,
        "text":"RUN apt-get install -y lxc-docker"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"2aa18ccb726b84ac681b41d59241199a89f456aa.dockerfile",
    "file_content":"FROM phusion\/baseimage:0.9.16\nMAINTAINER sparklyballs <sparkly@madeupemail.com>\n\n# Set correct environment variables\nENV DEBIAN_FRONTEND=noninteractive HOME=\"\/root\" TERM=xterm LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n\n# set ports\nEXPOSE 9000\n\n# Use baseimage-docker's init system\nCMD [\"\/sbin\/my_init\"]\n\n# Add required files that are local\nADD src\/ \/root\/\n\n# fix volume for config\nVOLUME \/config\n\n# Set the locale\nRUN locale-gen en_US.UTF-8 && \\\n\n# fix start up files\nmv \/root\/firstrun.sh \/etc\/my_init.d\/firstrun.sh && \\\nchmod +x \/etc\/my_init.d\/firstrun.sh && \\\nmkdir \/etc\/service\/shout && \\\nmv \/root\/shout.sh \/etc\/service\/shout\/run && \\\nchmod +x \/etc\/service\/shout\/run && \\\n\n# Fix a Debianism of the nobody's uid being 65534\nusermod -u 99 nobody && \\\nusermod -g 100 nobody && \\\n\n# update apt and install dependencies\napt-get update && \\\napt-get install -y nodejs npm && \\\ncp \/usr\/bin\/nodejs \/usr\/bin\/node && \\\n\n# install shout\nnpm install -g shout && \\\n#chown -R nobody:users \/usr\/local\/lib\/node_modules\/shout && \\\n\n# clean up\napt-get clean && \\\nrm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* \\\n\/usr\/share\/man \/usr\/share\/groff \/usr\/share\/info \\\n\/usr\/share\/lintian \/usr\/share\/linda \/var\/cache\/man && \\\n(( find \/usr\/share\/doc -depth -type f ! -name copyright|xargs rm || true )) && \\\n(( find \/usr\/share\/doc -empty|xargs rmdir || true ))\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":30,
        "end":79,
        "text":"MAINTAINER sparklyballs <sparkly@madeupemail.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":352,
        "end":367,
        "text":"ADD src\/ \/root\/"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":850,
        "end":879,
        "text":"apt-get install -y nodejs npm"
      },
      {
        "label":"apt-install-without-version",
        "start":850,
        "end":879,
        "text":"apt-get install -y nodejs npm"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"2c53dafdcad56d446f9dd79d51a526113dc6e47a.dockerfile",
    "file_content":"FROM ruby:2.2.3  \nMAINTAINER marko@codeship.com  \n  \n# Install apt based dependencies required to run Rails as  \n# well as RubyGems. As the Ruby image itself is based on a  \n# Debian image, we use apt-get to install those.  \nRUN apt-get update -qq  \nRUN apt-get install -y \\  \nbuild-essential \\  \nnodejs  \n  \nENV app \/app  \nRUN mkdir $app  \nWORKDIR $app  \n  \nENV BUNDLE_PATH \/bundle  \n  \nADD . $app  \n  \nCMD rails s -b 0.0.0.0  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":47,
        "text":"MAINTAINER marko@codeship.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":250,
        "end":303,
        "text":"RUN apt-get install -y \\\\nbuild-essential \\\\nnodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":250,
        "end":303,
        "text":"RUN apt-get install -y \\\\nbuild-essential \\\\nnodejs"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":388,
        "end":398,
        "text":"ADD . $app"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"2cb8bc446e6bb5604578ecbfbcdc26621d978822.dockerfile",
    "file_content":"FROM php:7.2-fpm\n\nMAINTAINER clement@cyber-duck.co.uk\n\nRUN apt-get update && \\\n    apt-get install -y --force-yes --no-install-recommends \\\n        libmemcached-dev \\\n        libz-dev \\\n        libpq-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libfreetype6-dev \\\n        libssl-dev \\\n        libmcrypt-dev \\\n        openssh-server \\\n        git \\\n        cron \\\n        nano \\\n        wget \\\n        curl \\\n        sudo \\\n        zip \\\n        unzip \\\n        git \\\n        gnupg1 \\\n        gnupg2 \\\n        gnupg\n\n# Install the PHP mcrypt extention (from PECL, mcrypt has been removed from PHP 7.2)\nRUN pecl install mcrypt-1.0.1\nRUN docker-php-ext-enable mcrypt\n\n# Install the PHP pcntl extention\nRUN docker-php-ext-install pcntl\n\n# Install the PHP zip extention\nRUN docker-php-ext-install zip\n\n# Install the PHP pdo_mysql extention\nRUN docker-php-ext-install pdo_mysql\n\n# Install the PHP mysqli extention\nRUN docker-php-ext-install mysqli\n\n# Install the PHP pdo_pgsql extention\nRUN docker-php-ext-install pdo_pgsql\n\n# Enable PHP extension(s)\nRUN docker-php-ext-enable pdo_mysql\n\n#####################################\n# GD:\n#####################################\n\n# Install the PHP gd library\nRUN docker-php-ext-install gd && \\\n    docker-php-ext-configure gd \\\n        --enable-gd-native-ttf \\\n        --with-jpeg-dir=\/usr\/lib \\\n        --with-freetype-dir=\/usr\/include\/freetype2 && \\\n    docker-php-ext-install gd\n\n#####################################\n# xDebug:\n#####################################\n\n# Install the xdebug extension\nRUN pecl install xdebug && docker-php-ext-enable xdebug\n# Copy xdebug configration for remote debugging\nCOPY .\/etc\/php\/xdebug.ini \/usr\/local\/etc\/php\/conf.d\/xdebug.ini\n\n#####################################\n# PHP Memcached:\n#####################################\n\n# Install the php memcached extension\nRUN pecl install memcached && docker-php-ext-enable memcached\n\n#####################################\n# Composer:\n#####################################\n\n# Install composer and add its bin to the PATH.\nRUN curl -s http:\/\/getcomposer.org\/installer | php && \\\n    echo \"export PATH=${PATH}:\/var\/www\/vendor\/bin\" >> ~\/.bashrc && \\\n    mv composer.phar \/usr\/local\/bin\/composer\n# Source the bash\nRUN . ~\/.bashrc\n\n#####################################\n# PHPUnit:\n#####################################\n\nRUN wget https:\/\/phar.phpunit.de\/phpunit.phar\nRUN chmod +x phpunit.phar\nRUN mv phpunit.phar \/usr\/local\/bin\/phpunit\n\n#####################################\n# Laravel Schedule Cron Job:\n#####################################\n\nRUN echo \"* * * * * root php \/var\/www\/artisan schedule:run >> \/dev\/null 2>&1\" >> \/etc\/cron.d\/laravel-schedule\nRUN chmod 0644 \/etc\/cron.d\/laravel-schedule\n\n#####################################\n# Security Checker:\n#####################################\n\n# Security Checker\nRUN wget http:\/\/get.sensiolabs.org\/security-checker.phar\nRUN chmod +x security-checker.phar\nRUN mv security-checker.phar \/usr\/local\/bin\/security-checker\n\n#####################################\n# Node.js && Yarn:\n#####################################\n\n# Node.js\nRUN curl -sL https:\/\/deb.nodesource.com\/setup_11.x -o nodesource_setup.sh\nRUN bash nodesource_setup.sh\nRUN apt-get install nodejs -y\nRUN npm install\n\n# Yarn\nRUN curl -sS https:\/\/dl.yarnpkg.com\/debian\/pubkey.gpg | apt-key add - && \\\n   echo \"deb https:\/\/dl.yarnpkg.com\/debian\/ stable main\" | tee \/etc\/apt\/sources.list.d\/yarn.list && \\\n   apt-get update && \\\n   apt-get install -qq -y build-essential yarn\nRUN yarn install\n\n#####################################\n# Laravel\n#####################################\n\nRUN composer global require \"laravel\/installer\"\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nADD .\/etc\/php\/laravel.ini \/usr\/local\/etc\/php\/conf.d\n\n#####################################\n# Aliases:\n#####################################\n# docker-compose exec php-fpm dep --> locally installed Deployer binaries\nRUN echo '#!\/bin\/bash\\n\/usr\/local\/bin\/php \/var\/www\/vendor\/bin\/dep \"$@\"' > \/usr\/bin\/dep\nRUN chmod +x \/usr\/bin\/dep\n# docker-compose exec php-fpm art --> php artisan\nRUN echo '#!\/bin\/bash\\n\/usr\/local\/bin\/php \/var\/www\/artisan \"$@\"' > \/usr\/bin\/art\nRUN chmod +x \/usr\/bin\/art\n# docker-compose exec php-fpm migrate --> php artisan migrate\nRUN echo '#!\/bin\/bash\\n\/usr\/local\/bin\/php \/var\/www\/artisan migrate \"$@\"' > \/usr\/bin\/migrate\nRUN chmod +x \/usr\/bin\/migrate\n# docker-compose exec php-fpm fresh --> php artisan migrate:fresh --seed\nRUN echo '#!\/bin\/bash\\n\/usr\/local\/bin\/php \/var\/www\/artisan migrate:fresh --seed' > \/usr\/bin\/fresh\nRUN chmod +x \/usr\/bin\/fresh\n# docker-compose exec php-fpm t --> run the tests for the project and generate testdox\nRUN echo '#!\/bin\/bash\\n\/usr\/local\/bin\/php \/var\/www\/artisan config:clear\\n\/var\/www\/vendor\/bin\/phpunit -d memory_limit=2G --stop-on-error --stop-on-failure --testdox-text=tests\/report.txt \"$@\"' > \/usr\/bin\/t\nRUN chmod +x \/usr\/bin\/t\n# docker-compose exec php-fpm d --> run the Laravel Dusk browser tests for the project\nRUN echo '#!\/bin\/bash\\n\/usr\/local\/bin\/php \/var\/www\/artisan config:clear\\n\/bin\/bash\\n\/usr\/local\/bin\/php \/var\/www\/artisan dusk -d memory_limit=2G --stop-on-error --stop-on-failure --testdox-text=tests\/report-dusk.txt \"$@\"' > \/usr\/bin\/d\nRUN chmod +x \/usr\/bin\/d\n\nRUN rm -r \/var\/lib\/apt\/lists\/*\n\nRUN usermod -u 1000 www-data\n\nWORKDIR \/var\/www\n\nEXPOSE 9000\n\nCMD [\"php-fpm\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":53,
        "text":"MAINTAINER clement@cyber-duck.co.uk"
      },
      {
        "label":"apt-install-without-version",
        "start":83,
        "end":526,
        "text":"apt-get install -y --force-yes --no-install-recommends \\\\nlibmemcached-dev \\\\nlibz-dev \\\\nlibpq-dev \\\\nlibjpeg-dev \\\\nlibpng-dev \\\\nlibfreetype6-dev \\\\nlibssl-dev \\\\nlibmcrypt-dev \\\\nopenssh-server \\\\ngit \\\\ncron \\\\nnano \\\\nwget \\\\ncurl \\\\nsudo \\\\nzip \\\\nunzip \\\\ngit \\\\ngnupg1 \\\\ngnupg2 \\\\ngnupg"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3197,
        "end":3226,
        "text":"RUN apt-get install nodejs -y"
      },
      {
        "label":"apt-install-without-version",
        "start":3197,
        "end":3226,
        "text":"RUN apt-get install nodejs -y"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3454,
        "end":3497,
        "text":"apt-get install -qq -y build-essential yarn"
      },
      {
        "label":"apt-install-without-version",
        "start":3454,
        "end":3497,
        "text":"apt-get install -qq -y build-essential yarn"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3823,
        "end":3874,
        "text":"ADD .\/etc\/php\/laravel.ini \/usr\/local\/etc\/php\/conf.d"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"2e002afa08e8baf469cbef8e6ddc00b9524df575.dockerfile",
    "file_content":"FROM ubuntu:xenial\n\nMAINTAINER The Crossbar.io Project <support@crossbario.com>\n\n# Metadata\nARG BUILD_DATE\nARG AUTOBAHN_CPP_VERSION\nARG AUTOBAHN_CPP_VCS_REF\n\n# Metadata labeling\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"AutobahnCpp Starter Template\" \\\n      org.label-schema.description=\"Quickstart template for application development with AutobahnCpp\" \\\n      org.label-schema.url=\"http:\/\/crossbar.io\" \\\n      org.label-schema.vcs-ref=$AUTOBAHN_CPP_VCS_REF \\\n      org.label-schema.vcs-url=\"https:\/\/github.com\/crossbario\/autobahn-cpp\" \\\n      org.label-schema.vendor=\"The Crossbar.io Project\" \\\n      org.label-schema.version=$AUTOBAHN_CPP_VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n\n# Crossbar.io connection defaults\nENV CBURL ws:\/\/localhost:8080\/ws\nENV CBREALM realm1\n\n# user env\nENV DEBIAN_FRONTEND noninteractive\n\nENV HOME \/autobahn\nENV PATH \/autobahn:$PATH\nENV LD_LIBRARY_PATH \/usr\/local\/lib\n\n# env vars to configure websocketpp\nENV WSPP_ENABLE_CPP11 1\n\n# update system, get dev tools and libs\nRUN apt-get update \\\n    && apt-get install -y wget curl unzip git-core \\\n                          clang libc++1 libc++-dev libc++abi-dev \\\n                          build-essential autotools-dev autoconf libtool cmake \\\n                          zlib1g-dev libbz2-dev libssl-dev \\\n                          libboost-all-dev \\\n    && rm -rf \/var\/lib\/apt\/lists\/* \\\n    && apt-get clean\n\n# use clang, not gcc\nENV CC \/usr\/bin\/clang\nENV CXX \/usr\/bin\/clang++\nRUN    update-alternatives --install \/usr\/bin\/cc cc \/usr\/bin\/clang 100 \\\n    && update-alternatives --install \/usr\/bin\/c++ c++ \/usr\/bin\/clang++ 100 \\\n    && update-alternatives --query c++ \\\n    && update-alternatives --query cc\n\n# get, build and install Boost from upstream\n# RUN    cd \/tmp \\\n#     && wget https:\/\/dl.bintray.com\/boostorg\/release\/1.69.0\/source\/boost_1_69_0.tar.bz2 \\\n#     && tar xvjf boost_1_69_0.tar.bz2\n\n# RUN    cd \/tmp\/boost_1_69_0 \\\n#     && .\/bootstrap.sh --with-toolset=clang \\\n#     && .\/b2 toolset=clang cxxflags=\"-stdlib=libc++\" linkflags=\"-stdlib=libc++\" link=shared link=static threading=single threading=multi --layout=tagged --without-python -j 8 install \\\n#     && cd \/ \\\n#     && rm -rf \/tmp\/boost*\n\n# https:\/\/askubuntu.com\/a\/486184\n# RUN cd \/usr\/local\/lib && \\\n#     ln -s libboost_thread-mt.a libboost_thread.a\n\n# get, build and install msgpack-c from upstream\nRUN cd \/tmp \\\n    && wget https:\/\/github.com\/msgpack\/msgpack-c\/archive\/cpp-1.4.2.zip -O msgpack-c.zip \\\n    && unzip msgpack-c.zip && cd msgpack-c-cpp-1.4.2 \\\n    && export CXXFLAGS=\"$CXXFLAGS -std=c++11\" \\\n    && .\/bootstrap && .\/configure && make install \\\n    && cd \/ && rm -rf \/tmp\/msgpack*\n\n# get and install websocketpp from upstream\nRUN cd \/tmp \\\n    && wget https:\/\/github.com\/zaphoyd\/websocketpp\/archive\/master.zip -O websocketpp.zip \\\n    && unzip websocketpp.zip \\\n    && cp -r \/tmp\/websocketpp-master\/websocketpp\/ \/usr\/local\/include\/ \\\n    && cd \/ && rm -rf \/tmp\/websocketpp*\n\n# get and install cmake from upstream\n# RUN cd \/tmp \\\n#     && wget https:\/\/cmake.org\/files\/v3.11\/cmake-3.11.0-Linux-x86_64.sh \\\n#     && sh cmake-3.11.0-Linux-x86_64.sh --skip-license --prefix=\/usr\/local \\\n#     && which cmake && cmake --version\n\n#### all dependencies and tools are now in place\n\n\n# setup and build example project\n\nRUN mkdir -p \/autobahn\/build\nWORKDIR \/autobahn\n\nCOPY autobahn \/autobahn\/autobahn\nCOPY examples \/autobahn\/examples\nCOPY cmake \/autobahn\/cmake\nCOPY cmake\/Modules \/autobahn\/cmake\/Modules\nCOPY cmake\/Includes \/autobahn\/cmake\/Includes\nCOPY CMakeLists.txt \/autobahn\/CMakeLists.txt\n\nRUN cd build \\\n    && cmake .. \\\n    && make -j4 \\\n    && find examples\/ -executable -type f -exec file {} \\;\n\n\n# drop into shell by default\n\nCMD [\"bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":79,
        "text":"MAINTAINER The Crossbar.io Project <support@crossbario.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1072,
        "end":1374,
        "text":"&& apt-get install -y wget curl unzip git-core \\\\nclang libc++1 libc++-dev libc++abi-dev \\\\nbuild-essential autotools-dev autoconf libtool cmake \\\\nzlib1g-dev libbz2-dev libssl-dev \\\\nlibboost-all-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1072,
        "end":1374,
        "text":"&& apt-get install -y wget curl unzip git-core \\\\nclang libc++1 libc++-dev libc++abi-dev \\\\nbuild-essential autotools-dev autoconf libtool cmake \\\\nzlib1g-dev libbz2-dev libssl-dev \\\\nlibboost-all-dev \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2400,
        "end":2413,
        "text":"RUN cd \/tmp \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2663,
        "end":2670,
        "text":"&& cd \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":2740,
        "end":2751,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":2952,
        "end":2959,
        "text":"&& cd \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":3598,
        "end":3612,
        "text":"RUN cd build \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"2e23973501c90cc727d0d6afc9304600b244c117.dockerfile",
    "file_content":"# Base docker image\nFROM ubuntu:16.04\nMAINTAINER Paul Kinlan <paulkinlan@google.com>\n# MAINTAINER Justin Ribeiro <justin@justinribeiro.com>\n\n# Experimental! \n#\n# To run:\n# docker run -d --net host --name headless headless_chrome\n# \n# Access:\n# http:\/\/localhost:9222\/\n\n# Pull my chrome-headless build\nADD chrome-headless.deb \/src\/chrome-headless.deb\n\n# Setup deps, install chrome-headless\nRUN apt-get update && apt-get install -y \\\n  build-essential \\\n  software-properties-common \\\n  ca-certificates \\\n  byobu curl git htop man unzip vim wget \\\n  sudo \\\n  gconf-service \\\n  libcurl3 \\\n  libexif-dev \\\n  libgconf-2-4 \\\n  libglib2.0-0 \\ \n  libgl1-mesa-dri \\\n  libgl1-mesa-glx \\\n  libnspr4 \\\n  libnss3 \\\n  libpango1.0-0 \\\n  libv4l-0 \\\n  libxss1 \\\n  libxtst6 \\\n  libxrender1 \\ \n  libx11-6 \\ \n  libxft2 \\ \n  libfreetype6 \\ \n  libc6 \\ \n  zlib1g \\ \n  libpng12-0 \\\n  wget \\\n  apt-utils \\\n  xdg-utils \\\n  --no-install-recommends && \\\n  dpkg -i '\/src\/chrome-headless.deb' && \\\n  curl -sL https:\/\/deb.nodesource.com\/setup_6.x | sudo -E bash - && \\\n  sudo apt-get install -y nodejs && \\\n  sudo apt-get install -y libnss3 && \\\n  rm -rf \/var\/lib\/apt\/lists\/*\n\n\nCOPY .\/node_modules \/opt\/stickmanventures\/node_modules\nADD .\/index.js \/opt\/stickmanventures\/index.js\nADD .\/package.json \/opt\/stickmanventures\/package.json\n\nWORKDIR \/opt\/stickmanventures\/\n\n# expose 8080 so we can connect to it\nEXPOSE 8080\n\nCMD [\"node\", \"index.js\", \"\/opt\/stickmanventures\/chrome-headless\/headless_shell\" ]",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":38,
        "end":84,
        "text":"MAINTAINER Paul Kinlan <paulkinlan@google.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":300,
        "end":348,
        "text":"ADD chrome-headless.deb \/src\/chrome-headless.deb"
      },
      {
        "label":"apt-install-without-version",
        "start":410,
        "end":919,
        "text":"apt-get install -y \\\\nbuild-essential \\\\nsoftware-properties-common \\\\nca-certificates \\\\nbyobu curl git htop man unzip vim wget \\\\nsudo \\\\ngconf-service \\\\nlibcurl3 \\\\nlibexif-dev \\\\nlibgconf-2-4 \\\\nlibglib2.0-0 \\\\nlibgl1-mesa-dri \\\\nlibgl1-mesa-glx \\\\nlibnspr4 \\\\nlibnss3 \\\\nlibpango1.0-0 \\\\nlibv4l-0 \\\\nlibxss1 \\\\nlibxtst6 \\\\nlibxrender1 \\\\nlibx11-6 \\\\nlibxft2 \\\\nlibfreetype6 \\\\nlibc6 \\\\nzlib1g \\\\nlibpng12-0 \\\\nwget \\\\napt-utils \\\\nxdg-utils \\\\n--no-install-recommends"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1039,
        "end":1113,
        "text":"sudo apt-get install -y nodejs && \\\\nsudo apt-get install -y libnss3 && \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1039,
        "end":1113,
        "text":"sudo apt-get install -y nodejs && \\\\nsudo apt-get install -y libnss3 && \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1201,
        "end":1265,
        "text":"ADD .\/index.js \/opt\/stickmanventures\/index.js\\nADD .\/package.json"
      },
      {
        "label":"use-cd-change-dir",
        "start":1385,
        "end":1395,
        "text":"CMD [\"node"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir"
    ]
  },
  {
    "filename":"2ed6978d9fa023d9fba91787fd8b4f655e50ec12.dockerfile",
    "file_content":"FROM ubuntu:14.04\nMAINTAINER billvsme \"994171686@qq.com\"\n\nRUN apt-get update\nRUN apt-get install -y git\nRUN apt-get install -y vim\nRUN apt-get install -y nginx\nRUN apt-get install -y postgresql-9.3\nRUN apt-get install -y memcached\nRUN apt-get install -y python-dev python-setuptools\n# RUN apt-get install -y python3\n# RUN apt-get install -y python3-dev python3-setuptools\nRUN apt-get install -y python-pip\n\nRUN git clone https:\/\/github.com\/billvsme\/vmaig_blog\nWORKDIR .\/vmaig_blog\n\nRUN apt-get install -y libtiff5-dev libjpeg8-dev zlib1g-dev \\\n    libfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk\nRUN pip install -r requirements.txt\nRUN apt-get install -y libpq-dev\nRUN pip install psycopg2\nRUN pip install gunicorn\n\nUSER postgres\nRUN service postgresql start &&\\\n    psql --command \"create user vmaig with SUPERUSER password 'password';\" &&\\\n    psql --command \"create database db_vmaig owner vmaig;\"\n\nUSER root\nRUN mkdir -p \/var\/log\/vmaig\nRUN service postgresql start &&\\\n    sleep 10 &&\\\n    python manage.py makemigrations --settings vmaig_blog.settings_docker &&\\\n    python manage.py migrate --settings vmaig_blog.settings_docker &&\\\n    echo \"from vmaig_auth.models import VmaigUser; VmaigUser.objects.create_superuser('admin', 'admin@example.com', 'password')\" | python manage.py shell --settings vmaig_blog.settings_docker &&\\\n    echo 'yes' | python manage.py collectstatic --settings vmaig_blog.settings_docker\n\nRUN ln -s \/vmaig_blog\/nginx.conf \/etc\/nginx\/sites-enabled\/vmaig\nRUN rm \/etc\/nginx\/sites-enabled\/default\n\nRUN pip install supervisor\nCOPY supervisord.conf \/etc\/supervisord.conf\n\nRUN mkdir \/var\/log\/supervisor\n\nVOLUME \/var\/lib\/postgresql\/\nVOLUME \/var\/log\/vmaig\/\n\nCMD supervisord -c \/etc\/supervisord.conf\nEXPOSE 80 443\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":55,
        "text":"MAINTAINER billvsme \"994171686@qq.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":77,
        "end":405,
        "text":"RUN apt-get install -y git\\nRUN apt-get install -y vim\\nRUN apt-get install -y nginx\\nRUN apt-get install -y postgresql-9.3\\nRUN apt-get install -y memcached\\nRUN apt-get install -y python-dev python-setuptools\\n# RUN apt-get install -y python3\\n# RUN apt-get install -y python3-dev python3-setuptools\\nRUN apt-get install -y python-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":482,
        "end":620,
        "text":"RUN apt-get install -y libtiff5-dev libjpeg8-dev zlib1g-dev \\\\nlibfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":482,
        "end":620,
        "text":"RUN apt-get install -y libtiff5-dev libjpeg8-dev zlib1g-dev \\\\nlibfreetype6-dev liblcms2-dev libwebp-dev tcl8.6-dev tk8.6-dev python-tk"
      },
      {
        "label":"apt-install-without-version",
        "start":657,
        "end":689,
        "text":"RUN apt-get install -y libpq-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":657,
        "end":689,
        "text":"RUN apt-get install -y libpq-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":690,
        "end":739,
        "text":"RUN pip install psycopg2\\nRUN pip install gunicorn"
      },
      {
        "label":"root-privilege-user",
        "start":927,
        "end":936,
        "text":"USER root"
      },
      {
        "label":"pip-install-without-version",
        "start":1552,
        "end":1578,
        "text":"RUN pip install supervisor"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"328a83c0a9708350ff8329e91c675412f108c705.dockerfile",
    "file_content":"FROM ubuntu:latest\nVOLUME \/logs\nVOLUME \/media\/source\nVOLUME \/media\/meta\nVOLUME \/media\/processed\n\n# It is possible that encoding could really take more than 30 mins\n# HEALTHCHECK --interval=1m --timeout=3s CMD touch -d\"-30min\" \/tmp\/marker && [ \/processmedia2\/.heartbeat -nt \/tmp\/marker ]\n\nCOPY --from=jrottenberg\/ffmpeg \/usr\/local \/usr\/local\n\nRUN apt-get update && apt-get install -y \\\n    git \\\n    python3-pip \\\n    jpegoptim \\\n    tesseract-ocr-eng \\\n    sox \\\n&& apt-get clean && rm -rf \/var\/lib\/apt\/lists \/var\/cache\/apt\nRUN pip3 install --upgrade pip setuptools\n\nCOPY processmedia2.pip requirements.pip\nRUN pip3 install -r requirements.pip\n\nWORKDIR \/processmedia2\n\nCOPY .\/ .\/\nCMD .\/processmedia2.sh\n\n\n\n#RUN mkdir -p \/media\/source \/media\/meta \/media\/processed && chmod -R 777 \/media\/\n\n#COPY --from=krallin\/ubuntu-tini \/usr\/local\/bin\/tini \/usr\/local\/bin\/tini\n#ENTRYPOINT [\"\/usr\/local\/bin\/tini\", \"--\", \"\/processmedia2\/docker-compose.yml.processmedia2.sh\"]\n#https:\/\/github.com\/docker-library\/mysql\/issues\/47#issuecomment-140339288\n#CMD \/processmedia2\/processmedia2.sh\n\n# docker build -t processmedia2:latest --file .\\processmedia2.base.dockerfile .\n# docker run -it --rm -v ..\/:\/processmedia2:ro -v \/var\/run\/docker.sock:\/var\/run\/docker.sock docker.io processmedia2:latest\n  # Windows -v \/\/var\/run\/docker.sock:\/var\/run\/docker.sock\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":364,
        "end":462,
        "text":"apt-get install -y \\\\ngit \\\\npython3-pip \\\\njpegoptim \\\\ntesseract-ocr-eng \\\\nsox \\"
      },
      {
        "label":"apt-install-without-version",
        "start":364,
        "end":462,
        "text":"apt-get install -y \\\\ngit \\\\npython3-pip \\\\njpegoptim \\\\ntesseract-ocr-eng \\\\nsox \\"
      },
      {
        "label":"pip-install-without-version",
        "start":524,
        "end":565,
        "text":"RUN pip3 install --upgrade pip setuptools"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"0ab990bfaf62f1308ba236c3b0a9075972336079.dockerfile",
    "file_content":"FROM centos\/tools\n\nMAINTAINER Siva Reddy \"schituku@redhat.com\"\n\nENV container docker\n\nRUN yum install --assumeyes \\\n    \topenssh-clients \\\n    \topenssh-server; \\\n    yum clean all; \\\n    (cd \/lib\/systemd\/system\/sysinit.target.wants\/; \\\n    for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f \/lib\/systemd\/system\/multi-user.target.wants\/*; \\\n    rm -f \/etc\/systemd\/system\/*.wants\/*; \\\n    rm -f \/lib\/systemd\/system\/local-fs.target.wants\/*; \\\n    rm -f \/lib\/systemd\/system\/sockets.target.wants\/*udev*; \\\n    rm -f \/lib\/systemd\/system\/sockets.target.wants\/*initctl*; \\\n    rm -f \/lib\/systemd\/system\/basic.target.wants\/*; \\\n    rm -f \/lib\/systemd\/system\/anaconda.target.wants\/*; \\\n    rm -f \/lib\/systemd\/system\/systemd*udev*; \\\n    rm -f \/lib\/systemd\/system\/getty.target; \\\n    ssh-keygen -A; \\\n    systemctl enable sshd; \\\n    echo \"root:redhat\" | chpasswd\n\nRUN rpm -ivh https:\/\/dl.fedoraproject.org\/pub\/epel\/epel-release-latest-7.noarch.rpm; \\\n    curl -o \/etc\/yum.repos.d\/pbench.repo https:\/\/copr.fedorainfracloud.org\/coprs\/ndokos\/pbench\/repo\/epel-7\/ndokos-pbench-epel-7.repo; \\\n    yum clean expire-cache; \\\n    yum install --assumeyes \\\n        configtools \\\n\tpbench-agent \\\n\tpbench-uperf; \\\n    yum clean all; \\\n    source \/etc\/profile.d\/pbench-agent.sh\n    \nVOLUME [ \"\/sys\/fs\/cgroup\" ]\n\nCMD [\"\/usr\/sbin\/init\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":17,
        "text":"FROM centos\/tools"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":62,
        "text":"MAINTAINER Siva Reddy \"schituku@redhat.com\""
      },
      {
        "label":"yum-install-without-version",
        "start":86,
        "end":161,
        "text":"RUN yum install --assumeyes \\\\nopenssh-clients \\\\nopenssh-server; \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":188,
        "end":231,
        "text":"cd \/lib\/systemd\/system\/sysinit.target.wants"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"0d02e956f2453291993e9787b8b5311c385bf50e.dockerfile",
    "file_content":"  \nFROM ubuntu:15.04  \nMAINTAINER Conor Heine <conor.heine@gmail.com>  \n  \nENV DEBIAN_FRONTEND noninteractive  \nENV AIRFLOW_HOME \/airflow  \n  \nRUN apt-get --yes update  \nRUN apt-get --yes install \\  \npython2.7 \\  \npython-dev \\  \npython-setuptools \\  \npython-pip \\  \npython-crypto \\  \npython-psycopg2  \nRUN apt-get --yes install libssl-dev libffi-dev  \nRUN pip install cryptography celery  \nRUN mkdir \/airflow && pip install airflow  \nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*  \n  \nVOLUME \/airflow  \nWORKDIR \/airflow  \nEXPOSE 9090  \nCMD airflow initdb && airflow webserver -p 9090  \n  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":23,
        "end":69,
        "text":"MAINTAINER Conor Heine <conor.heine@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":170,
        "end":408,
        "text":"RUN apt-get --yes install \\\\npython2.7 \\\\npython-dev \\\\npython-setuptools \\\\npython-pip \\\\npython-crypto \\\\npython-psycopg2\\nRUN apt-get --yes install libssl-dev libffi-dev\\nRUN pip install cryptography celery\\nRUN mkdir \/airflow"
      },
      {
        "label":"apt-install-without-version",
        "start":143,
        "end":408,
        "text":"RUN apt-get --yes update\\nRUN apt-get --yes install \\\\npython2.7 \\\\npython-dev \\\\npython-setuptools \\\\npython-pip \\\\npython-crypto \\\\npython-psycopg2\\nRUN apt-get --yes install libssl-dev libffi-dev\\nRUN pip install cryptography celery\\nRUN mkdir \/airflow"
      },
      {
        "label":"pip-install-without-version",
        "start":412,
        "end":431,
        "text":"pip install airflow"
      },
      {
        "label":"use-cd-change-dir",
        "start":557,
        "end":575,
        "text":"CMD airflow initdb"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"0d0cdaf6db8822b6e84191f11f5d9e338b5f6805.dockerfile",
    "file_content":"FROM ubuntu:14.04\nMAINTAINER Jean-Tiare Le Bigot \"jt@lebigot.net\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Grab all dependencies\nRUN apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get -y install curl libx11-dev libxtst-dev libxcomposite-dev \\\n                       libxdamage-dev libxkbfile-dev python-all-dev \\\n                       python-gobject-dev python-gtk2-dev cython \\\n                       xvfb xauth x11-xkb-utils libx264-dev libvpx-dev \\\n                       libswscale-dev libavcodec-dev subversion websockify curl\n\n# Grab sources, need latest version for HTML5\nWORKDIR \/usr\/src\nRUN svn co https:\/\/www.xpra.org\/svn\/Xpra\/\n\n# Build from sources\nRUN cd Xpra\/trunk\/src && \\\n    python .\/setup.py --without-csc_swscale install && \\\n    cd rencode && \\\n    python .\/setup.py install && \\\n    curl https:\/\/bitbucket.org\/pypa\/setuptools\/raw\/bootstrap\/ez_setup.py | sudo python\n\n# Get our \"demo\" executable\nRUN apt-get -y install firefox\n\n# Declare ports. A real application would probably use the only one not listed: SSH\n\n# expose HTML5 port (experimental)\nEXPOSE 8080\n# expose raw TCP port\nEXPOSE 10000\n\n# Create a dedicated user\nRUN useradd xpra --password '*' --create-home\nUSER xpra\nENV HOME \/home\/xpra\n\n# Run! Application will be served both as WebSocket and Raw TCP. (+ disable all unsupported bits)\nCMD [\"xpra\", \"start\", \":10\", \"--start-child=firefox\",  \"--daemon=off\", \"--bind-tcp=0.0.0.0:10000\", \"--html=0.0.0.0:8080\", \\\n                                                                       \"--no-mdns\", \"--no-notifications\", \"--no-pulseaudio\"]\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":61,
        "text":"MAINTAINER Jean-Tiare Le Bigot \"jt@lebigot."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":183,
        "end":539,
        "text":"apt-get -y install curl libx11-dev libxtst-dev libxcomposite-dev \\\\nlibxdamage-dev libxkbfile-dev python-all-dev \\\\npython-gobject-dev python-gtk2-dev cython \\\\nxvfb xauth x11-xkb-utils libx264-dev libvpx-dev \\\\nlibswscale-dev libavcodec-dev subversion websockify curl"
      },
      {
        "label":"apt-install-without-version",
        "start":183,
        "end":539,
        "text":"apt-get -y install curl libx11-dev libxtst-dev libxcomposite-dev \\\\nlibxdamage-dev libxkbfile-dev python-all-dev \\\\npython-gobject-dev python-gtk2-dev cython \\\\nxvfb xauth x11-xkb-utils libx264-dev libvpx-dev \\\\nlibswscale-dev libavcodec-dev subversion websockify curl"
      },
      {
        "label":"use-cd-change-dir",
        "start":668,
        "end":689,
        "text":"RUN cd Xpra\/trunk\/src"
      },
      {
        "label":"use-cd-change-dir",
        "start":756,
        "end":769,
        "text":"cd rencode &&"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":923,
        "end":953,
        "text":"RUN apt-get -y install firefox"
      },
      {
        "label":"apt-install-without-version",
        "start":923,
        "end":953,
        "text":"RUN apt-get -y install firefox"
      },
      {
        "label":"use-sudo-run",
        "start":776,
        "end":893,
        "text":"python .\/setup.py install && \\\\ncurl https:\/\/bitbucket.org\/pypa\/setuptools\/raw\/bootstrap\/ez_setup.py | sudo python"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "use-sudo-run"
    ]
  },
  {
    "filename":"0dae8b51d5db4f28186788f59f15b302a653c76e.dockerfile",
    "file_content":"FROM resin\/rpi-raspbian:wheezy\n\nRUN set -ex; \\\n    apt-get update -qq; \\\n    apt-get install -y \\\n        locales \\\n        gcc \\\n        make \\\n        zlib1g \\\n        zlib1g-dev \\\n        libssl-dev \\\n        git \\\n        ca-certificates \\\n        curl \\\n        libsqlite3-dev \\\n        apt-transport-https \\\n        bzip2 \\\n        python3 \\\n    ; \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN set -ex; \\\n    curl -L https:\/\/packagecloud.io\/Hypriot\/Schatzkiste\/packages\/debian\/wheezy\/docker-hypriot_1.8.3-1_armhf.deb\/download -o docker-hypriot_1.8.3-1_armhf.deb; \\\n    dpkg -x docker-hypriot_1.8.3-1_armhf.deb \/tmp\/docker || true; \\\n    mv \/tmp\/docker\/usr\/bin\/docker \/usr\/local\/bin\/docker; \\\n    rm -f docker-hypriot_1.8.3-1_armhf.deb; \\\n    rm -rf \/tmp\/docker\n\n# Build Python 2.7.9 from source\nRUN set -ex; \\\n    curl -L https:\/\/www.python.org\/ftp\/python\/2.7.9\/Python-2.7.9.tgz | tar -xz; \\\n    cd Python-2.7.9; \\\n    .\/configure --enable-shared; \\\n    make; \\\n    make install; \\\n    cd ..; \\\n    rm -rf \/Python-2.7.9\n\n# Build python 3.4 from source\n# RUN set -ex; \\\n#     curl -L https:\/\/www.python.org\/ftp\/python\/3.4.3\/Python-3.4.3.tgz | tar -xz; \\\n#     cd Python-3.4.3; \\\n#     .\/configure --enable-shared; \\\n#     make; \\\n#     make install; \\\n#     cd ..; \\\n#     rm -rf \/Python-3.4.3\n\n# Make libpython findable\nENV LD_LIBRARY_PATH \/usr\/local\/lib\n\n# Install setuptools\nRUN set -ex; \\\n    curl -L https:\/\/bootstrap.pypa.io\/ez_setup.py | python\n\n# Install pip\nRUN set -ex; \\\n    curl -L https:\/\/pypi.python.org\/packages\/source\/p\/pip\/pip-8.1.1.tar.gz | tar -xz; \\\n    cd pip-8.1.1; \\\n    python setup.py install; \\\n    cd ..; \\\n    rm -rf pip-8.1.1\n\n# Python3 requires a valid locale\nRUN echo \"en_US.UTF-8 UTF-8\" > \/etc\/locale.gen && locale-gen\nENV LANG en_US.UTF-8\n\nRUN useradd -d \/home\/user -m -s \/bin\/bash user\nWORKDIR \/code\/\n\nRUN pip install tox==2.1.1\n\nADD requirements.txt \/code\/\nADD requirements-dev.txt \/code\/\nADD .pre-commit-config.yaml \/code\/\nADD setup.py \/code\/\nADD tox.ini \/code\/\nADD compose \/code\/compose\/\nRUN tox --notest\n\nRUN set -ex; \\\n    cd \/tmp; \\\n    curl -L https:\/\/github.com\/pyinstaller\/pyinstaller\/releases\/download\/3.0\/PyInstaller-3.0.tar.gz | tar -xz; \\\n    cd PyInstaller-3.0\/bootloader; \\\n    curl -LO https:\/\/raw.githubusercontent.com\/matysek\/pyinstaller\/6d65e7cea428ac207a27297c8adc169c17ee5776\/bootloader\/wscript; \\\n    python .\/waf distclean --no-lsb all; \\\n    ln -s \/tmp\/PyInstaller-3.0 \/code\/.tox\/py27\/lib\/python2.7\/site-packages\/PyInstaller; \\\n    sed -i '\/    if is_unix:\/i\\ \\ \\ \\ return 0' \/code\/.tox\/py27\/lib\/python2.7\/site-packages\/PyInstaller\/PyInstaller\/utils\/misc.py\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":77,
        "end":347,
        "text":"apt-get install -y \\\\nlocales \\\\ngcc \\\\nmake \\\\nzlib1g \\\\nzlib1g-dev \\\\nlibssl-dev \\\\ngit \\\\nca-certificates \\\\ncurl \\\\nlibsqlite3-dev \\\\napt-transport-https \\\\nbzip2 \\\\npython3 \\"
      },
      {
        "label":"apt-install-without-version",
        "start":77,
        "end":347,
        "text":"apt-get install -y \\\\nlocales \\\\ngcc \\\\nmake \\\\nzlib1g \\\\nzlib1g-dev \\\\nlibssl-dev \\\\ngit \\\\nca-certificates \\\\ncurl \\\\nlibsqlite3-dev \\\\napt-transport-https \\\\nbzip2 \\\\npython3 \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":895,
        "end":910,
        "text":"cd Python-2.7.9"
      },
      {
        "label":"use-cd-change-dir",
        "start":985,
        "end":993,
        "text":"cd ..; \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1623,
        "end":1631,
        "text":"cd ..; \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1572,
        "end":1587,
        "text":"cd pip-8.1.1; \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1862,
        "end":2022,
        "text":"ADD requirements.txt \/code\/\\nADD requirements-dev.txt \/code\/\\nADD .pre-commit-config.yaml \/code\/\\nADD setup.py \/code\/\\nADD tox.ini \/code\/\\nADD compose \/code\/compose\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":2060,
        "end":2070,
        "text":"cd \/tmp; \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"0ebb36eaa485f017a588f4ca95cd7dcbc4239612.dockerfile",
    "file_content":"FROM resin\/rpi-raspbian\nMAINTAINER Chris Troutner <chris.troutner@gmail.com>\nRUN apt-get -y update\nRUN apt-get install -y openssh-server\nRUN apt-get install -y nano\nRUN apt-get install -y ssh\nRUN mkdir \/var\/run\/sshd\nRUN sed 's@sessions*requireds*pam_loginuid.so@session optional pam_loginuid.so@g' -i \/etc\/pam.d\/sshd\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> \/etc\/profile\nRUN curl -sL https:\/\/deb.nodesource.com\/setup_8.x -o nodesource_setup.sh\nRUN bash nodesource_setup.sh\nRUN apt-get install -y nodejs\nRUN apt-get install -y build-essential\nWORKDIR \/root\nVOLUME \/usr\/src\/app\/logs\nCOPY package.json package.json\nRUN npm install\nEXPOSE 3100\nCOPY dummyapp.js dummyapp.js\nCOPY finalsetup finalsetup\nCOPY connect-client.js connect-client.js\nCOPY package.json package.json\nCOPY config.json config.json\nRUN chmod 775 finalsetup\nRUN useradd -ms \/bin\/bash nLhOKGNFIt\nRUN echo nLhOKGNFIt:YOhKM21Kaj | chpasswd\nEXPOSE 6127\n#ENTRYPOINT [\".\/finalsetup\", \"node\", \"dummyapp.js\"]\nENTRYPOINT [\".\/finalsetup\", \"node\", \"connect-client.js\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":23,
        "text":"FROM resin\/rpi-raspbian"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":24,
        "end":76,
        "text":"MAINTAINER Chris Troutner <chris.troutner@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":99,
        "end":191,
        "text":"RUN apt-get install -y openssh-server\\nRUN apt-get install -y nano\\nRUN apt-get install -y ssh"
      },
      {
        "label":"apt-install-without-version",
        "start":99,
        "end":191,
        "text":"RUN apt-get install -y openssh-server\\nRUN apt-get install -y nano\\nRUN apt-get install -y ssh"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":499,
        "end":567,
        "text":"RUN apt-get install -y nodejs\\nRUN apt-get install -y build-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":499,
        "end":567,
        "text":"RUN apt-get install -y nodejs\\nRUN apt-get install -y build-essential"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"11b421d3a84dd0f07008eec296c32d9428d8af21.dockerfile",
    "file_content":"# Use the standard eyeris java image\nFROM eyeris\/java\n\n# Initial system configuration\n#  python is required to run cqlsh\n#  unzip is required to unzip the modelmanager jar\nRUN \\\n    apt-get update && \\\n    apt-get install -y \\\n      wget \\\n      python \\\n      dnsutils \\\n      unzip && \\\n    useradd -M -U -r -s \/bin\/false cassandra && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# Environment variables for configuration\nENV CASSANDRA_VERSION 2.2.9\n\n# Download and install the required version of Apache Cassandra. \nRUN \\\n    wget --no-check-certificate https:\/\/archive.apache.org\/dist\/cassandra\/${CASSANDRA_VERSION}\/apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz -O \/tmp\/apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz && \\\n    tar xfz \/tmp\/apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz -C \/opt && \\\n    ln -s \/opt\/apache-cassandra-${CASSANDRA_VERSION} \/opt\/cassandra && \\\n    rm \/tmp\/apache-cassandra-${CASSANDRA_VERSION}-bin.tar.gz && \\\n    ln -s \/opt\/cassandra\/bin\/cqlsh \/usr\/bin\n\n# Add control script\nADD cassandra-cmd \/usr\/bin\/\nADD cassandra-provision \/usr\/bin\/\nCOPY cassandra-env.sh \/opt\/cassandra\/conf\/\n\n# TWCS compiled on 4\/6\/2017 \n# http:\/\/thelastpickle.com\/blog\/2017\/01\/10\/twcs-part2.html\n# git clone https:\/\/github.com\/jeffjirsa\/twcs\/\n# git checkout -t origin\/cassandra-2.2\n# Commit Hash: 19081e2b53b2bc273292c2820efd3b9d05226c53\nCOPY TimeWindowCompactionStrategy-2.2.5.jar \/opt\/cassandra\/lib\/\n\n# Export useful environment variables\n\n# Define working directory.\nWORKDIR \/data\nENV CASSANDRA_HOME \/opt\/apache-cassandra-${CASSANDRA_VERSION}\n\n# Export Apache Kafka environment variables\nENV KAFKA_HOME \/opt\/kafka_${KAFKA_SCALA_VERSION}-${KAFKA_VERSION}\n\n# Expose the Apache Kafka port to the outside\n# 7000: intra-node communication\n# 7001: TLS intra-node communication\n# 7199: JMX\n# 9042: CQL\n# 9160: thrift service\nEXPOSE 7000 7001 7199 9042 9160\n\n# Set the entry point as \"cassandra-cmd entry\"\nENTRYPOINT [\"\/usr\/bin\/cassandra-cmd\", \"entry\"]\n\n# Define default command.\nCMD [\"\/usr\/bin\/cassandra-cmd\", \"start\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":37,
        "end":53,
        "text":"FROM eyeris\/java"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":206,
        "end":283,
        "text":"apt-get install -y \\\\nwget \\\\npython \\\\ndnsutils \\\\nunzip"
      },
      {
        "label":"apt-install-without-version",
        "start":206,
        "end":283,
        "text":"apt-get install -y \\\\nwget \\\\npython \\\\ndnsutils \\\\nunzip"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1005,
        "end":1066,
        "text":"ADD cassandra-cmd \/usr\/bin\/\\nADD cassandra-provision \/usr\/bin\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"12667b99c36ecfb7590ffa118c74eb85f1b5d2f9.dockerfile",
    "file_content":"FROM ubuntu:xenial\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get -qqy update && \\\n    apt-get -qqy install libluajit-5.1-dev && \\\n    ln -s \/usr\/bin\/luajit \/usr\/bin\/lua && \\\n    apt-get -qqy install curl git unzip net-tools uuid-runtime\n\nRUN apt-get -qqy update && apt-get -qqy install luarocks && \\\n   luarocks install busted && \\\n   luarocks install LuaSocket && \\\n   luarocks install json-lua\n\nRUN apt-get -qqy install apt-transport-https ca-certificates software-properties-common && \\\n    curl -fsSL https:\/\/download.docker.com\/linux\/ubuntu\/gpg | apt-key add && \\\n    add-apt-repository \"deb [arch=amd64] https:\/\/download.docker.com\/linux\/ubuntu $(lsb_release -cs) stable\" && \\\n    apt-get -qqy update && \\\n    apt-get -qqy install docker-ce && \\\n    apt-get -qqy install python python-dev python-distribute python-pip && \\\n    pip install --upgrade pip==9.0.3 && \\\n    pip install docker-compose\n\nRUN cd \/opt && git clone -q https:\/\/github.com\/vishnubob\/wait-for-it.git\n\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nENV DEBIAN_FRONTEND teletype\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":89,
        "end":124,
        "text":"apt-get -qqy install libluajit-5.1-"
      },
      {
        "label":"apt-install-without-version",
        "start":181,
        "end":239,
        "text":"apt-get -qqy install curl git unzip net-tools uuid-runtime"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":181,
        "end":239,
        "text":"apt-get -qqy install curl git unzip net-tools uuid-runtime"
      },
      {
        "label":"apt-install-without-version",
        "start":268,
        "end":398,
        "text":"apt-get -qqy install luarocks && \\\\nluarocks install busted && \\\\nluarocks install LuaSocket && \\\\nluarocks install json-lua"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":268,
        "end":398,
        "text":"apt-get -qqy install luarocks && \\\\nluarocks install busted && \\\\nluarocks install LuaSocket && \\\\nluarocks install json-lua"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":400,
        "end":487,
        "text":"RUN apt-get -qqy install apt-transport-https ca-certificates software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":400,
        "end":487,
        "text":"RUN apt-get -qqy install apt-transport-https ca-certificates software-properties-common"
      },
      {
        "label":"pip-install-without-version",
        "start":878,
        "end":904,
        "text":"pip install docker-compose"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":690,
        "end":831,
        "text":"apt-get -qqy update && \\\\napt-get -qqy install docker-ce && \\\\napt-get -qqy install python python-dev python-distribute python-pip && \\"
      },
      {
        "label":"apt-install-without-version",
        "start":690,
        "end":831,
        "text":"apt-get -qqy update && \\\\napt-get -qqy install docker-ce && \\\\napt-get -qqy install python python-dev python-distribute python-pip && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":906,
        "end":917,
        "text":"RUN cd \/opt"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"1462bf44b8b71b2ca980ba1db28079e5a4c4c1a9.dockerfile",
    "file_content":"FROM jetbrains\/teamcity-agent:latest  \n  \nRUN apt-get update  \nRUN apt-get -y --force-yes install \\  \napt-transport-https \\  \nca-certificates \\  \ncurl \\  \nsoftware-properties-common  \nRUN curl -fsSL https:\/\/download.docker.com\/linux\/ubuntu\/gpg | apt-key add -  \nRUN apt-key fingerprint 0EBFCD88  \nRUN add-apt-repository \\  \n\"deb [arch=amd64] https:\/\/download.docker.com\/linux\/ubuntu \\  \n$(lsb_release -cs) \\  \nstable\"  \nRUN apt-get update  \nRUN apt-get -y --force-yes install \\  \ndocker-ce \\  \ngradle \\  \npython3 \\  \npython3-pip  \n  \nRUN pip3 install --upgrade pip  \nRUN pip3 install docker \\  \nboto3 \\  \nawscli \\  \necs-deploy  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":36,
        "text":"FROM jetbrains\/teamcity-agent:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":63,
        "end":181,
        "text":"RUN apt-get -y --force-yes install \\\\napt-transport-https \\\\nca-certificates \\\\ncurl \\\\nsoftware-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":63,
        "end":181,
        "text":"RUN apt-get -y --force-yes install \\\\napt-transport-https \\\\nca-certificates \\\\ncurl \\\\nsoftware-properties-common"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":441,
        "end":528,
        "text":"RUN apt-get -y --force-yes install \\\\ndocker-ce \\\\ngradle \\\\npython3 \\\\npython3-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":441,
        "end":528,
        "text":"RUN apt-get -y --force-yes install \\\\ndocker-ce \\\\ngradle \\\\npython3 \\\\npython3-pip"
      },
      {
        "label":"pip-install-without-version",
        "start":534,
        "end":626,
        "text":"RUN pip3 install --upgrade pip\\nRUN pip3 install docker \\\\nboto3 \\\\nawscli \\\\necs-deploy"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"1465885aa0cbbdf85a9b1eb6ab255d2b417d5923.dockerfile",
    "file_content":"############################################################\n# Dockerfile to build subread container images\n# Based on Ubuntu\n############################################################\n\n# Set the base image to Ubuntu\nFROM ubuntu:16.04\n\n# File Author \/ Maintainer\nMAINTAINER Sophie Lemoine\n\nARG PACKAGE_VERSION=1.6.2\nARG BUILD_PACKAGES=\"build-essential wget zlib1g-dev\"\nARG DEBIAN_FRONTEND=noninteractive\n\n# Update the repository sources list\nRUN apt-get update && \\\n    apt-get install --yes \\\n              $BUILD_PACKAGES && \\\n    cd \/tmp && \\\n    wget -q https:\/\/downloads.sourceforge.net\/project\/subread\/subread-${PACKAGE_VERSION}\/subread-${PACKAGE_VERSION}-source.tar.gz && \\\n    tar -xzf subread-${PACKAGE_VERSION}-source.tar.gz && \\\n    cd subread-${PACKAGE_VERSION}-source\/src && \\\n    make -f Makefile.Linux && \\\n    cd ..\/bin && \\\n    mv utilities\/* . && \\\n    rmdir utilities && \\\n    mv * \/usr\/local\/bin\/ && \\\n    cd \/ && \\\n    rm -rf \/tmp\/* && \\\n    apt remove --purge --yes \\\n              $BUILD_PACKAGES && \\\n    apt autoremove --purge --yes && \\\n    apt clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":265,
        "end":290,
        "text":"MAINTAINER Sophie Lemoine"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":472,
        "end":528,
        "text":"apt-get install --yes \\\\n$BUILD_PACKAGES &&"
      },
      {
        "label":"apt-install-without-version",
        "start":472,
        "end":528,
        "text":"apt-get install --yes \\\\n$BUILD_PACKAGES &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":535,
        "end":547,
        "text":"cd \/tmp && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":746,
        "end":774,
        "text":"cd subread-${PACKAGE_VERSION"
      },
      {
        "label":"use-cd-change-dir",
        "start":828,
        "end":837,
        "text":"cd ..\/bin"
      },
      {
        "label":"use-cd-change-dir",
        "start":928,
        "end":935,
        "text":"cd \/ &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"423ea8c0317b4f730c0ef630d0550efc87c22664.dockerfile",
    "file_content":"FROM earthlab\/pytorch-gpu-aws  \n  \nMAINTAINER Jeremy Diaz <jeremy.diaz@colorado.edu>  \n  \nRUN apt-get update && \\  \napt-get clean && \\  \nrm -rf \/var\/lib\/apt\/lists\/*  \n  \nRUN pip install tweepy nltk gensim xlrd botometer livelossplot  \n  \nRUN git clone https:\/\/github.com\/facebookresearch\/fastText.git && \\  \ncd fastText && \\  \npip install .  \n  \nEXPOSE 8888  \nWORKDIR \"\/home\/\"  \n  \nCMD [\"\/run_jupyter.sh\", \"--allow-root\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":29,
        "text":"FROM earthlab\/pytorch-gpu-aws"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":35,
        "end":84,
        "text":"MAINTAINER Jeremy Diaz <jeremy.diaz@colorado.edu>"
      },
      {
        "label":"pip-install-without-version",
        "start":170,
        "end":232,
        "text":"RUN pip install tweepy nltk gensim xlrd botometer livelossplot"
      },
      {
        "label":"use-cd-change-dir",
        "start":308,
        "end":322,
        "text":"cd fastText &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"43423f36c7cc107061202d645bb1c01855ac93c0.dockerfile",
    "file_content":"FROM       ubuntu:14.04\nMAINTAINER Jaewoo Lee <continuse@icloud.com>\n\nRUN apt-get update\n\nRUN apt-get install -y openssh-server\nRUN mkdir \/var\/run\/sshd\n\nRUN echo 'root:root' |chpasswd\n\nRUN sed -ri 's\/^PermitRootLogin\\s+.*\/PermitRootLogin yes\/' \/etc\/ssh\/sshd_config\nRUN sed -ri 's\/UsePAM yes\/#UsePAM yes\/g' \/etc\/ssh\/sshd_config\n\nRUN ssh-keygen -b 2048 -t rsa -f \/root\/.ssh\/id_rsa -q -N \"\"\nRUN cd \/root\/.ssh && cp id_rsa.pub authorized_keys\n\nRUN apt-get install -y python-pip gfortran\n\n# ETCD for python\nRUN cd \/tmp && wget https:\/\/github.com\/jplana\/python-etcd\/archive\/0.4.1.tar.gz && \\\n    tar xvfz 0.4.1.tar.gz && cd python-etcd-0.4.1 && pip install .\n\n# MPICH3 Install\nRUN cd \/tmp && wget http:\/\/www.mpich.org\/static\/downloads\/3.1.4\/mpich-3.1.4.tar.gz && \\\n    tar xvfz mpich-3.1.4.tar.gz && cd mpich-3.1.4 && .\/configure --prefix=\/tmp\/mpich && \\\n    make && make VERBOSE=1 && make install\n\nRUN apt-get install -y expect telnet curl\n\nCOPY entrypoint.sh \/entrypoint.sh\nCOPY pod_ip.py \/pod_ip.py\nCOPY known_hosts.py \/known_hosts.py\nCOPY auto_ssh.sh \/auto_ssh.sh\nCOPY bash_profile \/root\/.bash_profile\n\nENV PATH $PATH:\/tmp\/mpich\/bin\n\nEXPOSE 22\n\nCMD    [\"\/entrypoint.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":24,
        "end":68,
        "text":"MAINTAINER Jaewoo Lee <continuse@icloud.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":90,
        "end":127,
        "text":"RUN apt-get install -y openssh-server"
      },
      {
        "label":"apt-install-without-version",
        "start":90,
        "end":127,
        "text":"RUN apt-get install -y openssh-server"
      },
      {
        "label":"use-cd-change-dir",
        "start":388,
        "end":405,
        "text":"RUN cd \/root\/.ssh"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":440,
        "end":482,
        "text":"RUN apt-get install -y python-pip gfortran"
      },
      {
        "label":"apt-install-without-version",
        "start":440,
        "end":482,
        "text":"RUN apt-get install -y python-pip gfortran"
      },
      {
        "label":"use-cd-change-dir",
        "start":502,
        "end":513,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":671,
        "end":682,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":893,
        "end":929,
        "text":"RUN apt-get install -y expect telnet"
      },
      {
        "label":"apt-install-without-version",
        "start":893,
        "end":929,
        "text":"RUN apt-get install -y expect telnet"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"447eef32664f6c813822d392d71aa6267ce7e720.dockerfile",
    "file_content":"#  \n# Hyperdex Dockerfile  \n#  \n#  \nFROM colinrhodes\/hyperdex-base  \n  \nMAINTAINER Colin Rhodes <colin@colin-rhodes.com>  \n  \nRUN apt-get -yq install python-hyperdex-client python-hyperdex-admin  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":36,
        "end":66,
        "text":"FROM colinrhodes\/hyperdex-base"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":72,
        "end":120,
        "text":"MAINTAINER Colin Rhodes <colin@colin-rhodes.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":126,
        "end":172,
        "text":"RUN apt-get -yq install python-hyperdex-client"
      },
      {
        "label":"apt-install-without-version",
        "start":126,
        "end":194,
        "text":"RUN apt-get -yq install python-hyperdex-client python-hyperdex-admin"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"45c5b6619dcceeb7d8a9c67d471399b5869439d8.dockerfile",
    "file_content":"FROM i386\/ubuntu\nUSER root\n\nRUN apt-get update && apt-get install -y git && \\\n    git clone https:\/\/github.com\/diameter\/rtorrent-rutorrent-shared.git a && \\\n    cp .\/a\/extra.list \/etc\/apt\/sources.list.d\/extra.list && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y rtorrent unzip unrar mediainfo curl php-fpm php-cli php-geoip php-zip nginx wget ffmpeg supervisor php-xml libarchive-zip-perl libjson-perl libxml-libxml-perl irssi sox && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    cp .\/a\/rutorrent-*.nginx \/root\/ && \\\n    mkdir -p \/var\/www && cd \/var\/www && \\\n    git clone https:\/\/github.com\/Novik\/ruTorrent.git rutorrent && \\\n    rm -rf .\/rutorrent\/.git* && cd \/ && \\\n    cp .\/a\/config.php \/var\/www\/rutorrent\/conf\/ && \\\n    cp .\/a\/startup-rtorrent.sh .\/a\/startup-nginx.sh .\/a\/startup-php.sh .\/a\/.rtorrent.rc .\/a\/startup-irssi.sh \/root\/ && \\\n    cp .\/a\/supervisord.conf \/etc\/supervisor\/conf.d\/ && \\\n    sed -i 's\/\\\/var\\\/log\/\\\/downloads\\\/\\.log\/g' \/etc\/nginx\/nginx.conf\n\n\nEXPOSE 80 443 49160 49161\nVOLUME \/downloads\n\nCMD [\"supervisord\"]\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":16,
        "text":"FROM i386\/ubuntu"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":50,
        "end":72,
        "text":"apt-get install -y git"
      },
      {
        "label":"apt-install-without-version",
        "start":50,
        "end":72,
        "text":"apt-get install -y git"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":263,
        "end":465,
        "text":"noninteractive apt-get install -y rtorrent unzip unrar mediainfo curl php-fpm php-cli php-geoip php-zip nginx wget ffmpeg supervisor php-xml libarchive-zip-perl libjson-perl libxml-libxml-perl irssi sox"
      },
      {
        "label":"apt-install-without-version",
        "start":263,
        "end":465,
        "text":"noninteractive apt-get install -y rtorrent unzip unrar mediainfo curl php-fpm php-cli php-geoip php-zip nginx wget ffmpeg supervisor php-xml libarchive-zip-perl libjson-perl libxml-libxml-perl irssi sox"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":574,
        "end":590,
        "text":"cd \/var\/www && \\"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"46c37343bb34e7bdb507f9cb7067dc302affa125.dockerfile",
    "file_content":"FROM phusion\/baseimage:0.9.17  \nMAINTAINER EdenServers  \n  \n#Install LAMP  \nRUN apt-get -y update  \nRUN apt-get -y install apache2 libapache2-mod-php5 php5 php5-mysql \\  \nmysql-server wget curl unzip \\  \nphp5-gd imagemagick  \n  \n#Delete index.html  \nRUN rm \/var\/www\/html\/*  \n  \n# Apache CHOWN  \nRUN chown -R www-data:www-data \/var\/www\/html  \n  \n#Add configuration scripts  \nADD mysql_config.sh \/mysql_config.sh  \nADD apache_config.sh \/apache_config.sh  \nADD start.sh \/start.sh  \nRUN chmod 755 \/*.sh  \n  \n#Scp Server  \nRUN apt-get install -y openssh-server rssh  \nADD rssh.conf \/etc\/rssh.conf  \n  \nEXPOSE 80  \nEXPOSE 22  \nCMD [\"\/start.sh\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":32,
        "end":54,
        "text":"MAINTAINER EdenServers"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":100,
        "end":223,
        "text":"RUN apt-get -y install apache2 libapache2-mod-php5 php5 php5-mysql \\\\nmysql-server wget curl unzip \\\\nphp5-gd imagemagick"
      },
      {
        "label":"apt-install-without-version",
        "start":100,
        "end":223,
        "text":"RUN apt-get -y install apache2 libapache2-mod-php5 php5 php5-mysql \\\\nmysql-server wget curl unzip \\\\nphp5-gd imagemagick"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":374,
        "end":476,
        "text":"ADD mysql_config.sh \/mysql_config.sh\\nADD apache_config.sh \/apache_config.sh\\nADD start.sh \/start.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":563,
        "end":591,
        "text":"ADD rssh.conf \/etc\/rssh.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"2177566b159debe475511582ec60bc1350ffaa11.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-setuptools \\\n        python-scipy && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nENV CAFFE_ROOT=$HOME\/caffe\n\nWORKDIR $CAFFE_ROOT\n\nENV CLONE_TAG=1.0\n\nRUN pip install --upgrade pip\nRUN pip install pathlib\n\nRUN git clone -b ${CLONE_TAG} --depth 1 https:\/\/github.com\/BVLC\/caffe.git . && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. && \\\n    mkdir build && cd build && \\\n    cmake -DCPU_ONLY=1 .. && \\\n    make -j\"$(nproc)\"\n\nENV PYCAFFE_ROOT $CAFFE_ROOT\/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT\/build\/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT\/build\/lib\" >> \/etc\/ld.so.conf.d\/caffe.conf && ldconfig\n\nWORKDIR \/code\n\nADD . \/code\n\nRUN pip install -r requirements\/dev.txt\n\nEXPOSE 8000\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":41,
        "end":559,
        "text":"apt-get install -y --no-install-recommends \\\\nbuild-essential \\\\ncmake \\\\ngit \\\\nwget \\\\nlibatlas-base-dev \\\\nlibboost-all-dev \\\\nlibgflags-dev \\\\nlibgoogle-glog-dev \\\\nlibhdf5-serial-dev \\\\nlibleveldb-dev \\\\nliblmdb-dev \\\\nlibopencv-dev \\\\nlibprotobuf-dev \\\\nlibsnappy-dev \\\\nprotobuf-compiler \\\\npython-dev \\\\npython-numpy \\\\npython-pip \\\\npython-setuptools \\\\npython-scipy &&"
      },
      {
        "label":"pip-install-without-version",
        "start":693,
        "end":716,
        "text":"RUN pip install pathlib"
      },
      {
        "label":"pip-install-without-version",
        "start":663,
        "end":688,
        "text":"RUN pip install --upgrade"
      },
      {
        "label":"use-cd-change-dir",
        "start":803,
        "end":812,
        "text":"cd python"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1208,
        "end":1219,
        "text":"ADD . \/code"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"242365745b52f7b4f76d3fb5c55370930ee36a53.dockerfile",
    "file_content":"# Dockerfile for OpenFOAM-Infiniband-IntelMPI for use with Batch Shipyard on Azure Batch\n\nFROM centos:7.1.1503\nMAINTAINER Fred Park <https:\/\/github.com\/Azure\/batch-shipyard>\n\n# set up base and ssh keys\nCOPY ssh_config \/root\/.ssh\/config\nRUN yum swap -y fakesystemd systemd \\\n    && yum install -y epel-release \\\n    && yum install -y \\\n        openssh-clients openssh-server net-tools gnuplot mpfr-devel \\\n        qt-devel qt-assistant qt-x11 qtwebkit-devel libGLU-devel boost-devel \\\n        libmlx4 librdmacm libibverbs dapl rdma \\\n    && yum clean all \\\n    && mkdir -p \/var\/run\/sshd \\\n    && ssh-keygen -A \\\n    && sed -i 's\/UsePAM yes\/UsePAM no\/g' \/etc\/ssh\/sshd_config \\\n    && sed -i 's\/#PermitRootLogin yes\/PermitRootLogin yes\/g' \/etc\/ssh\/sshd_config \\\n    && sed -i 's\/#RSAAuthentication yes\/RSAAuthentication yes\/g' \/etc\/ssh\/sshd_config \\\n    && sed -i 's\/#PubkeyAuthentication yes\/PubkeyAuthentication yes\/g' \/etc\/ssh\/sshd_config \\\n    && ssh-keygen -f \/root\/.ssh\/id_rsa -t rsa -N '' \\\n    && chmod 600 \/root\/.ssh\/config \\\n    && chmod 700 \/root\/.ssh \\\n    && cp \/root\/.ssh\/id_rsa.pub \/root\/.ssh\/authorized_keys\n\n# add intel redistributables\nADD l_comp_lib_2016.4.258_comp.cpp_redist.tgz l_comp_lib_2016.4.258_comp.for_redist.tgz \/tmp\/\nRUN cd \/tmp\/l_comp_lib_2016.4.258_comp.cpp_redist \\\n    && .\/install.sh -i \/opt\/intel2 -e \\\n    && cd \/tmp\/l_comp_lib_2016.4.258_comp.for_redist \\\n    && .\/install.sh -i \/opt\/intel2 -e \\\n    && rm -rf \/tmp\/l_comp_lib_2016.4.258_comp.cpp_redist \/tmp\/l_comp_lib_2016.4.258_comp.for_redist\nENV INTELCOMPILERVARS=\/opt\/intel2\/bin\/compilervars.sh\n\n# add openfoam with env vars\nADD openfoam-4.0-icc-intelmpi.tar.gz \/opt\/OpenFOAM\nENV OPENFOAM_VER=4.0 FOAM_INST_DIR=\/opt\/OpenFOAM PATH=${PATH}:\/usr\/lib64\/qt4\/bin\nENV OPENFOAM_DIR=${FOAM_INST_DIR}\/OpenFOAM-${OPENFOAM_VER}\n\n# copy sample run script\nCOPY run_sample.sh ${FOAM_INST_DIR}\n\n# set up sshd on port 23\nEXPOSE 23\nCMD [\"\/usr\/sbin\/sshd\", \"-D\", \"-p\", \"23\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":111,
        "end":173,
        "text":"MAINTAINER Fred Park <https:\/\/github.com\/Azure\/batch-shipyard>"
      },
      {
        "label":"yum-install-without-version",
        "start":278,
        "end":532,
        "text":"&& yum install -y epel-release \\\\n&& yum install -y \\\\nopenssh-clients openssh-server net-tools gnuplot mpfr-devel \\\\nqt-devel qt-assistant qt-x11 qtwebkit-devel libGLU-devel boost-devel \\\\nlibmlx4 librdmacm libibverbs dapl rdma \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1122,
        "end":1244,
        "text":"# add intel redistributables\\nADD l_comp_lib_2016.4.258_comp.cpp_redist.tgz l_comp_lib_2016.4.258_comp.for_redist.tgz \/tmp\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":1341,
        "end":1343,
        "text":"&&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1616,
        "end":1666,
        "text":"ADD openfoam-4.0-icc-intelmpi.tar.gz \/opt\/OpenFOAM"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"33a7795c6388ff67fce003236f50cb8b7115c28d.dockerfile",
    "file_content":"FROM php:5.5-apache\n\nMAINTAINER c0ny1 <root@gv7.me>\n\n# set DirectoryIndex:index.htm\nCOPY docker-php.conf \/etc\/apache2\/conf-enabled\/\n\nRUN apt-get update && \\\n    apt-get install -y git && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    cd \/tmp\/ && \\\n    git clone https:\/\/github.com\/aj00200\/xssed.git && \\\n    cd xssed && \\\n    mv * \/var\/www\/html\/ && \\\n    rm -rf \/tmp\/xssed",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":48,
        "text":"MAINTAINER c0ny1 <root@gv7."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":161,
        "end":183,
        "text":"apt-get install -y git"
      },
      {
        "label":"apt-install-without-version",
        "start":161,
        "end":183,
        "text":"apt-get install -y git"
      },
      {
        "label":"use-cd-change-dir",
        "start":253,
        "end":266,
        "text":"cd \/tmp\/ && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":327,
        "end":338,
        "text":"cd xssed &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"3a722ce7f65b3341475927005851d7aef1a2662f.dockerfile",
    "file_content":"FROM debian:jessie\nMAINTAINER Evan Hazlett <ejhazlett@gmail.com>\nRUN apt-get update && apt-get install -y openjdk-7-jre-headless wget\nRUN (wget -O \/tmp\/tomcat7.tar.gz http:\/\/mirror.cogentco.com\/pub\/apache\/tomcat\/tomcat-7\/v7.0.57\/bin\/apache-tomcat-7.0.57.tar.gz && \\\n    cd \/opt && \\\n    tar zxf \/tmp\/tomcat7.tar.gz && \\\n    mv \/opt\/apache-tomcat* \/opt\/tomcat && \\\n    rm \/tmp\/tomcat7.tar.gz)\nCOPY .\/run.sh \/usr\/local\/bin\/run\nEXPOSE 8080\nCMD [\"\/bin\/sh\", \"-e\", \"\/usr\/local\/bin\/run\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":87,
        "end":133,
        "text":"apt-get install -y openjdk-7-jre-headless wget"
      },
      {
        "label":"apt-install-without-version",
        "start":87,
        "end":133,
        "text":"apt-get install -y openjdk-7-jre-headless wget"
      },
      {
        "label":"use-cd-change-dir",
        "start":270,
        "end":277,
        "text":"cd \/opt"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":63,
        "text":"MAINTAINER Evan Hazlett <ejhazlett@gmail.com"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"1829cd5401f1d655d64d597776f04d2c49045c8d.dockerfile",
    "file_content":"FROM ubuntu:xenial\nMAINTAINER Gabe Fierro <gtfierro@eecs.berkeley.edu>\n\nRUN apt-get -y update && apt-get install -y git python2.7 python-pip python-dev curl bc\nADD install.sh \/opt\n\nENTRYPOINT [ \"\/bin\/bash\" ]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":69,
        "text":"MAINTAINER Gabe Fierro <gtfierro@eecs.berkeley.edu"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":97,
        "end":159,
        "text":"apt-get install -y git python2.7 python-pip python-dev curl bc"
      },
      {
        "label":"apt-install-without-version",
        "start":97,
        "end":159,
        "text":"apt-get install -y git python2.7 python-pip python-dev curl bc"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":160,
        "end":179,
        "text":"ADD install.sh \/opt"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"184bae479982ca95d90fe92afb8f8680e196a67d.dockerfile",
    "file_content":"FROM centos:7\nMAINTAINER AIZAWA Hina <hina@bouhime.com>\n\nADD docker\/nginx\/nginx.repo \/etc\/yum.repos.d\/\nADD docker\/rpm-gpg\/ \/etc\/pki\/rpm-gpg\/\nADD docker\/jp3cki\/jp3cki.repo \/etc\/yum.repos.d\/\n\nRUN rpm --import \\\n    \/etc\/pki\/rpm-gpg\/RPM-GPG-KEY-CentOS-7 \\\n    \/etc\/pki\/rpm-gpg\/RPM-GPG-KEY-CentOS-SIG-SCLo \\\n    \/etc\/pki\/rpm-gpg\/RPM-GPG-KEY-EPEL-7 \\\n    \/etc\/pki\/rpm-gpg\/RPM-GPG-KEY-JP3CKI \\\n    \/etc\/pki\/rpm-gpg\/RPM-GPG-KEY-remi \\\n        && \\\n    yum update -y && \\\n    yum install -y \\\n        ImageMagick \\\n        centos-release-scl-rh \\\n        curl \\\n        epel-release \\\n        nginx \\\n        patch \\\n        pngcrush \\\n        scl-utils \\\n        sqlite \\\n        tar \\\n        unzip \\\n        wget \\\n        http:\/\/rpms.famillecollet.com\/enterprise\/7\/safe\/x86_64\/remi-release-7.2-1.el7.remi.noarch.rpm \\\n            && \\\n    yum-config-manager --enable jp3cki && \\\n    yum install -y \\\n        brotli \\\n        git19-git \\\n        nodejs010-npm \\\n        php70-php-cli \\\n        php70-php-fpm \\\n        php70-php-intl \\\n        php70-php-json \\\n        php70-php-mbstring \\\n        php70-php-mcrypt \\\n        php70-php-opcache \\\n        php70-php-pdo \\\n        php70-php-pecl-zip \\\n        php70-php-xml \\\n        supervisor \\\n        zopfli \\\n            && \\\n    yum clean all && \\\n    useradd festink && \\\n    chmod 701 \/home\/festink\n\nADD docker\/env\/scl-env.sh \/etc\/profile.d\/\nADD docker\/supervisor\/* \/etc\/supervisord.d\/\nADD . \/home\/festink\/fest.ink\nRUN chown -R festink:festink \/home\/festink\/fest.ink\n\nUSER festink\nRUN cd ~festink\/fest.ink && bash -c 'source \/etc\/profile.d\/scl-env.sh && make clean && rm -rf runtime\/* && make'\n\nUSER root\nADD docker\/php\/php-config.diff \/tmp\/\nRUN patch -p1 -d \/etc\/opt\/remi\/php70 < \/tmp\/php-config.diff && rm \/tmp\/php-config.diff\n\nADD docker\/nginx\/default.conf \/etc\/nginx\/conf.d\/\n\nCMD \/usr\/bin\/supervisord\nEXPOSE 80\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":14,
        "end":55,
        "text":"MAINTAINER AIZAWA Hina <hina@bouhime.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":57,
        "end":186,
        "text":"ADD docker\/nginx\/nginx.repo \/etc\/yum.repos.d\/\\nADD docker\/rpm-gpg\/ \/etc\/pki\/rpm-gpg\/\\nADD docker\/jp3cki\/jp3cki.repo \/etc\/yum.repos."
      },
      {
        "label":"yum-install-without-version",
        "start":468,
        "end":709,
        "text":"yum install -y \\\\nImageMagick \\\\ncentos-release-scl-rh \\\\ncurl \\\\nepel-release \\\\nnginx \\\\npatch \\\\npngcrush \\\\nscl-utils \\\\nsqlite \\\\ntar \\\\nunzip \\\\nwget \\"
      },
      {
        "label":"yum-install-without-version",
        "start":879,
        "end":1253,
        "text":"yum install -y \\\\nbrotli \\\\ngit19-git \\\\nnodejs010-npm \\\\nphp70-php-cli \\\\nphp70-php-fpm \\\\nphp70-php-intl \\\\nphp70-php-json \\\\nphp70-php-mbstring \\\\nphp70-php-mcrypt \\\\nphp70-php-opcache \\\\nphp70-php-pdo \\\\nphp70-php-pecl-zip \\\\nphp70-php-xml \\\\nsupervisor \\\\nzopfli \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1348,
        "end":1462,
        "text":"ADD docker\/env\/scl-env.sh \/etc\/profile.d\/\\nADD docker\/supervisor\/* \/etc\/supervisord.d\/\\nADD . \/home\/festink\/fest.ink"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1653,
        "end":1689,
        "text":"ADD docker\/php\/php-config.diff \/tmp\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1778,
        "end":1826,
        "text":"ADD docker\/nginx\/default.conf \/etc\/nginx\/conf.d\/"
      },
      {
        "label":"root-privilege-user",
        "start":1643,
        "end":1652,
        "text":"USER root"
      },
      {
        "label":"use-cd-change-dir",
        "start":1529,
        "end":1544,
        "text":"RUN cd ~festink"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"1cb66ced588e82136290cc0ac7634f7ef50bc612.dockerfile",
    "file_content":"FROM openshift\/origin-base\n\nRUN yum install -y golang && yum clean all\n\nADD . \/go\/src\/github.com\/openshift\/clam-scanner\nRUN export GOBIN=\/bin GOPATH=\/go && \\\n    go get github.com\/golang\/glog github.com\/spf13\/cobra github.com\/spf13\/pflag && \\\n    cd  \/go\/src\/github.com\/openshift\/clam-scanner && \\\n    go install && \\\n    rm -rf \/go && \\\n    mkdir -p \/run\/clamd.scan \/tmp\/scan-data\n\nENTRYPOINT [\"\/bin\/clam-scanner\", \"scan\", \"--path=\/tmp\/scan-data\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":26,
        "text":"FROM openshift\/origin-base"
      },
      {
        "label":"yum-install-without-version",
        "start":28,
        "end":53,
        "text":"RUN yum install -y golang"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":72,
        "end":119,
        "text":"ADD . \/go\/src\/github.com\/openshift\/clam-scanner"
      },
      {
        "label":"use-cd-change-dir",
        "start":247,
        "end":279,
        "text":"cd \/go\/src\/github.com\/openshift"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"00d460662c5981267382ccd7afcd01ad5d78f9a1.dockerfile",
    "file_content":"FROM underworldcode\/underworld2:dev\nMAINTAINER romain.beucher@unimelb.edu\n\nUSER root\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n        python-tk\n\n# UWGeodynamics\nWORKDIR \/opt\nRUN git clone -b development https:\/\/github.com\/underworldcode\/UWGeodynamics.git\nRUN pip3 install -e \/opt\/UWGeodynamics\n\n# Badlands dependency\nRUN pip3 install pandas\nRUN pip3 install ez_setup\nRUN pip3 install git+https:\/\/github.com\/badlands-model\/triangle.git\nRUN pip3 install git+https:\/\/github.com\/awickert\/gFlex.git\n\n# pyBadlands serial\nWORKDIR \/opt\nRUN git clone https:\/\/github.com\/rbeucher\/pyBadlands_serial.git\n# Remove gzip compression...HDF5 is installed via PETSC and zlib is not found\nRUN cd \/opt\/pyBadlands_serial\/pyBadlands && \\\n    find . -iname \"*.py\" -type f -print0 | xargs -0 sed -i \"s\/, compression='gzip'\/\/g\"\nRUN pip3 install -e pyBadlands_serial\/\nWORKDIR \/opt\/pyBadlands_serial\/pyBadlands\/libUtils\nRUN make\nRUN pip3 install -e \/opt\/pyBadlands_serial\n\n# pyBadlands dependencies\n# RUN pip install cmocean\nRUN git clone https:\/\/github.com\/matplotlib\/cmocean.git \/tmp\/cmocean && \\\n    pip3 install \/tmp\/cmocean\/ && \\ \n    rm -rf \/tmp\/cmocean\nRUN pip3 install colorlover\n# Force matplotlib 2.1.2 (Bug Badlands), Temporary\nRUN pip3 install matplotlib==2.1.2\n\nENV PATH $PATH:\/opt\/pyBadlands_serial\/pyBadlands\/libUtils\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:\/opt\/pyBadlands_serial\/pyBadlands\/libUtils\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":36,
        "end":73,
        "text":"MAINTAINER romain.beucher@unimelb.edu"
      },
      {
        "label":"apt-install-without-version",
        "start":104,
        "end":202,
        "text":"RUN DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\\npython-tk"
      },
      {
        "label":"pip-install-without-version",
        "start":376,
        "end":425,
        "text":"RUN pip3 install pandas\\nRUN pip3 install ez_setup"
      },
      {
        "label":"use-cd-change-dir",
        "start":729,
        "end":769,
        "text":"RUN cd \/opt\/pyBadlands_serial\/pyBadlands"
      },
      {
        "label":"pip-install-without-version",
        "start":1192,
        "end":1219,
        "text":"RUN pip3 install colorlover"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"01183a0ab398ab38393bbdb6adb2c9692290ed56.dockerfile",
    "file_content":"ARG BUILD_FROM\nFROM $BUILD_FROM\n\nENV LANG C.UTF-8\n\n#Install mopidy\n\nRUN set -ex \\\n    # Official Mopidy install for Debian\/Ubuntu along with some extensions\n    # (see https:\/\/docs.mopidy.com\/en\/latest\/installation\/debian\/ )\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n\tbuild-essential \\\n        curl \\\n        gcc \\\n\tgstreamer1.0-alsa \\\n\tgstreamer1.0-fluendo-mp3 \\\n\tgstreamer1.0-libav \\\n\tlibxml2-dev \\\n\tlibxslt-dev \\\n\tlibz-dev \\\n\tjq \\\n\tpython-crypto \\\n\tpython-dev \\\n && curl -L https:\/\/apt.mopidy.com\/mopidy.gpg -o \/tmp\/mopidy.gpg \\\n && curl -L https:\/\/apt.mopidy.com\/mopidy.list -o \/etc\/apt\/sources.list.d\/mopidy.list \\\n && apt-key add \/tmp\/mopidy.gpg \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n        jq mopidy mopidy-spotify mopidy-local-sqlite \\\n && curl -L https:\/\/bootstrap.pypa.io\/get-pip.py | python - \\\n && pip install -U six oauth2client pyasn1 \\\n && pip install \\\n\tMopidy-Moped \\\n        Mopidy-GMusic \\\n\tMopidy-Iris \\\n && apt-get purge --auto-remove -y \\\n        curl \\\n        gcc \\\n\tbuild-essential \\\n && apt-get clean \\\n && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* ~\/.cache\n\n\nCOPY mopidy.conf \/var\/lib\/mopidy\/.config\/mopidy\/mopidy.conf\n\n# Copy data for add-on\nCOPY run.sh \/\nRUN chmod a+x \/run.sh\n\nEXPOSE 6600 6680\nCMD [ \"\/run.sh\" ]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":250,
        "end":349,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y \\\\nbuild-essential \\\\ncurl \\\\ngcc \\"
      },
      {
        "label":"apt-install-without-version",
        "start":250,
        "end":349,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y \\\\nbuild-essential \\\\ncurl \\\\ngcc \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":714,
        "end":818,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y \\\\njq mopidy mopidy-spotify mopidy-local-sqlite"
      },
      {
        "label":"apt-install-without-version",
        "start":714,
        "end":820,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y \\\\njq mopidy mopidy-spotify mopidy-local-sqlite \\"
      },
      {
        "label":"pip-install-without-version",
        "start":887,
        "end":927,
        "text":"pip install -U six oauth2client pyasn1 \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"051e77ca07bd3585e7d4756bfa6797ed3ef4e5ad.dockerfile",
    "file_content":"FROM docker.elastic.co\/kibana\/kibana:6.2.3\n\nUSER root\nRUN mkdir rule_files\nRUN mkdir log\nRUN mkdir \/tmp\/sysmon_search_plugin\n\nRUN yum -y update && yum -y install wget gcc make zlib-devel openssl-devel\n\nWORKDIR \/root\/\nENV PYTHON_VERSION 2.7.15\nRUN wget https:\/\/www.python.org\/ftp\/python\/$PYTHON_VERSION\/Python-$PYTHON_VERSION.tgz \\\n    && tar zxf Python-$PYTHON_VERSION.tgz \\\n    && cd Python-$PYTHON_VERSION \\\n    && .\/configure \\\n    && make altinstall\nENV PYTHONIOENCODING \"utf-8\"\nRUN ln -s \/usr\/local\/bin\/python2.7 \/usr\/local\/bin\/python\n\nRUN curl https:\/\/bootstrap.pypa.io\/get-pip.py -o get-pip.py\nRUN python get-pip.py\n\nRUN pip install elasticsearch\nRUN pip install elasticsearch_dsl\n\nADD .\/sysmon_search_plugin \/usr\/share\/kibana\/plugins\/sysmon_search_plugin\nCOPY .\/docker-config\/sysmon_search_plugin\/conf.js \/usr\/share\/kibana\/plugins\/sysmon_search_plugin\/conf.js\n\nRUN chown -R kibana:kibana \/usr\/share\/kibana\/plugins\/sysmon_search_plugin\nRUN chown -R kibana:kibana \/usr\/share\/kibana\/rule_files\nRUN chown -R kibana:kibana \/usr\/share\/kibana\/log\nRUN rm -rf \/usr\/share\/kibana\/optimize\/*\n\nRUN mkdir \/root\/script\nADD .\/script \/root\/script\nWORKDIR \/root\/script\/\nRUN mkdir logs\nCOPY .\/docker-config\/script\/collection_alert_data_setting.py collection_alert_data_setting.py\nCOPY .\/docker-config\/script\/collection_statistical_data_setting.py collection_statistical_data_setting.py\n",
    "risk_labels":[
      {
        "label":"yum-install-without-version",
        "start":147,
        "end":200,
        "text":"yum -y install wget gcc make zlib-devel openssl-devel"
      },
      {
        "label":"use-cd-change-dir",
        "start":382,
        "end":409,
        "text":"cd Python-$PYTHON_VERSION \\"
      },
      {
        "label":"pip-install-without-version",
        "start":624,
        "end":687,
        "text":"RUN pip install elasticsearch\\nRUN pip install elasticsearch_dsl"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":689,
        "end":762,
        "text":"ADD .\/sysmon_search_plugin \/usr\/share\/kibana\/plugins\/sysmon_search_plugin"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1112,
        "end":1159,
        "text":"ADD .\/script \/root\/script\\nWORKDIR \/root\/script\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"066c6629985c9e7ea58d275ea9296ac337f928c5.dockerfile",
    "file_content":"FROM centos\nMAINTAINER \"Mohammed Zeeshan Ahmed\" <moahmed@redhat.com>\n\nRUN yum -y update\n\nENV INSTALL_PKGS \"cockpit-ws\"\n\n# Get this specific version of cockpit-ws\nRUN yum -y install ${INSTALL_PKGS} && yum clean all\n\n# And the stuff that starts the container\nRUN mkdir -p \/container && ln -s \/host\/proc\/1 \/container\/target-namespace\nADD atomic-install \/container\/atomic-install\nADD atomic-uninstall \/container\/atomic-uninstall\nADD atomic-run \/container\/atomic-run\nRUN chmod -v +x \/container\/atomic-install\nRUN chmod -v +x \/container\/atomic-uninstall\nRUN chmod -v +x \/container\/atomic-run\n\n# Make the container think it's the host OS version\nRUN rm -f \/etc\/os-release \/usr\/lib\/os-release && ln -sv \/host\/etc\/os-release \/etc\/os-release && ln -sv \/host\/usr\/lib\/os-release \/usr\/lib\/os-release\n\nLABEL INSTALL \/usr\/bin\/docker run -ti --rm --privileged -v \/:\/host IMAGE \/container\/atomic-install\nLABEL UNINSTALL \/usr\/bin\/docker run -ti --rm --privileged -v \/:\/host IMAGE \/container\/atomic-uninstall\nLABEL RUN \/usr\/bin\/docker run -d --privileged --pid=host -v \/:\/host IMAGE \/container\/atomic-run --local-ssh\n\n# Look ma, no EXPOSE\n\nCMD [\"\/container\/atomic-run\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":12,
        "end":68,
        "text":"MAINTAINER \"Mohammed Zeeshan Ahmed\" <moahmed@redhat.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM centos"
      },
      {
        "label":"yum-install-without-version",
        "start":162,
        "end":199,
        "text":"RUN yum -y install ${INSTALL_PKGS} &&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":331,
        "end":461,
        "text":"ADD atomic-install \/container\/atomic-install\\nADD atomic-uninstall \/container\/atomic-uninstall\\nADD atomic-run \/container\/atomic-run"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"083d7a52887a90da15a1d8be4eff40df40b4bab4.dockerfile",
    "file_content":"FROM ubuntu:xenial as base\n\nRUN apt-get update && apt-get -y install \\\n    sudo \\\n    curl \\\n    locales \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\nRUN locale-gen en_US.UTF-8\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\n# Add fixuid to change permissions for bind-mounts. Set uid to same as host with -u <uid>:<guid>\nRUN addgroup --gid 1000 docker && \\\n    adduser --uid 1000 --ingroup docker --home \/home\/docker --shell \/bin\/sh --disabled-password --gecos \"\" docker && \\\n    usermod -aG sudo docker && \\\n    sed -i.bkp -e \\\n      's\/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL\/%sudo ALL=NOPASSWD:ALL\/g' \\\n      \/etc\/sudoers\nRUN USER=docker && \\\n    GROUP=docker && \\\n    curl -SsL https:\/\/github.com\/boxboat\/fixuid\/releases\/download\/v0.3\/fixuid-0.3-linux-amd64.tar.gz | tar -C \/usr\/local\/bin -xzf - && \\\n    chown root:root \/usr\/local\/bin\/fixuid && \\\n    chmod 4755 \/usr\/local\/bin\/fixuid && \\\n    mkdir -p \/etc\/fixuid && \\\n    printf \"user: $USER\\ngroup: $GROUP\\npaths:\\n  - \/service\\n\" > \/etc\/fixuid\/config.yml\n\nRUN echo \"LANG=C.UTF-8\" > \/etc\/default\/locale\n\n# TAG can be specified when building with --build-arg TAG=..., this is redeclared in the source-build stage\nARG BRANCH=dev\nARG REPO=hioa-cs\nENV BRANCH=$BRANCH\nENV REPO=$REPO\n\nLABEL dockerfile.version=1 \\\n      includeos.version=$BRANCH\nWORKDIR \/service\n\n#########################\nFROM base as source-build\n\nRUN apt-get update && apt-get -y install \\\n    git \\\n    lsb-release \\\n    net-tools \\\n    wget \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Triggers new build if there are changes to head\n#ADD https:\/\/api.github.com\/repos\/$REPO\/IncludeOS\/git\/refs\/heads\/$BRANCH version.json\n\nRUN echo \"cloning $BRANCH\"\n\nRUN cd ~ && pwd && \\\n  git clone https:\/\/github.com\/$REPO\/IncludeOS.git && \\\n  cd IncludeOS && \\\n  git checkout $BRANCH && \\\n  git submodule update --init --recursive && \\\n  git fetch --tags\n\nRUN cd ~ && pwd && \\\n  cd IncludeOS && \\\n  .\/install.sh -n\n\nRUN git -C \/root\/IncludeOS describe --tags > \/ios_version.txt\n\n###########################\nFROM base as build\n\nRUN apt-get update && apt-get -y install \\\n    git \\\n    clang-5.0 \\\n    cmake \\\n    nasm \\\n    python-pip \\\n    && rm -rf \/var\/lib\/apt\/lists\/* \\\n    && pip install pystache antlr4-python2-runtime && \\\n    apt-get remove -y python-pip && \\\n    apt autoremove -y\n\nCOPY --from=source-build  \/usr\/local\/includeos \/usr\/local\/includeos\/\nCOPY --from=source-build  \/usr\/local\/bin\/boot \/usr\/local\/bin\/boot\nCOPY --from=source-build  \/root\/IncludeOS\/etc\/install_dependencies_linux.sh \/\nCOPY --from=source-build  \/root\/IncludeOS\/etc\/use_clang_version.sh \/\nCOPY --from=source-build  \/root\/IncludeOS\/lib\/uplink\/starbase \/root\/IncludeOS\/lib\/uplink\/starbase\/\nCOPY --from=source-build  \/ios_version.txt \/\nCOPY  entrypoint.sh \/\nENTRYPOINT [\"\/entrypoint.sh\"]\n\nCMD mkdir -p build && \\\n  cd build && \\\n  cp $(find \/usr\/local\/includeos -name chainloader) \/service\/build\/chainloader && \\\n  cmake .. && \\\n  make\n\n#############################\nFROM base as grubify\n\nRUN apt-get update && apt-get -y install \\\n  dosfstools \\\n  grub-pc\n\nCOPY --from=source-build \/usr\/local\/includeos\/scripts\/grubify.sh \/home\/ubuntu\/IncludeOS_install\/includeos\/scripts\/grubify.sh\n\nENTRYPOINT [\"fixuid\", \"\/home\/ubuntu\/IncludeOS_install\/includeos\/scripts\/grubify.sh\"]\n\n###############################\nFROM build as webserver\n\nRUN apt-get update && apt-get -y install git \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\nCOPY --from=source-build \/root\/IncludeOS\/examples\/acorn \/acorn\n\nWORKDIR \/acorn\n\nCOPY entrypoint.sh \/\nENTRYPOINT [\"\/entrypoint.sh\"]\nCMD mkdir build && cd build && \\\n  rm -rf \/acorn\/disk1\/public\/* && \\\n  cp -a -v \/public\/. \/acorn\/disk1\/public && \\\n  cmake .. && \\\n  make && \\\n  cp acorn \/public\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":50,
        "end":106,
        "text":"apt-get -y install \\\\nsudo \\\\ncurl \\\\nlocales \\"
      },
      {
        "label":"apt-install-without-version",
        "start":50,
        "end":106,
        "text":"apt-get -y install \\\\nsudo \\\\ncurl \\\\nlocales \\"
      },
      {
        "label":"miss-specific-tags",
        "start":1353,
        "end":1378,
        "text":"FROM base as source-build"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1402,
        "end":1466,
        "text":"apt-get -y install \\\\ngit \\\\nlsb-release \\\\nnet-tools \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1402,
        "end":1464,
        "text":"apt-get -y install \\\\ngit \\\\nlsb-release \\\\nnet-tools"
      },
      {
        "label":"use-cd-change-dir",
        "start":1679,
        "end":1685,
        "text":"RUN cd"
      },
      {
        "label":"use-cd-change-dir",
        "start":1758,
        "end":1770,
        "text":"cd IncludeOS"
      },
      {
        "label":"use-cd-change-dir",
        "start":1894,
        "end":1906,
        "text":"cd IncludeOS"
      },
      {
        "label":"use-cd-change-dir",
        "start":1871,
        "end":1879,
        "text":"RUN cd ~"
      },
      {
        "label":"miss-specific-tags",
        "start":2022,
        "end":2040,
        "text":"FROM base as build"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2064,
        "end":2133,
        "text":"apt-get -y install \\\\ngit \\\\nclang-5.0 \\\\ncmake \\\\nnasm \\"
      },
      {
        "label":"apt-install-without-version",
        "start":2064,
        "end":2133,
        "text":"apt-get -y install \\\\ngit \\\\nclang-5.0 \\\\ncmake \\\\nnasm \\"
      },
      {
        "label":"pip-install-without-version",
        "start":2195,
        "end":2238,
        "text":"pip install pystache antlr4-python2-runtime"
      },
      {
        "label":"use-cd-change-dir",
        "start":2810,
        "end":2818,
        "text":"cd build"
      },
      {
        "label":"miss-specific-tags",
        "start":2962,
        "end":2982,
        "text":"FROM base as grubify"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3006,
        "end":3051,
        "text":"apt-get -y install \\\\ndosfstools \\\\ngrub-pc"
      },
      {
        "label":"apt-install-without-version",
        "start":3006,
        "end":3051,
        "text":"apt-get -y install \\\\ndosfstools \\\\ngrub-pc"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3344,
        "end":3366,
        "text":"apt-get -y install git"
      },
      {
        "label":"apt-install-without-version",
        "start":3344,
        "end":3366,
        "text":"apt-get -y install git"
      },
      {
        "label":"use-cd-change-dir",
        "start":3555,
        "end":3566,
        "text":"cd build &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"08500dea1f77dcbf742297d7da47ab4a2e7dcdfe.dockerfile",
    "file_content":"FROM ubuntu:16.04  \nMAINTAINER Dan Leehr \"dan.leehr@duke.edu\"  \nENV DEBIAN_FRONTEND noninteractive  \n  \nWORKDIR \/tmp  \n  \nRUN apt-get update && \\  \napt-get install -y \\  \nzlib1g-dev \\  \nbuild-essential \\  \ncurl  \n  \n### Install bwa  \nENV VERSION 0.7.12  \nENV NAME bwa  \nENV URL \"https:\/\/github.com\/lh3\/bwa\/archive\/${VERSION}.tar.gz\"  \nRUN curl -SL $URL | tar -zxv && \\  \ncd ${NAME}-${VERSION} && \\  \nmake -j 4 && \\  \ncd .. && \\  \ncp .\/${NAME}-${VERSION}\/${NAME} \/usr\/local\/bin\/ && \\  \nstrip \/usr\/local\/bin\/${NAME}; true && \\  \nrm -rf .\/${NAME}-${VERSION}\/  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":61,
        "text":"MAINTAINER Dan Leehr \"dan.leehr@duke.edu\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":148,
        "end":210,
        "text":"apt-get install -y \\\\nzlib1g-dev \\\\nbuild-essential \\\\ncurl"
      },
      {
        "label":"apt-install-without-version",
        "start":148,
        "end":210,
        "text":"apt-get install -y \\\\nzlib1g-dev \\\\nbuild-essential \\\\ncurl"
      },
      {
        "label":"use-cd-change-dir",
        "start":371,
        "end":380,
        "text":"cd ${NAME"
      },
      {
        "label":"use-cd-change-dir",
        "start":417,
        "end":425,
        "text":"cd .. &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7156d131095c1155965c5f474dde78d0cfbbb4a9.dockerfile",
    "file_content":"FROM java:7\nMAINTAINER Justin Littman <justinlittman@gwu.edu>\n\nRUN apt-get update && apt-get install -y \\\n    ant\nWORKDIR \/tmp\n#Getting VIVO separately from VITRO\nRUN wget https:\/\/github.com\/vivo-project\/VIVO\/archive\/rel-1.8.zip\nRUN unzip rel-1.8*.zip\nRUN wget https:\/\/github.com\/vivo-project\/Vitro\/archive\/rel-1.8.zip\nRUN unzip rel-1.8*.zip.1\nRUN mv VIVO-rel-1.8 VIVO-rel\nRUN mv Vitro-rel-1.8 VIVO-rel\/vitro-core\nWORKDIR \/tmp\/VIVO-rel\nADD build.properties \/tmp\/VIVO-rel\/\nVOLUME [\"\/usr\/local\/tomcat\/webapps\",\"\/usr\/local\/vivo\/home\"]\nRUN ant compile\n#Only build if not already built to avoid overwriting\n#To force a build, delete runtime.properties.\nCMD [ ! -f \/usr\/local\/vivo\/home\/runtime.properties ] \\\n    && ant deploy \\\n    && chmod ugo+w -R \/usr\/local\/vivo\/home \\\n    && cp \/usr\/local\/vivo\/home\/config\/example.applicationSetup.n3 \/usr\/local\/vivo\/home\/config\/applicationSetup.n3 \\\n    && cp \/usr\/local\/vivo\/home\/example.runtime.properties \/usr\/local\/vivo\/home\/runtime.properties\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":12,
        "end":61,
        "text":"MAINTAINER Justin Littman <justinlittman@gwu.edu>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":85,
        "end":113,
        "text":"apt-get install -y \\\\nant"
      },
      {
        "label":"apt-install-without-version",
        "start":85,
        "end":113,
        "text":"apt-get install -y \\\\nant"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":436,
        "end":471,
        "text":"ADD build.properties \/tmp\/VIVO-rel\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"73720d390cdec19e0c871aa09cb8c26d626c0d9c.dockerfile",
    "file_content":"FROM lsiobase\/xenial  \nMAINTAINER ChiefN  \n  \nrun apt-get update && \\  \napt-get -y install libboost-all-dev && \\  \napt-get -y upgrade  \n  \n# cleanup  \nRUN apt-get clean && \\  \nrm -rf \\  \n\/tmp\/* \\  \n\/var\/lib\/apt\/lists\/* \\  \n\/var\/tmp\/*\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":20,
        "text":"FROM lsiobase\/xenial"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":23,
        "end":40,
        "text":"MAINTAINER ChiefN"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":72,
        "end":107,
        "text":"apt-get -y install libboost-all-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":72,
        "end":107,
        "text":"apt-get -y install libboost-all-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"74df4276d2c620a7ebc74d98af757e6e945e5496.dockerfile",
    "file_content":"FROM       registry\nMAINTAINER Matthew Fisher <me@bacongobbler.com>\n\n# python-swiftclient requires lxml\nRUN apt-get update && apt-get install -yq python-lxml\n\nCOPY . \/src\nRUN pip install \/src\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM registry"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":67,
        "text":"MAINTAINER Matthew Fisher <me@bacongobbler.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":126,
        "end":157,
        "text":"apt-get install -yq python-lxml"
      },
      {
        "label":"apt-install-without-version",
        "start":126,
        "end":157,
        "text":"apt-get install -yq python-lxml"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"75f82b3a0cb10ebb24a5902cd6763b02562f33cb.dockerfile",
    "file_content":"FROM debian:wheezy\nMAINTAINER Akeem McLennon <akeem@mclennon.com>\n\nUSER root\nRUN echo \"deb http:\/\/gce_debian_mirror.storage.googleapis.com wheezy contrib non-free\" >> \/etc\/apt\/sources.list \\\n  && echo \"deb http:\/\/gce_debian_mirror.storage.googleapis.com wheezy-updates contrib non-free\" >> \/etc\/apt\/sources.list \\\n  && echo \"deb http:\/\/security.debian.org\/ wheezy\/updates contrib non-free\" >> \/etc\/apt\/sources.list\nRUN apt-get -y update\nRUN apt-get -y dist-upgrade\nRUN echo ttf-mscorefonts-installer msttcorefonts\/accepted-mscorefonts-eula \\\n    select true | debconf-set-selections\nRUN apt-get install --no-install-recommends -y -q  \\\n    tar wget unzip xvfb xauth \\\n    ttf-kochi-gothic ttf-kochi-mincho ttf-mscorefonts-installer \\\n    ttf-indic-fonts ttf-dejavu-core fonts-thai-tlwg\nRUN apt-get -y install git-core\nWORKDIR \/tmp\nRUN git clone -b 2.1 --recursive https:\/\/github.com\/ariya\/phantomjs\nRUN mv phantomjs \/src\nRUN wget https:\/\/github.com\/detro\/ghostdriver\/archive\/master.tar.gz\nRUN tar -xzf master.tar.gz\nRUN ghostdriver-master\/tools\/export_ghostdriver.sh \/src\nWORKDIR \/src\nRUN sh deploy\/docker-build.sh\nRUN cp \/root\/build\/src\/bin\/phantomjs \/usr\/bin\/ \nRUN apt-get autoremove -y\nRUN apt-get clean all\nADD join-hub.sh \/usr\/local\/phantomjs\/\n\nENTRYPOINT [ \"sh\", \"-c\", \"\/usr\/local\/phantomjs\/join-hub.sh\" ]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":65,
        "text":"MAINTAINER Akeem McLennon <akeem@mclennon.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":583,
        "end":785,
        "text":"RUN apt-get install --no-install-recommends -y -q \\\\ntar wget unzip xvfb xauth \\\\nttf-kochi-gothic ttf-kochi-mincho ttf-mscorefonts-installer \\\\nttf-indic-fonts ttf-dejavu-core fonts-thai-tlwg"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":786,
        "end":817,
        "text":"RUN apt-get -y install git-core"
      },
      {
        "label":"apt-install-without-version",
        "start":786,
        "end":817,
        "text":"RUN apt-get -y install git-core"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1211,
        "end":1248,
        "text":"ADD join-hub.sh \/usr\/local\/phantomjs\/"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7883b8a850bfaf92c7ee9fef2842a6c4908a8ace.dockerfile",
    "file_content":"FROM capd\/baseimage:0.1.2  \nMAINTAINER Mateusz Juda <mateusz.juda@{gmail.com,ii.uj.edu.pl}>  \n# Based on rfkrocktk\/docker-puppet  \nENV HOME \/root  \nENV LANG en_US.UTF-8  \nRUN locale-gen en_US.UTF-8  \n  \n# Install the latest stable Puppet client  \nRUN apt-get update -q 2 && DEBIAN_FRONTEND=noninteractive \\  \napt-get install --yes -q 2 puppet >\/dev\/null  \n  \n# Install startup script for adding the cron job  \nADD scripts\/50_add_puppet_cron.sh \/etc\/my_init.d\/  \nRUN chmod +x \/etc\/my_init.d\/50_add_puppet_cron.sh  \n  \n# Install actual Puppet agent run command  \nADD scripts\/run-puppet-agent.sh \/sbin\/run-puppet-agent  \nRUN chmod +x \/sbin\/run-puppet-agent && puppet agent --enable  \n  \n# Use the runit init system.  \nCMD [\"\/sbin\/my_init\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":28,
        "end":91,
        "text":"MAINTAINER Mateusz Juda <mateusz.juda@{gmail.com,ii.uj.edu.pl}>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":309,
        "end":342,
        "text":"apt-get install --yes -q 2 puppet"
      },
      {
        "label":"apt-install-without-version",
        "start":309,
        "end":342,
        "text":"apt-get install --yes -q 2 puppet"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":410,
        "end":449,
        "text":"ADD scripts\/50_add_puppet_cron.sh \/etc\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":561,
        "end":615,
        "text":"ADD scripts\/run-puppet-agent.sh \/sbin\/run-puppet-agent"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4970f805845e903e4c137487c25896a5f8ccaa42.dockerfile",
    "file_content":"FROM ubuntu:13.10\nMAINTAINER Lachie Cox <lachiec@gmail.com>\n\nRUN apt-get update && \\\n      apt-get -y install \\\n      curl \\\n      git \\\n      ca-certificates \\\n      --no-install-recommends\n\nRUN curl -s https:\/\/go.googlecode.com\/files\/go1.2.linux-amd64.tar.gz | tar -v -C \/usr\/local -xz\nENV\tPATH\t\/usr\/local\/go\/bin:$PATH\nENV\tGOPATH\t\/go:\/go\/src\/github.com\/blake-education\/dogestry\/vendor\/go\nADD . \/go\/src\/github.com\/blake-education\/dogestry\n\nRUN cd \/go\/src\/github.com\/blake-education\/dogestry && \\\n    go get && \\\n    go build && \\\n    cp dogestry \/dogestry\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":59,
        "text":"MAINTAINER Lachie Cox <lachiec@gmail.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":91,
        "end":190,
        "text":"apt-get -y install \\\\ncurl \\\\ngit \\\\nca-certificates \\\\n--no-install-recommends"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":390,
        "end":439,
        "text":"ADD . \/go\/src\/github.com\/blake-education\/dogestry"
      },
      {
        "label":"use-cd-change-dir",
        "start":441,
        "end":491,
        "text":"RUN cd \/go\/src\/github.com\/blake-education\/dogestry"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4f1e066dd4a7a815222b4c06c6dab76c66a85adc.dockerfile",
    "file_content":"FROM golang:stretch AS hapttic\n\nRUN git clone https:\/\/github.com\/jsoendermann\/hapttic.git && \\\n    cd hapttic\/ && \\\n    go build -o hapttic .\n\nFROM debian:stretch-slim AS docker-tc\n\nCOPY --from=hapttic \/go\/hapttic\/hapttic \/usr\/bin\/hapttic\nRUN hapttic -version && \\\n    apt-get update && \\\n    apt-get install -y \\\n        iproute2 iptables iperf iputils-ping \\\n        curl jq \\\n        && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    apt-get clean && \\\n    mkdir -p \/var\/docker-tc && \\\n    chmod +x \/usr\/bin\/hapttic\n\nARG S6_OVERLAY_VERSION=1.21.4.0\nRUN curl -sSfL https:\/\/github.com\/just-containers\/s6-overlay\/releases\/download\/v${S6_OVERLAY_VERSION}\/s6-overlay-amd64.tar.gz | tar zxvC \/ && \\\n    rm -rf \/etc\/services.d \/etc\/cont-init.d \/etc\/cont-finish.d && \\\n    ln -sf \/docker-tc\/etc\/services.d \/etc && \\\n    ln -sf \/docker-tc\/etc\/cont-init.d \/etc && \\\n    ln -sf \/docker-tc\/etc\/cont-finish.d \/etc\n\nARG DOCKER_VERSION=\"\"\nRUN ( curl -fsSL get.docker.com | VERSION=${DOCKER_VERSION} CHANNEL=edge sh ) && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    apt-get clean\n\nENTRYPOINT [\"\/init\"]\nEXPOSE 80\/tcp\nVOLUME [\"\/var\/docker-tc\"]\nARG VERSION=dev\nARG VCS_REF\nARG BUILD_DATE\nENV DOCKER_TC_VERSION=\"${VERSION:-dev}\" \\\n    HTTP_BIND=127.0.0.1 \\\n    HTTP_PORT=4080 \\\n    S6_KILL_GRACETIME=0 \\\n    S6_KILL_FINISH_MAXTIME=0 \\\n    S6_KEEP_ENV=1 \\\n    S6_BEHAVIOUR_IF_STAGE2_FAILS=2\nLABEL maintainer=\"Łukasz Lach <llach@llach.pl>\" \\\n      org.opencontainers.image.title=\"docker-tc\" \\\n      org.opencontainers.image.description=\"Docker Traffic Control\" \\\n      org.opencontainers.image.authors=\"Łukasz Lach <llach@llach.pl>\" \\\n      org.opencontainers.image.documentation=\"https:\/\/github.com\/lukaszlach\/docker-tc\" \\\n      org.opencontainers.image.version=${VERSION} \\\n      org.opencontainers.image.revision=${VCS_REF} \\\n      org.opencontainers.image.created=${BUILD_DATE} \\\n      com.docker-tc.enabled=0 \\\n      com.docker-tc.self=1\n\nADD . \/docker-tc",
    "risk_labels":[
      {
        "label":"use-cd-change-dir",
        "start":99,
        "end":110,
        "text":"cd hapttic\/"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":293,
        "end":378,
        "text":"apt-get install -y \\\\niproute2 iptables iperf iputils-ping \\\\ncurl jq \\"
      },
      {
        "label":"apt-install-without-version",
        "start":293,
        "end":391,
        "text":"apt-get install -y \\\\niproute2 iptables iperf iputils-ping \\\\ncurl jq \\\\n&& \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1919,
        "end":1935,
        "text":"ADD . \/docker-tc"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"866a667132422f0e39ddf9e090b66da06627f001.dockerfile",
    "file_content":"# Copyright (c) 2016-2019 Crave.io Inc. All rights reserved\nFROM accupara\/ubuntu:16.04\nMAINTAINER Crave.io Inc. \"contact@crave.io\"\n\n# Keep the update separate so that Docker build system can cache it.\nRUN sudo apt-get update\nRUN sudo apt-get install -y \\\n        autoconf \\\n        automake \\\n        bc \\\n        libelf-dev \\\n        libncurses5-dev \\\n        libssl-dev \\\n        openssl \\\n        perl \\\n        wget\n\nRUN wget ftp:\/\/ftp.denx.de\/pub\/eldk\/5.6\/install.sh && chmod +x install.sh \\\n && mkdir -p targets\/armv7a-hf && cd targets\/armv7a-hf && wget -nv ftp:\/\/ftp.denx.de\/pub\/eldk\/5.6\/targets\/armv7a-hf\/* && cd ..\/..\/ \\\n && sudo .\/install.sh -s toolchain -r - armv7a-hf \\\n && rm -rf targets\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":201,
        "end":224,
        "text":"RUN sudo apt-get update"
      },
      {
        "label":"use-sudo-run",
        "start":225,
        "end":251,
        "text":"RUN sudo apt-get install -"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":229,
        "end":419,
        "text":"sudo apt-get install -y \\\\nautoconf \\\\nautomake \\\\nbc \\\\nlibelf-dev \\\\nlibncurses5-dev \\\\nlibssl-dev \\\\nopenssl \\\\nperl \\\\nwget"
      },
      {
        "label":"use-sudo-run",
        "start":229,
        "end":419,
        "text":"sudo apt-get install -y \\\\nautoconf \\\\nautomake \\\\nbc \\\\nlibelf-dev \\\\nlibncurses5-dev \\\\nlibssl-dev \\\\nopenssl \\\\nperl \\\\nwget"
      },
      {
        "label":"use-sudo-run",
        "start":631,
        "end":664,
        "text":"&& sudo .\/install.sh -s toolchain"
      },
      {
        "label":"apt-install-without-version",
        "start":229,
        "end":419,
        "text":"sudo apt-get install -y \\\\nautoconf \\\\nautomake \\\\nbc \\\\nlibelf-dev \\\\nlibncurses5-dev \\\\nlibssl-dev \\\\nopenssl \\\\nperl \\\\nwget"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":87,
        "end":130,
        "text":"MAINTAINER Crave.io Inc. \"contact@crave.io\""
      },
      {
        "label":"use-cd-change-dir",
        "start":618,
        "end":627,
        "text":"cd ..\/..\/"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "use-sudo-run"
    ]
  },
  {
    "filename":"87461dcde9a34a5307c7d3d864a67b203e7b13fe.dockerfile",
    "file_content":"FROM base\n\nRUN apt-get -q -y install openjdk-7-jre-headless && apt-get clean\n\n# Install Jenkins\nRUN mkdir \/opt\/jenkins\nRUN wget -q -O \/opt\/jenkins\/jenkins.war http:\/\/mirrors.jenkins-ci.org\/war\/1.550\/jenkins.war\nRUN chmod -R 644 \/opt\/jenkins\/jenkins.war\nADD start-jenkins.sh \/opt\/jenkins\/start-jenkins.sh\nRUN chmod -R 644 \/opt\/jenkins\/start-jenkins.sh\nRUN useradd -m -d \/var\/lib\/jenkins -u 1000 jenkins\n\nEXPOSE 8080\nCMD [\"bash\", \"\/opt\/jenkins\/start-jenkins.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":9,
        "text":"FROM base"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":11,
        "end":62,
        "text":"RUN apt-get -q -y install openjdk-7-jre-headless &&"
      },
      {
        "label":"apt-install-without-version",
        "start":11,
        "end":62,
        "text":"RUN apt-get -q -y install openjdk-7-jre-headless &&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":253,
        "end":303,
        "text":"ADD start-jenkins.sh \/opt\/jenkins\/start-jenkins.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"87b381c623a7b8cf977b5f94177f98552c6524af.dockerfile",
    "file_content":"from debian  \nrun apt-get update && \\  \napt-get install -y maven openjdk-7-jdk && \\  \napt-get clean  \nadd Serveur\/pom.xml \/srv\/server\/  \nworkdir \/srv\/server\/  \nrun mvn install  \nadd Serveur\/src \/srv\/server\/src\/  \nexpose 8080  \ncmd mvn jetty:run  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"from debian"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":40,
        "end":75,
        "text":"apt-get install -y maven openjdk-7-"
      },
      {
        "label":"apt-install-without-version",
        "start":40,
        "end":75,
        "text":"apt-get install -y maven openjdk-7-"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":102,
        "end":134,
        "text":"add Serveur\/pom.xml \/srv\/server\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":178,
        "end":210,
        "text":"add Serveur\/src \/srv\/server\/src\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"8aa7166888ff24f2f558515618f5c29849bad3f6.dockerfile",
    "file_content":"# 1. build the image locally\n# docker build -t vanessa\/sorting-hat .\n#\n# 2. map to localhost for rtweet verification, and provide your Twitter username\n# docker run -p 80:80 vanessa\/sorting-hat vsoch\n# \nFROM r-base\nRUN mkdir \/code\nWORKDIR \/code\nADD . \/code\nRUN apt-get update && apt-get install -y openssl libssl-dev curl libcurl4-openssl-dev\n\n# This is inefficient, I'm ok with it :)\nRUN Rscript -e \"install.packages('httr')\"\nRUN Rscript -e \"install.packages('curl')\"\nRUN Rscript -e \"install.packages('openssl')\"\nRUN Rscript -e \"install.packages('devtools')\"\nRUN Rscript -e \"install.packages('dplyr')\"\nRUN Rscript -e \"install.packages('httpuv')\"\nRUN Rscript -e \"devtools::install_github('mkearney\/rtweet')\"\nENTRYPOINT [\"Rscript\", \"\/code\/sorting_code.R\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":203,
        "end":214,
        "text":"FROM r-base"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":245,
        "end":256,
        "text":"ADD . \/code"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":279,
        "end":342,
        "text":"apt-get install -y openssl libssl-dev curl libcurl4-openssl-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":279,
        "end":342,
        "text":"apt-get install -y openssl libssl-dev curl libcurl4-openssl-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"8cc4af4edd2955420f7c318d756b19b1033f7ed5.dockerfile",
    "file_content":"FROM ubuntu:trusty\n\nMAINTAINER Piotr Zduniak <piotr@zduniak.net>\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN rm \/bin\/sh && ln -s \/bin\/bash \/bin\/sh\n\nRUN apt-get update && apt-get upgrade -y && apt-get install -y nginx curl\nRUN apt-get install -y git\nRUN curl -o- https:\/\/raw.githubusercontent.com\/creationix\/nvm\/v0.25.4\/install.sh | bash\nRUN . \/root\/.nvm\/nvm.sh && nvm install 0.12\nRUN . \/root\/.nvm\/nvm.sh && nvm use 0.12 && npm install gulpjs\/gulp-cli#4.0 -g\nRUN . \/root\/.nvm\/nvm.sh && nvm use 0.12 && npm install bower -g\n\nRUN rm \/etc\/nginx\/sites-enabled\/default\nCOPY .\/website.conf \/etc\/nginx\/sites-enabled\/default\n\nCOPY . \/tmp\/build\nRUN . \/root\/.nvm\/nvm.sh && nvm use 0.12 && cd \/tmp\/build && npm install && source .\/prepare-env.sh && gulp production\nRUN rm -f \/var\/www && mv \/tmp\/build\/dist \/var\/www\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":63,
        "text":"MAINTAINER Piotr Zduniak <piotr@zduniak.net"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":189,
        "end":218,
        "text":"apt-get install -y nginx curl"
      },
      {
        "label":"apt-install-without-version",
        "start":189,
        "end":245,
        "text":"apt-get install -y nginx curl\\nRUN apt-get install -y git"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":673,
        "end":689,
        "text":"&& cd \/tmp\/build"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":219,
        "end":245,
        "text":"RUN apt-get install -y git"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8d40218a9a67d297e20daf7acab2c0867cc6aa77.dockerfile",
    "file_content":"FROM sthysel\/fastxtk  \nMAINTAINER a504082002 <a504082002@gmail.com>  \n  \nRUN apt-get update -qq && \\  \napt-get install -yq --no-install-recommends \\  \npython && \\  \napt-get clean && \\  \nrm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*  \n  \nADD batch.py \/program\/batch.py  \n  \nWORKDIR \/data  \nCMD [\"bash\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":20,
        "text":"FROM sthysel\/fastxtk"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":23,
        "end":66,
        "text":"MAINTAINER a504082002 <a504082002@gmail.com"
      },
      {
        "label":"apt-install-without-version",
        "start":103,
        "end":183,
        "text":"apt-get install -yq --no-install-recommends \\\\npython && \\\\napt-get clean && \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":237,
        "end":267,
        "text":"ADD batch.py \/program\/batch.py"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"8f167ed7681efe5936129d89596d2f803dcc4ceb.dockerfile",
    "file_content":"FROM ppc64le\/python:2.7\n\nRUN apt-get update && apt-get install -y python-pip && \\\n    pip install --upgrade pip cython nose && \\\n\tcd \/$HOME\/ && git clone https:\/\/github.com\/enginoid\/python-dropbox && \\\n\tcd \/$HOME\/python-dropbox\/ && python setup.py build && python setup.py install && nosetests && \\\n\tcd \/$HOME\/ && rm -rf python-dropbox\n\t\nCMD [\"python\", \"\/bin\/bash\"] \n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":47,
        "end":76,
        "text":"apt-get install -y python-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":47,
        "end":76,
        "text":"apt-get install -y python-pip"
      },
      {
        "label":"pip-install-without-version",
        "start":86,
        "end":123,
        "text":"pip install --upgrade pip cython nose"
      },
      {
        "label":"use-cd-change-dir",
        "start":130,
        "end":181,
        "text":"cd \/$HOME\/ && git clone https:\/\/github.com\/enginoid"
      },
      {
        "label":"use-cd-change-dir",
        "start":203,
        "end":335,
        "text":"cd \/$HOME\/python-dropbox\/ && python setup.py build && python setup.py install && nosetests && \\\\ncd \/$HOME\/ && rm -rf python-dropbox"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5256e4ede3e550c22d6b1eef57ac25e7b05902e8.dockerfile",
    "file_content":"FROM debian:jessie\n\nMAINTAINER Andrea Usuelli <andrea.usuelli@prima.it>\n\nENV FILEBEAT_VERSION=5.5.2 \\\n    FILEBEAT_SHA1=4191e8864b1d074f6c2a303f22cc2ed0c6361ee5\n\nRUN set -x && \\\n  apt-get update && \\\n  apt-get install -y wget && \\\n  wget https:\/\/artifacts.elastic.co\/downloads\/beats\/filebeat\/filebeat-${FILEBEAT_VERSION}-linux-x86_64.tar.gz -O \/opt\/filebeat.tar.gz && \\\n  cd \/opt && \\\n  echo \"${FILEBEAT_SHA1}  filebeat.tar.gz\" | sha1sum -c - && \\\n  tar xzvf filebeat.tar.gz && \\\n  cd filebeat-* && \\\n  cp filebeat \/bin && \\\n  cd \/opt && \\\n  rm -rf filebeat* && \\\n  apt-get purge -y wget && \\\n  apt-get autoremove -y && \\\n  apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nCOPY docker-entrypoint.sh \/\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [ \"filebeat\", \"-e\" ]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":71,
        "text":"MAINTAINER Andrea Usuelli <andrea.usuelli@prima.it>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":202,
        "end":225,
        "text":"apt-get install -y wget"
      },
      {
        "label":"apt-install-without-version",
        "start":202,
        "end":228,
        "text":"apt-get install -y wget &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":372,
        "end":384,
        "text":"cd \/opt && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":482,
        "end":500,
        "text":"cd filebeat-* && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":527,
        "end":539,
        "text":"cd \/opt && \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"552d974c5236271d3c06f95a00393a9654401663.dockerfile",
    "file_content":"FROM ubuntu:14.04\n\nMAINTAINER Craig Citro <craigcitro@google.com>\n\n# Pick up some TF dependencies\nRUN apt-get update && apt-get install -y \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-numpy \\\n        python-pip \\\n        python-scipy \\\n        && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN curl -O https:\/\/bootstrap.pypa.io\/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        && \\\n    python -m ipykernel.kernelspec\n\n# Install TensorFlow CPU version.\nENV TENSORFLOW_VERSION 0.6.0\nRUN pip --no-cache-dir install \\\n    https:\/\/storage.googleapis.com\/tensorflow\/linux\/cpu\/tensorflow-${TENSORFLOW_VERSION}-cp27-none-linux_x86_64.whl\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config.py \/root\/.jupyter\/\n\n# Jupyter has issues with being run directly:\n#   https:\/\/github.com\/ipython\/ipython\/issues\/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh \/\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n\nWORKDIR \"\/root\"\n\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":64,
        "text":"MAINTAINER Craig Citro <craigcitro@google.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":120,
        "end":315,
        "text":"apt-get install -y \\\\ncurl \\\\nlibfreetype6-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\npython-numpy \\\\npython-pip \\\\npython-scipy \\"
      },
      {
        "label":"apt-install-without-version",
        "start":120,
        "end":315,
        "text":"apt-get install -y \\\\ncurl \\\\nlibfreetype6-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\npython-numpy \\\\npython-pip \\\\npython-scipy \\"
      },
      {
        "label":"pip-install-without-version",
        "start":485,
        "end":576,
        "text":"RUN pip --no-cache-dir install \\\\nipykernel \\\\njupyter \\\\nmatplotlib \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"57d04fec1ff7e377b0a96a7067681b07e93c70e7.dockerfile",
    "file_content":"FROM redis:3.2\n\nMAINTAINER Ruian Duan <duanruian@gmail.com>\n\n# Some Environment Variables\nENV HOME \/root\nENV DEBIAN_FRONTEND noninteractive\n\n# Install system dependencies\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -yqq \\\n      net-tools supervisor ruby rubygems locales gettext-base wget && \\\n    apt-get clean -yqq\nRUN apt-get install -y gcc make g++ build-essential libc6-dev tcl git supervisor\nRUN apt-get install -yqq zlib1g zlib1g-dev openssl libssl-dev\n\n# Ensure UTF-8 lang and locale\nRUN locale-gen en_US.UTF-8\nENV LANG       en_US.UTF-8\nENV LC_ALL     en_US.UTF-8\n\n# Install latest version of ruby as required by redis\nWORKDIR \/ruby\nRUN wget https:\/\/cache.ruby-lang.org\/pub\/ruby\/2.2\/ruby-2.2.2.tar.gz -O ruby-2.2.2.tar.gz\nRUN tar -zxf ruby-2.2.2.tar.gz && cd ruby-2.2.2 && .\/configure && make && make install\n# RUN cd ruby-2.2.2\/ext\/zlib && ruby .\/extconf.rb && make && make install\n# RUN cd ruby-2.2.2\/ext\/openssl && ruby .\/extconf.rb && make && make install\n\nRUN gem install redis\n\n# Install the requested version of redis\nARG redis_version=4.0.2\n\nRUN wget -qO redis.tar.gz http:\/\/download.redis.io\/releases\/redis-${redis_version}.tar.gz \\\n    && tar xfz redis.tar.gz -C \/ \\\n    && mv \/redis-$redis_version \/redis\n\nRUN (cd \/redis && make)\n\nRUN mkdir \/redis-conf\nRUN mkdir \/redis-data\n\nCOPY .\/docker-data\/redis-cluster.tmpl \/redis-conf\/redis-cluster.tmpl\nCOPY .\/docker-data\/redis.tmpl \/redis-conf\/redis.tmpl\n\n# Add supervisord configuration\nCOPY .\/docker-data\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf\n\n# Add startup script\nCOPY .\/docker-data\/docker-entrypoint.sh \/docker-entrypoint.sh\nRUN chmod 755 \/docker-entrypoint.sh\n\nEXPOSE 6000-6008 7000-7008\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"redis-cluster\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":16,
        "end":59,
        "text":"MAINTAINER Ruian Duan <duanruian@gmail.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":203,
        "end":321,
        "text":"apt-get install --no-install-recommends -yqq \\\\nnet-tools supervisor ruby rubygems locales gettext-base wget && \\"
      },
      {
        "label":"apt-install-without-version",
        "start":345,
        "end":487,
        "text":"RUN apt-get install -y gcc make g++ build-essential libc6-dev tcl git supervisor\\nRUN apt-get install -yqq zlib1g zlib1g-dev openssl libssl-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":345,
        "end":519,
        "text":"RUN apt-get install -y gcc make g++ build-essential libc6-dev tcl git supervisor\\nRUN apt-get install -yqq zlib1g zlib1g-dev openssl libssl-dev\\n\\n# Ensure UTF-8 lang and locale"
      },
      {
        "label":"use-cd-change-dir",
        "start":848,
        "end":874,
        "text":"RUN cd ruby-2.2.2\/ext\/zlib"
      },
      {
        "label":"use-cd-change-dir",
        "start":922,
        "end":954,
        "text":"RUN cd ruby-2.2.2\/ext\/openssl &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1259,
        "end":1268,
        "text":"cd \/redis"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"59bcf7606b84a2b51ab885738b8ae88669788b90.dockerfile",
    "file_content":"FROM debian:stretch\nMAINTAINER SynoCommunity <https:\/\/synocommunity.com>\n\nENV LANG C.UTF-8\n\n# Manage i386 arch\nRUN dpkg --add-architecture i386\n\n# Include backports for recent Meson build tool\nRUN echo \"deb http:\/\/deb.debian.org\/debian stretch-backports main contrib non-free\" > \/etc\/apt\/sources.list.d\/stretch-backports.list\n\n# Install required packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y automake \\\n        libtool \\\n        bc \\\n        bison \\\n        build-essential \\\n        check \\\n        cmake \\\n        curl \\\n        cython \\\n        debootstrap \\\n        expect \\\n        flex \\\n        gettext \\\n        git \\\n        gperf \\\n        imagemagick \\\n        intltool \\\n        libbz2-dev \\\n        libc6-i386 \\\n        libcppunit-dev \\\n        libffi-dev \\\n        libgc-dev \\\n        libltdl-dev \\\n        libmount-dev \\\n        libpcre3-dev \\\n        libssl-dev \\\n        libunistring-dev \\\n        unzip \\\n        lzip \\\n        mercurial \\\n        ncurses-dev \\\n        php \\\n        pkg-config \\\n        python3 \\\n        subversion \\\n        swig \\\n        xmlto \\\n        zlib1g-dev && \\\n    apt-get -t stretch-backports -y install meson && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n# recent meson for fuse and sshfs\n\n# Install setuptools, wheel and pip for Python3\nRUN wget https:\/\/bootstrap.pypa.io\/get-pip.py -O - | python3\n\n# Install setuptools, pip, virtualenv, wheel and httpie for Python2\nRUN wget https:\/\/bootstrap.pypa.io\/get-pip.py -O - | python\nRUN pip install virtualenv httpie\n\n# Volume pointing to spksrc sources\nVOLUME \/spksrc\n\nWORKDIR \/spksrc\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":71,
        "text":"MAINTAINER SynoCommunity <https:\/\/synocommunity.com"
      },
      {
        "label":"apt-install-without-version",
        "start":383,
        "end":781,
        "text":"apt-get install --no-install-recommends -y automake \\\\nlibtool \\\\nbc \\\\nbison \\\\nbuild-essential \\\\ncheck \\\\ncmake \\\\ncurl \\\\ncython \\\\ndebootstrap \\\\nexpect \\\\nflex \\\\ngettext \\\\ngit \\\\ngperf \\\\nimagemagick \\\\nintltool \\\\nlibbz2-dev \\\\nlibc6-i386 \\\\nlibcppunit-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":1544,
        "end":1577,
        "text":"RUN pip install virtualenv httpie"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1147,
        "end":1192,
        "text":"apt-get -t stretch-backports -y install meson"
      },
      {
        "label":"apt-install-without-version",
        "start":1147,
        "end":1192,
        "text":"apt-get -t stretch-backports -y install meson"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5ae8f41e388f8afd5038f0a81a44d2cd00eb00fc.dockerfile",
    "file_content":"FROM ubuntu:latest\nMAINTAINER Gianluca Arbezzano <gianarb92@gmail.com>\n\nWORKDIR \/tmp\n\nRUN apt-get update\nRUN apt-get install -y git build-essential \\\n    ocaml wget unzip zlib1g zlib1g-dev mercurial camlp4-extra\n\nRUN wget https:\/\/raw.githubusercontent.com\/ocaml\/opam\/master\/shell\/opam_installer.sh\nRUN yes | sh .\/opam_installer.sh \/usr\/local\/bin\nRUN eval `opam config env`\nRUN opam init\nRUN opam install -y camlp4\n\nRUN wget https:\/\/github.com\/facebook\/pfff\/archive\/master.tar.gz\nRUN tar -zxvf master.tar.gz\nWORKDIR .\/pfff-master\n\nRUN .\/configure\nRUN make depend\nRUN make install\n\nWORKDIR \/project\n\nCMD [\"pfff\", \"-v\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":69,
        "text":"MAINTAINER Gianluca Arbezzano <gianarb92@gmail.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":105,
        "end":211,
        "text":"RUN apt-get install -y git build-essential \\\\nocaml wget unzip zlib1g zlib1g-dev mercurial camlp4-extra"
      },
      {
        "label":"apt-install-without-version",
        "start":105,
        "end":211,
        "text":"RUN apt-get install -y git build-essential \\\\nocaml wget unzip zlib1g zlib1g-dev mercurial camlp4-extra"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"5b4f99502d6adc0980d84ef8e148075446363018.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER Grigori Fursin <Grigori.Fursin@cTuning.org>\nMAINTAINER Anton Lokhmotov <anton@dividiti.com>\n\n# Install min standard packages.\nRUN apt-get update && apt-get install -y \\\n    git bzip2 sudo wget zip\n\n# Install Android SDK\nRUN cd \/opt ; \\\n    wget https:\/\/dl.google.com\/android\/android-sdk_r24.4.1-linux.tgz ; \\\n    gzip -d android-sdk_r24.4.1-linux.tgz ; \\\n    tar xvf android-sdk_r24.4.1-linux.tar ; \\\n    rm android-sdk_r24.4.1-linux.tar\n\n# Install standard packages.\nRUN apt-get install -y \\\n    python-all \\\n    python-pip \\\n    default-jre \\\n    libjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev python-pillow\n\n# Install the core Collective Knowledge (CK) module.\nENV CK_ROOT=\/root\/ck-master \\\n    CK_REPOS=\/root\/CK \\\n    CK_TOOLS=\/root\/CK-TOOLS\n\nENV ANDROID_HOME=\/opt\/android-sdk-linux\n\nENV PATH=${CK_ROOT}\/bin:${ANDROID_HOME}\/tools:${ANDROID_HOME}\/platform-tools:${PATH}\n\nRUN mkdir -p ${CK_ROOT} ${CK_REPOS} ${CK_TOOLS}\nRUN git clone https:\/\/github.com\/ctuning\/ck.git ${CK_ROOT}\nRUN cd ${CK_ROOT} && python setup.py install && python -c \"import ck.kernel as ck\"\n\n# Install other CK modules.\nRUN ck pull repo:ck-web\n\n# Update Android SDK (extra deps) - need expect to automate license acceptance\n#RUN android list sdk --extended --all\n#RUN android list sdk --extended\nRUN apt-get install -y expect\n\nCOPY update_android.sh \/usr\/bin\/update_android.sh\n\nRUN chmod 755 \/usr\/bin\/update_android.sh\nRUN \/usr\/bin\/update_android.sh\n\n# Install Android NDK\nRUN cd \/opt ; wget http:\/\/dl.google.com\/android\/repository\/android-ndk-r11c-linux-x86_64.zip\nRUN cd \/opt ; unzip android-ndk-r11c-linux-x86_64.zip\n\n# Add CK-WA (and automatically unzip)\nRUN cd ${CK_REPOS} ; mkdir -p ck-wa ;\nCOPY ckr-ck-wa.zip ${CK_REPOS}\/ck-wa\/ckr-ck-wa.zip\nRUN cd ${CK_REPOS}\/ck-wa ; unzip ckr-ck-wa.zip ; rm ckr-ck-wa.zip ; ck import repo --quiet\n\n# Install WA via CK\nRUN ck install package:arm-wa-github\n\n#Create and copy some existing keys (without pass)\n# to allow access from this Docker client \n# to any given Android device\n#RUN mkdir -m 0750 \/root\/.android\nCOPY adbkey.pub \/root\/.android\/adbkey.pub\nCOPY adbkey \/root\/.android\/adbkey\n\n# interactive, if needed to debug\n#CMD bash\n\n# Check ADB\nCMD adb devices\n\n# Check WA\n#CMD wa --help ; ck run wa:dhrystone --out=json\n\n# Set the CK web service defaults.\nENV CK_PORT=3344 \\\n    WFE_PORT=3344 \n\n# Expose CK port\nEXPOSE ${CK_PORT}\n\n\n\n# Start the CK web service.\n# Note, that container will have it's own IP,\n# that's why we need `hostname -i` below\n#CMD export CK_LOCAL_HOST=`hostname -i` ; \\\n#    if [ \"${CK_HOST}\" = \"\" ]; then export CK_HOST=$CK_LOCAL_HOST ; fi ; \\\n#    if [ \"${WFE_HOST}\" = \"\" ]; then export WFE_HOST=$CK_LOCAL_HOST ; fi ; \\\n#    ck start web \\\n#    --host=${CK_HOST} --port=${CK_PORT} \\\n#    --wfe_host=${WFE_HOST} --wfe_port=${WFE_PORT}\n\nCMD bash\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":120,
        "text":"MAINTAINER Grigori Fursin <Grigori.Fursin@cTuning.org>\\nMAINTAINER Anton Lokhmotov <anton@dividiti.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":177,
        "end":225,
        "text":"apt-get install -y \\\\ngit bzip2 sudo wget zip"
      },
      {
        "label":"apt-install-without-version",
        "start":177,
        "end":225,
        "text":"apt-get install -y \\\\ngit bzip2 sudo wget zip"
      },
      {
        "label":"use-cd-change-dir",
        "start":249,
        "end":260,
        "text":"RUN cd \/opt"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":497,
        "end":644,
        "text":"RUN apt-get install -y \\\\npython-all \\\\npython-pip \\\\ndefault-jre \\\\nlibjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev python-pillow"
      },
      {
        "label":"apt-install-without-version",
        "start":497,
        "end":644,
        "text":"RUN apt-get install -y \\\\npython-all \\\\npython-pip \\\\ndefault-jre \\\\nlibjpeg8 libjpeg62-dev libfreetype6 libfreetype6-dev python-pillow"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1304,
        "end":1333,
        "text":"RUN apt-get install -y expect"
      },
      {
        "label":"apt-install-without-version",
        "start":1304,
        "end":1333,
        "text":"RUN apt-get install -y expect"
      },
      {
        "label":"use-cd-change-dir",
        "start":1667,
        "end":1693,
        "text":"RUN cd ${CK_REPOS} ; mkdir"
      },
      {
        "label":"use-cd-change-dir",
        "start":1574,
        "end":1593,
        "text":"RUN cd \/opt ; unzip"
      },
      {
        "label":"use-cd-change-dir",
        "start":1481,
        "end":1499,
        "text":"RUN cd \/opt ; wget"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5c2441905c7d14204756414d808815325cf25f12.dockerfile",
    "file_content":"FROM continuumio\/anaconda\n\nMAINTAINER Magrathea Labs <contact@magrathealabs.com>\n\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV PYTHONIOENCODING UTF-8\n\nRUN conda update --all && \\\n    conda install --yes \\\n        jupyter \\\n        ipywidgets \\\n        pandas \\\n        matplotlib \\\n        seaborn \\\n        numpy \\\n        scipy \\\n        scikit-learn \\\n        scikit-image\n\nRUN pip install widgetsnbextension && \\\n    jupyter nbextension enable --py widgetsnbextension\n\nADD configs\/ \/tmp\/\nRUN mkdir -p -m 700 \/root\/.jupyter\/ && \\\n    cp \/tmp\/jupyter_notebook_config.py \/root\/.jupyter\/jupyter_notebook_config.py\n\nVOLUME \/notebooks\nWORKDIR \/notebooks\nEXPOSE 8888\n\nENV TINI_VERSION v0.9.0\nADD https:\/\/github.com\/krallin\/tini\/releases\/download\/${TINI_VERSION}\/tini \/tini\nRUN chmod +x \/tini\nENTRYPOINT [\"\/tini\", \"--\"]\n\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--allow-root\"]\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":25,
        "text":"FROM continuumio\/anaconda"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":27,
        "end":80,
        "text":"MAINTAINER Magrathea Labs <contact@magrathealabs.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":501,
        "end":519,
        "text":"ADD configs\/ \/tmp\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":717,
        "end":797,
        "text":"ADD https:\/\/github.com\/krallin\/tini\/releases\/download\/${TINI_VERSION}\/tini \/tini"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":405,
        "end":439,
        "text":"RUN pip install widgetsnbextension"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"6f1f621134b5cfbd4e2ddd90d278493a27505fad.dockerfile",
    "file_content":"FROM python:3.5\n\nMAINTAINER Koen Rutten <lijst@twilights.be>\n\n# Install uWSGI\nRUN pip install uwsgi\n\nENV NGINX_VERSION 1.9.11-1~jessie\n\nRUN apt-key adv --keyserver hkp:\/\/pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62 \\\n\t&& echo \"deb http:\/\/nginx.org\/packages\/mainline\/debian\/ jessie nginx\" >> \/etc\/apt\/sources.list \\\n\t&& apt-get update \\\n\t&& apt-get install -y ca-certificates nginx=${NGINX_VERSION} gettext-base \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n# forward request and error logs to docker log collector\nRUN ln -sf \/dev\/stdout \/var\/log\/nginx\/access.log \\\n\t&& ln -sf \/dev\/stderr \/var\/log\/nginx\/error.log\nEXPOSE 80 443\n# Finished setting up Nginx\n\n# Make NGINX run on the foreground\nRUN echo \"daemon off;\" >> \/etc\/nginx\/nginx.conf\n# Remove default configuration from Nginx\nRUN rm \/etc\/nginx\/conf.d\/default.conf\n# Copy the modified Nginx conf\nCOPY nginx.conf \/etc\/nginx\/conf.d\/\n\n#python requirements\nCOPY requirements.txt \/requirements.txt\nRUN pip install -r requirements.txt \\\n\t&& rm -rf \/requirements.txt\n\n# Install Supervisord\nRUN apt-get update && apt-get install -y supervisor \\\n&& rm -rf \/var\/lib\/apt\/lists\/*\n# Custom Supervisord config\nCOPY supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf\n\n#COPY \/webapp \/webapp\nRUN mkdir \/webapp\nVOLUME \/webapp\nWORKDIR \/webapp\n\nCMD [\"\/usr\/bin\/supervisord\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":17,
        "end":60,
        "text":"MAINTAINER Koen Rutten <lijst@twilights.be>"
      },
      {
        "label":"pip-install-without-version",
        "start":78,
        "end":99,
        "text":"RUN pip install uwsgi"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":360,
        "end":397,
        "text":"&& apt-get install -y ca-certificates"
      },
      {
        "label":"apt-install-without-version",
        "start":363,
        "end":397,
        "text":"apt-get install -y ca-certificates"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1070,
        "end":1099,
        "text":"apt-get install -y supervisor"
      },
      {
        "label":"apt-install-without-version",
        "start":1070,
        "end":1099,
        "text":"apt-get install -y supervisor"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7d0c42bf82b0d9a3deb1af43e222359a5c7f75ba.dockerfile",
    "file_content":"FROM ubuntu:trusty\nMAINTAINER Nick Stires<nstires@boundlessgeo.com>\n# Forked from https:\/\/github.com\/boundlessgeo\/docker\/tree\/master\/suite-desktop-testing\/suite-410\/ubuntu\n# Internal use only\n\n# Let the conatiner know that there is no tty\nENV DEBIAN_FRONTEND noninteractive\n\n# Upgrade installed packages and install some basics\nRUN apt-get -y update \\\n  && apt-get -y upgrade \\\n  && apt-get install -y --no-install-recommends \\\n       unzip vim nano wget git ca-certificates apt-transport-https libyajl2\n\n# Add Boundless gpg.key and customized repo source, then update repos\nRUN echo \"deb http:\/\/server:PRIV_REPO_PASSWORD@priv-repo.boundlessgeo.com\/suite\/REPLACE_VERSION\/ubuntu\/14\/ .\/\" > \\\n   \/etc\/apt\/sources.list.d\/boundless.list\n\n\n# Install suite\nRUN apt-get -y update && apt-get -y --force-yes install \\\n        boundless-server-geoserver \\\n        boundless-server-tomcat9 \\\n        boundless-server-composer \\\n        boundless-server-quickview \\\n        boundless-server-geowebcache \\\n        boundless-server-docs \\\n        boundless-server-dashboard \n\n# Install suite extras\nRUN apt-get -y update && apt-get -y --force-yes install \\\n        boundless-server-gs-gdal \\\n        boundless-server-gs-vectortiles\n \n\nRUN apt-get install -y supervisor \\\n  && mkdir -p \/var\/log\/supervisor\n\n# Clean up apt-get\nRUN apt-get clean\n\n# Fix for nano\nENV TERM xterm\n\nRUN mkdir -p \/tmp\/tomcat && mkdir \/tmp\/geoserver && mkdir \/tmp\/postgresql\n\n# Tomcat setup\n#ADD resources\/tomcat\/* \/tmp\/tomcat\/\n#RUN \/tmp\/tomcat\/tomcat-build.sh\n\n# GeoServer setup\n#ADD resources\/geoserver\/* \/tmp\/geoserver\/\n#RUN \/tmp\/geoserver\/geoserver-build.sh\n\n# Enable CORS\nRUN sed -i '\\:<\/web-app>:i\\\n    <filter>\\\n        <filter-name>CorsFilter<\/filter-name>\\\n        <filter-class>org.apache.catalina.filters.CorsFilter<\/filter-class>\\\n    <\/filter>\\\n\\\n    <filter-mapping>\\\n        <filter-name>CorsFilter<\/filter-name>\\\n        <url-pattern>\/*<\/url-pattern>\\\n    <\/filter-mapping>\\\n\\\n    <init-param>\\\n        <param-name>cors.support.credentials<\/param-name>\\\n        <param-value>true<\/param-value>\\\n    <\/init-param>' \/etc\/tomcat9\/web.xml\n\n# Copy supervisord configuration\nADD resources\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf\n\n# for pg: 5432\nEXPOSE 8080 8443\n\nRUN rm -rf \/var\/lib\/apt\/lists\/*\n\nCMD [\"\/usr\/bin\/supervisord\", \"-c\", \"\/etc\/supervisor\/conf.d\/supervisord.conf\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":67,
        "text":"MAINTAINER Nick Stires<nstires@boundlessgeo.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":380,
        "end":503,
        "text":"&& apt-get install -y --no-install-recommends \\\\nunzip vim nano wget git ca-certificates apt-transport-https libyajl2"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":775,
        "end":1058,
        "text":"apt-get -y --force-yes install \\\\nboundless-server-geoserver \\\\nboundless-server-tomcat9 \\\\nboundless-server-composer \\\\nboundless-server-quickview \\\\nboundless-server-geowebcache \\\\nboundless-server-docs \\\\nboundless-server-dashboard"
      },
      {
        "label":"apt-install-without-version",
        "start":775,
        "end":1058,
        "text":"apt-get -y --force-yes install \\\\nboundless-server-geoserver \\\\nboundless-server-tomcat9 \\\\nboundless-server-composer \\\\nboundless-server-quickview \\\\nboundless-server-geowebcache \\\\nboundless-server-docs \\\\nboundless-server-dashboard"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1109,
        "end":1216,
        "text":"apt-get -y --force-yes install \\\\nboundless-server-gs-gdal \\\\nboundless-server-gs-vectortiles"
      },
      {
        "label":"apt-install-without-version",
        "start":1109,
        "end":1216,
        "text":"apt-get -y --force-yes install \\\\nboundless-server-gs-gdal \\\\nboundless-server-gs-vectortiles"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2144,
        "end":2174,
        "text":"ADD resources\/supervisord.conf"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7d73c1224d74209d785a28dd7ffacf8b0b44bd3e.dockerfile",
    "file_content":"# Dockerizing MongoDB: Dockerfile for building MongoDB images\n# Based on ubuntu:latest, installs MongoDB following the instructions from:\n# http:\/\/docs.mongodb.org\/manual\/tutorial\/install-mongodb-on-ubuntu\/\n\nFROM       ubuntu:latest\nMAINTAINER Docker\n\n# Installation:\n# Import MongoDB public GPG key AND create a MongoDB list file\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv 7F0CEB10\nRUN echo \"deb http:\/\/repo.mongodb.org\/apt\/ubuntu \"$(lsb_release -sc)\"\/mongodb-org\/3.0 multiverse\" | tee \/etc\/apt\/sources.list.d\/mongodb-org-3.0.list\n# Update apt-get sources AND install MongoDB\nRUN apt-get update && apt-get install -y mongodb-org-mongos\n\n# Create the MongoDB data directory\nRUN mkdir -p \/data\/db\n\n# Expose port #27017 from the container to the host\nEXPOSE 27017\n\n# Set \/usr\/bin\/mongod as the dockerized entry-point application\nENTRYPOINT [\"\/usr\/bin\/mongos\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":208,
        "end":232,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":233,
        "end":250,
        "text":"MAINTAINER Docker"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":621,
        "end":658,
        "text":"apt-get install -y mongodb-org-mongos"
      },
      {
        "label":"apt-install-without-version",
        "start":621,
        "end":658,
        "text":"apt-get install -y mongodb-org-mongos"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"7dd286379305602dab6d6115e3dd1bcad323c59b.dockerfile",
    "file_content":"FROM ubuntu:latest\nMAINTAINER Sah Lee <contact@leesah.name>\n\nENV DEPENDENCIES git-core gettext build-essential autoconf libtool libssl-dev libpcre3-dev asciidoc xmlto zlib1g-dev libev-dev libudns-dev libsodium-dev\nENV BASEDIR \/tmp\/shadowsocks-libev\nENV SERVER_PORT 8338\n\n# Set up building environment\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y $DEPENDENCIES\n\n# Get the latest code, build and install\nRUN git clone https:\/\/github.com\/shadowsocks\/shadowsocks-libev.git $BASEDIR\nWORKDIR $BASEDIR\nRUN git submodule update --init --recursive \\\n && .\/autogen.sh \\\n && .\/configure \\\n && make \\\n && make install\n\n# Tear down building environment and delete git repository\nWORKDIR \/\nRUN rm -rf $BASEDIR\/shadowsocks-libev\\\n && apt-get --purge autoremove -y $DEPENDENCIES\n\n# Port in the config file won't take affect. Instead we'll use 8388.\nEXPOSE $SERVER_PORT\/tcp $SERVER_PORT\/udp\n\n# Override the host and port in the config file.\nADD entrypoint \/\nENTRYPOINT [\"\/entrypoint\"]\nCMD [\"-h\"]",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":58,
        "text":"MAINTAINER Sah Lee <contact@leesah.name"
      },
      {
        "label":"apt-install-without-version",
        "start":326,
        "end":382,
        "text":"apt-get install --no-install-recommends -y $DEPENDENCIES"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":947,
        "end":963,
        "text":"ADD entrypoint \/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"81841cb8eb2672a0cc7aa4ebb86111526860f38d.dockerfile",
    "file_content":"# Copyright 2016 The Kubernetes Authors. All rights reserved\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM gcr.io\/google-containers\/ubuntu-slim:0.8\nMAINTAINER Marcin Wielgus \"mwielgus@google.com\"\n\nRUN apt-get update && apt-get install --yes ca-certificates \\\n  && apt-get clean \\\n  && rm -rf \/var\/lib\/apt\/lists\/*\n\nADD cluster-autoscaler cluster-autoscaler\nADD run.sh run.sh\n\nCMD .\/run.sh\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":725,
        "end":764,
        "text":"apt-get install --yes ca-certificates \\"
      },
      {
        "label":"apt-install-without-version",
        "start":725,
        "end":785,
        "text":"apt-get install --yes ca-certificates \\\\n&& apt-get clean \\"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":654,
        "end":696,
        "text":"MAINTAINER Marcin Wielgus \"mwielgus@google"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":820,
        "end":879,
        "text":"ADD cluster-autoscaler cluster-autoscaler\\nADD run.sh run.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"83ce438c63c441ea3b0ca20ca988e067582b5fbd.dockerfile",
    "file_content":"FROM samdoran\/rhel6-ansible\nMAINTAINER Maxime Arthaud <maxime.arthaud@nasa.gov>\nARG njobs=2\nARG build_type=Release\nARG rhel_username\nARG rhel_password\n\n# Installs the following versions (note that it might be out of date):\n# cmake 3.13.4\n# gmp 4.3.1\n# boost 1.69.0\n# python 3.4.8\n# sqlite 3.6.20\n# llvm 8.0.0\n# clang 8.0.0\n# gcc 8.3.0\n\n# Subscribe\nRUN subscription-manager register --username=$rhel_username --password=$rhel_password --auto-attach\n\n# Upgrade\nRUN yum -y update\n\n# Install dependencies\nRUN yum -y install which file patch tar bzip2 xz zlib-devel ncurses-devel gcc gcc-c++ make gmp-devel python34 python34-pygments sqlite-devel\n\n# Add ikos source code\nADD . \/root\/ikos\n\n# Use the bootstrap script to install ikos and run the tests\nWORKDIR \/root\/ikos\/script\nRUN .\/bootstrap -vvf \\\n        --prefix=\"\/opt\/ikos\" \\\n        --builddir=\"\/root\/ikos-build\" \\\n        --build-type=\"$build_type\" \\\n        --jobs=\"$njobs\"\n\n# Done\nWORKDIR \/\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":27,
        "text":"FROM samdoran\/rhel6-ansible"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":28,
        "end":79,
        "text":"MAINTAINER Maxime Arthaud <maxime.arthaud@nasa.gov>"
      },
      {
        "label":"apt-install-without-version",
        "start":478,
        "end":641,
        "text":"# Install dependencies\\nRUN yum -y install which file patch tar bzip2 xz zlib-devel ncurses-devel gcc gcc-c++ make gmp-devel python34 python34-pygments sqlite-devel"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":666,
        "end":682,
        "text":"ADD . \/root\/ikos"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"5f309d91b86cbc3f1a2285af2e09c9e227b59413.dockerfile",
    "file_content":"FROM wouterd\/java7\n\nMAINTAINER Wouter Danes <wouter@wouterdanes.net>\n\nADD http:\/\/ftp.nluug.nl\/internet\/apache\/kafka\/0.8.1.1\/kafka_2.9.2-0.8.1.1.tgz \/kafka.tgz\n\nRUN mkdir -p \/kafka && \\\n  cd \/kafka && \\\n  tar xvfz ..\/kafka.tgz --strip-components=1 && \\\n  rm \/kafka.tgz\n\nADD start-server.sh \/\n\nRUN chmod +x \/start-server.sh\n\nADD server.properties.initial \/server.properties\n\nCMD [\"\/start-server.sh\"]\n\nEXPOSE 9092\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM wouterd\/java7"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":67,
        "text":"MAINTAINER Wouter Danes <wouter@wouterdanes.net"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":70,
        "end":158,
        "text":"ADD http:\/\/ftp.nluug.nl\/internet\/apache\/kafka\/0.8.1.1\/kafka_2.9.2-0.8.1.1.tgz \/kafka.tgz"
      },
      {
        "label":"use-cd-change-dir",
        "start":187,
        "end":196,
        "text":"cd \/kafka"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":269,
        "end":290,
        "text":"ADD start-server.sh \/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":323,
        "end":371,
        "text":"ADD server.properties.initial \/server.properties"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"5ff6093e06373396f4156cf7a7fa964cb204b2be.dockerfile",
    "file_content":"###\n#  this docker file creates a the complete image for deployment of the Splash id website and test framework\n###\n\nFROM java\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get -yq upgrade\n\n#update apt-get\nRUN apt-get update -y\n\nRUN apt-get install -y lynx mc vim\nRUN apt-get -y install unzip curl\nRUN apt-get install awstats -y libnet-ip-perl libgeo-ipfree-perl logrotate\nRUN apt-get install -y nginx\n\n####\n# do the actual installation\n####\nRUN \\\n    \\\n    echo \"===> installing utilities\" && \\\n    apt-get install -y \\\n      unzip \\\n      mc \\\n      openssh-server \\\n      vim \\\n      links2 \\\n      ant\n\nADD target\/splash.jar \/opt\/splash.jar\n\nRUN rm \/etc\/nginx\/sites-enabled\/default\n\n#configure nginx logrotate\nADD nginx\/logrotate \/etc\/logrotate.d\/nginx\nRUN chmod 644 \/etc\/logrotate.d\/nginx\n\nADD nginx\/nginx.conf \/etc\/nginx\/nginx.conf\nADD nginx\/client.conf \/etc\/nginx\/sites-enabled\/client.conf\nADD nginx\/awtstats.conf \/etc\/awstats\/awstats.client.conf\n\n\nADD src\/run.sh \/opt\/run.sh\n\nEXPOSE 80\n\nCMD [\"\/bin\/bash\",\"\/opt\/run.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":117,
        "end":126,
        "text":"FROM java"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":223,
        "end":395,
        "text":"RUN apt-get install -y lynx mc vim\\nRUN apt-get -y install unzip curl\\nRUN apt-get install awstats -y libnet-ip-perl libgeo-ipfree-perl logrotate\\nRUN apt-get install -y nginx"
      },
      {
        "label":"apt-install-without-version",
        "start":223,
        "end":395,
        "text":"RUN apt-get install -y lynx mc vim\\nRUN apt-get -y install unzip curl\\nRUN apt-get install awstats -y libnet-ip-perl libgeo-ipfree-perl logrotate\\nRUN apt-get install -y nginx"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":494,
        "end":599,
        "text":"apt-get install -y \\\\nunzip \\\\nmc \\\\nopenssh-server \\\\nvim \\\\nlinks2 \\\\nant"
      },
      {
        "label":"apt-install-without-version",
        "start":494,
        "end":599,
        "text":"apt-get install -y \\\\nunzip \\\\nmc \\\\nopenssh-server \\\\nvim \\\\nlinks2 \\\\nant"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":601,
        "end":638,
        "text":"ADD target\/splash.jar \/opt\/splash.jar"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":708,
        "end":750,
        "text":"ADD nginx\/logrotate \/etc\/logrotate.d\/nginx"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":789,
        "end":947,
        "text":"ADD nginx\/nginx.conf \/etc\/nginx\/nginx.conf\\nADD nginx\/client.conf \/etc\/nginx\/sites-enabled\/client.conf\\nADD nginx\/awtstats.conf \/etc\/awstats\/awstats.client.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":950,
        "end":976,
        "text":"ADD src\/run.sh \/opt\/run.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"61add057a15c19c3af0e120516fe9df486001b7a.dockerfile",
    "file_content":"FROM ubuntu\n\nRUN dpkg-divert --local --rename --add \/sbin\/initctl\nRUN ln -s \/bin\/true \/sbin\/initctl\n\nRUN echo deb http:\/\/archive.ubuntu.com\/ubuntu precise universe > \/etc\/apt\/sources.list.d\/universe.list\nRUN apt-get update\nRUN apt-get install -y net-tools redis-server\n\nADD .\/webapp \/opt\/webapp\nADD .\/start.sh \/opt\/start.sh\n\nEXPOSE 8080\n\nCMD [\"\/opt\/start.sh\"]",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM ubuntu"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":223,
        "end":268,
        "text":"RUN apt-get install -y net-tools redis-server"
      },
      {
        "label":"apt-install-without-version",
        "start":223,
        "end":268,
        "text":"RUN apt-get install -y net-tools redis-server"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":270,
        "end":323,
        "text":"ADD .\/webapp \/opt\/webapp\\nADD .\/start.sh \/opt\/start.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"63b3388094c97ce7cc57f8c2b5751379a8875235.dockerfile",
    "file_content":"FROM ubuntu:14.04  \nMAINTAINER \"Claus Strasburger <c@cfs.im>\"  \nENV DEBIAN_FRONTEND noninteractive  \n  \n# defaults for debify  \nENV APTLY_DISTRIBUTION testing  \nENV APTLY_COMPONENT main  \nENV KEYSERVER keyserver.ubuntu.com  \n  \nENV GNUPGHOME \/.gnupg  \n  \n# install aptly  \nRUN echo deb http:\/\/repo.aptly.info\/ squeeze main >> \/etc\/apt\/sources.list  \nRUN apt-key adv --keyserver keys.gnupg.net --recv-keys 9E3E53F19C7DE460  \nRUN apt-get update && \\  \napt-get install -y aptly && \\  \napt-get clean  \n  \nADD debify.sh \/debify.sh  \nADD entrypoint.sh \/entrypoint.sh  \nADD aptly.conf \/root\/.aptly.conf  \nENTRYPOINT [\"\/entrypoint.sh\"]  \n  \nCMD [\"\/debify.sh\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":61,
        "text":"MAINTAINER \"Claus Strasburger <c@cfs.im>\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":450,
        "end":474,
        "text":"apt-get install -y aptly"
      },
      {
        "label":"apt-install-without-version",
        "start":450,
        "end":474,
        "text":"apt-get install -y aptly"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":501,
        "end":560,
        "text":"ADD debify.sh \/debify.sh\\nADD entrypoint.sh \/entrypoint.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":563,
        "end":595,
        "text":"ADD aptly.conf \/root\/.aptly.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"63ca552ead84f10818108c18f2b519ee2c83653b.dockerfile",
    "file_content":"FROM       ubuntu:16.04\nMAINTAINER Aleksandar Diklic \"https:\/\/github.com\/rastasheep\"\n\nRUN apt-get update\n\nRUN apt-get install -y openssh-server\nRUN mkdir \/var\/run\/sshd\n\nRUN echo 'root:root' |chpasswd\n\nRUN sed -ri 's\/^PermitRootLogin\\s+.*\/PermitRootLogin yes\/' \/etc\/ssh\/sshd_config\nRUN sed -ri 's\/UsePAM yes\/#UsePAM yes\/g' \/etc\/ssh\/sshd_config\n\nEXPOSE 22\n\n# My custom\nWORKDIR \/root\/\n\nRUN echo 'deb http:\/\/archive.ubuntu.com\/ubuntu\/ xenial-security multiverse' >> \/etc\/apt\/sources.list\nRUN echo 'deb-src http:\/\/archive.ubuntu.com\/ubuntu\/ xenial-security multiverse' >> \/etc\/apt\/sources.list\n\nRUN apt-get update && apt-get install m2crypto git vim  mtr vnstat supervisor curl wget cron screen -y \n\nRUN apt-get install firefox lxde-core lxterminal tightvncserver xrdp proxychains cpulimit flashplugin-installer htop -y\n\n# download extra\nRUN wget https:\/\/addons.mozilla.org\/firefox\/downloads\/latest\/vagex-firefox-add-on\/addon-321174-latest.xpi \\\n&& wget https:\/\/www.ebesucher.com\/data\/firefoxaddon\/latest.xpi \\\n&& wget https:\/\/addons.mozilla.org\/firefox\/downloads\/latest\/foxyproxy-standard\/addon-2464-latest.xpi\n\nRUN git clone -b manyuser https:\/\/github.com\/shadowsocksrr\/shadowsocksr.git\t\n\n# install old firefox\nRUN wget https:\/\/ftp.mozilla.org\/pub\/firefox\/releases\/38.0.6\/linux-x86_64\/en-US\/firefox-38.0.6.tar.bz2\nRUN tar -xjf firefox-*.tar.bz2 && cp -r firefox \/usr\/lib\/\n\n\n# xvnc server porst, if $DISPLAY=:1 port will be 5901\t\nEXPOSE 15900\n\nADD scripts \/root\n\nRUN chmod a+x \/root\/*.sh  \nRUN echo '*\/1 * * * * root bash \/root\/check.sh' >> \/etc\/crontab\nRUN service cron restart\n\nCMD    [\"\/usr\/sbin\/sshd\", \"-D\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":24,
        "end":84,
        "text":"MAINTAINER Aleksandar Diklic \"https:\/\/github.com\/rastasheep\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":106,
        "end":143,
        "text":"RUN apt-get install -y openssh-server"
      },
      {
        "label":"apt-install-without-version",
        "start":106,
        "end":143,
        "text":"RUN apt-get install -y openssh-server"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":612,
        "end":692,
        "text":"apt-get install m2crypto git vim mtr vnstat supervisor curl wget cron screen -y"
      },
      {
        "label":"apt-install-without-version",
        "start":612,
        "end":692,
        "text":"apt-get install m2crypto git vim mtr vnstat supervisor curl wget cron screen -y"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":695,
        "end":814,
        "text":"RUN apt-get install firefox lxde-core lxterminal tightvncserver xrdp proxychains cpulimit flashplugin-installer htop -y"
      },
      {
        "label":"apt-install-without-version",
        "start":695,
        "end":814,
        "text":"RUN apt-get install firefox lxde-core lxterminal tightvncserver xrdp proxychains cpulimit flashplugin-installer htop -y"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1440,
        "end":1457,
        "text":"ADD scripts \/root"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"65befb7cbd0ab29e40718af8c477191f057e7cb5.dockerfile",
    "file_content":"FROM ubuntu:14.04\n\nMAINTAINER Alexander Schneider \"alexander.schneider@jankowfsky.com\"\n\n# Upgrade system\nENV DEBIAN_FRONTEND noninteractive\nENV HOME \/root\nRUN apt-get update\n\n# Setup system and install tools\nRUN echo \"initscripts hold\" | dpkg --set-selections\nRUN apt-get -qqy install libreadline-gplv2-dev libfreetype6 apt-utils dialog postfix\nRUN echo \"Europe\/Berlin\" > \/etc\/timezone && dpkg-reconfigure -f noninteractive tzdata\nRUN echo 'alias ll=\"ls -lah --color=auto\"' >> \/etc\/bash.bashrc\nRUN apt-get -qqy install passwd supervisor git-core sudo unzip wget curl libfile-slurp-perl libmysql-diff-perl vim net-tools software-properties-common python-software-properties\n\n# Set locale\nRUN apt-get -qqy install locales\nRUN locale-gen --purge de_DE de_DE.UTF-8\nRUN locale-gen --purge en_US en_US.UTF-8\nRUN dpkg-reconfigure locales\nENV LC_ALL en_US.UTF-8\n\n# Setup ssh\nRUN apt-get -qqy install openssh-server\nRUN mkdir -p \/var\/run\/sshd\nRUN sed -ri 's\/UsePAM yes\/#UsePAM yes\/g' \/etc\/ssh\/sshd_config\nRUN sed -ri 's\/#UsePAM no\/UsePAM no\/g' \/etc\/ssh\/sshd_config\nRUN sed -ri 's\/PermitRootLogin without-password\/PermitRootLogin yes\/g' \/etc\/ssh\/sshd_config\nRUN echo 'root:root' | chpasswd\n\n# Generate a host key before packing.\nRUN service ssh start; service ssh stop\n\n# Create SSL cert\nRUN mkdir \/root\/ssl; \\\n    openssl genrsa -out \/root\/ssl\/local.key 1024; \\\n    openssl req -new -key \/root\/ssl\/local.key -out \/root\/ssl\/local.csr -subj \"\/C=DE\/ST=BW\/L=FREIBURG\/O=Jankowfsky AG\/OU=Development\/CN=localhost\"; \\\n    openssl x509 -req -days 365 -in \/root\/ssl\/local.csr -signkey \/root\/ssl\/local.key -out \/root\/ssl\/local.crt\n\n# Apache\nRUN apt-get -qqy install apache2-mpm-prefork apache2-utils\nRUN a2enmod rewrite\nRUN a2enmod proxy_fcgi\nRUN a2enmod ssl\nRUN mkdir \/etc\/apache2\/conf.d\/\nRUN echo \"ServerName localhost\" | tee \/etc\/apache2\/conf.d\/fqdn\nRUN echo \"ServerName localhost\" >> \/etc\/apache2\/apache2.conf\nADD conf\/apache\/000-default \/etc\/apache2\/sites-enabled\/000-default.conf\n\n# Mysql\nRUN apt-get -qqy install mysql-server mysql-common mysql-client\nRUN ln -s \/run\/mysqld\/mysqld.sock \/tmp\/mysql.sock\n\n# Add latest php version\nRUN add-apt-repository ppa:ondrej\/apache2\nRUN add-apt-repository ppa:ondrej\/php && apt-get update\n\n# PHP\nRUN apt-get -qqy install php5-fpm php5 php5-cli php5-mysql php5-curl php5-dev php5-gd php-pear php-apc php5-xdebug libapache2-mod-php5\n\n# PhpMyAdmin\nRUN mysqld & \\\n    service apache2 start; \\\n\t  sleep 5; \\\n\t  printf y\\\\n\\\\n\\\\n1\\\\n | apt-get install -qqy phpmyadmin; \\\n    sleep 15; \\\n    mysqladmin -u root shutdown\nRUN sed -i \"0,\/\\\/\\\/ \\$cfg\\['Servers'\\]\\[\\$i\\]\\['AllowNoPassword'\\] = TRUE;\/{s#\/\/ \\$cfg\\['Servers'\\]\\[\\$i\\]\\['AllowNoPassword'\\] = TRUE;#\\$cfg\\['Servers'\\]\\[\\$i\\]\\['AllowNoPassword'\\] = TRUE;#g}\" \/etc\/phpmyadmin\/config.inc.php\nRUN sed -i \"\/^[ ]*\\$cfg\\['Servers'\\]\\[\\$i\\]\\['host'\\]\/a\\\\\\$cfg\\['Servers'\\]\\[\\$i\\]\\['hide_db'\\] = '(information_schema|performance_schema|phpmyadmin|mysql|test)';\" \/etc\/phpmyadmin\/config.inc.php\nRUN ln -s \/etc\/phpmyadmin\/apache.conf \/etc\/apache2\/conf-enabled\n\n# Install ant builder\nRUN apt-get -qqy install ant\n\n# Install composer\nRUN curl -sS https:\/\/getcomposer.org\/installer | php && mv composer.phar \/usr\/local\/bin\/composer\n\n# Install phpunit\nRUN composer global require \"phpunit\/phpunit=4.1.*\"; \\\n    ln -s \/root\/.composer\/vendor\/bin\/phpunit \/usr\/bin\/phpunit\n\n# Install ruby\nRUN apt-get -y install ruby\n\n# Install sass\nRUN gem install sass\n\n# Nodejs + NPM\nRUN add-apt-repository ppa:chris-lea\/node.js && apt-get update\nRUN apt-get install -y nodejs\n\n# Install bower\nRUN npm install -g bower\n\n# Install grunt\nRUN npm install -g grunt-cli\n\n# Install glub\nRUN npm install -g gulp\n\n# Install phpbrew\nRUN apt-get update\nRUN apt-get build-dep -y --fix-missing php5\nRUN apt-get install -y php5 php5-dev php-pear autoconf automake curl build-essential \\\n    libxslt1-dev re2c libxml2 libxml2-dev php5-cli bison libbz2-dev libreadline-dev \\\n    libfreetype6 libfreetype6-dev libpng12-0 libpng12-dev libjpeg-dev libjpeg8-dev libjpeg8  libgd-dev libgd3 libxpm4 \\\n    libssl-dev openssl \\\n    gettext libgettextpo-dev libgettextpo0 \\\n    libicu-dev \\\n    libmhash2 libmhash-dev \\\n    libmcrypt4 libmcrypt-dev \\\n    libpcre3-dev libpcre++-dev\nRUN wget http:\/\/launchpadlibrarian.net\/121520545\/libbison-dev_2.6.2.dfsg-1_amd64.deb && dpkg -i libbison-dev_2.6.2.dfsg-1_amd64.deb\nRUN wget http:\/\/launchpadlibrarian.net\/121520544\/bison_2.6.2.dfsg-1_amd64.deb && dpkg -i bison_2.6.2.dfsg-1_amd64.deb\nADD conf\/php\/phpbrew \/usr\/bin\/phpbrew\nRUN chmod +x \/usr\/bin\/phpbrew\nADD conf\/php\/pbconfig.yaml \/tmp\/config.yaml\nRUN phpbrew init --config=\/tmp\/config.yaml\nRUN echo \"source \/root\/.phpbrew\/bashrc\" >> \/root\/.bashrc\nRUN ln -s \/.phpbrew \/root\/.phpbrew\n\nADD conf\/php\/install_php \/usr\/bin\/install_php\nRUN chmod +x \/usr\/bin\/install_php\n\n# Install tideways daemon\nADD conf\/php\/tideways-daemon \/root\/tideways-daemon\nRUN chmod +x \/root\/tideways-daemon\/install.sh\nRUN \/root\/tideways-daemon\/install.sh\n\n# Install different php version\nADD conf\/php\/modules \/root\/.phpbrew\/modules\n\n# php 5.6\nRUN install_php 5.6.4\n\n# php 5.5\nRUN install_php 5.5.20\n\n# php 5.4\nRUN install_php 5.4.40\n\n# php 5.3\nRUN install_php 5.3.29\n\n# Add supervisor config\nADD conf\/supervisor\/startup.conf \/etc\/supervisor\/conf.d\/startup.conf\nENV PHP_VERSION 5.6.4\nENV PHP_XDEBUG 0\nENV SQL_DIR \/var\/www\/_sql\n\nADD conf\/scripts\/startup.sh \/usr\/bin\/startup_container\nRUN chmod +x \/usr\/bin\/startup_container\n\n# Cleanup\nRUN apt-get clean -y; \\\n    apt-get autoclean -y; \\\n    apt-get autoremove -y; \\\n    rm -rf \/var\/lib\/{apt,dpkg,cache,log}\/\n\nVOLUME \/var\/www\nEXPOSE 22 80 443 3306 9000\n\nCMD [\"\/bin\/bash\", \"\/usr\/bin\/startup_container\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":86,
        "text":"MAINTAINER Alexander Schneider \"alexander.schneider@jankowfsky.com\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":260,
        "end":344,
        "text":"RUN apt-get -qqy install libreadline-gplv2-dev libfreetype6 apt-utils dialog postfix"
      },
      {
        "label":"apt-install-without-version",
        "start":260,
        "end":344,
        "text":"RUN apt-get -qqy install libreadline-gplv2-dev libfreetype6 apt-utils dialog postfix"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":494,
        "end":672,
        "text":"RUN apt-get -qqy install passwd supervisor git-core sudo unzip wget curl libfile-slurp-perl libmysql-diff-perl vim net-tools software-properties-common python-software-properties"
      },
      {
        "label":"apt-install-without-version",
        "start":494,
        "end":672,
        "text":"RUN apt-get -qqy install passwd supervisor git-core sudo unzip wget curl libfile-slurp-perl libmysql-diff-perl vim net-tools software-properties-common python-software-properties"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":687,
        "end":719,
        "text":"RUN apt-get -qqy install locales"
      },
      {
        "label":"apt-install-without-version",
        "start":687,
        "end":719,
        "text":"RUN apt-get -qqy install locales"
      },
      {
        "label":"apt-install-without-version",
        "start":867,
        "end":906,
        "text":"RUN apt-get -qqy install openssh-server"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":867,
        "end":906,
        "text":"RUN apt-get -qqy install openssh-server"
      },
      {
        "label":"apt-install-without-version",
        "start":1622,
        "end":1680,
        "text":"RUN apt-get -qqy install apache2-mpm-prefork apache2-utils"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1622,
        "end":1680,
        "text":"RUN apt-get -qqy install apache2-mpm-prefork apache2-utils"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1895,
        "end":1966,
        "text":"ADD conf\/apache\/000-default \/etc\/apache2\/sites-enabled\/000-default.conf"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3046,
        "end":3074,
        "text":"RUN apt-get -qqy install ant"
      },
      {
        "label":"apt-install-without-version",
        "start":3046,
        "end":3074,
        "text":"RUN apt-get -qqy install ant"
      },
      {
        "label":"apt-install-without-version",
        "start":3344,
        "end":3371,
        "text":"RUN apt-get -y install ruby"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3344,
        "end":3371,
        "text":"RUN apt-get -y install ruby"
      },
      {
        "label":"apt-install-without-version",
        "start":3488,
        "end":3517,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3488,
        "end":3517,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":3728,
        "end":4233,
        "text":"RUN apt-get install -y php5 php5-dev php-pear autoconf automake curl build-essential \\\\nlibxslt1-dev re2c libxml2 libxml2-dev php5-cli bison libbz2-dev libreadline-dev \\\\nlibfreetype6 libfreetype6-dev libpng12-0 libpng12-dev libjpeg-dev libjpeg8-dev libjpeg8 libgd-dev libgd3 libxpm4 \\\\nlibssl-dev openssl \\\\ngettext libgettextpo-dev libgettextpo0 \\\\nlibicu-dev \\\\nlibmhash2 libmhash-dev \\\\nlibmcrypt4 libmcrypt-dev \\\\nlibpcre3-dev libpcre++-dev\\nRUN wget http:\/\/launchpadlibrarian"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3728,
        "end":4233,
        "text":"RUN apt-get install -y php5 php5-dev php-pear autoconf automake curl build-essential \\\\nlibxslt1-dev re2c libxml2 libxml2-dev php5-cli bison libbz2-dev libreadline-dev \\\\nlibfreetype6 libfreetype6-dev libpng12-0 libpng12-dev libjpeg-dev libjpeg8-dev libjpeg8 libgd-dev libgd3 libxpm4 \\\\nlibssl-dev openssl \\\\ngettext libgettextpo-dev libgettextpo0 \\\\nlibicu-dev \\\\nlibmhash2 libmhash-dev \\\\nlibmcrypt4 libmcrypt-dev \\\\nlibpcre3-dev libpcre++-dev\\nRUN wget http:\/\/launchpadlibrarian"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4449,
        "end":4486,
        "text":"ADD conf\/php\/phpbrew \/usr\/bin\/phpbrew"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4517,
        "end":4560,
        "text":"ADD conf\/php\/pbconfig.yaml \/tmp\/config.yaml"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4697,
        "end":4742,
        "text":"ADD conf\/php\/install_php \/usr\/bin\/install_php"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4971,
        "end":5014,
        "text":"ADD conf\/php\/modules \/root\/.phpbrew\/modules"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4804,
        "end":4854,
        "text":"ADD conf\/php\/tideways-daemon \/root\/tideways-daemon"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":5175,
        "end":5243,
        "text":"ADD conf\/supervisor\/startup.conf \/etc\/supervisor\/conf.d\/startup.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":5310,
        "end":5364,
        "text":"ADD conf\/scripts\/startup.sh \/usr\/bin\/startup_container"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5fe169d015bfadae279ebb88b3683f68eb973106.dockerfile",
    "file_content":"FROM ubuntu:18.04 as dev\n\nRUN apt-get update && \\\n    apt-get install -y \\\n            autoconf \\\n            automake \\\n            autotools-dev \\\n            build-essential \\\n            curl \\\n            dpkg-dev \\\n            git \\\n            gnupg \\\n            imagemagick \\\n            ispell \\\n            libacl1-dev \\\n            libasound2-dev \\\n            libcanberra-gtk3-module \\\n            liblcms2-dev \\\n            libdbus-1-dev \\\n            libgif-dev \\\n            libgnutls28-dev \\\n            libgpm-dev \\\n            libgtk-3-dev \\\n            libjansson-dev \\\n            libjpeg-dev \\\n            liblockfile-dev \\\n            libm17n-dev \\\n            libmagick++-6.q16-dev \\\n            libncurses5-dev \\\n            libotf-dev \\\n            libpng-dev \\\n            librsvg2-dev \\\n            libselinux1-dev \\\n            libtiff-dev \\\n            libxaw7-dev \\\n            libxml2-dev \\\n            openssh-client \\\n            python \\\n            texinfo \\\n            xaw3dg-dev \\\n            zlib1g-dev \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\nENV EMACS_BRANCH=\"emacs-26.1\"\nENV EMACS_VERSION=\"26.1\"\n\nCOPY source \/opt\/emacs\n\nRUN cd \/opt\/emacs && \\\n    .\/autogen.sh && \\\n    .\/configure --with-modules && \\\n    make -j 8 && \\\n    make install\n\nENV PATH=\"\/root\/.cask\/bin:$PATH\"\nRUN curl -fsSL https:\/\/raw.githubusercontent.com\/cask\/cask\/master\/go | python\n\nCMD [\"emacs\"]\n\n# ------------------------------------------------------------\n\nFROM ubuntu:18.04\n\nRUN apt-get update && \\\n    apt-get install -y \\\n            curl \\\n            gnupg \\\n            gpm \\\n            imagemagick \\\n            ispell \\\n            libacl1 \\\n            libasound2 \\\n            libcanberra-gtk3-module \\\n            liblcms2-2 \\\n            libdbus-1-3 \\\n            libgif7 \\\n            libgnutls30 \\\n            libgtk-3-0 \\\n            libjansson4 \\\n            libjpeg8 \\\n            libm17n-0 \\\n            libpng16-16 \\\n            librsvg2-2 \\\n            libsm6 \\\n            libtiff5 \\\n            libx11-xcb1 \\\n            libxml2 \\\n            libxpm4 \\\n            openssh-client \\\n            texinfo \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\nENV EMACS_BRANCH=\"emacs-26.1\"\nENV EMACS_VERSION=\"26.1\"\n\nCOPY --from=0 \/usr\/local \/usr\/local\n\nCMD [\"emacs\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":54,
        "end":560,
        "text":"apt-get install -y \\\\nautoconf \\\\nautomake \\\\nautotools-dev \\\\nbuild-essential \\\\ncurl \\\\ndpkg-dev \\\\ngit \\\\ngnupg \\\\nimagemagick \\\\nispell \\\\nlibacl1-dev \\\\nlibasound2-dev \\\\nlibcanberra-gtk3-module \\\\nliblcms2-dev \\\\nlibdbus-1-dev \\\\nlibgif-dev \\\\nlibgnutls28-dev \\\\nlibgpm-dev \\\\nlibgtk-3-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":54,
        "end":589,
        "text":"apt-get install -y \\\\nautoconf \\\\nautomake \\\\nautotools-dev \\\\nbuild-essential \\\\ncurl \\\\ndpkg-dev \\\\ngit \\\\ngnupg \\\\nimagemagick \\\\nispell \\\\nlibacl1-dev \\\\nlibasound2-dev \\\\nlibcanberra-gtk3-module \\\\nliblcms2-dev \\\\nlibdbus-1-dev \\\\nlibgif-dev \\\\nlibgnutls28-dev \\\\nlibgpm-dev \\\\nlibgtk-3-dev \\\\nlibjansson-dev \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1161,
        "end":1178,
        "text":"RUN cd \/opt\/emacs"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1517,
        "end":1970,
        "text":"apt-get install -y \\\\ncurl \\\\ngnupg \\\\ngpm \\\\nimagemagick \\\\nispell \\\\nlibacl1 \\\\nlibasound2 \\\\nlibcanberra-gtk3-module \\\\nliblcms2-2 \\\\nlibdbus-1-3 \\\\nlibgif7 \\\\nlibgnutls30 \\\\nlibgtk-3-0 \\\\nlibjansson4 \\\\nlibjpeg8 \\\\nlibm17n-0 \\\\nlibpng16-16 \\\\nlibrsvg2"
      },
      {
        "label":"apt-install-without-version",
        "start":1517,
        "end":1949,
        "text":"apt-get install -y \\\\ncurl \\\\ngnupg \\\\ngpm \\\\nimagemagick \\\\nispell \\\\nlibacl1 \\\\nlibasound2 \\\\nlibcanberra-gtk3-module \\\\nliblcms2-2 \\\\nlibdbus-1-3 \\\\nlibgif7 \\\\nlibgnutls30 \\\\nlibgtk-3-0 \\\\nlibjansson4 \\\\nlibjpeg8 \\\\nlibm17n-0 \\\\nlibpng16-16 \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"607544c2a9a339469acd743cbcc5324743bd20e0.dockerfile",
    "file_content":"FROM microsoft\/dotnet:2.1.4-aspnetcore-runtime-stretch-slim\nEXPOSE 9011\n\nRUN apt-get update && apt-get install -y sudo wget moreutils &&\\\n  apt-get -y autoremove && apt-get -y autoclean && apt-get -y clean &&\\\n  rm -rf \/tmp\/* \/var\/tmp\/* && rm -rf \/var\/lib\/apt\/lists\/*\n\nENV TINI_VERSION v0.16.1\nADD https:\/\/github.com\/krallin\/tini\/releases\/download\/${TINI_VERSION}\/tini \/tini\n\nRUN chmod +x \/tini\nENTRYPOINT [\"\/tini\", \"--\"]\n\nRUN mkdir -p \/home\/liget \/home\/liget\/.nuget\/NuGet &&\\\n    mkdir -p \/data\/simple2 \/data\/ef.sqlite \/cache\/simple2 &&\\\n    groupadd -g 1000 liget &&\\\n    useradd -d \/home\/liget -s \/bin\/bash -u 1000 -g liget liget &&\\\n    chown -R liget:liget \/home\/liget \/data \/cache\n\nRUN wget --tries=3 --retry-connrefused --wait=3 --random-wait --quiet --show-progress --progress=bar:force https:\/\/github.com\/stedolan\/jq\/releases\/download\/jq-1.5\/jq-linux64 &&\\\n  chmod +x .\/jq-linux64 && mv -f .\/jq-linux64 \/usr\/bin\/jq\n\nENV ASPNETCORE_ENVIRONMENT=Production \\\n    LIGET_SKIP_APPCONFIG_GEN=false \\\n    LIGET_SKIP_RUNTIMECONFIG_GEN=false \\\n    LIGET_API_KEY_HASH=658489D79E218D2474D049E8729198D86DB0A4AF43981686A31C7DCB02DC0900 \\\n    LIGET_EF_RUN_MIGRATIONS=true \\\n    LIGET_DB_TYPE=Sqlite \\\n    LIGET_DB_CONNECTION_STRING=\"Data Source=\/data\/ef.sqlite\/sqlite.db\" \\\n    LIGET_SIMPLE2_ROOT_PATH=\/data\/simple2 \\\n    LIGET_STORAGE_BACKEND=simple2 \\\n    LIGET_SEARCH_PROVIDER=Database \\\n    LIGET_CACHE_ENABLED=true \\\n    LIGET_CACHE_PROXY_SOURCE_INDEX=https:\/\/api.nuget.org\/v3\/index.json \\\n    LIGET_NUPKG_CACHE_BACKEND=simple2 \\\n    LIGET_NUPKG_CACHE_SIMPLE2_ROOT_PATH=\/cache\/simple2 \\\n    LIGET_BAGET_COMPAT_ENABLED=false \\\n    LIGET_LOG_LEVEL=Warning \\\n    LIGET_LOG_BACKEND=console \\\n    LIGET_LOG_GELF_PORT=12201 \\\n    LIGET_LOG_GELF_SOURCE=liget \\\n    LIGET_GC_CONCURRENT=true \\\n    LIGET_GC_SERVER=true \\\n    LIGET_THREAD_POOL_MIN=16 \\\n    LIGET_THREAD_POOL_MAX=32\n\nCOPY \/src\/LiGet\/bin\/Release\/netcoreapp2.1\/publish\/ \/app\n\nADD docker-scripts\/configure.sh \/usr\/bin\/configure-liget\nADD docker-scripts\/run.sh \/app\/run.sh\nRUN chmod +x \/app\/run.sh \/usr\/bin\/configure-liget\nCMD \/app\/run.sh\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":294,
        "end":374,
        "text":"ADD https:\/\/github.com\/krallin\/tini\/releases\/download\/${TINI_VERSION}\/tini \/tini"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1929,
        "end":2023,
        "text":"ADD docker-scripts\/configure.sh \/usr\/bin\/configure-liget\\nADD docker-scripts\/run.sh \/app\/run.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":95,
        "end":133,
        "text":"apt-get install -y sudo wget moreutils"
      },
      {
        "label":"apt-install-without-version",
        "start":95,
        "end":133,
        "text":"apt-get install -y sudo wget moreutils"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"60f4253e6ea6d71f8128f3036d95179acd455e3e.dockerfile",
    "file_content":"# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM sameersbn\/squid:3.3.8-22\nMAINTAINER dev@hc.apache.org\n\nENV conf_dir \/etc\/squid3\n\nRUN apt-get update\nRUN apt-get install -y apache2-utils\n\nCOPY squid.conf ${conf_dir}\/\n\nRUN htpasswd -b -c ${conf_dir}\/htpasswd squid nopassword\n\nEXPOSE 8888\nEXPOSE 8889\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":887,
        "end":923,
        "text":"RUN apt-get install -y apache2-utils"
      },
      {
        "label":"apt-install-without-version",
        "start":887,
        "end":923,
        "text":"RUN apt-get install -y apache2-utils"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-deprecated-maintainer",
        "start":812,
        "end":840,
        "text":"MAINTAINER dev@hc.apache.org"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"61071d737636453acbdea46b2b69fe3a88e50fbe.dockerfile",
    "file_content":"FROM ubuntu:latest  \n  \nRUN apt-get update \\  \n&& apt-get install -y clang \\  \nmake \\  \ncmake \\  \ngit \\  \nbuild-essential \\  \nninja-build \\  \n&& rm -rf \/var\/lib\/apt\/lists\/*\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":50,
        "end":123,
        "text":"apt-get install -y clang \\\\nmake \\\\ncmake \\\\ngit \\\\nbuild-essential \\"
      },
      {
        "label":"apt-install-without-version",
        "start":50,
        "end":139,
        "text":"apt-get install -y clang \\\\nmake \\\\ncmake \\\\ngit \\\\nbuild-essential \\\\nninja-build \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6209dcacbb8caeed9b5299c99055c0c6e848dd22.dockerfile",
    "file_content":"# Wireshark 1.8.10\n#\n# VERSION               1\n# NOTES:\n# You must have libtool 1.4 or later installed to compile Wireshark\n# docker run --cap-add net_raw --cap-add net_admin -it opennsm\/wireshark:1.8.10 wireshark -i eth0\nFROM      opennsm\/debian\nMAINTAINER Jon Schipp <jonschipp@gmail.com>\n\n# Metadata\nLABEL organization=opennsm\nLABEL program=wireshark\n\n# Specify container username e.g. training, demo\nENV VIRTUSER opennsm\n# Specify program\nENV PROG wireshark\n# Specify source extension\nENV EXT tar.bz2\n# Specify Wireshark version to download and install\nENV VERS 1.8.10\n# Specific Libtool to download and install\nENV LIBTOOL libtool-2.4.2\n# Install directory\nENV PREFIX \/opt\n# Path should include prefix\nENV PATH \/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin:$PREFIX\/bin\n\n# Install dependencies\nRUN apt-get update -qq\nRUN apt-get install -yq build-essential autoconf automake libtool bison flex \\\n  libpcap-dev libglib2.0-dev libgeoip-dev libkrb5-dev  \\\n  qt5-default libssl-dev libgtk-3-dev \\\n  libgcrypt-dev libcap-dev libsmi-dev libc-ares-dev --no-install-recommends\nRUN  wget --no-check-certificate https:\/\/ftp.gnu.org\/gnu\/libtool\/$LIBTOOL.tar.gz\nRUN tar zxf $LIBTOOL.tar.gz && cd $LIBTOOL && .\/configure && make && make install\n\n#  Compile and install Wireshark\nUSER $VIRTUSER\nWORKDIR \/home\/$VIRTUSER\nRUN wget --no-check-certificate https:\/\/www.wireshark.org\/download\/src\/all-versions\/$PROG-$VERS.$EXT\nRUN tar -jxf $PROG-$VERS.$EXT\nWORKDIR \/home\/$VIRTUSER\/$PROG-$VERS\nRUN .\/autogen.sh && .\/configure --enable-profile-build --prefix=\/opt  CFLAGS=\"-I\/usr\/include\/glib-2.0 -I\/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/x86_64-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include\" &&  make CFLAGS=\"-fPIC -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/x86_64-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/x86_64-linux-gnu\/glib-2.0\/include\"\nUSER root\nRUN make install\nRUN chmod u+s $PREFIX\/bin\/dumpcap\n\n# Cleanup\nRUN rm -rf \/home\/$VIRTUSER\/$PROG-$VERS\nRUN rm -rf \/root\/$LIBTOOL*\n\n# Environment\nWORKDIR \/home\/$VIRTUSER\nUSER opennsm\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":836,
        "end":1087,
        "text":"RUN apt-get install -yq build-essential autoconf automake libtool bison flex \\\\nlibpcap-dev libglib2.0-dev libgeoip-dev libkrb5-dev \\\\nqt5-default libssl-dev libgtk-3-dev \\\\nlibgcrypt-dev libcap-dev libsmi-dev libc-ares-dev --no-install-recommends"
      },
      {
        "label":"apt-install-without-version",
        "start":836,
        "end":1087,
        "text":"RUN apt-get install -yq build-essential autoconf automake libtool bison flex \\\\nlibpcap-dev libglib2.0-dev libgeoip-dev libkrb5-dev \\\\nqt5-default libssl-dev libgtk-3-dev \\\\nlibgcrypt-dev libcap-dev libsmi-dev libc-ares-dev --no-install-recommends"
      },
      {
        "label":"miss-specific-tags",
        "start":222,
        "end":246,
        "text":"FROM opennsm\/debian"
      },
      {
        "label":"use-cd-change-dir",
        "start":1197,
        "end":1214,
        "text":"&& cd $LIBTOOL &&"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"621e7acc10708a93c014d662530708c607402aae.dockerfile",
    "file_content":"FROM ubuntu:latest\nRUN apt-get update && apt-get install wget -y && wget -qO- https:\/\/get.docker.com | sh\nRUN apt install -y ufw python-pip python-dev\nRUN mkdir app\nCOPY helloworld \/app\/helloworld\nENV TESTENV=\"test\"\nWORKDIR \/app\/helloworld\/\nRUN pip install -r requirements.txt\nEXPOSE 5000\nENTRYPOINT [\"python\"]\nCMD [\"app.py\"]\n\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":41,
        "end":63,
        "text":"apt-get install wget -"
      },
      {
        "label":"apt-install-without-version",
        "start":41,
        "end":63,
        "text":"apt-get install wget -"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":106,
        "end":146,
        "text":"RUN apt install -y ufw python-pip python"
      },
      {
        "label":"apt-install-without-version",
        "start":106,
        "end":146,
        "text":"RUN apt install -y ufw python-pip python"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6397df391b1f35cc70d81306587336ab0f1077df.dockerfile",
    "file_content":"FROM dependabot\/dependabot-core\n\nRUN apt-get update && apt-get install -y vim strace ltrace gdb\n\nRUN useradd -m dependabot\nRUN chown -R dependabot:dependabot \\\n  \/usr\/local\/.pyenv \\\n  \/opt\/go\/gopath \\\n  \/opt\/rust\/\nUSER dependabot\n\nRUN curl -L -o ~\/.vimrc https:\/\/github.com\/hmarr\/dotfiles\/raw\/master\/vimrc-vanilla.vim && \\\n    echo 'export PS1=\"[dependabot-core-dev] \\w \\[$(tput setaf 4)\\]$ \\[$(tput sgr 0)\\]\"' >> ~\/.bashrc\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/common\/lib\/dependabot\nWORKDIR \/home\/dependabot\/dependabot-core\n\nENV BUNDLE_PATH=\"\/home\/dependabot\/.bundle\" \\\n    BUNDLE_BIN=\".bundle\/binstubs\" \\\n    PATH=\".bundle\/binstubs:$PATH\"\n\nCOPY common\/Gemfile common\/dependabot-common.gemspec \/home\/dependabot\/dependabot-core\/common\/\nCOPY common\/lib\/dependabot\/version.rb \/home\/dependabot\/dependabot-core\/common\/lib\/dependabot\/\nRUN cd common && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/terraform\nCOPY terraform\/Gemfile terraform\/dependabot-terraform.gemspec \/home\/dependabot\/dependabot-core\/terraform\/\nRUN cd terraform && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/elm\nCOPY elm\/Gemfile elm\/dependabot-elm.gemspec \/home\/dependabot\/dependabot-core\/elm\/\nRUN cd elm && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/docker\nCOPY docker\/Gemfile docker\/dependabot-docker.gemspec \/home\/dependabot\/dependabot-core\/docker\/\nRUN cd docker && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/git_submodules\nCOPY git_submodules\/Gemfile git_submodules\/dependabot-git_submodules.gemspec \/home\/dependabot\/dependabot-core\/git_submodules\/\nRUN cd git_submodules && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/python\nCOPY python\/Gemfile python\/dependabot-python.gemspec \/home\/dependabot\/dependabot-core\/python\/\nRUN cd python && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/nuget\nCOPY nuget\/Gemfile nuget\/dependabot-nuget.gemspec \/home\/dependabot\/dependabot-core\/nuget\/\nRUN cd nuget && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/maven\nCOPY maven\/Gemfile maven\/dependabot-maven.gemspec \/home\/dependabot\/dependabot-core\/maven\/\nRUN cd maven && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/gradle\nCOPY gradle\/Gemfile gradle\/dependabot-gradle.gemspec \/home\/dependabot\/dependabot-core\/gradle\/\nRUN cd gradle && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/hex\nCOPY hex\/Gemfile hex\/dependabot-hex.gemspec \/home\/dependabot\/dependabot-core\/hex\/\nRUN cd hex && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/cargo\nCOPY cargo\/Gemfile cargo\/dependabot-cargo.gemspec \/home\/dependabot\/dependabot-core\/cargo\/\nRUN cd cargo && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/dep\nCOPY dep\/Gemfile dep\/dependabot-dep.gemspec \/home\/dependabot\/dependabot-core\/dep\/\nRUN cd dep && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/go_modules\nCOPY go_modules\/Gemfile go_modules\/dependabot-go_modules.gemspec \/home\/dependabot\/dependabot-core\/go_modules\/\nRUN cd go_modules && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/npm_and_yarn\nCOPY npm_and_yarn\/Gemfile npm_and_yarn\/dependabot-npm_and_yarn.gemspec \/home\/dependabot\/dependabot-core\/npm_and_yarn\/\nRUN cd npm_and_yarn && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/composer\nCOPY composer\/Gemfile composer\/dependabot-composer.gemspec \/home\/dependabot\/dependabot-core\/composer\/\nRUN cd composer && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/bundler\nCOPY bundler\/Gemfile bundler\/dependabot-bundler.gemspec \/home\/dependabot\/dependabot-core\/bundler\/\nRUN cd bundler && bundle install\n\nRUN mkdir -p \/home\/dependabot\/dependabot-core\/omnibus\nCOPY omnibus\/Gemfile omnibus\/dependabot-omnibus.gemspec \/home\/dependabot\/dependabot-core\/omnibus\/\nRUN cd omnibus && bundle install\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":55,
        "end":95,
        "text":"apt-get install -y vim strace ltrace gdb"
      },
      {
        "label":"apt-install-without-version",
        "start":55,
        "end":95,
        "text":"apt-get install -y vim strace ltrace gdb"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":31,
        "text":"FROM dependabot\/dependabot-core"
      },
      {
        "label":"use-cd-change-dir",
        "start":839,
        "end":852,
        "text":"RUN cd common"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"6400c6a336695523c0b62c97ef3eaf69cfd3c84b.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/php:7.2.14-apache-stretch\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":444,
        "end":464,
        "text":"sudo apt-get update;"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":465,
        "end":584,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":465,
        "end":584,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4214,
        "end":4226,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"64bed4297a1244ce759bb7b97ee7516d73127678.dockerfile",
    "file_content":"FROM joynr-cpp-base:latest\n\n###################################################\n# install gcovr for code coverage reports\n###################################################\nRUN . \/etc\/profile \\\n    && dnf update -y \\\n    && dnf install -y \\\n    python-pip \\\n    && dnf clean all \\\n    && pip install gcovr\n\n###################################################\n# install lcov\n###################################################\nRUN dnf update -y \\\n    && dnf install -y \\\n    lcov \\\n    && dnf clean all\n\n###################################################\n# install rapidjson\n###################################################\n\nRUN cd \/opt \\\n    && . \/etc\/profile \\\n    && git clone https:\/\/github.com\/miloyip\/rapidjson.git rapidjson \\\n    && cd rapidjson \\\n    && git checkout v1.1.0 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DRAPIDJSON_BUILD_DOC=OFF \\\n    -DRAPIDJSON_BUILD_EXAMPLES=OFF \\\n    -DRAPIDJSON_BUILD_TESTS=OFF \\\n    -DRAPIDJSON_BUILD_THIRDPARTY_GTEST=OFF .. \\\n    && make install -j\"$(nproc)\" \\\n    && cd \/opt \\\n    && rm -rf rapidjson\n\n###################################################\n# install muesli\n###################################################\n\nRUN cd \/opt \\\n    && . \/etc\/profile \\\n    && git clone https:\/\/github.com\/bmwcarit\/muesli.git \\\n    && cd muesli \\\n    && git checkout 1.0.1 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DBUILD_MUESLI_TESTS=Off -DUSE_PLATFORM_RAPIDJSON=On .. \\\n    && make install -j\"$(nproc)\" \\\n    && cd \/opt \\\n    && rm -rf muesli\n\n###################################################\n# install googletest & googlemock\n###################################################\n\nRUN cd \/opt \\\n    && . \/etc\/profile \\\n    && git clone https:\/\/github.com\/google\/googletest.git \\\n    && cd googletest \\\n    && git checkout ddb8012e \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. \\\n    && make install -j\"$(nproc)\" \\\n    && cd \/opt\/ \\\n    && rm -rf googletest\n\n###################################################\n# install smrf\n###################################################\n\nRUN export SMRF_VERSION=0.3.3 \\\n    && . \/etc\/profile \\\n    && cd \/opt \\\n    && git clone https:\/\/github.com\/bmwcarit\/smrf.git \\\n    && cd smrf \\\n    && git checkout $SMRF_VERSION \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DBUILD_TESTS=Off .. \\\n    && make install -j\"$(nproc)\" \\\n    && cd \/opt \\\n    && rm -rf smrf\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":26,
        "text":"FROM joynr-cpp-base:latest"
      },
      {
        "label":"pip-install-without-version",
        "start":286,
        "end":306,
        "text":"&& pip install gcovr"
      },
      {
        "label":"use-cd-change-dir",
        "start":816,
        "end":826,
        "text":"cd build \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1029,
        "end":1038,
        "text":"cd \/opt \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1186,
        "end":1199,
        "text":"RUN cd \/opt \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1286,
        "end":1300,
        "text":"&& cd muesli \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1357,
        "end":1367,
        "text":"cd build \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1478,
        "end":1490,
        "text":"&& cd \/opt \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1652,
        "end":1665,
        "text":"RUN cd \/opt \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1829,
        "end":1842,
        "text":"&& cd build \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1757,
        "end":1772,
        "text":"cd googletest \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1937,
        "end":1947,
        "text":"&& cd \/opt"
      },
      {
        "label":"use-cd-change-dir",
        "start":2230,
        "end":2242,
        "text":"&& cd smrf \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2157,
        "end":2169,
        "text":"&& cd \/opt \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2307,
        "end":2317,
        "text":"cd build \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2393,
        "end":2405,
        "text":"&& cd \/opt \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"64c02c4f668c12732297488f93c61ef13a98982a.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nMAINTAINER Matheus Fidelis <msfidelis01@gmail.com>\n\nRUN apt-get update ; \\\n  apt-get install wget php7.0 libapache2-mod-php7.0 php7.0-fpm \\\n  php7.0-mysql php7.0-json php7.0-ldap php7.0-zip php7.0-bcmath php7.0-curl \\\n  php7.0-common php7.0-dba php7.0-gd php7.0-odbc php7.0-xml  php-pear php7.0-dev -y;\n\nRUN mkdir -p \/usr\/local\/openssl\/include\/openssl\/ && \\\n    ln -s \/usr\/include\/openssl\/evp.h \/usr\/local\/openssl\/include\/openssl\/evp.h && \\\n    mkdir -p \/usr\/local\/openssl\/lib\/ && \\\n    ln -s \/usr\/lib\/x86_64-linux-gnu\/libssl.a \/usr\/local\/openssl\/lib\/libssl.a && \\\n    ln -s \/usr\/lib\/x86_64-linux-gnu\/libssl.so \/usr\/local\/openssl\/lib\/\n\n\nRUN pecl install mongodb\n\nRUN echo \"extension=mongodb.so\" > \/etc\/php\/7.0\/fpm\/conf.d\/20-mongodb.ini && \\\n    echo \"extension=mongodb.so\" > \/etc\/php\/7.0\/cli\/conf.d\/20-mongodb.ini && \\\n    echo \"extension=mongodb.so\" > \/etc\/php\/7.0\/mods-available\/mongodb.ini\n\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nVOLUME \/var\/www\/html\/\n\nEXPOSE 80\n\nCMD [\"php\", \"-S\", \"0.0.0.0:80\", \"-t\", \"\/var\/www\/html\/\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":68,
        "text":"MAINTAINER Matheus Fidelis <msfidelis01@gmail.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":96,
        "end":321,
        "text":"apt-get install wget php7.0 libapache2-mod-php7.0 php7.0-fpm \\\\nphp7.0-mysql php7.0-json php7.0-ldap php7.0-zip php7.0-bcmath php7.0-curl \\\\nphp7.0-common php7.0-dba php7.0-gd php7.0-odbc php7.0-xml php-pear php7.0-dev -y;"
      },
      {
        "label":"apt-install-without-version",
        "start":96,
        "end":321,
        "text":"apt-get install wget php7.0 libapache2-mod-php7.0 php7.0-fpm \\\\nphp7.0-mysql php7.0-json php7.0-ldap php7.0-zip php7.0-bcmath php7.0-curl \\\\nphp7.0-common php7.0-dba php7.0-gd php7.0-odbc php7.0-xml php-pear php7.0-dev -y;"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"64c4945356b9ea374c97b21a3f840eb1b966210d.dockerfile",
    "file_content":"FROM openshift\/origin-control-plane\nMAINTAINER Aaron Weitekamp <aweiteka@redhat.com>\n\nADD install.sh run.sh uninstall.sh \/container\/bin\/\nADD registry-console-template.yaml \\\n    registry-login-template.html \\\n    \/container\/etc\/origin\/\n\nLABEL name=\"projectatomic\/atomic-registry-quickstart\" \\\n      vendor=\"Project Atomic\" \\\n      url=\"https:\/\/projectatomic.io\/registry\" \\\n      summary=\"Quickstart image for Atomic Registry\" \\\n      description=\"This is a quickstart image to install Atomic Registry on a single host. It is an open source enterprise registry solution based on the Origin project featuring single sign-on (SSO) user experience, a robust web interface and advanced role-based access control (RBAC).\" \\\n      INSTALL='docker run -i --rm \\\n                --privileged --net=host \\\n                -v \/var\/run:\/var\/run:rw \\\n                -v \/sys:\/sys \\\n                -v \/etc\/localtime:\/etc\/localtime:ro \\\n                -v \/var\/lib\/docker:\/var\/lib\/docker:rw \\\n                -v \/var\/lib\/origin\/:\/var\/lib\/origin\/ \\\n                -v \/etc\/origin\/:\/etc\/origin\/ \\\n                -v \/:\/host \\\n                -e KUBECONFIG=\/etc\/origin\/master\/admin.kubeconfig \\\n                --entrypoint \/container\/bin\/install.sh \\\n                $IMAGE' \\\n      RUN='docker run -i --rm --privileged \\\n                --net=host \\\n                -v \/:\/host \\\n                -v \/var\/lib\/docker:\/var\/lib\/docker:rw \\\n                -v \/etc\/origin:\/etc\/origin \\\n                -v \/var\/lib\/registry:\/var\/lib\/registry \\\n                -e KUBECONFIG=\/etc\/origin\/master\/admin.kubeconfig \\\n                --entrypoint \/container\/bin\/run.sh \\\n                $IMAGE' \\\n      UNINSTALL='docker run -i --rm --privileged \\\n                -v \/:\/host \\\n                --entrypoint \/container\/bin\/uninstall.sh \\\n                $IMAGE'\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":36,
        "end":84,
        "text":"MAINTAINER Aaron Weitekamp <aweiteka@redhat.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":35,
        "text":"FROM openshift\/origin-control-plane"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":86,
        "end":235,
        "text":"ADD install.sh run.sh uninstall.sh \/container\/bin\/\\nADD registry-console-template.yaml \\\\nregistry-login-template.html \\\\n\/container\/etc\/origin\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"64e0f329127206d475931ec123bf28caf6729c7a.dockerfile",
    "file_content":"FROM 2k0ri\/centos7-systemd  \nMAINTAINER 2k0ri esc13245@gmail.com  \n  \nRUN yum install -y openssh-server openssh-clients sudo net-tools  \n\n",
    "risk_labels":[
      {
        "label":"yum-install-without-version",
        "start":70,
        "end":134,
        "text":"RUN yum install -y openssh-server openssh-clients sudo net-tools"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":0,
        "end":26,
        "text":"FROM 2k0ri\/centos7-systemd"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":29,
        "end":60,
        "text":"MAINTAINER 2k0ri esc13245@gmail"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"65137ed46aebc393a21c0e2d077f36bfb3778710.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\nFROM circleci\/rust:1.26.1-jessie\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":436,
        "end":455,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":457,
        "end":574,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless"
      },
      {
        "label":"apt-install-without-version",
        "start":457,
        "end":574,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless"
      },
      {
        "label":"use-cd-change-dir",
        "start":4186,
        "end":4198,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"6552588fac7203903657f45749fad90091c81468.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nLABEL maintainer=\"Craig Citro <craigcitro@google.com>\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        git \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        zip \\\n        zlib1g-dev \\\n        openjdk-8-jdk \\\n        openjdk-8-jre-headless \\\n        && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN curl -fSsL -O https:\/\/bootstrap.pypa.io\/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n        Pillow \\\n        h5py \\\n        ipykernel \\\n        jupyter \\\n        matplotlib \\\n        mock \\\n        numpy==1.14.5 \\\n        scipy \\\n        sklearn \\\n        pandas \\\n        && \\\n    python -m ipykernel.kernelspec\n\n# RUN ln -s -f \/usr\/bin\/python3 \/usr\/bin\/python#\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config.py \/root\/.jupyter\/\n\n# Jupyter has issues with being run directly:\n#   https:\/\/github.com\/ipython\/ipython\/issues\/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh \/\n\n# Set up Bazel.\n\n# Running bazel inside a `docker build` command causes trouble, cf:\n#   https:\/\/github.com\/bazelbuild\/bazel\/issues\/134\n# The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >>\/etc\/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https:\/\/github.com\/bazelbuild\/bazel\/issues\/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>\/etc\/bazel.bazelrc\n# Install the most recent bazel release.\nENV BAZEL_VERSION 0.15.0\nWORKDIR \/\nRUN mkdir \/bazel && \\\n    cd \/bazel && \\\n    curl -H \"User-Agent: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/57.0.2987.133 Safari\/537.36\" -fSsL -O https:\/\/github.com\/bazelbuild\/bazel\/releases\/download\/$BAZEL_VERSION\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/57.0.2987.133 Safari\/537.36\" -fSsL -o \/bazel\/LICENSE.txt https:\/\/raw.githubusercontent.com\/bazelbuild\/bazel\/master\/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    .\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd \/ && \\\n    rm -f \/bazel\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\n# Download and build TensorFlow.\nWORKDIR \/tensorflow\nRUN git clone --branch=r1.10 --depth=1 https:\/\/github.com\/tensorflow\/tensorflow.git .\n\n# TODO(craigcitro): Don't install the pip package, since it makes it\n# more difficult to experiment with local changes. Instead, just add\n# the built directory to the path.\n\nENV CI_BUILD_PYTHON python\n\nRUN tensorflow\/tools\/ci_build\/builds\/configured CPU \\\n    bazel build -c opt --copt=-mavx --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n        # For optimized builds appropriate for the hardware platform of your choosing, uncomment below...\n        # For ivy-bridge or sandy-bridge\n        # --copt=-march=\"ivybridge\" \\\n        # for haswell, broadwell, or skylake\n        # --copt=-march=\"haswell\" \\\n        tensorflow\/tools\/pip_package:build_pip_package && \\\n    bazel-bin\/tensorflow\/tools\/pip_package\/build_pip_package \/tmp\/pip && \\\n    pip --no-cache-dir install --upgrade \/tmp\/pip\/tensorflow-*.whl && \\\n    rm -rf \/tmp\/pip && \\\n    rm -rf \/root\/.cache\n# Clean up pip wheel and Bazel cache when done.\n\n# TensorBoard\nEXPOSE 6006\n# IPython\nEXPOSE 8888\n\nWORKDIR \/root\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":100,
        "end":490,
        "text":"-get install -y --no-install-recommends \\\\nbuild-essential \\\\ncurl \\\\ngit \\\\nlibcurl3-dev \\\\nlibfreetype6-dev \\\\nlibhdf5-serial-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\npython-dev \\\\nrsync \\\\nsoftware-properties-common \\\\nunzip \\\\nzip \\\\nzlib1g-dev \\\\nopenjdk-8-jdk \\"
      },
      {
        "label":"pip-install-without-version",
        "start":699,
        "end":837,
        "text":"RUN pip --no-cache-dir install \\\\nPillow \\\\nh5py \\\\nipykernel \\\\njupyter \\\\nmatplotlib \\\\nmock \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1811,
        "end":1825,
        "text":"cd \/bazel && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2410,
        "end":2419,
        "text":"cd \/ && \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"85b1efbd0d2400d95ad5af992005355690bd83d0.dockerfile",
    "file_content":"# Suricata 2.0.5\n#\n# VERSION               1\nFROM      opennsm\/debian\nMAINTAINER Jon Schipp <jonschipp@gmail.com>\n\n# Metadata\nLABEL organization=opennsm\nLABEL program=suricata\n# Specify container username e.g. training, demo\nENV VIRTUSER opennsm\n# Specify program\nENV PROG suricata\n# Specify Suricata version to download and install (e.g. 2.0.5)\nENV VERS 2.0.5\n# Install directory \nENV PREFIX \/opt\n# Path should include prefix\nENV PATH \/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin:$PREFIX\/bin\n\n# Install dependencies\nRUN apt-get update -qq\nRUN apt-get install -yq libpcre3 libpcre3-dbg libpcre3-dev \\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libmagic-dev libcap-ng-dev \\\nlibjansson-dev pkg-config libgeoip-dev libnetfilter-queue-dev\n\n# Compile and install libpcap\nUSER $VIRTUSER\nWORKDIR \/home\/$VIRTUSER\nRUN wget http:\/\/www.openinfosecfoundation.org\/download\/$PROG-$VERS.tar.gz\nRUN tar -xvzf $PROG-$VERS.tar.gz\nWORKDIR \/home\/$VIRTUSER\/$PROG-$VERS\nRUN .\/configure --enable-nfqueue --enable-geoip --prefix=$PREFIX --enable-profiling --enable-debug --enable-debug-validation --enable-unittests --sysconfdir=\/etc --localstatedir=\/var && make\nUSER root\nRUN make install && make install-full\nRUN chmod u+s $PREFIX\/bin\/$PROG\n\n# Cleanup\nRUN rm -rf \/home\/$VIRTUSER\/$PROG-$VERS\n\n# Environment\nWORKDIR \/home\/$VIRTUSER\nUSER opennsm\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":45,
        "end":69,
        "text":"FROM opennsm\/debian"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":70,
        "end":113,
        "text":"MAINTAINER Jon Schipp <jonschipp@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":556,
        "end":814,
        "text":"RUN apt-get install -yq libpcre3 libpcre3-dbg libpcre3-dev \\\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libmagic-dev libcap-ng-dev \\\\nlibjansson-dev pkg-config libgeoip-dev libnetfilter-queue-"
      },
      {
        "label":"apt-install-without-version",
        "start":556,
        "end":817,
        "text":"RUN apt-get install -yq libpcre3 libpcre3-dbg libpcre3-dev \\\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libmagic-dev libcap-ng-dev \\\\nlibjansson-dev pkg-config libgeoip-dev libnetfilter-queue-dev"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "miss-apt-no-install-recommends"
    ]
  },
  {
    "filename":"85c04ff6a48e3275f3d6862c3470670871d17cf6.dockerfile",
    "file_content":"# Set the base image to Ubuntu\nFROM    joewhaley\/docker-flask-pandas:latest\n\n# File Author \/ Maintainer\nMAINTAINER Lef Ioannidis\n\nADD requirements.txt \/tmp\/requirements.txt\n\n# Install oracle dependencies\nRUN pip install -r \/tmp\/requirements.txt\n\n# Define working directory\nRUN mkdir \/src\nADD . \/src\nWORKDIR \/src\n\n# Expose ports\nEXPOSE 8080\n\n# Wait for postgres\n# Start nodeJS UnifyID backend\nCMD [\"make\", \"run\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":130,
        "end":172,
        "text":"ADD requirements.txt \/tmp\/requirements.txt"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":104,
        "end":128,
        "text":"MAINTAINER Lef Ioannidis"
      },
      {
        "label":"miss-specific-tags",
        "start":31,
        "end":75,
        "text":"FROM joewhaley\/docker-flask-pandas:latest"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":288,
        "end":298,
        "text":"ADD . \/src"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"860fb5b214f9777dbec9c4775f683d23b2adb8de.dockerfile",
    "file_content":"FROM ubuntu:latest\nMAINTAINER Matt Erasmus <code@zonbi.org>\nRUN groupadd vsaq\nRUN useradd -r -g vsaq -d \/opt\/vsaq -s \/usr\/bin\/nologin -c \"VSAQ User\" vsaq\nRUN apt-get update && apt-get -y upgrade\nRUN apt-get install -qy git ant openjdk-7-jdk unzip curl\nRUN git clone https:\/\/github.com\/google\/vsaq.git \/opt\/vsaq\nRUN chown -R vsaq:vsaq \/opt\/vsaq\nRUN curl https:\/\/s3-eu-west-1.amazonaws.com\/vsaq\/runme.sh > \/opt\/vsaq\/runme.sh\nRUN chmod 750 \/opt\/vsaq\/runme.sh\nRUN chown vsaq:vsaq \/opt\/vsaq\/runme.sh\nWORKDIR \/opt\/vsaq\nRUN .\/do.sh install_deps\nRUN .\/do.sh build\nRUN chgrp -R vsaq build\nRUN chmod g+w build\nRUN sed -i 's\/127\\.0\\.0\\.1\/0\\.0\\.0\\.0\/' \/opt\/vsaq\/vsaq_server.py\nEXPOSE 9000\nUSER vsaq\nCMD [\"\/opt\/vsaq\/runme.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":58,
        "text":"MAINTAINER Matt Erasmus <code@zonbi.org"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":195,
        "end":251,
        "text":"RUN apt-get install -qy git ant openjdk-7-jdk unzip curl"
      },
      {
        "label":"apt-install-without-version",
        "start":195,
        "end":251,
        "text":"RUN apt-get install -qy git ant openjdk-7-jdk unzip curl"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "miss-apt-no-install-recommends"
    ]
  },
  {
    "filename":"89e7c92f60db10e392e4552e16e7c64f508c4584.dockerfile",
    "file_content":"FROM floydhub\/dl-deps:3.1.0-cpu.33\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n\nRUN  apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        python-pip \\\n        python-setuptools \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && rm -rf \/var\/lib\/apt\/lists\/* \\\n    && rm -rf \/var\/cache\/apt\/archives\/*\n\nRUN pip --no-cache-dir install \\\n        virtualenv \\\n        PyOpenGL PyOpenGL_accelerate \\\n        Cython \\\n        h5py \\\n        jupyter \\\n        notebook==5.6.0 \\\n        numpy \\\n        pandas \\\n        ipykernel==4.9.0 \\\n        ipython==5.6.0 \\\n        matplotlib==2.2.3 \\\n        path.py \\\n        pyyaml \\\n        scipy \\\n        six \\\n        sklearn \\\n        sympy \\\n        Pillow \\\n        zmq \\\n        opencv-contrib-python==3.4.0.12 \\\n    && rm -rf \/tmp\/* \/var\/tmp\/* \\\n    && python -m ipykernel.kernelspec\n\n# Set up our notebook config.\nCOPY jupyter_notebook_config_py2.py \/root\/.jupyter\/\nRUN mv \/root\/.jupyter\/jupyter_notebook_config_py2.py \/root\/.jupyter\/jupyter_notebook_config.py\n\n# Create the file configurations for IPython\n# and remove the default one.\nRUN ipython profile create && rm \/root\/.ipython\/profile_default\/ipython_config.py\n\n# Set up our IPython config.\nCOPY ipython_config.py \/root\/.ipython\/profile_default\/ipython_config.py\n\n# Jupyter has issues with being run directly:\n#   https:\/\/github.com\/ipython\/ipython\/issues\/7062\n# We just add a little wrapper script.\nCOPY run_jupyter.sh \/\nRUN chmod +x \/run_jupyter.sh\n\n# IPython\nEXPOSE 8888\n\nCMD [\"\/run_jupyter.sh\"]",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":110,
        "end":203,
        "text":"apt-get install -y --no-install-recommends \\\\npython-pip \\\\npython-setuptools \\"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":35,
        "end":78,
        "text":"MAINTAINER Floyd Labs \"support@floydhub.com"
      },
      {
        "label":"pip-install-without-version",
        "start":333,
        "end":475,
        "text":"RUN pip --no-cache-dir install \\\\nvirtualenv \\\\nPyOpenGL PyOpenGL_accelerate \\\\nCython \\\\nh5py \\\\njupyter \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "root-privilege-user",
      "use-deprecated-maintainer",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"8a38a38864963b68c3a37e19234a17d94c0e642c.dockerfile",
    "file_content":"# Copyright IBM Corp, All Rights Reserved.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\nFROM busybox as builder\nENV FABRIC_VERSION_1_0 1.0.5\nRUN cd \/tmp && ARCH=$(echo \"$(uname -s|tr '[:upper:]' '[:lower:]'|sed 's\/mingw64_nt.*\/windows\/')-$(uname -m | sed 's\/x86_64\/amd64\/g')\" | awk '{print tolower($0)}') && \\\n    echo $ARCH &&wget -c https:\/\/nexus.hyperledger.org\/content\/repositories\/releases\/org\/hyperledger\/fabric\/hyperledger-fabric\/${ARCH}-${FABRIC_VERSION_1_0}\/hyperledger-fabric-${ARCH}-${FABRIC_VERSION_1_0}.tar.gz && \\\n    mkdir fabric-1.0 && tar -zxvf hyperledger-fabric-${ARCH}-${FABRIC_VERSION_1_0}.tar.gz -C fabric-1.0\nENV FABRIC_VERSION_1_2 1.2.0\nRUN cd \/tmp && ARCH=$(echo \"$(uname -s|tr '[:upper:]' '[:lower:]'|sed 's\/mingw64_nt.*\/windows\/')-$(uname -m | sed 's\/x86_64\/amd64\/g')\" | awk '{print tolower($0)}') && \\\n    echo $ARCH &&wget -c https:\/\/nexus.hyperledger.org\/content\/repositories\/releases\/org\/hyperledger\/fabric\/hyperledger-fabric\/${ARCH}-${FABRIC_VERSION_1_2}\/hyperledger-fabric-${ARCH}-${FABRIC_VERSION_1_2}.tar.gz && \\\n    mkdir fabric-1.2 && tar -zxvf hyperledger-fabric-${ARCH}-${FABRIC_VERSION_1_2}.tar.gz -C fabric-1.2\nRUN cd \/tmp && wget -c https:\/\/github.com\/hyperledger\/cello\/archive\/master.zip && unzip master.zip\n\nFROM node:8.9\nMAINTAINER haitao yue \"hightall@me.com\"\nCOPY --from=builder \/tmp\/cello-master\/src\/user-dashboard\/src\/package.json \/\nCOPY --from=builder \/tmp\/cello-master\/src\/user-dashboard\/src\/yarn.lock \/\nCOPY --from=builder \/tmp\/cello-master\/src\/user-dashboard\/src\/packages \/packages\nCOPY --from=builder \/tmp\/cello-master\/src\/user-dashboard\/src \/var\/www\nCOPY --from=builder \/tmp\/cello-master\/src\/user-dashboard\/fabric\/fabric-1.0 \/etc\/hyperledger\/fabric-1.0\nCOPY --from=builder \/tmp\/cello-master\/src\/user-dashboard\/fabric\/fabric-1.2 \/etc\/hyperledger\/fabric-1.2\nCOPY --from=builder \/tmp\/cello-master\/src\/user-dashboard\/src\/app\/lib\/fabric\/fixtures\/channel\/v1.2\/crypto-config \/etc\/hyperledger\/fabric-1.2\/crypto-config\nRUN cd \/ && yarn install -g --verbose\nRUN cd \/packages\/fabric-1.0 && yarn install\nRUN cd \/packages\/fabric-1.2 && yarn install\nENV PATH ${PATH}:\/node_modules\/.bin\nRUN cd \/var\/www && ln -sf \/node_modules . && npm run build\nWORKDIR \/var\/www\nEXPOSE 8081\n\nCOPY --from=builder \/tmp\/fabric-1.0\/bin\/configtxgen \/usr\/local\/bin\/fabric-1.0\/configtxgen\nCOPY --from=builder \/tmp\/fabric-1.2\/bin\/configtxgen \/usr\/local\/bin\/fabric-1.2\/configtxgen\nENV FABRIC_CFG_PATH \/etc\/hyperledger\/fabric-1.0\nENV MONGO_PORT 27017\n\nRUN sed -i 's\/.\\\/ecdsa\\\/key.js\/fabric-client\\\/lib\\\/impl\\\/ecdsa\\\/key.js\/g' \/packages\/fabric-1.2\/node_modules\/fabric-ca-client\/lib\/impl\/CryptoSuite_ECDSA_AES.js\n\nCMD ln -sf \/node_modules . && npm run start\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":85,
        "end":108,
        "text":"FROM busybox as builder"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":1263,
        "end":1302,
        "text":"MAINTAINER haitao yue \"hightall@me.com\""
      },
      {
        "label":"use-cd-change-dir",
        "start":1962,
        "end":1965,
        "text":"RUN"
      },
      {
        "label":"use-cd-change-dir",
        "start":2000,
        "end":2024,
        "text":"RUN cd \/packages\/fabric-"
      },
      {
        "label":"use-cd-change-dir",
        "start":2044,
        "end":2067,
        "text":"RUN cd \/packages\/fabric"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8a92ac74660c6f87ecd71754709df37815bde824.dockerfile",
    "file_content":"FROM lablup\/kernel-base-python-minimal:3.6-ubuntu\n\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless && \\\n    apt-get install -y \\\n        build-essential \\\n        curl \\\n        git-core \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        rsync \\\n        software-properties-common \\\n        zip unzip \\\n        zip \\\n        zlib1g-dev \\\t\n        unzip zip && \\\n    apt-get clean && \\\n    rm -fr \/var\/lib\/apt\/lists\/*\n\nENV BAZEL_VERSION 0.5.4\n\n# install Bazel to build TensorFlow\nRUN echo \"startup --batch\" >>\/etc\/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https:\/\/github.com\/bazelbuild\/bazel\/issues\/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>\/etc\/bazel.bazelrc\n# Install the most recent bazel release.\nENV BAZEL_VERSION 0.5.4\nWORKDIR \/\nRUN mkdir \/bazel && \\\n    cd \/bazel && \\\n    curl -H \"User-Agent: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/57.0.2987.133 Safari\/537.36\" -fSsL -O https:\/\/github.com\/bazelbuild\/bazel\/releases\/download\/$BAZEL_VERSION\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/57.0.2987.133 Safari\/537.36\" -fSsL -o \/bazel\/LICENSE.txt https:\/\/raw.githubusercontent.com\/bazelbuild\/bazel\/master\/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    .\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd \/ && \\\n    rm -f \/bazel\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n#RUN curl -SLO https:\/\/github.com\/bazelbuild\/bazel\/releases\/download\/${BAZEL_VERSION}\/bazel-${BAZEL_VERSION}-dist.zip && \\\n#    mkdir bazel-${BAZEL_VERSION} && \\\n#    unzip -qd bazel-${BAZEL_VERSION} bazel-${BAZEL_VERSION}-dist.zip && \\\n#    cd bazel-${BAZEL_VERSION} && \\\n#    bash compile.sh && \\\n#    cp -p output\/bazel \/usr\/local\/bin\/ && \\\n    ls -l \/usr\/local\/bin\/bazel*\n\n# vim: ft=dockerfile\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":82,
        "end":161,
        "text":"apt-get install -y --no-install-recommends openjdk-8-jdk openjdk-8-jre-headless"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":171,
        "end":520,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ncurl \\\\ngit-core \\\\nlibcurl3-dev \\\\nlibfreetype6-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\nrsync \\\\nsoftware-properties-common \\\\nzip unzip \\\\nzip \\\\nzlib1g-dev \\\\nunzip zip && \\\\napt-get clean &&"
      },
      {
        "label":"apt-install-without-version",
        "start":171,
        "end":520,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ncurl \\\\ngit-core \\\\nlibcurl3-dev \\\\nlibfreetype6-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\nrsync \\\\nsoftware-properties-common \\\\nzip unzip \\\\nzip \\\\nzlib1g-dev \\\\nunzip zip && \\\\napt-get clean &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":973,
        "end":985,
        "text":"cd \/bazel &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1572,
        "end":1579,
        "text":"cd \/ &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8cb643c39f1c975d6b1a3fb79c2a9e1802eb4a50.dockerfile",
    "file_content":"FROM ubuntu:latest  \n  \n# Install.  \nRUN \\  \nsed -i 's\/# \\\\(.*multiverse$\\\\)\/\\1\/g' \/etc\/apt\/sources.list && \\  \napt-get update && \\  \napt-get -y upgrade && \\  \napt-get install -y build-essential && \\  \napt-get install -y software-properties-common && \\  \napt-get install -y byobu curl git htop man unzip vim wget && \\  \napt-get install -y golang && \\  \nrm -rf \/var\/lib\/apt\/lists\/*  \n  \n# Add files.  \n# ADD root\/.bashrc \/root\/.bashrc  \n# ADD root\/.gitconfig \/root\/.gitconfig  \n# ADD root\/.scripts \/root\/.scripts # Set environment variables.  \nENV HOME \/root  \n  \n# Define working directory.  \nWORKDIR \/root  \n  \nCOPY . \/var\/www  \n  \nEXPOSE 80  \n# Define default command.  \n#CMD cd \/var\/www && \\  \n# go build main.go && \\  \n# sleep 2 && \\  \n# echo 'docker run -it -d -p 80:80 <docker_id> \/bin\/bash -c \"\/var\/www\/main\"'  \nENTRYPOINT [\"\/bin\/bash\", \"-c\", \"\/var\/www\/main\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":160,
        "end":307,
        "text":"apt-get install -y build-essential && \\\\napt-get install -y software-properties-common && \\\\napt-get install -y byobu curl git htop man unzip vim"
      },
      {
        "label":"apt-install-without-version",
        "start":160,
        "end":317,
        "text":"apt-get install -y build-essential && \\\\napt-get install -y software-properties-common && \\\\napt-get install -y byobu curl git htop man unzip vim wget && \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":320,
        "end":345,
        "text":"apt-get install -y golang"
      },
      {
        "label":"apt-install-without-version",
        "start":320,
        "end":345,
        "text":"apt-get install -y golang"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8ce783eb367e7e7af48ad81850c90b73c7ece208.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/node:11.15.0-stretch\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"Acquire::Check-Valid-Until false;\" | sudo tee -a \/etc\/apt\/apt.conf.d\/10-nocheckvalid \\\n    && echo 'Package: *\\nPin: origin \"archive.debian.org\"\\nPin-Priority: 500' | sudo tee -a \/etc\/apt\/preferences.d\/10-archive-pin \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n    && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n    && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n    && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n        \"\/opt\/google\/chrome\/google-chrome\" \\\n    && google-chrome --version\n\nRUN CHROME_VERSION=\"$(google-chrome --version)\" \\\n    && export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's\/^Google Chrome \/\/')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} \\\n    && CHROMEDRIVER_VERSION=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) \\\n    && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_VERSION\/chromedriver_linux64.zip\" \\\n    && cd \/tmp \\\n    && unzip chromedriver_linux64.zip \\\n    && rm -rf chromedriver_linux64.zip \\\n    && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n    && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n    && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":671,
        "end":690,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":692,
        "end":809,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless"
      },
      {
        "label":"apt-install-without-version",
        "start":692,
        "end":809,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless"
      },
      {
        "label":"use-cd-change-dir",
        "start":4646,
        "end":4658,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"8d61b0a2c72caa53f9f3cfebeadc0253d900e476.dockerfile",
    "file_content":"FROM ubuntu:trusty\nLABEL maintainer \"Ondřej Molík <ondrejmo@outlook.com>\"\n\n## https:\/\/github.com\/USArmyResearchLab\/Dshell\n# dshell() {\n#   docker run -it --rm \\\n#   --net host \\\n#   --cap-add=NET_ADMIN \\\n#   -u $(id -u):$(id -g) \\\n#   -v \"$PWD\":\/pcap \\\n#   -w \/pcap \\\n#   ondrejmo\/dshell \"$@\"\n# }\n\nRUN apt-get update && apt-get install -y \\\n  python-crypto \\\n  python-dpkt \\\n  python-ipy \\\n  python-pypcap \\\n  python-pip \\\n  wget \\\n  git \\\n  && apt-get autoclean\n\nRUN pip install pygeoip\n\nWORKDIR \/opt\/\nRUN git clone https:\/\/github.com\/USArmyResearchLab\/Dshell.git\n\nWORKDIR \/opt\/Dshell\/share\/GeoIP\/\nRUN wget http:\/\/geolite.maxmind.com\/download\/geoip\/database\/GeoLiteCountry\/GeoIP.dat.gz\nRUN gunzip GeoIP.dat.gz\nRUN wget http:\/\/geolite.maxmind.com\/download\/geoip\/database\/GeoIPv6.dat.gz\nRUN gunzip GeoIPv6.dat.gz\nRUN wget http:\/\/download.maxmind.com\/download\/geoip\/database\/asnum\/GeoIPASNum.dat.gz\nRUN gunzip GeoIPASNum.dat.gz\nRUN wget http:\/\/download.maxmind.com\/download\/geoip\/database\/asnum\/GeoIPASNumv6.dat.gz\nRUN gunzip GeoIPASNumv6.dat.gz\n\nWORKDIR \/opt\/Dshell\/\nRUN make\n\nVOLUME \/pcap\nWORKDIR \/pcap\n\nENTRYPOINT [ \"\/opt\/Dshell\/dshell\" ]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":320,
        "end":431,
        "text":"apt-get install -y \\\\npython-crypto \\\\npython-dpkt \\\\npython-ipy \\\\npython-pypcap \\\\npython-pip \\\\nwget \\"
      },
      {
        "label":"pip-install-without-version",
        "start":464,
        "end":487,
        "text":"RUN pip install pygeoip"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"apt-install-without-version",
        "start":320,
        "end":431,
        "text":"apt-get install -y \\\\npython-crypto \\\\npython-dpkt \\\\npython-ipy \\\\npython-pypcap \\\\npython-pip \\\\nwget \\"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8d730daa0dffdcb2311ed16947d2ab9210aa3cec.dockerfile",
    "file_content":"FROM node:4.6-slim\n\nMAINTAINER Kamil Karczmarczyk <kkarczmarczyk@gmail.com>\n\n# Global install yarn package manager\nRUN apt-get update && apt-get install -y curl apt-transport-https && \\\n    curl -sS https:\/\/dl.yarnpkg.com\/debian\/pubkey.gpg | apt-key add - && \\\n    echo \"deb https:\/\/dl.yarnpkg.com\/debian\/ stable main\" | tee \/etc\/apt\/sources.list.d\/yarn.list && \\\n    apt-get update && apt-get install -y yarn\n\nWORKDIR \/workspace\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":75,
        "text":"MAINTAINER Kamil Karczmarczyk <kkarczmarczyk@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":140,
        "end":185,
        "text":"-get install -y curl apt-transport-https && \\"
      },
      {
        "label":"apt-install-without-version",
        "start":141,
        "end":185,
        "text":"get install -y curl apt-transport-https && \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"71a99633931a40597765a911d18af62473d9e07f.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/php:7.2.6-fpm-stretch-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":509,
        "end":528,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":530,
        "end":647,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless"
      },
      {
        "label":"apt-install-without-version",
        "start":528,
        "end":647,
        "text":"; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless"
      },
      {
        "label":"use-cd-change-dir",
        "start":4259,
        "end":4271,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"72681629027166408548a53da5093fbc85f50b9e.dockerfile",
    "file_content":"FROM rocker\/tidyverse\n\nADD . \/home\/ggExtra\n\nWORKDIR \/home\/ggExtra\n\nENV RunGgplot2Tests=yes\n\nRUN apt-get update; \\\n  apt-get install -y --no-install-recommends libfreetype6; \\\n  Rscript -e \"devtools::install_deps(dependencies = TRUE, quiet = TRUE)\"; \\\n  Rscript -e \"install.packages('rlang', repos = 'https:\/\/cran.rstudio.com\/')\"\n  ",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":23,
        "end":42,
        "text":"ADD . \/home\/ggExtra"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":21,
        "text":"FROM rocker\/tidyverse"
      },
      {
        "label":"apt-install-without-version",
        "start":116,
        "end":250,
        "text":"apt-get install -y --no-install-recommends libfreetype6; \\\\nRscript -e \"devtools::install_deps(dependencies = TRUE, quiet = TRUE)\"; \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7291016dfb167e792f95c1d6c54a480f772376a3.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/python:3.4.9-stretch-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi \\\n  && sudo apt-get install -y bzip2 libgconf-2-4 # for extracting firefox and running chrome, respectively\n\n# install firefox\n#\nRUN FIREFOX_URL=\"https:\/\/download.mozilla.org\/?product=firefox-latest-ssl&os=linux64&lang=en-US\" \\\n  && ACTUAL_URL=$(curl -Ls -o \/dev\/null -w %{url_effective} $FIREFOX_URL) \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.tar.bz2 $ACTUAL_URL \\\n  && sudo tar -xvjf \/tmp\/firefox.tar.bz2 -C \/opt \\\n  && sudo ln -s \/opt\/firefox\/firefox \/usr\/local\/bin\/firefox \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.* \\\n  && firefox --version\n\n# install geckodriver\n\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n     && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n     && cd \/tmp \\\n     && tar xf geckodriver_linux64.tar.gz \\\n     && rm -rf geckodriver_linux64.tar.gz \\\n     && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n     && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n     && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":509,
        "end":521,
        "text":"sudo apt-get"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":530,
        "end":649,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":530,
        "end":649,
        "text":"sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3495,
        "end":3507,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"72e086ad3f6b6c515fac08fb042275e6cdbff1aa.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/php:7.2.15-fpm-stretch\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi \\\n  && sudo apt-get install -y bzip2 libgconf-2-4 # for extracting firefox and running chrome, respectively\n\n# install firefox\n#\nRUN FIREFOX_URL=\"https:\/\/download.mozilla.org\/?product=firefox-latest-ssl&os=linux64&lang=en-US\" \\\n  && ACTUAL_URL=$(curl -Ls -o \/dev\/null -w %{url_effective} $FIREFOX_URL) \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.tar.bz2 $ACTUAL_URL \\\n  && sudo tar -xvjf \/tmp\/firefox.tar.bz2 -C \/opt \\\n  && sudo ln -s \/opt\/firefox\/firefox \/usr\/local\/bin\/firefox \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.* \\\n  && firefox --version\n\n# install geckodriver\n\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n     && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n     && cd \/tmp \\\n     && tar xf geckodriver_linux64.tar.gz \\\n     && rm -rf geckodriver_linux64.tar.gz \\\n     && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n     && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n     && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1011,
        "end":1030,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1030,
        "end":1131,
        "text":"; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1032,
        "end":1142,
        "text":"sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\\n; else \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3427,
        "end":3439,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"7344348d406bf38c687c478908d5cdc1a894c22f.dockerfile",
    "file_content":"FROM ubuntu:16.04\nWORKDIR \/root\nRUN apt-get update && apt-get install -y \\\n  bzip2 \\\n  doxygen \\\n  g++ \\\n  gcc \\\n  git \\\n  libcrypto++-dev \\\n  libgmp3-dev \\\n  m4 \\\n  make \\\n  patch \\\n  python \\\n  vim \\\n  wget \\\n  yasm \\\n  zip\n\nADD source\/ \/root\/source\nADD install.sh .\nRUN [\"bash\", \"install.sh\"]\n\nADD README.md .\n\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":54,
        "end":225,
        "text":"apt-get install -y \\\\nbzip2 \\\\ndoxygen \\\\ng++ \\\\ngcc \\\\ngit \\\\nlibcrypto++-dev \\\\nlibgmp3-dev \\\\nm4 \\\\nmake \\\\npatch \\\\npython \\\\nvim \\\\nwget \\\\nyasm \\\\nzip"
      },
      {
        "label":"apt-install-without-version",
        "start":54,
        "end":225,
        "text":"apt-get install -y \\\\nbzip2 \\\\ndoxygen \\\\ng++ \\\\ngcc \\\\ngit \\\\nlibcrypto++-dev \\\\nlibgmp3-dev \\\\nm4 \\\\nmake \\\\npatch \\\\npython \\\\nvim \\\\nwget \\\\nyasm \\\\nzip"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":227,
        "end":266,
        "text":"ADD source\/ \/root\/source\\nADD install.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":297,
        "end":312,
        "text":"ADD README.md ."
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"74852563444d33b6ad737477270e890ecd681605.dockerfile",
    "file_content":"FROM ubuntu:latest \nRUN apt-get update\nRUN apt-get install python-pip authbind -y\n\nRUN mkdir -p \/opt\/tamuctf\nCOPY .\/config.py \/opt\/tamuctf\nCOPY .\/serve.py \/opt\/tamuctf\nCOPY .\/requirements.txt \/opt\/tamuctf\nCOPY .\/tamuctf \/opt\/tamuctf\/tamuctf\nCOPY .\/entry.sh \/opt\/tamuctf\nCOPY .\/flag.txt \/opt\/tamuctf\n\nWORKDIR \/opt\/tamuctf\nVOLUME [\"\/opt\/tamuctf\"]\n\nRUN pip install -r requirements.txt\n\nEXPOSE 80\n\nRUN groupadd ctf\nRUN useradd -G ctf --home=\/opt\/tamuctf webuser\n\nRUN chown -R webuser:webuser \/opt\/tamuctf\n\nRUN chmod +x \/opt\/tamuctf\/entry.sh\nWORKDIR \/opt\/tamuctf\nENTRYPOINT [\".\/entry.sh\"]\n",
    "risk_labels":[
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":39,
        "end":81,
        "text":"RUN apt-get install python-pip authbind -y"
      },
      {
        "label":"apt-install-without-version",
        "start":39,
        "end":81,
        "text":"RUN apt-get install python-pip authbind -y"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7745e6bcacef35b20c5dd08db054ae684d139647.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/openjdk:12-ea-17-jdk-oraclelinux7-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":981,
        "end":1030,
        "text":"sudo apt-key adv --keyserver keyserver.ubuntu.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1118,
        "end":1212,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1118,
        "end":1212,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4292,
        "end":4304,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"77abb606a410d26db00f64907ffd5ef850720911.dockerfile",
    "file_content":"# Build the manager binary\nFROM golang:1.10.3 as builder\n\n# Copy in the go src\nWORKDIR \/go\/src\/foremast.ai\/foremast\/foremast-trigger\nCOPY pkg\/    pkg\/\nCOPY cmd\/    cmd\/\nCOPY vendor\/ vendor\/\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o manager foremast.ai\/foremast\/foremast-trigger\/cmd\/manager\n\n# Copy the controller-manager into a thin image\nFROM ubuntu:latest\nRUN apt-get update\nRUN apt-get -y install curl\nWORKDIR \/root\/\nCOPY --from=builder \/go\/src\/foremast.ai\/foremast\/foremast-trigger\/cmd\/manager\/requests.csv .\nCOPY --from=builder \/go\/src\/foremast.ai\/foremast\/foremast-trigger\/manager .\n# COPY .\/cmd\/manager\/manager .\nENTRYPOINT [\".\/manager\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":363,
        "end":381,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":401,
        "end":428,
        "text":"RUN apt-get -y install curl"
      },
      {
        "label":"apt-install-without-version",
        "start":401,
        "end":428,
        "text":"RUN apt-get -y install curl"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7862b0656a93d8b81c9205c11108020724249632.dockerfile",
    "file_content":"# ffmpeg - http:\/\/ffmpeg.org\/download.html\n#\n# From https:\/\/trac.ffmpeg.org\/wiki\/CompilationGuide\/Ubuntu\n#\n# https:\/\/hub.docker.com\/r\/jrottenberg\/ffmpeg\/\n#\n#\n\nFROM    nvidia\/cudagl:9.2-devel-ubuntu16.04 AS devel-base\n\nENV\t    NVIDIA_DRIVER_CAPABILITIES compat32,compute,video\nWORKDIR     \/tmp\/workdir\n\nRUN     apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 && \\\n        apt-get autoremove -y && \\\n        apt-get clean -y\n\nFROM        nvidia\/cudagl:9.2-runtime-ubuntu16.04 AS runtime-base\n\nENV\t    NVIDIA_DRIVER_CAPABILITIES compat32,compute,video\nWORKDIR     \/tmp\/workdir\n\nRUN     apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 libxcb-shape0-dev && \\\n        apt-get autoremove -y && \\\n        apt-get clean -y\n\n\nFROM  devel-base as build\n\nENV        NVIDIA_HEADERS_VERSION=8.1.24.9\nARG        PKG_CONFIG_PATH=\/opt\/ffmpeg\/lib\/pkgconfig\nENV        LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:\/opt\/ffmpeg\/lib\"\nARG        PREFIX=\/opt\/ffmpeg\nARG        MAKEFLAGS=\"-j12\"\n\nENV         FFMPEG_VERSION=3.0.12     \\\n            FDKAAC_VERSION=0.1.5      \\\n            LAME_VERSION=3.100        \\\n            LIBASS_VERSION=0.13.7     \\\n            OGG_VERSION=1.3.2         \\\n            OPENCOREAMR_VERSION=0.1.5 \\\n            OPUS_VERSION=1.2          \\\n            OPENJPEG_VERSION=2.1.2    \\\n            THEORA_VERSION=1.1.1      \\\n            VORBIS_VERSION=1.3.5      \\\n            VPX_VERSION=1.8.0         \\\n            X264_VERSION=20170226-2245-stable \\\n            X265_VERSION=2.3          \\\n            XVID_VERSION=1.3.4        \\\n            FREETYPE_VERSION=2.5.5    \\\n            FRIBIDI_VERSION=0.19.7    \\\n            FONTCONFIG_VERSION=2.12.4 \\\n            LIBVIDSTAB_VERSION=1.1.0  \\\n            KVAZAAR_VERSION=1.2.0     \\\n            AOM_VERSION=v1.0.0        \\\n            SRC=\/usr\/local\n\nARG         OGG_SHA256SUM=\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692  libogg-1.3.2.tar.gz\"\nARG         OPUS_SHA256SUM=\"77db45a87b51578fbc49555ef1b10926179861d854eb2613207dc79d9ec0a9a9  opus-1.2.tar.gz\"\nARG         VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\"\nARG         THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\"\nARG         XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\"\nARG         FREETYPE_SHA256SUM=\"5d03dd76c2171a7601e9ce10551d52d4471cf92cd205948e60289251daddffa8  freetype-2.5.5.tar.gz\"\nARG         LIBVIDSTAB_SHA256SUM=\"14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb  v1.1.0.tar.gz\"\nARG         LIBASS_SHA256SUM=\"8fadf294bf701300d4605e6f1d92929304187fca4b8d8a47889315526adbafd7  0.13.7.tar.gz\"\nARG         FRIBIDI_SHA256SUM=\"3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8  0.19.7.tar.gz\"\n\n\nRUN      buildDeps=\"autoconf \\\n                    automake \\\n                    cmake \\\n                    curl \\\n                    bzip2 \\\n                    libexpat1-dev \\\n                    g++ \\\n                    gcc \\\n                    git \\\n                    gperf \\\n                    libtool \\\n                    make \\\n                    nasm \\\n                    perl \\\n                    pkg-config \\\n                    python \\\n                    libssl-dev \\\n                    yasm \\\n                    zlib1g-dev\" && \\\n        apt-get -yqq update && \\\n        apt-get install -yq --no-install-recommends ${buildDeps}\n\nRUN \\ \n\tDIR=\/tmp\/nv-codec-headers && \\\n\tgit clone https:\/\/git.videolan.org\/git\/ffmpeg\/nv-codec-headers.git ${DIR} && \\\n\tcd ${DIR} && \\\n\tgit checkout n${NVIDIA_HEADERS_VERSION} && \\ \n\tsed -i 's@\/usr\/local@'\"$PREFIX\"'@' Makefile && \\\n\tmake && \\\n\tmake install  && \\\n    rm -rf ${DIR}\n\n## opencore-amr https:\/\/sourceforge.net\/projects\/opencore-amr\/\nRUN \\\n        DIR=\/tmp\/opencore-amr && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sL https:\/\/kent.dl.sourceforge.net\/project\/opencore-amr\/opencore-amr\/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        .\/configure --prefix=\"${PREFIX}\" --enable-shared  && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## x264 http:\/\/www.videolan.org\/developers\/x264.html\nRUN \\\n        DIR=\/tmp\/x264 && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sL https:\/\/download.videolan.org\/pub\/videolan\/x264\/snapshots\/x264-snapshot-${X264_VERSION}.tar.bz2 | \\\n        tar -jx --strip-components=1 && \\\n        .\/configure --prefix=\"${PREFIX}\" --enable-shared --enable-pic --disable-cli && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### x265 http:\/\/x265.org\/\nRUN \\\n        DIR=\/tmp\/x265 && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sL https:\/\/download.videolan.org\/pub\/videolan\/x265\/x265_${X265_VERSION}.tar.gz  | \\\n        tar -zx && \\\n        cd x265_${X265_VERSION}\/build\/linux && \\\n        sed -i \"\/-DEXTRA_LIB\/ s\/$\/ -DCMAKE_INSTALL_PREFIX=\\${PREFIX}\/\" multilib.sh && \\\n        sed -i \"\/^cmake\/ s\/$\/ -DENABLE_CLI=OFF\/\" multilib.sh && \\\n        .\/multilib.sh && \\\n        make -C 8bit install && \\\n        rm -rf ${DIR}\n### libogg https:\/\/www.xiph.org\/ogg\/\nRUN \\\n        DIR=\/tmp\/ogg && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO http:\/\/downloads.xiph.org\/releases\/ogg\/libogg-${OGG_VERSION}.tar.gz && \\\n        echo ${OGG_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n        .\/configure --prefix=\"${PREFIX}\" --enable-shared  && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### libopus https:\/\/www.opus-codec.org\/\nRUN \\\n        DIR=\/tmp\/opus && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO https:\/\/archive.mozilla.org\/pub\/opus\/opus-${OPUS_VERSION}.tar.gz && \\\n        echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \\\n        autoreconf -fiv && \\\n        .\/configure --prefix=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### libvorbis https:\/\/xiph.org\/vorbis\/\nRUN \\\n        DIR=\/tmp\/vorbis && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO http:\/\/downloads.xiph.org\/releases\/vorbis\/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        .\/configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### libtheora http:\/\/www.theora.org\/\nRUN \\\n        DIR=\/tmp\/theora && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO http:\/\/downloads.xiph.org\/releases\/theora\/libtheora-${THEORA_VERSION}.tar.gz && \\\n        echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n        .\/configure --prefix=\"${PREFIX}\" --with-ogg=\"${PREFIX}\" --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### libvpx https:\/\/www.webmproject.org\/code\/\nRUN \\\n        DIR=\/tmp\/vpx && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sL https:\/\/codeload.github.com\/webmproject\/libvpx\/tar.gz\/v${VPX_VERSION} | \\\n        tar -zx --strip-components=1 && \\\n        .\/configure --prefix=\"${PREFIX}\" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \\\n        --disable-debug --disable-examples --disable-docs --disable-install-bins  && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### libmp3lame http:\/\/lame.sourceforge.net\/\nRUN \\\n        DIR=\/tmp\/lame && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sL https:\/\/kent.dl.sourceforge.net\/project\/lame\/lame\/$(echo ${LAME_VERSION} | sed -e 's\/[^0-9]*\\([0-9]*\\)[.]\\([0-9]*\\)[.]\\([0-9]*\\)\\([0-9A-Za-z-]*\\)\/\\1.\\2\/')\/lame-${LAME_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        .\/configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}\/bin\" --enable-shared --enable-nasm --enable-pic --disable-frontend && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### xvid https:\/\/www.xvid.com\/\nRUN \\\n        DIR=\/tmp\/xvid && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO http:\/\/downloads.xvid.org\/downloads\/xvidcore-${XVID_VERSION}.tar.gz && \\\n        echo ${XVID_SHA256SUM} | sha256sum --check && \\\n        tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n        cd xvidcore\/build\/generic && \\\n        .\/configure --prefix=\"${PREFIX}\" --bindir=\"${PREFIX}\/bin\" --datadir=\"${DIR}\" --enable-shared --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n### fdk-aac https:\/\/github.com\/mstorsjo\/fdk-aac\nRUN \\\n        DIR=\/tmp\/fdk-aac && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sL https:\/\/github.com\/mstorsjo\/fdk-aac\/archive\/v${FDKAAC_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        autoreconf -fiv && \\\n        .\/configure --prefix=\"${PREFIX}\" --enable-shared --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## openjpeg https:\/\/github.com\/uclouvain\/openjpeg\nRUN \\\n        DIR=\/tmp\/openjpeg && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sL https:\/\/github.com\/uclouvain\/openjpeg\/archive\/v${OPENJPEG_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## freetype https:\/\/www.freetype.org\/\nRUN  \\\n        DIR=\/tmp\/freetype && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO https:\/\/download.savannah.gnu.org\/releases\/freetype\/freetype-${FREETYPE_VERSION}.tar.gz && \\\n        echo ${FREETYPE_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \\\n        .\/configure --prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## libvstab https:\/\/github.com\/georgmartius\/vid.stab\nRUN  \\\n        DIR=\/tmp\/vid.stab && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO https:\/\/github.com\/georgmartius\/vid.stab\/archive\/v${LIBVIDSTAB_VERSION}.tar.gz &&\\\n        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \\\n        cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" . && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## fridibi https:\/\/www.fribidi.org\/\n# + https:\/\/github.com\/fribidi\/fribidi\/issues\/8\nRUN  \\\n        DIR=\/tmp\/fribidi && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO https:\/\/github.com\/fribidi\/fribidi\/archive\/${FRIBIDI_VERSION}.tar.gz && \\\n        echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && \\\n        sed -i 's\/^SUBDIRS =.*\/SUBDIRS=gen.tab charset lib\/' Makefile.am && \\\n        .\/bootstrap --no-config && \\\n        .\/configure -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make -j 1 && \\\n        make install && \\\n        rm -rf ${DIR}\n## fontconfig https:\/\/www.freedesktop.org\/wiki\/Software\/fontconfig\/\nRUN  \\\n        DIR=\/tmp\/fontconfig && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO https:\/\/www.freedesktop.org\/software\/fontconfig\/release\/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&\\\n        tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \\\n        .\/configure -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## libass https:\/\/github.com\/libass\/libass\nRUN  \\\n        DIR=\/tmp\/libass && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO https:\/\/github.com\/libass\/libass\/archive\/${LIBASS_VERSION}.tar.gz &&\\\n        echo ${LIBASS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz && \\\n        .\/autogen.sh && \\\n        .\/configure -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n## kvazaar https:\/\/github.com\/ultravideo\/kvazaar\nRUN \\\n        DIR=\/tmp\/kvazaar && \\\n        mkdir -p ${DIR} && \\\n        cd ${DIR} && \\\n        curl -sLO https:\/\/github.com\/ultravideo\/kvazaar\/archive\/v${KVAZAAR_VERSION}.tar.gz &&\\\n        tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz && \\\n        .\/autogen.sh && \\\n        .\/configure -prefix=\"${PREFIX}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\n\nRUN \\\n\tDIR=\/tmp\/aom && \\\n        git clone --branch ${AOM_VERSION} --depth 1 https:\/\/aomedia.googlesource.com\/aom ${DIR} ; \\\n        cd ${DIR} ; \\\n        rm -rf CMakeCache.txt CMakeFiles ; \\\n        mkdir -p .\/aom_build ; \\\n        cd .\/aom_build ; \\\n        cmake -DCMAKE_INSTALL_PREFIX=\"${PREFIX}\" -DBUILD_SHARED_LIBS=1 ..; \\\n        make ; \\\n        make install ; \\\n        rm -rf ${DIR}\n\n## ffmpeg https:\/\/ffmpeg.org\/\nRUN  \\\n        DIR=\/tmp\/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n        curl -sLO https:\/\/ffmpeg.org\/releases\/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \\\n        tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2\n\n\n\nRUN \\\n        DIR=\/tmp\/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \\\n        .\/configure \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-ffplay \\\n      --enable-nvenc \\\n        --enable-shared \\\n        --enable-avresample \\\n        --enable-libopencore-amrnb \\\n        --enable-libopencore-amrwb \\\n        --enable-gpl \\\n        --enable-libass \\\n        --enable-libfreetype \\\n        --enable-libvidstab \\\n        --enable-libmp3lame \\\n        --enable-libopenjpeg \\\n        --enable-libopus \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libx265 \\\n        --enable-libxvid \\\n        --enable-libx264 \\\n        --enable-nonfree \\\n        --enable-openssl \\\n        --enable-libfdk_aac \\\n        --enable-libkvazaar \\\n        \\\n        --enable-postproc \\\n        --enable-small \\\n        --enable-version3 \\\n        --extra-cflags=\"-I${PREFIX}\/include -I${PREFIX}\/include\/ffnvcodec -I\/usr\/local\/cuda\/include\/\" \\\n        --extra-ldflags=\"-L${PREFIX}\/lib -L\/usr\/local\/cuda\/lib64\/ -L\/usr\/local\/cuda\/lib32\/\" \\\n        --extra-libs=-ldl \\\n        --prefix=\"${PREFIX}\" && \\\n        make && \\\n        make install && \\\n        make distclean && \\\n        hash -r && \\\n        cd tools && \\\n        make qt-faststart && \\\n        cp qt-faststart ${PREFIX}\/bin\n\n## cleanup\nRUN \\\n        ldd ${PREFIX}\/bin\/ffmpeg | grep opt\/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} \/usr\/local\/lib\/ && \\\n        cp ${PREFIX}\/bin\/* \/usr\/local\/bin\/ && \\\n        cp -r ${PREFIX}\/share\/ffmpeg \/usr\/local\/share\/ && \\\n        LD_LIBRARY_PATH=\/usr\/local\/lib ffmpeg -buildconf\n\n\n\nFROM        runtime-base AS release\nMAINTAINER  Julien Rottenberg <julien@rottenberg.info>\n\nCMD         [\"--help\"]\nENTRYPOINT  [\"ffmpeg\"]\nENV         LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:\/usr\/local\/lib\"\n\nCOPY --from=build \/usr\/local\/bin \/usr\/local\/bin\/\nCOPY --from=build \/usr\/local\/share \/usr\/local\/share\/\nCOPY --from=build \/usr\/local\/lib \/usr\/local\/lib\/\n\n# Let's make sure the app built correctly\n# Convenient to verify on https:\/\/hub.docker.com\/r\/jrottenberg\/ffmpeg\/builds\/ console output\n\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":343,
        "end":417,
        "text":"apt-get install -yq --no-install-recommends ca-certificates expat libgomp1"
      },
      {
        "label":"apt-install-without-version",
        "start":676,
        "end":771,
        "text":"apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 libxcb-shape0-dev &&"
      },
      {
        "label":"apt-install-without-version",
        "start":3557,
        "end":3613,
        "text":"apt-get install -yq --no-install-recommends ${buildDeps}"
      },
      {
        "label":"use-cd-change-dir",
        "start":3735,
        "end":3747,
        "text":"cd ${DIR} &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":4038,
        "end":4052,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4477,
        "end":4491,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4902,
        "end":4916,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":5044,
        "end":5079,
        "text":"cd x265_${X265_VERSION}\/build\/linux"
      },
      {
        "label":"use-cd-change-dir",
        "start":5428,
        "end":5442,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":5902,
        "end":5916,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":6402,
        "end":6414,
        "text":"cd ${DIR} &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":6915,
        "end":6929,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":7433,
        "end":7447,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":7972,
        "end":7986,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":8533,
        "end":8547,
        "text":"cd ${DIR} && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":9099,
        "end":9107,
        "text":"cd ${DIR"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-deprecated-maintainer",
        "start":15348,
        "end":15401,
        "text":"MAINTAINER Julien Rottenberg <julien@rottenberg.info"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7a69ee0d2174791268ebd30bda2ff496b8790d7f.dockerfile",
    "file_content":"FROM openrasp\/centos6\n\nMAINTAINER OpenRASP <ext_yunfenxi@baidu.com>\n\nRUN yum install -y php php-curl php-soap php-gd php-xml php-mysql \\\n\tphp-mbstring php-bcmath php-pdo php-json php-intl \\\n\tphp-pecl-xdebug php-pecl-yaml\n\n# 禁用 xdebug\nRUN mv \/etc\/php.d\/xdebug.ini \/etc\/php.d\/xdebug.ini.bak\n\n# 安装 composer\nRUN curl -sS https:\/\/getcomposer.org\/installer | php \\\n\t&& mv composer.phar \/usr\/bin\/composer\n\n# 初始化 HTML\nCOPY index.php \/var\/www\/html\/index.php\n\n# 其他配置\nCOPY *.sh \/root\/\nCOPY php.ini \/etc\/\n\nENTRYPOINT [\"\/bin\/bash\", \"\/root\/start.sh\"]\nEXPOSE 80\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":23,
        "end":67,
        "text":"MAINTAINER OpenRASP <ext_yunfenxi@baidu.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":21,
        "text":"FROM openrasp\/centos6"
      },
      {
        "label":"yum-install-without-version",
        "start":69,
        "end":220,
        "text":"RUN yum install -y php php-curl php-soap php-gd php-xml php-mysql \\\\nphp-mbstring php-bcmath php-pdo php-json php-intl \\\\nphp-pecl-xdebug php-pecl-yaml"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7a70b37333abb3affd57ddb24543e8ba991a1e0e.dockerfile",
    "file_content":"FROM python:3.6-slim\nLABEL maintainer Garrett Hoffman <garrett@stocktwits.com>\n\nRUN apt-get update && apt-get install -y \\\n    libpq-dev \\ \n    python3-dev \\\n    gcc \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN mkdir -p \/src\/\nWORKDIR \/src\n\nCOPY requirements.txt \/src\n\nRUN pip3 install --upgrade pip && \\\n    pip3 install -r requirements.txt \n\nCOPY run_task.py \/src\/\n\nCMD [ \"python\", \"run_task.py\" ]",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":102,
        "end":167,
        "text":"apt-get install -y \\\\nlibpq-dev \\\\npython3-dev \\\\ngcc \\"
      },
      {
        "label":"apt-install-without-version",
        "start":102,
        "end":167,
        "text":"apt-get install -y \\\\nlibpq-dev \\\\npython3-dev \\\\ngcc \\"
      },
      {
        "label":"pip-install-without-version",
        "start":265,
        "end":295,
        "text":"RUN pip3 install --upgrade pip"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4836674e96b3075cdfab505d6042a55767f5c914.dockerfile",
    "file_content":"FROM ubuntu:18.04\n\nMAINTAINER Robin Smidsrød <robin@smidsrod.no>\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -q -y update \\\n && apt-get -q -y -o \"DPkg::Options::=--force-confold\" -o \"DPkg::Options::=--force-confdef\" install apt-utils \\\n && rm \/etc\/dpkg\/dpkg.cfg.d\/excludes \\\n && apt-get -q -y -o \"DPkg::Options::=--force-confold\" -o \"DPkg::Options::=--force-confdef\" install dumb-init isc-dhcp-server man \\\n && apt-get -q -y autoremove \\\n && apt-get -q -y clean \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\nCOPY util\/entrypoint.sh \/entrypoint.sh\nENTRYPOINT [\"\/entrypoint.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":64,
        "text":"MAINTAINER Robin Smidsrød <robin@smidsrod.no>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":133,
        "end":240,
        "text":"apt-get -q -y -o \"DPkg::Options::=--force-confold\" -o \"DPkg::Options::=--force-confdef\" install apt-utils \\"
      },
      {
        "label":"apt-install-without-version",
        "start":133,
        "end":240,
        "text":"apt-get -q -y -o \"DPkg::Options::=--force-confold\" -o \"DPkg::Options::=--force-confdef\" install apt-utils \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":284,
        "end":409,
        "text":"apt-get -q -y -o \"DPkg::Options::=--force-confold\" -o \"DPkg::Options::=--force-confdef\" install dumb-init isc-dhcp-server man"
      },
      {
        "label":"apt-install-without-version",
        "start":284,
        "end":409,
        "text":"apt-get -q -y -o \"DPkg::Options::=--force-confold\" -o \"DPkg::Options::=--force-confdef\" install dumb-init isc-dhcp-server man"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"48709a7771640a7b16212bd539d0a0c8efd0f3c9.dockerfile",
    "file_content":"FROM debian:jessie\n\nMAINTAINER snowdream <yanghui1986527@gmail.com>\n\n# Install\nRUN apt-get update -y && \\\n    apt-get install -y  --no-install-recommends  expect && \\\n    printf \"\\\n    set timeout -1\\n\\\n    spawn apt-get install -y  --no-install-recommends  keyboard-configuration\\n\\\n    expect {\\n\\\n        \\\"Keyboard layout: \\\" { send \\\"1\\\\\\n\\\" }\\n\\\n    }\\n\\\n    expect eof\\n\\\n    \" | expect\n\nRUN DEBIAN_FRONTEND=noninteractive && \\\n    apt-key adv --recv-keys --keyserver keys.gnupg.net E1F958385BFE2B6E && \\\n    echo \"deb http:\/\/packages.x2go.org\/debian jessie main\" >> \/etc\/apt\/sources.list.d\/x2go.list && \\\n    apt-get -qq update && \\\n    apt-get -qqy install --no-install-recommends \\\n       vim \\\n       apt-utils \\\n       pwgen \\\n       task-mate-desktop \\\n       x2goserver x2goserver-xsession x2gomatebindings \\\n       openssh-server && \\       \n       mkdir -p \/var\/run\/sshd && \\\n       sed -i \"s\/UsePrivilegeSeparation.*\/UsePrivilegeSeparation no\/g\" \/etc\/ssh\/sshd_config && \\\n       sed -i \"s\/UsePAM.*\/UsePAM no\/g\" \/etc\/ssh\/sshd_config && \\\n       sed -i \"s\/PermitRootLogin.*\/PermitRootLogin yes\/g\" \/etc\/ssh\/sshd_config && \\\n       sed -i \"s\/#PasswordAuthentication\/PasswordAuthentication\/g\" \/etc\/ssh\/sshd_config && \\\n       sed -i 's\/^mesg n$\/tty -s \\&\\& mesg n\/g' ~\/.profile && \\\n       mkdir -p \/tmp\/.X11-unix && chmod 1777 \/tmp\/.X11-unix && \\\n       mkdir \/var\/run\/dbus && \\\n    apt-get clean && \\\n    apt-get autoremove && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nADD set_root_pw.sh \/set_root_pw.sh\nADD run.sh \/run.sh\nRUN chmod +x \/*.sh\n\nEXPOSE 22\n\nCMD [\"\/run.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":67,
        "text":"MAINTAINER snowdream <yanghui1986527@gmail.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":110,
        "end":202,
        "text":"apt-get install -y --no-install-recommends expect && \\\\nprintf \"\\\\nset timeout -1\\n\\"
      },
      {
        "label":"apt-install-without-version",
        "start":645,
        "end":844,
        "text":"apt-get -qqy install --no-install-recommends \\\\nvim \\\\napt-utils \\\\npwgen \\\\ntask-mate-desktop \\\\nx2goserver x2goserver-xsession x2gomatebindings \\\\nopenssh-server"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1476,
        "end":1529,
        "text":"ADD set_root_pw.sh \/set_root_pw.sh\\nADD run.sh \/run.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"48d13152357f46c2743e7b7897aa89181e8ef1a7.dockerfile",
    "file_content":"FROM fedora:21\nMAINTAINER http:\/\/fedoraproject.org\/wiki\/Cloud\nRUN yum -y update && yum clean all\nRUN yum -y install mariadb-server pwgen psmisc net-tools hostname && \\\n    yum clean all\n\nADD scripts \/scripts\nRUN chmod 755 \/scripts\/*\n\nVOLUME [\"\/var\/lib\/mysql\", \"\/var\/log\/mysql\"]\nEXPOSE 3306\n\nCMD [\"\/bin\/bash\", \"\/scripts\/start.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":187,
        "end":207,
        "text":"ADD scripts \/scripts"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":15,
        "end":61,
        "text":"MAINTAINER http:\/\/fedoraproject.org\/wiki\/Cloud"
      },
      {
        "label":"yum-install-without-version",
        "start":97,
        "end":162,
        "text":"RUN yum -y install mariadb-server pwgen psmisc net-tools hostname"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4cdb66d2f9760628623c42b5afa0193e485bf053.dockerfile",
    "file_content":"FROM alpine:latest  \nMAINTAINER Chris Short <chris@chrisshort.net>  \n  \nENV PATH \/go\/bin:\/usr\/local\/go\/bin:$PATH  \nENV GOPATH \/go  \n  \nRUN apk add --no-cache \\  \nca-certificates  \n  \nCOPY . \/go\/src\/github.com\/chris-short\/ssl-tester  \n  \nRUN set -x \\  \n&& apk add --no-cache --virtual .build-deps \\  \ngo \\  \ngit \\  \ngcc \\  \nlibc-dev \\  \nlibgcc \\  \n&& cd \/go\/src\/github.com\/chris-short\/ssl-tester \\  \n&& go build -o \/usr\/bin\/ssl-tester . \\  \n&& apk del .build-deps \\  \n&& rm -rf \/go \\  \n&& echo \"Build complete.\"  \n  \nENTRYPOINT [ \"ssl-tester\" ]  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM alpine:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":66,
        "text":"MAINTAINER Chris Short <chris@chrisshort.net>"
      },
      {
        "label":"use-cd-change-dir",
        "start":350,
        "end":384,
        "text":"cd \/go\/src\/github.com\/chris-short\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4d4384d5282f1a9880e15b36467df00752868c11.dockerfile",
    "file_content":"FROM lenz\/whaleware\n\nEXPOSE 5038 8088\n\nRUN \\\n yum install -y wget mlocate dnsmasq nano mc && \\\n yum localinstall -y http:\/\/packages.asterisk.org\/centos\/6\/current\/i386\/RPMS\/asterisknow-version-3.0.1-2_centos6.noarch.rpm && \\\n yum update -y asterisknow-version \n\nRUN yum install -y asterisk asterisk-configs --enablerepo=asterisk-11\n\nADD .\/ww \/ww\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM lenz\/whaleware"
      },
      {
        "label":"yum-install-without-version",
        "start":46,
        "end":89,
        "text":"yum install -y wget mlocate dnsmasq nano mc"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":332,
        "end":344,
        "text":"ADD .\/ww \/ww"
      },
      {
        "label":"yum-install-without-version",
        "start":261,
        "end":330,
        "text":"RUN yum install -y asterisk asterisk-configs --enablerepo=asterisk-11"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "yum-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4d82da1a7e1c76b358ea1e4e774b7741ae5d0d1b.dockerfile",
    "file_content":"FROM python:2.7.14\n\nRUN pip install oci-cli\nRUN apt-get update \nRUN apt-get install -y jq\n",
    "risk_labels":[
      {
        "label":"pip-install-without-version",
        "start":20,
        "end":43,
        "text":"RUN pip install oci-cli"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":64,
        "end":89,
        "text":"RUN apt-get install -y jq"
      },
      {
        "label":"apt-install-without-version",
        "start":64,
        "end":89,
        "text":"RUN apt-get install -y jq"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4e3bf2e851bb1d900b2fea3548145581e0168196.dockerfile",
    "file_content":"FROM nvidia\/cuda:9.0-devel-ubuntu16.04\n\n# TensorFlow version is tightly coupled to CUDA and cuDNN so it should be selected carefully\nENV CUDNN_VERSION=7.0.5.15-1+cuda9.0\nENV NCCL_VERSION=2.2.13-1+cuda9.0\nENV PYTORCH_VERSION=0.4.0\nENV PYTHON_VERSION=3.5\n\nRUN echo \"deb http:\/\/developer.download.nvidia.com\/compute\/machine-learning\/repos\/ubuntu1604\/x86_64 \/\" > \/etc\/apt\/sources.list.d\/nvidia-ml.list\n\nRUN apt-get update && apt-get install -y --no-install-recommends --allow-downgrades --allow-change-held-packages \\\n        build-essential \\\n        cmake \\\n        git \\\n        curl \\\n        vim \\\n        wget \\\n        ca-certificates \\\n        libcudnn7=${CUDNN_VERSION} \\\n        libnccl2=${NCCL_VERSION} \\\n        libnccl-dev=${NCCL_VERSION} \\\n        libjpeg-dev \\\n        libpng-dev \\\n        python${PYTHON_VERSION} \\\n        python${PYTHON_VERSION}-dev\n\nRUN ln -s \/usr\/bin\/python${PYTHON_VERSION} \/usr\/bin\/python\n\nRUN curl -O https:\/\/bootstrap.pypa.io\/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\n\n# Install PyTorch\nRUN pip install http:\/\/download.pytorch.org\/whl\/cu90\/torch-${PYTORCH_VERSION}-cp35-cp35m-linux_x86_64.whl && \\\n\tpip install --no-cache-dir torchvision h5py scipy jupyter ipykernel numpy toolz pandas scikit-learn pillow\n\n# Install Open MPI\nRUN mkdir \/tmp\/openmpi && \\\n    cd \/tmp\/openmpi && \\\n    wget https:\/\/www.open-mpi.org\/software\/ompi\/v3.0\/downloads\/openmpi-3.0.0.tar.gz && \\\n    tar zxf openmpi-3.0.0.tar.gz && \\\n    cd openmpi-3.0.0 && \\\n    .\/configure --enable-orterun-prefix-by-default && \\\n    make -j $(nproc) all && \\\n    make install && \\\n    ldconfig && \\\n    rm -rf \/tmp\/openmpi\n\n# Install Horovod, temporarily using CUDA stubs\nRUN ldconfig \/usr\/local\/cuda-9.0\/targets\/x86_64-linux\/lib\/stubs && \\\n    HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_WITH_PYTORCH=1 pip install --no-cache-dir horovod==0.13.2 && \\\n    ldconfig\n\n# Create a wrapper for OpenMPI to allow running as root by default\nRUN mv \/usr\/local\/bin\/mpirun \/usr\/local\/bin\/mpirun.real && \\\n    echo '#!\/bin\/bash' > \/usr\/local\/bin\/mpirun && \\\n    echo 'mpirun.real --allow-run-as-root \"$@\"' >> \/usr\/local\/bin\/mpirun && \\\n    chmod a+x \/usr\/local\/bin\/mpirun\n\n# Configure OpenMPI to run good defaults:\n#   --bind-to none --map-by slot --mca btl_tcp_if_exclude lo,docker0\nRUN echo \"hwloc_base_binding_policy = none\" >> \/usr\/local\/etc\/openmpi-mca-params.conf && \\\n    echo \"rmaps_base_mapping_policy = slot\" >> \/usr\/local\/etc\/openmpi-mca-params.conf\n\n# Set default NCCL parameters\nRUN echo NCCL_DEBUG=INFO >> \/etc\/nccl.conf && \\\n    echo NCCL_SOCKET_IFNAME=^docker0 >> \/etc\/nccl.conf\n\n# Install OpenSSH for MPI to communicate between containers\nRUN apt-get install -y --no-install-recommends openssh-client openssh-server && \\\n    mkdir -p \/var\/run\/sshd\n\n# Allow OpenSSH to talk to containers without asking for confirmation\nRUN cat \/etc\/ssh\/ssh_config | grep -v StrictHostKeyChecking > \/etc\/ssh\/ssh_config.new && \\\n    echo \"    StrictHostKeyChecking no\" >> \/etc\/ssh\/ssh_config.new && \\\n    mv \/etc\/ssh\/ssh_config.new \/etc\/ssh\/ssh_config\n\nWORKDIR \"\/examples\"",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":399,
        "end":639,
        "text":"RUN apt-get update && apt-get install -y --no-install-recommends --allow-downgrades --allow-change-held-packages \\\\nbuild-essential \\\\ncmake \\\\ngit \\\\ncurl \\\\nvim \\\\nwget \\\\nca-certificates \\"
      },
      {
        "label":"pip-install-without-version",
        "start":1155,
        "end":1261,
        "text":"pip install --no-cache-dir torchvision h5py scipy jupyter ipykernel numpy toolz pandas scikit-learn pillow"
      },
      {
        "label":"use-cd-change-dir",
        "start":1314,
        "end":1332,
        "text":"cd \/tmp\/openmpi &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1466,
        "end":1482,
        "text":"cd openmpi-3.0.0"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4e6b79a16fa02853c8847ca78050b72989b8df0f.dockerfile",
    "file_content":"FROM python:3.6\nMAINTAINER <eacon-tang@foxmail.com>\n\n\nRUN mkdir \/opt\/amas\nWORKDIR \/opt\/amas\n\n# clone repo\nRUN git clone https:\/\/github.com\/amas-eye\/argus_alert.git\n\n# install requirements\nRUN cd argus_alert\/libs; pip install -r requirements.txt\n\nADD run.sh \/usr\/local\/bin\/run\nRUN chmod +x \/usr\/local\/bin\/run\n\nENV PYTHONPATH \/opt\/amas\n\nCMD [\"run\"]",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":16,
        "end":51,
        "text":"MAINTAINER <eacon-tang@foxmail.com>"
      },
      {
        "label":"use-cd-change-dir",
        "start":188,
        "end":211,
        "text":"RUN cd argus_alert\/libs"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":246,
        "end":275,
        "text":"ADD run.sh \/usr\/local\/bin\/run"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4e9cc40ac35d05630aea37f3e681bbcd9214c11d.dockerfile",
    "file_content":"FROM crosbymichael\/golang\n\nADD . \/go\/src\/github.com\/skynetservices\/skydns1\n\nRUN cd \/go\/src\/github.com\/skynetservices\/skydns1 && \\\n    go get github.com\/codegangsta\/cli && \\\n    go get && \\\n    go install . .\/...\n\nVOLUME [\"\/data\"]\n\nEXPOSE 8080\nEXPOSE 53\/udp\n\nENTRYPOINT [\"\/go\/bin\/skydns\", \"-http\", \"0.0.0.0:8080\", \"-dns\", \"0.0.0.0:53\"]\nCMD [\"-nameserver\", \"8.8.8.8:53\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":27,
        "end":74,
        "text":"ADD . \/go\/src\/github.com\/skynetservices\/skydns1"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":25,
        "text":"FROM crosbymichael\/golang"
      },
      {
        "label":"use-cd-change-dir",
        "start":76,
        "end":124,
        "text":"RUN cd \/go\/src\/github.com\/skynetservices\/skydns1"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"500b9ea6ff7a55266b5f802e6aeb524f5fadc0b1.dockerfile",
    "file_content":"#upstream https:\/\/github.com\/docker-library\/rabbitmq\/blob\/1a37166704d2ca7c386980387e81615985d5db47\/3.7\/debian\/Dockerfile\nFROM debian:stretch-slim\nMAINTAINER 若虚 <slpcat@qq.com>\n\n# Container variables\nENV \\\n    TERM=\"xterm\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    TIMEZONE=\"Asia\/Shanghai\"\n\nRUN echo 'deb http:\/\/mirrors.aliyun.com\/debian stretch-backports main' > \/etc\/apt\/sources.list.d\/backports.list \\\n    && sed -i 's\/deb.debian.org\/mirrors.aliyun.com\/' \/etc\/apt\/sources.list \\\n    && sed -i 's\/security.debian.org\/mirrors.aliyun.com\\\/debian-security\/' \/etc\/apt\/sources.list\n\n# Set timezone and locales\nRUN \\\n    echo \"${TIMEZONE}\" > \/etc\/timezone \\\n    && echo \"$LANG UTF-8\" > \/etc\/locale.gen \\\n    && apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -yq apt-utils dialog vim-tiny curl locales \\\n    && ln -sf \/usr\/share\/zoneinfo\/${TIMEZONE} \/etc\/localtime \\\n    && update-locale LANG=$LANG \\\n    && locale-gen $LANG \\\n    && DEBIAN_FRONTEND=noninteractive dpkg-reconfigure locales\n\n# Install required packages\nRUN \\\n    apt-get dist-upgrade -y\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tgnupg \\\n\t\tdirmngr \\\n\t; \\\n\trm -rf \/var\/lib\/apt\/lists\/*\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r rabbitmq && useradd -r -d \/var\/lib\/rabbitmq -m -g rabbitmq rabbitmq\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.10\nRUN set -eux; \\\n\t\\\n\tfetchDeps=' \\\n\t\tca-certificates \\\n\t\twget \\\n\t'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\n\trm -rf \/var\/lib\/apt\/lists\/*; \\\n\t\\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O \/usr\/local\/bin\/gosu \"https:\/\/github.com\/tianon\/gosu\/releases\/download\/$GOSU_VERSION\/gosu-$dpkgArch\"; \\\n\twget -O \/usr\/local\/bin\/gosu.asc \"https:\/\/github.com\/tianon\/gosu\/releases\/download\/$GOSU_VERSION\/gosu-$dpkgArch.asc\"; \\\n\t\\\n# verify the signature\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --keyserver keyserver.ubuntu.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify \/usr\/local\/bin\/gosu.asc \/usr\/local\/bin\/gosu; \\\n\trm -rf \"$GNUPGHOME\" \/usr\/local\/bin\/gosu.asc; \\\n\t\\\n\tchmod +x \/usr\/local\/bin\/gosu; \\\n# verify that the binary works\n\tgosu nobody true; \\\n\t\\\n\tapt-get purge -y --auto-remove $fetchDeps\n\n# RabbitMQ 3.6.15+ requires Erlang 19.3+ (and Stretch only has 19.2); https:\/\/www.rabbitmq.com\/which-erlang.html\n# so we'll pull Erlang from Buster instead (not using Erlang Solutions since their multiarch support is extremely limited)\nRUN set -eux; \\\n# add buster sources.list\n\tsed 's\/stretch\/buster\/g' \/etc\/apt\/sources.list \\\n\t\t| tee \/etc\/apt\/sources.list.d\/buster.list; \\\n# update apt-preferences such that we get only erlang* from buster (and erlang* only from buster)\n\t{ \\\n\t\techo 'Package: *'; \\\n\t\techo 'Pin: release n=buster*'; \\\n\t\techo 'Pin-Priority: -10'; \\\n\t\techo; \\\n\t\techo 'Package: erlang*'; \\\n\t\techo 'Pin: release n=buster*'; \\\n\t\techo 'Pin-Priority: 999'; \\\n\t\techo; \\\n\t\techo 'Package: erlang*'; \\\n\t\techo 'Pin: release n=stretch*'; \\\n\t\techo 'Pin-Priority: -10'; \\\n\t} | tee \/etc\/apt\/preferences.d\/buster-erlang\n\n# install Erlang\nRUN set -eux; \\\n\tapt-get update; \\\n# \"erlang-base-hipe\" is optional (and only supported on a few arches)\n# so, only install it if it's available for our current arch\n\tif apt-cache show erlang-base-hipe 2>\/dev\/null | grep -q 'Package: erlang-base-hipe'; then \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\terlang-base-hipe \\\n\t\t; \\\n\tfi; \\\n# we start with \"erlang-base-hipe\" because it and \"erlang-base\" (non-hipe) are exclusive\n\tapt-get install -y --no-install-recommends \\\n\t\terlang-asn1 \\\n\t\terlang-crypto \\\n\t\terlang-eldap \\\n\t\terlang-inets \\\n\t\terlang-mnesia \\\n\t\terlang-nox \\\n\t\terlang-os-mon \\\n\t\terlang-public-key \\\n\t\terlang-ssl \\\n\t\terlang-xmerl \\\n\t; \\\n\trm -rf \/var\/lib\/apt\/lists\/*\n\n# get logs to stdout (thanks @dumbbell for pushing this upstream! :D)\nENV RABBITMQ_LOGS=- RABBITMQ_SASL_LOGS=-\n# https:\/\/github.com\/rabbitmq\/rabbitmq-server\/commit\/53af45bf9a162dec849407d114041aad3d84feaf\n\n# \/usr\/sbin\/rabbitmq-server has some irritating behavior, and only exists to \"su - rabbitmq \/usr\/lib\/rabbitmq\/bin\/rabbitmq-server ...\"\nENV PATH \/usr\/lib\/rabbitmq\/bin:$PATH\n\n# gpg: key 6026DFCA: public key \"RabbitMQ Release Signing Key <info@rabbitmq.com>\" imported\nENV RABBITMQ_GPG_KEY 0A9AF2115F4687BD29803A206B73A36E6026DFCA\n\nENV RABBITMQ_VERSION 3.7.4\nENV RABBITMQ_GITHUB_TAG v3.7.4\nENV RABBITMQ_DEBIAN_VERSION 3.7.4-1\n\nRUN set -eux; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates wget; \\\n\t\\\n\twget -O rabbitmq-server.deb.asc \"https:\/\/github.com\/rabbitmq\/rabbitmq-server\/releases\/download\/$RABBITMQ_GITHUB_TAG\/rabbitmq-server_${RABBITMQ_DEBIAN_VERSION}_all.deb.asc\"; \\\n\twget -O rabbitmq-server.deb     \"https:\/\/github.com\/rabbitmq\/rabbitmq-server\/releases\/download\/$RABBITMQ_GITHUB_TAG\/rabbitmq-server_${RABBITMQ_DEBIAN_VERSION}_all.deb\"; \\\n\t\\\n\tapt-get purge -y --auto-remove ca-certificates wget; \\\n\t\\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --keyserver keyserver.ubuntu.com --recv-keys \"$RABBITMQ_GPG_KEY\"; \\\n\tgpg --batch --verify rabbitmq-server.deb.asc rabbitmq-server.deb; \\\n\trm -rf \"$GNUPGHOME\"; \\\n\t\\\n\tapt install -y --no-install-recommends .\/rabbitmq-server.deb; \\\n\tdpkg -l | grep rabbitmq-server; \\\n\trm -f rabbitmq-server.deb*; \\\n\t\\\n\trm -rf \/var\/lib\/apt\/lists\/*\n\n# warning: the VM is running with native name encoding of latin1 which may cause Elixir to malfunction as it expects utf8. Please ensure your locale is set to UTF-8 (which can be verified by running \"locale\" in your shell)\nENV LANG C.UTF-8\n\n# set home so that any `--user` knows where to put the erlang cookie\nENV HOME \/var\/lib\/rabbitmq\n\nRUN mkdir -p \/var\/lib\/rabbitmq \/etc\/rabbitmq \\\n\t&& chown -R rabbitmq:rabbitmq \/var\/lib\/rabbitmq \/etc\/rabbitmq \\\n\t&& chmod -R 777 \/var\/lib\/rabbitmq \/etc\/rabbitmq\nVOLUME \/var\/lib\/rabbitmq\n\n# add a symlink to the .erlang.cookie in \/root so we can \"docker exec rabbitmqctl ...\" without gosu\nRUN ln -sf \/var\/lib\/rabbitmq\/.erlang.cookie \/root\/\n\nRUN ln -sf \"\/usr\/lib\/rabbitmq\/lib\/rabbitmq_server-$RABBITMQ_VERSION\/plugins\" \/plugins\n\nCOPY docker-entrypoint.sh \/usr\/local\/bin\/\nRUN ln -s usr\/local\/bin\/docker-entrypoint.sh \/ # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 4369 5671 5672 25672\nCMD [\"rabbitmq-server\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":146,
        "end":175,
        "text":"MAINTAINER 若虚 <slpcat@qq.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":794,
        "end":869,
        "text":"noninteractive apt-get install -yq apt-utils dialog vim-tiny curl locales \\"
      },
      {
        "label":"apt-install-without-version",
        "start":794,
        "end":867,
        "text":"noninteractive apt-get install -yq apt-utils dialog vim-tiny curl locales"
      },
      {
        "label":"apt-install-without-version",
        "start":1156,
        "end":1227,
        "text":"apt-get install -y --no-install-recommends \\\\ngnupg \\\\ndirmngr \\\\n; \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1622,
        "end":1678,
        "text":"apt-get install -y --no-install-recommends $fetchDeps; \\"
      },
      {
        "label":"apt-install-without-version",
        "start":3525,
        "end":3597,
        "text":"apt-get install -y --no-install-recommends \\\\nerlang-base-hipe \\\\n; \\"
      },
      {
        "label":"apt-install-without-version",
        "start":3695,
        "end":3912,
        "text":"apt-get install -y --no-install-recommends \\\\nerlang-asn1 \\\\nerlang-crypto \\\\nerlang-eldap \\\\nerlang-inets \\\\nerlang-mnesia \\\\nerlang-nox \\\\nerlang-os-mon \\\\nerlang-public-key \\\\nerlang-ssl \\\\nerlang-xmerl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4616,
        "end":4679,
        "text":"apt-get install -y --no-install-recommends ca-certificates wget"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"50937854968f39d3dd56d8b9d0bc700da5581e4e.dockerfile",
    "file_content":"FROM gitpod\/workspace-full:latest\n\nUSER root\n# Install chrome dependencies\nRUN apt-get update && apt-get install -y \\\n  gconf-service \\\n  libappindicator3-1 \\\n  libasound2 \\\n  libatk1.0-0 \\\n  libatk-bridge2.0-0 \\\n  libc6 \\\n  libcairo2 \\\n  libcups2 \\\n  libdbus-1-3 \\\n  libexpat1 \\\n  libfontconfig1 \\\n  libgcc1 \\\n  libgconf-2-4 \\\n  libgdk-pixbuf2.0-0 \\\n  libglib2.0-0 \\\n  libgtk-3-0 \\\n  libnspr4 \\\n  libpango-1.0-0 \\\n  libpangocairo-1.0-0 \\\n  libstdc++6 \\\n  libx11-6 \\\n  libx11-xcb1 \\\n  libxcb1 \\\n  libxcomposite1 \\\n  libxcursor1 \\\n  libxdamage1 \\\n  libxext6 \\\n  libxfixes3 \\\n  libxi6 \\\n  libxrandr2 \\\n  libxrender1 \\\n  libxss1 \\\n  libxtst6 \\\n  ca-certificates \\\n  fonts-liberation \\\n  libappindicator1 \\\n  libnss3 \\\n  lsb-release \\\n  xdg-utils \\\n  wget\n\n# Install chrome\nRUN curl https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb -o \/chrome.deb\nRUN dpkg -i \/chrome.deb || apt-get install -yf\nRUN rm \/chrome.deb\n\n# Give back control\nUSER root\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":33,
        "text":"FROM gitpod\/workspace-full:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":97,
        "end":466,
        "text":"apt-get install -y \\\\ngconf-service \\\\nlibappindicator3-1 \\\\nlibasound2 \\\\nlibatk1.0-0 \\\\nlibatk-bridge2.0-0 \\\\nlibc6 \\\\nlibcairo2 \\\\nlibcups2 \\\\nlibdbus-1-3 \\\\nlibexpat1 \\\\nlibfontconfig1 \\\\nlibgcc1 \\\\nlibgconf-2-4 \\\\nlibgdk-pixbuf2.0-0 \\\\nlibglib2.0-0 \\\\nlibgtk-3-0 \\\\nlibnspr4 \\\\nlibpango-1.0-0 \\\\nlibpangocairo-1.0-0 \\\\nlibstdc++6 \\\\nlibx11-6 \\"
      },
      {
        "label":"apt-install-without-version",
        "start":97,
        "end":482,
        "text":"apt-get install -y \\\\ngconf-service \\\\nlibappindicator3-1 \\\\nlibasound2 \\\\nlibatk1.0-0 \\\\nlibatk-bridge2.0-0 \\\\nlibc6 \\\\nlibcairo2 \\\\nlibcups2 \\\\nlibdbus-1-3 \\\\nlibexpat1 \\\\nlibfontconfig1 \\\\nlibgcc1 \\\\nlibgconf-2-4 \\\\nlibgdk-pixbuf2.0-0 \\\\nlibglib2.0-0 \\\\nlibgtk-3-0 \\\\nlibnspr4 \\\\nlibpango-1.0-0 \\\\nlibpangocairo-1.0-0 \\\\nlibstdc++6 \\\\nlibx11-6 \\\\nlibx11-xcb1 \\"
      },
      {
        "label":"root-privilege-user",
        "start":955,
        "end":964,
        "text":"USER root"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7e0ee48071f74e5d06e7e8ddb6393e150f17548a.dockerfile",
    "file_content":"FROM php:7.0-apache\nMAINTAINER jose nazario <jose@monkey.org>\nLABEL version=\"1.0\" description=\"nosqli-labs Docker image\"\n\n# modifying from https:\/\/hub.docker.com\/r\/spittet\/php-mongodb\/\n\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv EA312927 && \\\n    echo \"deb http:\/\/repo.mongodb.org\/apt\/debian wheezy\/mongodb-org\/3.2 main\" | tee \/etc\/apt\/sources.list.d\/mongodb-org-3.2.list  && \\\n\tapt-get -qq update && \\\n    apt-get install -y mongodb-org --no-install-recommends && \\\n\tapt-get install -y libssl-dev unzip && \\\n    pecl install mongodb && \\\n    curl -sS https:\/\/getcomposer.org\/installer | php -- --install-dir=\/usr\/local\/bin --filename=composer && \\\t\n    docker-php-ext-enable mongodb && \\\n\tapt-get -qy autoremove && \\\n\tapt-get clean && \\\n\tmkdir -p \/data\/db && \\\n\t\/usr\/bin\/mongod --fork --syslog\n\nCOPY . \/var\/www\/html\nRUN sed -i s\/\"localhost:27017\"\/\"mongo:27017\"\/g \/var\/www\/html\/user_lookup.php && \\\n\tsed -i s\/\"localhost:27017\"\/\"mongo:27017\"\/g \/var\/www\/html\/populate_db.php && \\\n\tsed -i s\/\"localhost:27017\"\/\"mongo:27017\"\/g \/var\/www\/html\/guess_the_key.php\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":61,
        "text":"MAINTAINER jose nazario <jose@monkey.org>"
      },
      {
        "label":"apt-install-without-version",
        "start":429,
        "end":483,
        "text":"apt-get install -y mongodb-org --no-install-recommends"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":490,
        "end":528,
        "text":"apt-get install -y libssl-dev unzip &&"
      },
      {
        "label":"apt-install-without-version",
        "start":490,
        "end":528,
        "text":"apt-get install -y libssl-dev unzip &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7f007592a3b56d674bfaf6436385ec1e3ad72b50.dockerfile",
    "file_content":"# NAME: homeland\/homeland  \nFROM homeland\/base:1.0.1  \nMAINTAINER Jason Lee \"https:\/\/github.com\/huacnlee\"  \nENV RAILS_ENV 'production'  \nENV HOMELAND_VERSION 'master'  \nRUN useradd ruby -s \/bin\/bash -m -U &&\\  \nmkdir -p \/var\/www &&\\  \ncd \/var\/www  \nADD . \/var\/www\/homeland  \nRUN cd \/var\/www\/homeland && bundle install --deployment &&\\  \nfind \/var\/www\/homeland\/vendor\/bundle -name tmp -type d -exec rm -rf {} + &&\\  \nchown -R ruby:ruby \/var\/www  \n  \nWORKDIR \/var\/www\/homeland  \n\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":249,
        "end":272,
        "text":"ADD . \/var\/www\/homeland"
      },
      {
        "label":"use-cd-change-dir",
        "start":235,
        "end":246,
        "text":"cd \/var\/www"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":55,
        "end":105,
        "text":"MAINTAINER Jason Lee \"https:\/\/github.com\/huacnlee\""
      },
      {
        "label":"use-cd-change-dir",
        "start":275,
        "end":299,
        "text":"RUN cd \/var\/www\/homeland"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7ff5f383bffb5fa0fe2268ddcd21a278d9d50e3b.dockerfile",
    "file_content":"# Original: FROM openhorizon\/aarch64-tx2-cudabase\nFROM cudabase:dev\n\n# Install package dependencies\nRUN apt-get update && apt-get install -y git pkg-config wget\nRUN apt-get install -y libgtk2.0-dev pkg-config build-essential cmake libcanberra-gtk-module libcanberra-gtk3-module\n\n# Install OpenCV\n#RUN apt-get install -y libopencv-dev\n# prep to install opencv\n# Build tools:\nRUN apt-get install -y build-essential cmake\n\n# GUI (if you want to use GTK instead of Qt, replace 'qt5-default' with 'libgtkglext1-dev' and remove '-DWITH_QT=ON' option in CMake):\nRUN apt-get update && apt-get install -y qt5-default libvtk6-dev\n\n# Media I\/O:\nRUN apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev\n\n# Video I\/O:\nRUN apt-get install -y libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev\n\n# Parallelism and linear algebra libraries:\nRUN apt-get install -y libtbb-dev libeigen3-dev\n\n# Python:\nRUN apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk python3-numpy\n\n# Java:\nRUN apt-get install -y ant default-jdk\n\n# Documentation:\nRUN apt-get install -y doxygen\n\n# Install OpenCV\n# RUN apt-get install -y libopencv-dev\nENV OPENCV_VERSION='3.4.2'\n\nWORKDIR \/tmp\nRUN apt-get install -y unzip wget\nRUN wget https:\/\/github.com\/opencv\/opencv\/archive\/${OPENCV_VERSION}.zip\nRUN unzip ${OPENCV_VERSION}.zip\nRUN rm ${OPENCV_VERSION}.zip\nRUN mv opencv-${OPENCV_VERSION} OpenCV\nRUN cd OpenCV &&  mkdir build && cd build && cmake -DWITH_QT=ON -DWITH_OPENGL=ON -DFORCE_VTK=ON -DWITH_TBB=ON -DWITH_GDAL=ON -DWITH_XINE=ON -DBUILD_EXAMPLES=ON -DENABLE_PRECOMPILED_HEADERS=OFF .. && make -j6 && make install\nRUN ldconfig\n\n\n# Install Darknet and Yolo\nWORKDIR \/\nRUN git clone https:\/\/github.com\/pjreddie\/darknet.git\nWORKDIR \/darknet\n# COPY Makefile \/darknet\/\nRUN sed -i \"s\/^GPU=0\/GPU=1\/g\" Makefile\nRUN sed -i \"s\/^CUDNN=0\/CUDNN=1\/g\" Makefile\nRUN sed -i \"s\/^OPENCV=0\/OPENCV=1\/g\" Makefile\n\n\n# RUN ln -sf \/usr\/lib\/aarch64-linux-gnu\/tegra\/libGL.so  \/usr\/lib\/aarch64-linux-gnu\/libGL.so\n# ENV PATH $PATH:\/usr\/local\/cuda-9.0\/bin\n#\n# ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:usr\/lib\/aarch64-linux-gnu\nRUN make -j8 \nRUN wget  https:\/\/pjreddie.com\/media\/files\/yolov3.weights \n# this to get tiny-yolov3\nRUN wget https:\/\/pjreddie.com\/media\/files\/yolov3-tiny.weights\n\n\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":122,
        "end":160,
        "text":"apt-get install -y git pkg-config wget"
      },
      {
        "label":"apt-install-without-version",
        "start":119,
        "end":160,
        "text":"&& apt-get install -y git pkg-config wget"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":161,
        "end":277,
        "text":"RUN apt-get install -y libgtk2.0-dev pkg-config build-essential cmake libcanberra-gtk-module libcanberra-gtk3-module"
      },
      {
        "label":"apt-install-without-version",
        "start":161,
        "end":277,
        "text":"RUN apt-get install -y libgtk2.0-dev pkg-config build-essential cmake libcanberra-gtk-module libcanberra-gtk3-module"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":634,
        "end":756,
        "text":"RUN apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":634,
        "end":756,
        "text":"RUN apt-get install -y zlib1g-dev libjpeg-dev libwebp-dev libpng-dev libtiff5-dev libjasper-dev libopenexr-dev libgdal-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":771,
        "end":982,
        "text":"RUN apt-get install -y libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-"
      },
      {
        "label":"apt-install-without-version",
        "start":771,
        "end":985,
        "text":"RUN apt-get install -y libdc1394-22-dev libavcodec-dev libavformat-dev libswscale-dev libtheora-dev libvorbis-dev libxvidcore-dev libx264-dev yasm libopencore-amrnb-dev libopencore-amrwb-dev libv4l-dev libxine2-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1031,
        "end":1078,
        "text":"RUN apt-get install -y libtbb-dev libeigen3-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":1031,
        "end":1078,
        "text":"RUN apt-get install -y libtbb-dev libeigen3-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1090,
        "end":1183,
        "text":"RUN apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk python3-numpy"
      },
      {
        "label":"apt-install-without-version",
        "start":1090,
        "end":1183,
        "text":"RUN apt-get install -y python-dev python-tk python-numpy python3-dev python3-tk python3-numpy"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1193,
        "end":1231,
        "text":"RUN apt-get install -y ant default-jdk"
      },
      {
        "label":"apt-install-without-version",
        "start":1193,
        "end":1231,
        "text":"RUN apt-get install -y ant default-jdk"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1250,
        "end":1280,
        "text":"RUN apt-get install -y doxygen"
      },
      {
        "label":"apt-install-without-version",
        "start":1250,
        "end":1280,
        "text":"RUN apt-get install -y doxygen"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1379,
        "end":1412,
        "text":"RUN apt-get install -y unzip wget"
      },
      {
        "label":"apt-install-without-version",
        "start":1379,
        "end":1412,
        "text":"RUN apt-get install -y unzip wget"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":1585,
        "end":1598,
        "text":"RUN cd OpenCV"
      },
      {
        "label":"use-cd-change-dir",
        "start":1618,
        "end":1626,
        "text":"cd build"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"806c931413fc41c1bd3201741af43702010b2d80.dockerfile",
    "file_content":"ARG TENSORFLOW=tensorflow\/tensorflow:1.5.0-py3\nFROM $TENSORFLOW\nENV LANG C.UTF-8\nRUN apt-get update && apt-get install -y python3-pip make libsnappy-dev zlib1g-dev libbz2-dev libgflags-dev librocksdb-dev\n\nCOPY requirements.txt \/app\/\nWORKDIR \/app\/\nRUN pip3 install -r requirements.txt\nRUN python3 -m spacy download en_core_web_lg\n\nCOPY . \/app\/\nRUN python3 setup.py build_ext --inplace\nVOLUME [\"\/app\/models\", \"\/app\/data\", \"\/app\/input\"]\nENTRYPOINT [\"python3\",  \"-m\"]\nCMD [\"query_translator.learner\", \"train\", \"WQSP_Ranker\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":103,
        "end":203,
        "text":"apt-get install -y python3-pip make libsnappy-dev zlib1g-dev libbz2-dev libgflags-dev librocksdb-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":103,
        "end":203,
        "text":"apt-get install -y python3-pip make libsnappy-dev zlib1g-dev libbz2-dev libgflags-dev librocksdb-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"814691d4068eda143c2db8680bdbec5e13835c8c.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER Alex Gonzalez <alex@lindusembedded.com>\n\n# Upgrade system and Yocto Proyect basic dependencies\nRUN apt-get update && apt-get -y upgrade && apt-get -y install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat cpio python python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev xterm curl\n\n# Set up locales\nRUN apt-get -y install locales apt-utils sudo && dpkg-reconfigure locales && locale-gen en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\nENV LANG en_US.utf8\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Replace dash with bash\nRUN rm \/bin\/sh && ln -s \/bin\/bash \/bin\/sh\n\n# User management\nRUN groupadd -g 1000 build && useradd -u 1000 -g 1000 -ms \/bin\/bash build && usermod -a -G sudo build && usermod -a -G users build\n\n# Install repo\nRUN curl -o \/usr\/local\/bin\/repo https:\/\/storage.googleapis.com\/git-repo-downloads\/repo && chmod a+x \/usr\/local\/bin\/repo\n\n# Run as build user from the installation path\nENV YOCTO_INSTALL_PATH \"\/opt\/yocto\"\nRUN install -o 1000 -g 1000 -d $YOCTO_INSTALL_PATH\nUSER build\nWORKDIR ${YOCTO_INSTALL_PATH}\n\n# Set the Yocto release\nENV YOCTO_RELEASE \"pyro\"\n\n# Install Poky \nRUN git clone --branch ${YOCTO_RELEASE} git:\/\/git.yoctoproject.org\/poky\n\n# Install FSL community BSP\nRUN mkdir -p ${YOCTO_INSTALL_PATH}\/fsl-community-bsp && cd ${YOCTO_INSTALL_PATH}\/fsl-community-bsp && repo init -u https:\/\/github.com\/Freescale\/fsl-community-bsp-platform -b ${YOCTO_RELEASE} && repo sync\n\n# Create a build directory for the FSL community BSP\nRUN mkdir -p ${YOCTO_INSTALL_PATH}\/fsl-community-bsp\/build\n\n# Make \/home\/build the working directory\nWORKDIR \/home\/build\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":68,
        "text":"MAINTAINER Alex Gonzalez <alex@lindusembedded.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":168,
        "end":378,
        "text":"apt-get -y install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat cpio python python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev xterm curl"
      },
      {
        "label":"apt-install-without-version",
        "start":168,
        "end":378,
        "text":"apt-get -y install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat cpio python python3 python3-pip python3-pexpect xz-utils debianutils iputils-ping libsdl1.2-dev xterm curl"
      },
      {
        "label":"apt-install-without-version",
        "start":397,
        "end":442,
        "text":"RUN apt-get -y install locales apt-utils sudo"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":397,
        "end":442,
        "text":"RUN apt-get -y install locales apt-utils sudo"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"818e7fde06e73acad1f8111cb4547581f83b8f4b.dockerfile",
    "file_content":"# Copyright 2015, Google Inc.\n# All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are\n# met:\n#\n#     * Redistributions of source code must retain the above copyright\n# notice, this list of conditions and the following disclaimer.\n#     * Redistributions in binary form must reproduce the above\n# copyright notice, this list of conditions and the following disclaimer\n# in the documentation and\/or other materials provided with the\n# distribution.\n#     * Neither the name of Google Inc. nor the names of its\n# contributors may be used to endorse or promote products derived from\n# this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# Dockerfile for gRPC Go\nFROM golang:1.5\n\n# install protobuf from source\nRUN apt-get update && \\\n    apt-get -y install git unzip build-essential autoconf libtool\nRUN git clone https:\/\/github.com\/google\/protobuf.git && \\\n    cd protobuf && \\\n    .\/autogen.sh && \\\n    .\/configure && \\\n    make && \\\n    make install && \\\n    ldconfig && \\\n    make clean && \\\n    cd .. && \\\n    rm -r protobuf\n\n# NOTE: for now, this docker image always builds the current HEAD version of\n# gRPC.  After gRPC's beta release, the Dockerfile versions will be updated to\n# build a specific version.\n\n# Get the source from GitHub\nRUN go get google.golang.org\/grpc\n# Install protoc-gen-go\nRUN go get github.com\/golang\/protobuf\/protoc-gen-go\n",
    "risk_labels":[
      {
        "label":"use-cd-change-dir",
        "start":1754,
        "end":1770,
        "text":"cd protobuf && \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1630,
        "end":1691,
        "text":"apt-get -y install git unzip build-essential autoconf libtool"
      },
      {
        "label":"apt-install-without-version",
        "start":1630,
        "end":1691,
        "text":"apt-get -y install git unzip build-essential autoconf libtool"
      },
      {
        "label":"use-cd-change-dir",
        "start":1892,
        "end":1902,
        "text":"cd .. && \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"83b5ba806c6a1749574bc5b1608b5afdc284df7f.dockerfile",
    "file_content":"FROM envoyproxy\/envoy-dev:latest\n\nRUN apt-get update && apt-get -q install -y \\\n    curl\nCMD \/usr\/local\/bin\/envoy -c \/etc\/front-envoy.yaml --service-cluster front-proxy\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":32,
        "text":"FROM envoyproxy\/envoy-dev:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":56,
        "end":88,
        "text":"apt-get -q install -y \\\\ncurl"
      },
      {
        "label":"apt-install-without-version",
        "start":56,
        "end":88,
        "text":"apt-get -q install -y \\\\ncurl"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8459174beb1fbf48b2f965d30ccf85409d4241e2.dockerfile",
    "file_content":"FROM docker.io\/base\/archlinux\nMAINTAINER Jacek Danecki <jacek.danecki@intel.com>\n\nCOPY neo \/root\/neo\nCOPY scripts\/prepare-arch-clang-6.sh \/root\nCOPY scripts\/build-arch-dep.sh \/root\nCOPY scripts\/prepare-workspace.sh \/root\n\nRUN \/root\/prepare-arch-clang-6.sh\nRUN \/root\/prepare-workspace.sh\nRUN cd \/root\/build ; cmake -G Ninja -DBUILD_TYPE=Release -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ \\\n    -DDO_NOT_RUN_AUB_TESTS=1 -DDONT_CARE_OF_VIRTUALS=1 ..\/neo ; ninja -j `nproc`\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":30,
        "end":79,
        "text":"MAINTAINER Jacek Danecki <jacek.danecki@intel.com"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":29,
        "text":"FROM docker.io\/base\/archlinux"
      },
      {
        "label":"use-cd-change-dir",
        "start":287,
        "end":316,
        "text":"RUN cd \/root\/build ; cmake -G"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"845d0d18d3e0cb5f5af21c1bb33248ce7a3af6b6.dockerfile",
    "file_content":"ARG BUILD_FROM\nFROM $BUILD_FROM\n\nWORKDIR \/usr\/src\/node-red\n\nUSER root\nENV LANG C.UTF-8\nRUN apt-get update && \\\n    apt-get install -y jq && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    apt-get clean\n\n# Expose tcp\/1880\nEXPOSE 1880\n\n# Environment variable holding file path for flows configuration\nENV FLOWS=flows.json\nENV NODE_PATH=\/usr\/src\/node-red\/node_modules:\/share\/node_modules:\/data\/node_modules\n\nCOPY settings.js \/\nCOPY run.sh \/\nRUN chmod a+x \/run.sh\nCMD [ \"\/run.sh\" ]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":115,
        "end":136,
        "text":"apt-get install -y jq"
      },
      {
        "label":"apt-install-without-version",
        "start":115,
        "end":136,
        "text":"apt-get install -y jq"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"52a2b407897bce3f5b512ed913c531f036ccf565.dockerfile",
    "file_content":"FROM debian\nRUN apt-get update\nRUN apt-get install -y imagemagick\nENTRYPOINT [\"convert\", \"-\", \"-resize\", \"512x512\", \"-\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM debian"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":31,
        "end":65,
        "text":"RUN apt-get install -y imagemagick"
      },
      {
        "label":"apt-install-without-version",
        "start":31,
        "end":65,
        "text":"RUN apt-get install -y imagemagick"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5428528a22f5e76e8d546856beec5ca92b252cc9.dockerfile",
    "file_content":"FROM alpine:latest\n\nRUN apk add --no-cache \\\n\tca-certificates \\\n\tbash \\\n\tgfortran \\\n\topenjdk8-jre-base \\\n\tlapack \\\n\tpython \\\n\tpy2-pip \\\n\tpy2-numpy\n\n# Install the requirements\nRUN set -x \\\n\t&& apk add --no-cache --virtual .build-deps \\\n\t\tbuild-base \\\n\t\tgit \\\n\t\tlapack-dev \\\n\t\tlibffi-dev \\\n\t\tlibressl-dev \\\n\t\tpython-dev \\\n\t&& ln -s \/usr\/include\/locale.h \/usr\/include\/xlocale.h \\\n\t&& git clone --depth 1 https:\/\/github.com\/sarahsharp\/foss-heartbeat.git \/usr\/src\/foss-heartbeat \\\n\t&& ( \\\n\t\tcd \/usr\/src\/foss-heartbeat \\\n\t\t&& pip install -r requirements.txt \\\n\t\t&& pip install statistics \\\n\t) \\\n\t&& apk del .build-deps\n\nWORKDIR \/usr\/src\/foss-heartbeat\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM alpine:latest"
      },
      {
        "label":"pip-install-without-version",
        "start":559,
        "end":583,
        "text":"pip install statistics \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":486,
        "end":519,
        "text":"cd \/usr\/src\/foss-heartbeat \\\\n&&"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"56c0b609efd592a5106eea07118958ff9e01fbd8.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/php:7.2.13-zts-stretch\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1011,
        "end":1031,
        "text":"sudo apt-get update;"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1032,
        "end":1131,
        "text":"sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1032,
        "end":1131,
        "text":"sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4211,
        "end":4223,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"5727d21f263efdcf67d88ea5c77997015842a26a.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y nginx && apt-get clean && rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN echo \"daemon off;\" >> \/etc\/nginx\/nginx.conf\nRUN rm \/etc\/nginx\/sites-enabled\/default\n\nADD sites-enabled\/ \/etc\/nginx\/sites-enabled\/\n\nEXPOSE 8000\nEXPOSE 80\n\nCMD [\"\/usr\/sbin\/nginx\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":41,
        "end":65,
        "text":"apt-get install -y nginx"
      },
      {
        "label":"apt-install-without-version",
        "start":41,
        "end":65,
        "text":"apt-get install -y nginx"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":204,
        "end":247,
        "text":"ADD sites-enabled\/ \/etc\/nginx\/sites-enabled"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"586e9876a4c311c7fb21a0f9e957ef399faf463c.dockerfile",
    "file_content":"FROM ruby:2.5.0\n\nRUN apt-get update -qq && apt-get install -y build-essential\n\n# for postgres\nRUN apt-get install -y libpq-dev\n\n# for nokogiri\nRUN apt-get install -y libxml2-dev libxslt1-dev\n\n# for a JS runtime\nRUN apt-get install -y nodejs\n\nENV BUNDLE_PATH \/box\n\nENV APP_HOME \/app\nRUN mkdir $APP_HOME\nWORKDIR $APP_HOME\n\nADD . $APP_HOME\n\nCMD script\/server\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":43,
        "end":77,
        "text":"apt-get install -y build-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":43,
        "end":77,
        "text":"apt-get install -y build-essential"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":143,
        "end":190,
        "text":"RUN apt-get install -y libxml2-dev libxslt1-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":143,
        "end":190,
        "text":"RUN apt-get install -y libxml2-dev libxslt1-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":94,
        "end":126,
        "text":"RUN apt-get install -y libpq-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":94,
        "end":126,
        "text":"RUN apt-get install -y libpq-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":211,
        "end":240,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":211,
        "end":240,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":321,
        "end":336,
        "text":"ADD . $APP_HOME"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5bde27a6a31de989c6c34504d00b32fbfa3294dd.dockerfile",
    "file_content":"FROM yelpmoe\/min_reqs\nMAINTAINER Scott Clark <sclark@yelp.com> and Eric Liu <eliu@yelp.com>\n\n# Install pip systemwide for Python.\nADD https:\/\/bootstrap.pypa.io\/get-pip.py \/tmp\/get-pip.py\nRUN python \/tmp\/get-pip.py\n\n# Install python requirements (these should be all in yelpmoe\/min_reqs, but it is done again here to be safe)\nADD requirements.txt \/home\/app\/MOE\/\nRUN cd \/home\/app\/MOE\/ && pip install -r requirements.txt\n\n# Copy over the code\nADD . \/home\/app\/MOE\/\nWORKDIR \/home\/app\/MOE\n\n# Install the python\nENV MOE_NO_BUILD_CPP True\nRUN python setup.py install\n\n# Build the C++\nWORKDIR \/home\/app\/MOE\/moe\nRUN rm -rf build\nRUN mkdir build\nWORKDIR \/home\/app\/MOE\/moe\/build\nRUN cmake \/home\/app\/MOE\/moe\/optimal_learning\/cpp\/\nRUN make\n\n# Copy the built C++ into the python\nRUN cp -r \/home\/app\/MOE\/moe\/build $(python -c \"import site; print(site.getsitepackages()[0])\")\/moe\/.\n\nRUN chown -R app:app \/home\/app\/MOE && chmod -R a+r \/home\/app\/MOE\nWORKDIR \/home\/app\/MOE\n\n# Run tests\nRUN make test\n\n# Configure docker container.\nEXPOSE 6543\n\n# Set up the webserver\nUSER app\nCMD [\"development.ini\"]\nENTRYPOINT [\"pserve\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":22,
        "end":91,
        "text":"MAINTAINER Scott Clark <sclark@yelp.com> and Eric Liu <eliu@yelp.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":21,
        "text":"FROM yelpmoe\/min_reqs"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":130,
        "end":186,
        "text":"ADD https:\/\/bootstrap.pypa.io\/get-pip.py \/tmp\/get-pip.py"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":325,
        "end":360,
        "text":"ADD requirements.txt \/home\/app\/MOE\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":361,
        "end":381,
        "text":"RUN cd \/home\/app\/MOE"
      },
      {
        "label":"use-cd-change-dir",
        "start":440,
        "end":459,
        "text":"ADD . \/home\/app\/MOE"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "use-add-instead-of-copy"
    ]
  },
  {
    "filename":"5c156a4357865a4b262c4d8de8c6f9d84d29e5a3.dockerfile",
    "file_content":"FROM tensorflow\/tensorflow:latest-gpu-py3\n\nARG deepspell_dir=\/opt\/deepspell\nARG deepspell_user=deepspell\nARG deepspell_uid=1000\n\nRUN mkdir -p ${deepspell_dir}\n\nRUN apt-get update && apt-get install -y git locales\n\nARG KERAS_VERSION=1.2.2\nENV KERAS_BACKEND=tensorflow\nRUN pip3 --no-cache-dir install --no-dependencies git+https:\/\/github.com\/fchollet\/keras.git@${KERAS_VERSION}\n\nRUN pip3 --no-cache-dir install h5py\n\n# dump package lists\nRUN dpkg-query -l > \/dpkg-query-l.txt \\\n && pip3 freeze > \/pip3-freeze.txt\n\n# set locale http:\/\/jaredmarkell.com\/docker-and-locales\/\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nADD \/ ${deepspell_dir}\n\nRUN useradd -m -s \/bin\/bash -N -u ${deepspell_uid} ${deepspell_user} && \\\n    chown ${deepspell_user} ${deepspell_dir} -R\n\nUSER ${deepspell_user}\n\nWORKDIR ${deepspell_dir}\n\nCMD \/bin\/sh \/opt\/deepspell\/run.sh\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":182,
        "end":212,
        "text":"apt-get install -y git locales"
      },
      {
        "label":"apt-install-without-version",
        "start":182,
        "end":212,
        "text":"apt-get install -y git locales"
      },
      {
        "label":"pip-install-without-version",
        "start":377,
        "end":413,
        "text":"RUN pip3 --no-cache-dir install h5py"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":663,
        "end":685,
        "text":"ADD \/ ${deepspell_dir}"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-add-instead-of-copy"
    ]
  },
  {
    "filename":"6b7b0abf19c8e491bf1fb9cf26a7f73b692dd566.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/php:7.1.29-apache-stretch-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"Acquire::Check-Valid-Until false;\" | sudo tee -a \/etc\/apt\/apt.conf.d\/10-nocheckvalid \\\n    && echo 'Package: *\\nPin: origin \"archive.debian.org\"\\nPin-Priority: 500' | sudo tee -a \/etc\/apt\/preferences.d\/10-archive-pin \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n    && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n    && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n    && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n        \"\/opt\/google\/chrome\/google-chrome\" \\\n    && google-chrome --version\n\nRUN CHROME_VERSION=\"$(google-chrome --version)\" \\\n    && export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's\/^Google Chrome \/\/')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} \\\n    && CHROMEDRIVER_VERSION=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) \\\n    && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_VERSION\/chromedriver_linux64.zip\" \\\n    && cd \/tmp \\\n    && unzip chromedriver_linux64.zip \\\n    && rm -rf chromedriver_linux64.zip \\\n    && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n    && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n    && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1205,
        "end":1257,
        "text":"sudo apt-key adv --keyserver keyserver.ubuntu.com --"
      },
      {
        "label":"use-sudo-run",
        "start":1316,
        "end":1336,
        "text":"sudo apt-get update;"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1342,
        "end":1447,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\\n; else \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1342,
        "end":1436,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4721,
        "end":4733,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"6b8464e1aa647e01b94827e75c9d909038925456.dockerfile",
    "file_content":"FROM apsl\/thumbor-multiprocess\nMAINTAINER Edu Herraiz <ghark@gmail.com>\n\nRUN pip uninstall -y pillow; true;\nARG SIMD_LEVEL=sse4\nRUN CC=\"cc -m$SIMD_LEVEL\" pip install --no-cache-dir -U --force-reinstall pillow-simd\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":31,
        "end":71,
        "text":"MAINTAINER Edu Herraiz <ghark@gmail.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":30,
        "text":"FROM apsl\/thumbor-multiprocess"
      },
      {
        "label":"pip-install-without-version",
        "start":73,
        "end":100,
        "text":"RUN pip uninstall -y pillow"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "root-privilege-user",
      "use-deprecated-maintainer",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"6e0f67b10c18a4d97e42567d1197bbb404b5be3c.dockerfile",
    "file_content":"From ubuntu:18.04\nRUN apt-get update\nRUN apt-get -y install curl wget vim build-essential libboost1.65-dev gdb git cmake libmysqlclient-dev libyaml-cpp-dev openssh-server\nRUN wget -P \/opt https:\/\/dev.mysql.com\/get\/Downloads\/Connector-C++\/mysql-connector-c++-1.1.11.tar.gz\nRUN tar zxvf \/opt\/mysql-connector-c++-1.1.11.tar.gz -C \/opt\/\nRUN sed -i -e '\/list(APPEND SYS_LIBRARIES \"mysql_sys\")\/d' \/opt\/mysql-connector-c++-1.1.11\/FindMySQL.cmake\nRUN sed -i -e '\/list(APPEND SYS_LIBRARIES \"mysql_strings\")\/d' \/opt\/mysql-connector-c++-1.1.11\/FindMySQL.cmake\nRUN cd \/opt\/mysql-connector-c++-1.1.11\/ &&\\\n    cmake .; make -j 3; make install\nRUN echo \"export LD_LIBRARY_PATH=\/usr\/local\/lib\">>\/root\/.bashrc\nRUN wget -P \/opt https:\/\/github.com\/jbeder\/yaml-cpp\/archive\/release-0.5.1.tar.gz\nRUN tar zxvf \/opt\/release-0.5.1.tar.gz -C \/opt\/ &&\\\n    mkdir \/opt\/yaml-cpp-release-0.5.1\/build\nRUN cd \/opt\/yaml-cpp-release-0.5.1\/build &&\\\n    cmake -DBUILD_SHARED_LIBS=ON ..;make -j 3;make install\nRUN mkdir ~\/.ssh\nRUN sed -i -e \"s\/#PermitRootLogin prohibit-password\/PermitRootLogin yes\/g\" \/etc\/ssh\/sshd_config\nRUN echo root:sshpass|chpasswd\n\nCOPY * \/docker-build\/\n\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":37,
        "end":170,
        "text":"RUN apt-get -y install curl wget vim build-essential libboost1.65-dev gdb git cmake libmysqlclient-dev libyaml-cpp-dev openssh-server"
      },
      {
        "label":"apt-install-without-version",
        "start":37,
        "end":170,
        "text":"RUN apt-get -y install curl wget vim build-essential libboost1.65-dev gdb git cmake libmysqlclient-dev libyaml-cpp-dev openssh-server"
      },
      {
        "label":"use-cd-change-dir",
        "start":549,
        "end":576,
        "text":"RUN cd \/opt\/mysql-connector"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6f5c53420adab319b6343f71db4ce2df2be01339.dockerfile",
    "file_content":"FROM ruby:2.6.3\nRUN apt-get update -qq && apt-get upgrade -y\nRUN curl -sL https:\/\/deb.nodesource.com\/setup_9.x | bash -\nRUN apt-get install -y build-essential nodejs && apt-get clean\nRUN npm install -g phantomjs-prebuilt@2 --unsafe-perm\nRUN gem install foreman\n\nENV GOVUK_APP_NAME publisher\nENV MONGODB_URI mongodb:\/\/mongo\/govuk_content_development\nENV TEST_MONGODB_URI mongodb:\/\/mongo\/govuk_content_publisher_test\nENV PORT 3000\nENV RAILS_ENV development\nENV REDIS_HOST redis\n\nENV APP_HOME \/app\nRUN mkdir $APP_HOME\n\nWORKDIR $APP_HOME\nADD Gemfile* $APP_HOME\/\nRUN bundle install\nADD . $APP_HOME\n\nRUN GOVUK_APP_DOMAIN=www.gov.uk RAILS_ENV=production bundle exec rails assets:precompile\n\nHEALTHCHECK CMD curl --silent --fail localhost:$PORT || exit 1\n\nCMD foreman run web\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":120,
        "end":165,
        "text":"RUN apt-get install -y build-essential nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":120,
        "end":165,
        "text":"RUN apt-get install -y build-essential nodejs"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":534,
        "end":557,
        "text":"ADD Gemfile* $APP_HOME\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":577,
        "end":592,
        "text":"ADD . $APP_HOME"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6f6e24a8a3c4b4370985510428d31f5462bff206.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/php:7.2.19-apache-stretch-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"Acquire::Check-Valid-Until false;\" | sudo tee -a \/etc\/apt\/apt.conf.d\/10-nocheckvalid \\\n    && echo 'Package: *\\nPin: origin \"archive.debian.org\"\\nPin-Priority: 500' | sudo tee -a \/etc\/apt\/preferences.d\/10-archive-pin \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi \\\n  && sudo apt-get install -y bzip2 libgconf-2-4 # for extracting firefox and running chrome, respectively\n\n# install firefox\n#\nRUN FIREFOX_URL=\"https:\/\/download.mozilla.org\/?product=firefox-latest-ssl&os=linux64&lang=en-US\" \\\n  && ACTUAL_URL=$(curl -Ls -o \/dev\/null -w %{url_effective} $FIREFOX_URL) \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.tar.bz2 $ACTUAL_URL \\\n  && sudo tar -xvjf \/tmp\/firefox.tar.bz2 -C \/opt \\\n  && sudo ln -s \/opt\/firefox\/firefox \/usr\/local\/bin\/firefox \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.* \\\n  && firefox --version\n\n# install geckodriver\n\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n     && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n     && cd \/tmp \\\n     && tar xf geckodriver_linux64.tar.gz \\\n     && rm -rf geckodriver_linux64.tar.gz \\\n     && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n     && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n     && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n    && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n    && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n    && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n        \"\/opt\/google\/chrome\/google-chrome\" \\\n    && google-chrome --version\n\nRUN CHROME_VERSION=\"$(google-chrome --version)\" \\\n    && export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's\/^Google Chrome \/\/')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} \\\n    && CHROMEDRIVER_VERSION=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) \\\n    && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_VERSION\/chromedriver_linux64.zip\" \\\n    && cd \/tmp \\\n    && unzip chromedriver_linux64.zip \\\n    && rm -rf chromedriver_linux64.zip \\\n    && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n    && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n    && chromedriver --version\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1205,
        "end":1265,
        "text":"sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1337,
        "end":1436,
        "text":"sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1337,
        "end":1436,
        "text":"sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3937,
        "end":3949,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"a413e8742a19c321c81247cab1c8ab0fd814fde5.dockerfile",
    "file_content":"# Docker file for creating a docker container that can run the tests.\n#\n# Create the image:\n#   docker build -t chasquid-test -f test\/Dockerfile .\n#\n# Run the tests:\n#   docker run --rm chasquid-test  make test\n#\n# Get a shell inside the image (for debugging):\n#   docker run -it --entrypoint=\/bin\/bash chasquid-test\n\nFROM golang:latest\n\nWORKDIR \/go\/src\/blitiri.com.ar\/go\/chasquid\n\n# Make debconf\/frontend non-interactive, to avoid distracting output about the\n# lack of $TERM.\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -q\n\n# Install the required packages for the integration tests.\nRUN apt-get install -y -q python3 msmtp\n\n# Install the optional packages for the integration tests.\nRUN apt-get install -y -q \\\n\tgettext-base dovecot-imapd \\\n\texim4-daemon-light\n\n# Install sudo, needed for the docker entrypoint.\nRUN apt-get install -y -q sudo\n\n# Prepare exim.\nRUN mkdir -p test\/t-02-exim\/.exim4 \\\n\t&& ln -s \/usr\/sbin\/exim4 test\/t-02-exim\/.exim4\n\n# Install binaries for the (optional) DKIM integration test.\nRUN go get github.com\/driusan\/dkim\/... \\\n\t&& go install github.com\/driusan\/dkim\/cmd\/dkimsign \\\n\t&& go install github.com\/driusan\/dkim\/cmd\/dkimverify \\\n\t&& go install github.com\/driusan\/dkim\/cmd\/dkimkeygen\n\n# Copy into the container. Everything below this line will not be cached.\nCOPY . .\n\n# Install chasquid and its dependencies.\nRUN go get -d -v .\/... && go install -v .\/...\n\n# Custom entry point, which uses our own DNS server.\nENTRYPOINT [\".\/test\/util\/docker_entrypoint.sh\"]\n\n# Don't run the tests as root: it makes some integration tests more difficult,\n# as for example Exim has hard-coded protections against running as root.\nRUN useradd -m chasquid && chown -R chasquid:chasquid .\n#USER chasquid\n\n# Tests expect the $USER variable set.\n#ENV USER chasquid\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":318,
        "end":336,
        "text":"FROM golang:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":596,
        "end":635,
        "text":"RUN apt-get install -y -q python3 msmtp"
      },
      {
        "label":"apt-install-without-version",
        "start":596,
        "end":635,
        "text":"RUN apt-get install -y -q python3 msmtp"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":696,
        "end":773,
        "text":"RUN apt-get install -y -q \\\\ngettext-base dovecot-imapd \\\\nexim4-daemon-light"
      },
      {
        "label":"apt-install-without-version",
        "start":696,
        "end":773,
        "text":"RUN apt-get install -y -q \\\\ngettext-base dovecot-imapd \\\\nexim4-daemon-light"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":825,
        "end":855,
        "text":"RUN apt-get install -y -q sudo"
      },
      {
        "label":"apt-install-without-version",
        "start":825,
        "end":855,
        "text":"RUN apt-get install -y -q sudo"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a51918b6a84299db8a3f951496e9e4bb66677f11.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\nFROM circleci\/php:7.0.29-cli-jessie\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n# Note: Revert back to https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb\n# after browser testing works in google-chrome-stable 65.0.x.y\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/chrome\/deb\/pool\/main\/g\/google-chrome-stable\/google-chrome-stable_64.0.3282.186-1_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1009,
        "end":1029,
        "text":"sudo apt-get update;"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1035,
        "end":1129,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1035,
        "end":1129,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4394,
        "end":4406,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"a59138b5f8b47868df7fddd4d390b1a46016185d.dockerfile",
    "file_content":"\nFROM untoldwind\/dose:base-v4\n\nRUN apt-get install -y mongodb-org mongodb-org-server mongodb-org-shell mongodb-org-mongos mongodb-org-tools\n\nADD sources\/consul \/etc\/consul.d\nRUN mkdir -p \/etc\/consul-templates\nADD sources\/consul-templates \/etc\/consul-templates\nADD sources\/supervisor \/etc\/supervisor\/conf.d\n\nRUN mkdir -p \/data\/db\n\nEXPOSE 22 27017\n\nCMD [\"\/usr\/bin\/supervisord\", \"-n\", \"-c\", \"\/etc\/supervisor\/supervisord.conf\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":141,
        "end":173,
        "text":"ADD sources\/consul \/etc\/consul.d"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":209,
        "end":305,
        "text":"ADD sources\/consul-templates \/etc\/consul-templates\\nADD sources\/supervisor \/etc\/supervisor\/conf.d"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":31,
        "end":139,
        "text":"RUN apt-get install -y mongodb-org mongodb-org-server mongodb-org-shell mongodb-org-mongos mongodb-org-tools"
      },
      {
        "label":"apt-install-without-version",
        "start":31,
        "end":139,
        "text":"RUN apt-get install -y mongodb-org mongodb-org-server mongodb-org-shell mongodb-org-mongos mongodb-org-tools"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a7ab6d2f99f7a97082fc4429b91812f146317eb3.dockerfile",
    "file_content":"#\n# This Dockerfile builds a recent curl with HTTP\/2 client support, using\n# a recent nghttp2 build.\n#\n# See the Makefile for how to tag it. If Docker and that image is found, the\n# Go tests use this curl binary for integration tests.\n#\n\nFROM ubuntu:trusty\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y git-core build-essential wget\n\nRUN apt-get install -y --no-install-recommends \\\n       autotools-dev libtool pkg-config zlib1g-dev \\\n       libcunit1-dev libssl-dev libxml2-dev libevent-dev \\\n       automake autoconf\n\n# The list of packages nghttp2 recommends for h2load:\nRUN apt-get install -y --no-install-recommends make binutils \\\n        autoconf automake autotools-dev \\\n        libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev \\\n        libev-dev libevent-dev libjansson-dev libjemalloc-dev \\\n        cython python3.4-dev python-setuptools\n\n# Note: setting NGHTTP2_VER before the git clone, so an old git clone isn't cached:\nENV NGHTTP2_VER 895da9a\nRUN cd \/root && git clone https:\/\/github.com\/tatsuhiro-t\/nghttp2.git\n\nWORKDIR \/root\/nghttp2\nRUN git reset --hard $NGHTTP2_VER\nRUN autoreconf -i\nRUN automake\nRUN autoconf\nRUN .\/configure\nRUN make\nRUN make install\n\nWORKDIR \/root\nRUN wget http:\/\/curl.haxx.se\/download\/curl-7.45.0.tar.gz\nRUN tar -zxvf curl-7.45.0.tar.gz\nWORKDIR \/root\/curl-7.45.0\nRUN .\/configure --with-ssl --with-nghttp2=\/usr\/local\nRUN make\nRUN make install\nRUN ldconfig\n\nCMD [\"-h\"]\nENTRYPOINT [\"\/usr\/local\/bin\/curl\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":314,
        "end":362,
        "text":"apt-get install -y git-core build-essential wget"
      },
      {
        "label":"apt-install-without-version",
        "start":314,
        "end":362,
        "text":"apt-get install -y git-core build-essential wget"
      },
      {
        "label":"apt-install-without-version",
        "start":364,
        "end":549,
        "text":"RUN apt-get install -y --no-install-recommends \\\\nautotools-dev libtool pkg-config zlib1g-dev \\\\nlibcunit1-dev libssl-dev libxml2-dev libevent-dev \\\\nautomake autoconf"
      },
      {
        "label":"apt-install-without-version",
        "start":605,
        "end":897,
        "text":"RUN apt-get install -y --no-install-recommends make binutils \\\\nautoconf automake autotools-dev \\\\nlibtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev \\\\nlibev-dev libevent-dev libjansson-dev libjemalloc-dev \\\\ncython python3.4-dev python-setuptools"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":1007,
        "end":1022,
        "text":"RUN cd \/root &&"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a7d4f3de3f3685bbdeeb88c8d00ec28db9c10f7c.dockerfile",
    "file_content":"FROM debian:stretch-slim\n\nENV DEBIAN_FRONTEND noninteractive\n\n#update\nRUN dpkg --add-architecture i386 && apt-get update --fix-missing && apt-get -y upgrade\n\n#system deps\nRUN apt-get install -y sudo lib32z1 libseccomp-dev xinetd\n\n#create ctf-user\nRUN groupadd -r ctf && useradd -r -g ctf ctf\n\n### IF CHROOT\n#RUN cp -R \/lib* \/home\/ctf\n#RUN cp -R \/usr\/lib* \/home\/ctf\n#RUN mkdir \/home\/ctf\/dev\n#RUN mknod \/home\/ctf\/dev\/null c 1 3\n#RUN mknod \/home\/ctf\/dev\/zero c 1 5\n#RUN mknod \/home\/ctf\/dev\/random c 1 8\n#RUN mknod \/home\/ctf\/dev\/urandom c 1 9\n#RUN chmod 666 \/home\/ctf\/dev\/*\n#RUN mkdir \/home\/ctf\/bin\n#RUN cp \/bin\/sh \/home\/ctf\/bin\n#RUN cp \/bin\/ls \/home\/ctf\/bin\n#RUN cp \/bin\/cat \/home\/ctf\/bin\n### IF CHROOT\n\n#add chall items\nADD ctf.xinetd \/etc\/xinetd.d\/ctf\nADD chall_init.sh \/etc\/chall_init.sh\nADD flag \/home\/ctf\/flag\nADD chall \/home\/ctf\/chall\nADD redir.sh \/home\/ctf\/redir.sh\n\n#set some proper permissions\nRUN chown -R root:ctf \/home\/ctf\nRUN chmod 750 \/home\/ctf\/chall\nRUN chmod 750 \/home\/ctf\/redir.sh\nRUN chmod 440 \/home\/ctf\/flag\nRUN chmod 700 \/etc\/chall_init.sh\n### IF NETWORK-DEBUG\n#RUN apt-get -y install netcat\n#RUN apt-get -y install net-tools\n### IF NETWORK-DEBUG\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":171,
        "end":228,
        "text":"RUN apt-get install -y sudo lib32z1 libseccomp-dev xinetd"
      },
      {
        "label":"apt-install-without-version",
        "start":171,
        "end":228,
        "text":"RUN apt-get install -y sudo lib32z1 libseccomp-dev xinetd"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":718,
        "end":869,
        "text":"ADD ctf.xinetd \/etc\/xinetd.d\/ctf\\nADD chall_init.sh \/etc\/chall_init.sh\\nADD flag \/home\/ctf\/flag\\nADD chall \/home\/ctf\/chall\\nADD redir.sh \/home\/ctf\/redir.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a80a29250a0f4a56d2161d0de057be1655a56cb6.dockerfile",
    "file_content":"# Pantheon terminus mock for Kalabox\n#\n# docker build -t kalabox\/terminus .\n# docker run -d -e PHP_VERSION=55 -e FRAMEWORK=backdrop kalabox\/pantheon-appserver\n#\n\nFROM drush\/drush:8-php5\n\n# Terminus versions\nENV TERMINUS_VERSION 0.13.4\n\n# Install all the CLI magic\nRUN apt-get update -y && apt-get install -y \\\n    kdiff3-qt \\\n    curl \\\n  && docker-php-ext-install \\\n    mysqli \\\n  && curl -O https:\/\/raw.githubusercontent.com\/wp-cli\/builds\/gh-pages\/phar\/wp-cli.phar \\\n  && chmod +x wp-cli.phar && mv wp-cli.phar \/usr\/local\/bin\/wp \\\n  && curl \"https:\/\/github.com\/pantheon-systems\/terminus\/releases\/download\/$TERMINUS_VERSION\/terminus.phar\" -L -o \/usr\/local\/bin\/terminus \\\n  && chmod +x \/usr\/local\/bin\/terminus \\\n  && mkdir -p \/usr\/share\/drush\/commands && mkdir -p \/root\/.terminus\/cache \\\n  && cd \/usr\/share\/drush\/commands \\\n  && curl -L \"http:\/\/ftp.drupal.org\/files\/projects\/registry_rebuild-7.x-2.3.tar.gz\" | tar -zvx \\\n  && curl -O \"https:\/\/raw.githubusercontent.com\/drush-ops\/config-extra\/1.0.1\/config_extra.drush.inc\" \\\n  && apt-get -y clean \\\n  && apt-get -y autoclean \\\n  && apt-get -y autoremove \\\n  && rm -rf && rm -rf \/var\/lib\/cache\/* \\\n  && rm -rf \/var\/lib\/log\/* && rm -rf \/tmp\/*\n\nENTRYPOINT [\"\/bin\/bash\"]\nCMD [\"true\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":289,
        "end":336,
        "text":"apt-get install -y \\\\nkdiff3-qt \\\\ncurl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":289,
        "end":336,
        "text":"apt-get install -y \\\\nkdiff3-qt \\\\ncurl \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":790,
        "end":823,
        "text":"&& cd \/usr\/share\/drush\/commands \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a9a79122ea0f00f88c3be6e10d7388dc00d991a5.dockerfile",
    "file_content":"# Copyright 2017-2019 EPAM Systems, Inc. (https:\/\/www.epam.com\/)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM centos:7\n\n# Prerequisites\nRUN yum install -y \\\n                wget \\\n                curl \\\n                java-1.8.0-openjdk \\\n                python \\\n                unzip\n\n# API distribution\nARG CP_API_DIST_URL=\"\"\nENV CP_NOTIFIER_HOME=\"\/opt\/notifier\"\nRUN cd \/tmp && \\\n    wget -q \"$CP_API_DIST_URL\" -O cloud-pipeline.tgz && \\\n    tar -zxf cloud-pipeline.tgz && \\\n    mkdir -p $CP_NOTIFIER_HOME && \\\n    mv bin\/notifier.jar $CP_NOTIFIER_HOME\/ && \\\n    rm -rf \/tmp\/*\n\nADD config $CP_NOTIFIER_HOME\/config\n\nADD init \/init\nRUN chmod +x \/init\n\nCMD [\"\/init\"]\n",
    "risk_labels":[
      {
        "label":"yum-install-without-version",
        "start":642,
        "end":792,
        "text":"RUN yum install -y \\\\nwget \\\\ncurl \\\\njava-1.8.0-openjdk \\\\npython \\\\nunzip"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1088,
        "end":1123,
        "text":"ADD config $CP_NOTIFIER_HOME\/config"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1125,
        "end":1139,
        "text":"ADD init \/init"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":873,
        "end":884,
        "text":"RUN cd \/tmp"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a9f2671c45788e73299fe01bdd28e60cd0dc5873.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/php:7.1.27-apache-stretch\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"Acquire::Check-Valid-Until false;\" | sudo tee -a \/etc\/apt\/apt.conf.d\/10-nocheckvalid \\\n    && echo 'Package: *\\nPin: origin \"archive.debian.org\"\\nPin-Priority: 500' | sudo tee -a \/etc\/apt\/preferences.d\/10-archive-pin \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n    && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n    && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n    && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n        \"\/opt\/google\/chrome\/google-chrome\" \\\n    && google-chrome --version\n\nRUN CHROME_VERSION=\"$(google-chrome --version)\" \\\n    && export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's\/^Google Chrome \/\/')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} \\\n    && CHROMEDRIVER_VERSION=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) \\\n    && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_VERSION\/chromedriver_linux64.zip\" \\\n    && cd \/tmp \\\n    && unzip chromedriver_linux64.zip \\\n    && rm -rf chromedriver_linux64.zip \\\n    && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n    && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n    && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1382,
        "end":1401,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1408,
        "end":1502,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1408,
        "end":1502,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4651,
        "end":4663,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"c26c4f8f57b7df41efd7824fd73b00e6c18e2570.dockerfile",
    "file_content":"ARG GO_IMAGE\nARG BUILD_IMAGE=ubuntu:xenial\nFROM ${GO_IMAGE} as golang\n\nFROM ${BUILD_IMAGE}\n\nRUN apt-get update && apt-get install -y curl devscripts equivs git\n\nARG GO_VERSION\nENV GOPATH \/go\nENV PATH $PATH:\/usr\/local\/go\/bin:$GOPATH\/bin\nENV DOCKER_BUILDTAGS apparmor seccomp selinux\nENV RUNC_BUILDTAGS apparmor seccomp selinux\n\nARG COMMON_FILES\nCOPY ${COMMON_FILES} \/root\/build-deb\/debian\nRUN mk-build-deps -t \"apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y\" -i \/root\/build-deb\/debian\/control\n\nCOPY sources\/ \/sources\n\nENV DISTRO ubuntu\nENV SUITE xenial\n\nCOPY --from=golang \/usr\/local\/go \/usr\/local\/go\n\nWORKDIR \/root\/build-deb\nCOPY build-deb \/root\/build-deb\/build-deb\n\nENTRYPOINT [\"\/root\/build-deb\/build-deb\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":114,
        "end":159,
        "text":"apt-get install -y curl devscripts equivs git"
      },
      {
        "label":"apt-install-without-version",
        "start":114,
        "end":159,
        "text":"apt-get install -y curl devscripts equivs git"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"c2af32972b85dad24ecf9a613d2486c6a4a78598.dockerfile",
    "file_content":"FROM python:3.6-slim-stretch\n\nENV PYTHONDONTWRITEBYTECODE=1\n\n# Allow scripts to detect we're running in our own container\nRUN touch \/addons-server-docker-container\n\n# Add nodesource repository and requirements\nADD docker\/nodesource.gpg.key \/etc\/pki\/gpg\/GPG-KEY-nodesource\nRUN apt-get update && apt-get install -y \\\n        apt-transport-https              \\\n        gnupg2                           \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\nRUN cat \/etc\/pki\/gpg\/GPG-KEY-nodesource | apt-key add -\nADD docker\/debian-stretch-nodesource-repo \/etc\/apt\/sources.list.d\/nodesource.list\nADD docker\/debian-buster-testing-repo \/etc\/apt\/sources.list.d\/testing.list\n\nRUN apt-get update && apt-get -t stretch install -y \\\n        # General (dev-) dependencies\n        bash-completion \\\n        build-essential \\\n        curl \\\n        libjpeg-dev \\\n        libsasl2-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        locales \\\n        zlib1g-dev \\\n        libffi-dev \\\n        libssl-dev \\\n        libmagic-dev \\\n        nodejs \\\n        # Git, because we're using git-checkout dependencies\n        git \\\n        # Dependencies for mysql-python\n        mysql-client \\\n        default-libmysqlclient-dev \\\n        swig \\\n        gettext \\\n        # Use rsvg-convert to render our static theme previews\n        librsvg2-bin \\\n        # Use pngcrush to optimize the PNGs uploaded by developers\n        pngcrush \\\n        # our makefile and ui-tests require uuid to be installed\n        uuid \\\n        # Use libmaxmind for speedy geoip lookups\n        libmaxminddb0                    \\\n        libmaxminddb-dev                 \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\nADD http:\/\/geolite.maxmind.com\/download\/geoip\/database\/GeoLite2-Country.mmdb.gz \/tmp\n\nRUN mkdir -p \/usr\/local\/share\/GeoIP \\\n && gunzip -c \/tmp\/GeoLite2-Country.mmdb.gz > \/usr\/local\/share\/GeoIP\/GeoLite2-Country.mmdb \\\n && rm -f \/tmp\/GeoLite2-Country.mmdb.gz\n\nRUN apt-get update && apt-get -t buster install -y \\\n       # For an up-to-date `file` and `libmagic-dev` library for better file\n       # detection.\n       file \\\n       libmagic-dev \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Compile required locale\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\n# Set the locale. This is mainly so that tests can write non-ascii files to\n# disk.\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nCOPY . \/code\nWORKDIR \/code\n\nENV PIP_BUILD=\/deps\/build\/\nENV PIP_CACHE_DIR=\/deps\/cache\/\nENV PIP_SRC=\/deps\/src\/\nENV NPM_CONFIG_PREFIX=\/deps\/\nENV SWIG_FEATURES=\"-D__x86_64__\"\n\n# Install all python requires\nRUN mkdir -p \/deps\/{build,cache,src}\/ && \\\n    ln -s \/code\/package.json \/deps\/package.json && \\\n    make update_deps && \\\n    rm -rf \/deps\/build\/ \/deps\/cache\/\n\n# Preserve bash history across image updates.\n# This works best when you link your local source code\n# as a volume.\nENV HISTFILE \/code\/docker\/artifacts\/bash_history\n\n# Configure bash history.\nENV HISTSIZE 50000\nENV HISTIGNORE ls:exit:\"cd ..\"\n\n# This prevents dupes but only in memory for the current session.\nENV HISTCONTROL erasedups\n\nENV CLEANCSS_BIN \/deps\/node_modules\/.bin\/cleancss\nENV LESS_BIN \/deps\/node_modules\/.bin\/lessc\nENV UGLIFY_BIN \/deps\/node_modules\/.bin\/uglifyjs\nENV ADDONS_LINTER_BIN \/deps\/node_modules\/.bin\/addons-linter\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":210,
        "end":271,
        "text":"ADD docker\/nodesource.gpg.key \/etc\/pki\/gpg\/GPG-KEY-nodesource"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":294,
        "end":400,
        "text":"apt-get install -y \\\\napt-transport-https \\\\ngnupg2 \\"
      },
      {
        "label":"apt-install-without-version",
        "start":294,
        "end":400,
        "text":"apt-get install -y \\\\napt-transport-https \\\\ngnupg2 \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":492,
        "end":648,
        "text":"ADD docker\/debian-stretch-nodesource-repo \/etc\/apt\/sources.list.d\/nodesource.list\\nADD docker\/debian-buster-testing-repo \/etc\/apt\/sources.list.d\/testing.list"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":672,
        "end":1018,
        "text":"apt-get -t stretch install -y \\\\n# General (dev-) dependencies\\nbash-completion \\\\nbuild-essential \\\\ncurl \\\\nlibjpeg-dev \\\\nlibsasl2-dev \\\\nlibxml2-dev \\\\nlibxslt-dev \\\\nlocales \\\\nzlib1g-dev \\\\nlibffi-dev \\\\nlibssl-dev \\\\nlibmagic-dev \\\\nnodejs \\"
      },
      {
        "label":"apt-install-without-version",
        "start":672,
        "end":1047,
        "text":"apt-get -t stretch install -y \\\\n# General (dev-) dependencies\\nbash-completion \\\\nbuild-essential \\\\ncurl \\\\nlibjpeg-dev \\\\nlibsasl2-dev \\\\nlibxml2-dev \\\\nlibxslt-dev \\\\nlocales \\\\nzlib1g-dev \\\\nlibffi-dev \\\\nlibssl-dev \\\\nlibmagic-dev \\\\nnodejs \\\\n# Git, because we're"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1651,
        "end":1735,
        "text":"ADD http:\/\/geolite.maxmind.com\/download\/geoip\/database\/GeoLite2-Country.mmdb.gz \/tmp"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ec6a75c2fa85608e4656f217236e1648a18bcda6.dockerfile",
    "file_content":"FROM balenalib\/aarch64-alpine:3.8-run\nLABEL io.balena.device-type=\"spacely-tx2\"\n\n# Pin Alpine 3.8 package versions; override at build time if needed\nARG LESS_VERSION=\"481-r2\"\nARG NANO_VERSION=\"2.7.5-r0\"\nARG NETTOOLS_VERSION=\"1.60-r0\"\nARG IFUPDOWN_VERSION=\"0.8.19-r3\"\nARG USBUTILS_VERSION=\"1.0.6-r1\"\nARG GNUPG_VERSION=\"2.2.20-r1\"\n\n# Install exactly those versions, no cache\nRUN apk add --no-cache \\\n        less=${LESS_VERSION} \\\n        nano=${NANO_VERSION} \\\n        net-tools=${NETTOOLS_VERSION} \\\n        ifupdown=${IFUPDOWN_VERSION} \\\n        usbutils=${USBUTILS_VERSION} \\\n        gnupg=${GNUPG_VERSION}\n\n# Create and switch to a non-root user\nRUN addgroup -S app && adduser -S -G app -u 10001 app\n\n# Use an explicit, absolute working directory\nWORKDIR \/home\/app\n\nUSER app\n\n# Default command\nCMD [\"sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"ec9b194624b358b322d8e3109e6b4b98b4e87b9c.dockerfile",
    "file_content":"ARG GPU_SUFFIX=''\nARG FROM_VERSION\nARG FROM_IMAGE=harbor.h2o.ai\/opsh2oai\/h2o-3\/dev-jdk-others-base\nFROM ${FROM_IMAGE}${GPU_SUFFIX}:${FROM_VERSION}\n\nARG INSTALL_JAVA_VERSION\nENV JAVA_VERSION=${INSTALL_JAVA_VERSION}\n\nCOPY scripts\/install_java_version \\\n     scripts\/java-${JAVA_VERSION}-vars.sh \\\n     scripts\/install_java_version_local \\\n     jdk-10.0.2_linux-x64_bin.tar.gz \\\n     jdk1.8.0_171.zip \\\n     \/tmp\/\n\nRUN chmod +x \/tmp\/install_java_version \/tmp\/java-${JAVA_VERSION}-vars.sh && \\\n    if [ \"$JAVA_VERSION\" = '8' ] || [ \"$JAVA_VERSION\" = '10' ]; then \\\n        \/tmp\/install_java_version_local \"$JAVA_VERSION\" \/tmp\/java-${JAVA_VERSION}-vars.sh; \\\n    else \\\n        \/tmp\/install_java_version \"$JAVA_VERSION\" \/tmp\/java-${JAVA_VERSION}-vars.sh; \\\n    fi && \\\n    rm -f \/tmp\/install_java_version \\\n          \/tmp\/install_java_version_local \\\n          \/tmp\/java-${JAVA_VERSION}-vars.sh \\\n          \/tmp\/jdk-10.0.2_linux-x64_bin.tar.gz \\\n          \/tmp\/jdk1.8.0_171.zip && \\\n    addgroup -g 10001 app && \\\n    adduser -D -G app -u 10001 app && \\\n    chown -R app:app \/usr\/lib\/jvm && \\\n    chmod -R go-w \/usr\/lib\/jvm\n\nENV JAVA_HOME=\/usr\/lib\/jvm\/java-${JAVA_VERSION}-oracle\nENV PATH=\"${JAVA_HOME}\/bin:${PATH}\"\n\nUSER app\nWORKDIR \/home\/app",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a7ab6d2f99f7a97082fc4429b91812f146317eb3.dockerfile",
    "file_content":"#------------------------------------------------------------------------------\n# Build a recent curl with HTTP\/2 support on Ubuntu Trusty—securely pinned,\n# combined installs, non-root runtime, and no needless layers.\n#------------------------------------------------------------------------------\n\nARG UBUNTU_TAG=14.04.6\nFROM ubuntu:${UBUNTU_TAG}\n\n#------------------------------------------------------------------------------\n# Version pins for all APT packages we install\nARG GIT_VER=1:2.7.4-0ubuntu1.4\nARG BUILD_ESS_VER=12.1ubuntu2\nARG WGET_VER=1.14-1ubuntu1.14\nARG AUTO_CONF_VER=2.69-6ubuntu2\nARG AUTO_MAKE_VER=1:1.13.4-1ubuntu1\nARG AUTO_TOOLS_VER=20120212.1ubuntu1\nARG LIBTOOL_VER=2.4.2-1\nARG PKG_CFG_VER=0.28-1ubuntu1\nARG ZLIB1G_DEV_VER=1:1.2.8.dfsg-2ubuntu4\nARG CUNIT_DEV_VER=1.2.2-3ubuntu1\nARG SSL_DEV_VER=1.0.1-4ubuntu5.39\nARG XML2_DEV_VER=2.9.1+dfsg1-5ubuntu1.3\nARG EVENT_DEV_VER=2.0.21-stable-4build1\nARG EV_DEV_VER=4.15-1\nARG JANSSON_DEV_VER=2.10-1build1\nARG JEMALLOC_DEV_VER=3.6.0-1ubuntu1\nARG CYTHON_VER=0.21.2-1\nARG PY3_4_DEV_VER=3.4.0-3ubuntu0.2\nARG SETUPTOOLS_VER=3.3-1ubuntu2\nARG MAKE_VER=4.0-6.1ubuntu1\nARG BINUTILS_VER=2.24-5ubuntu14.3\nARG NGHTTP2_VER=895da9a\n\n#------------------------------------------------------------------------------\n# Install all build-time deps in one RUN, pinned and without recommends\nRUN set -eux; \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        git-core=${GIT_VER} \\\n        build-essential=${BUILD_ESS_VER} \\\n        wget=${WGET_VER} \\\n        autotools-dev=${AUTO_TOOLS_VER} \\\n        autoconf=${AUTO_CONF_VER} \\\n        automake=${AUTO_MAKE_VER} \\\n        libtool=${LIBTOOL_VER} \\\n        pkg-config=${PKG_CFG_VER} \\\n        zlib1g-dev=${ZLIB1G_DEV_VER} \\\n        libcunit1-dev=${CUNIT_DEV_VER} \\\n        libssl-dev=${SSL_DEV_VER} \\\n        libxml2-dev=${XML2_DEV_VER} \\\n        libevent-dev=${EVENT_DEV_VER} \\\n        libev-dev=${EV_DEV_VER} \\\n        libjansson-dev=${JANSSON_DEV_VER} \\\n        libjemalloc-dev=${JEMALLOC_DEV_VER} \\\n        cython=${CYTHON_VER} \\\n        python3.4-dev=${PY3_4_DEV_VER} \\\n        python3-setuptools=${SETUPTOOLS_VER} \\\n        make=${MAKE_VER} \\\n        binutils=${BINUTILS_VER} \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n#------------------------------------------------------------------------------\n# Clone & build nghttp2\nWORKDIR \/build\/nghttp2\nRUN git clone --depth 1 https:\/\/github.com\/tatsuhiro-t\/nghttp2.git . && \\\n    git reset --hard ${NGHTTP2_VER} && \\\n    autoreconf -i && \\\n    .\/configure && \\\n    make && make install\n\n#------------------------------------------------------------------------------\n# Download, build & install curl\nWORKDIR \/build\/curl\nRUN wget https:\/\/curl.haxx.se\/download\/curl-7.45.0.tar.gz && \\\n    tar xzf curl-7.45.0.tar.gz --strip-components=1 && \\\n    .\/configure --with-ssl --with-nghttp2=\/usr\/local && \\\n    make && make install && \\\n    ldconfig\n\n#------------------------------------------------------------------------------\n# Clean up build directories\nRUN rm -rf \/build\n\n#------------------------------------------------------------------------------\n# Create unprivileged user and switch to it\nRUN groupadd --system curluser && \\\n    useradd --system --gid curluser --home \/home\/curluser --create-home --shell \/usr\/sbin\/nologin curluser\n\nUSER curluser\nWORKDIR \/home\/curluser\n\n#------------------------------------------------------------------------------\n# Entrypoint\nENTRYPOINT [\"\/usr\/local\/bin\/curl\"]\nCMD [\"-h\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a7b7113b4c04a4d06a027be67d542fe3ded0d806.dockerfile",
    "file_content":"#──────────────────────────────────────────────────────────────────────────────\n# Fixed Dockerfile addressing the specified security risks:\n#  • Specific base image tag (no “bionic” alias)              [Blurry tag: MEDIUM]\n#  • LABEL instead of MAINTAINER                              [MAINTAINER: HIGH]\n#  • Single RUN combining apt-get update+install               [RUN update alone: HIGH]\n#  • --no-install-recommends & -y                              [--no-install-recommends: LOW, -y: HIGH]\n#  • All APT packages version-pinned                          [apt install without version: MEDIUM]\n#  • Non-root USER                                            [Image user is root: HIGH]\n#──────────────────────────────────────────────────────────────────────────────\n\nARG UBUNTU_TAG=18.04\nFROM ubuntu:${UBUNTU_TAG}\n\nLABEL maintainer=\"Joel Martin <github@martintribe.org>\"\n\n# Install and pin all packages in one step,\n# with no-install-recommends and -y, then clean cache.\nRUN set -eux; \\\n    apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      make=4.1-9.1ubuntu1 \\\n      python=2.7.15~rc1-1 \\\n      curl=7.58.0-2ubuntu3.13 \\\n      libreadline-dev=7.0-3 \\\n      libedit-dev=3.1-20170329-2 \\\n      gcc=7.3.0-27ubuntu1~18.04 \\\n      gdc=7.3.0-3ubuntu1 \\\n      ldc=1.7.0-1ubuntu1 \\\n      gnupg=2.2.4-1ubuntu1.3 \\\n      wget=1.19.4-1ubuntu2.3; \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# Create an unprivileged user and switch to it\nRUN groupadd --system appuser \\\n && useradd  --system --no-create-home --gid appuser appuser\n\nUSER appuser\nWORKDIR \/home\/appuser\n\n# (Optional) Default command\nCMD [\"bash\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"f08e4244fb882a818f666d2c4bb713c8ddd8b99d.dockerfile",
    "file_content":"FROM alpine:3.6\n\n# set the default NODE_ENV to production\n# for dev\/test build with: docker build --build-arg NODE=development .\nARG NODE=production\nENV NODE_ENV=${NODE}\n\nWORKDIR \/usr\/src\/app\n\n# install node, curl, etc., then clean up\nCOPY package*.json .\/\nRUN apk update && \\\n    apk add --no-cache curl jq bash nodejs nodejs-npm && \\\n    npm install && \\\n    apk del --purge nodejs-npm && \\\n    rm -rf \/var\/cache\/* \/root\/.npm \/tmp\/*\n\n# copy the rest of the source\nCOPY . .\n\n# create a non-root user and give it ownership of our app\nRUN addgroup -S app && \\\n    adduser -S -G app app && \\\n    chown -R app:app \/usr\/src\/app\n\n# switch to that user\nUSER app\n\nHEALTHCHECK --interval=10s --timeout=3s \\\n  CMD curl -f -s http:\/\/localhost:3000\/health\/ || exit 1\n\nEXPOSE 3000\n\nENTRYPOINT [\"bash\",\"\/usr\/src\/app\/startup.sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a9d4a5a6d8a9f04131bd827a1669685cf6a32c50.dockerfile",
    "file_content":"# Use a specific, immutable base image\nFROM lava32:20240215\n\n# Create unprivileged build user\nRUN groupadd -r builder && useradd -r -g builder builder\n\n# Install and configure locales in one step, pinning package versions\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      locales=2.31-0ubuntu9.9 \\\n      sudo=1.8.21p2-3ubuntu1.2 \\\n      gdb=8.1-0ubuntu3.3 \\\n      vim=2:8.0.1453-1ubuntu1.4 \\\n      emacs=1:25.3+1-5ubuntu2 \\\n      exuberant-ctags=1:5.8-3build1 \\\n      hexedit=1.4-2build1 && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    echo \"en_US.UTF-8 UTF-8\" > \/etc\/locale.gen && \\\n    locale-gen\n\n# Set locale environment variables\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US \\\n    LC_ALL=en_US.UTF-8\n\n# Switch to unprivileged user for the build\nUSER builder\n\n# Use absolute WORKDIR, configure and build LLVM in a single RUN\nWORKDIR \/llvm\nRUN .\/configure \\\n      --disable-optimized \\\n      --enable-assertions \\\n      --enable-targets=x86 \\\n      --enable-shared \\\n      --enable-pic \\\n      --host=i486-linux-gnu \\\n      --build=i486-linux-gnu && \\\n    REQUIRES_RTTI=1 make -j\"$(nproc)\"",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"f4c7989a9121e6f762d22b624f4d13b2caf8ccc1.dockerfile",
    "file_content":"FROM node:14.17.0-alpine3.13 AS builder\nENV NODE_ENV=development \\\n    PORT=3000 \\\n    SHELL=\/bin\/bash\n\nRUN apk update && apk add --no-cache make git gnupg bash\n\nWORKDIR \/usr\/app\n\nCOPY package*.json .\/\nRUN npm set progress=false && npm install\n\nCOPY . .\n\n# create and switch to non-root user\nRUN addgroup -S appgroup \\\n && adduser -S appuser -G appgroup \\\n && chown -R appuser:appgroup \/usr\/app\nUSER appuser\n\nVOLUME \/usr\/app\nEXPOSE ${PORT}\n\nCMD [\"npm\", \"run\", \"start\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a8edeffd0f15b2054890645134ae50b6d5b1ab92.dockerfile",
    "file_content":"# pin to a specific Ubuntu release\nFROM ubuntu:18.04\n\nARG CMAKE_VER=3.10.2-1ubuntu2.18.04.1\nARG WGET_VER=1.19.4-1ubuntu2.2\nARG SUDO_VER=1.8.21p2-3ubuntu1\nARG GIT_VER=1:2.17.1-1ubuntu0.7\nARG UNZIP_VER=6.0-21ubuntu1.3\nARG PYTHON_VER=2.7.15~rc1-1~18.04.1\nARG PYTHON_DEV_VER=2.7.15~rc1-1~18.04.1\nARG PIP_VER=9.0.1-2.3~ubuntu1.18.04.4\nARG PY_YAML_VER=3.13-2build1\nARG MPL_VER=2.2.2-1build1\nARG TK_VER=8.6.5-2ubuntu1\nARG BOOST_VER=1.65.1.0.2ubuntu1\nARG EIGEN_VER=3.3.4-4ubuntu1\nARG QT4_VER=4:4.8.7+dfsg-7ubuntu3\nARG TINYXML_VER=2.6.2-6.1ubuntu2\nARG PKGCFG_VER=0.29.1-0ubuntu2\nARG YAMLCPP_VER=0.5.2-3build1\nARG BLAS_VER=3.7.1-4ubuntu1\nARG LAPACK_VER=3.7.1-4ubuntu1\nARG GFORTRAN_VER=4:7.4.0-1ubuntu2.3\nARG CYTHON_VER=0.29.0-1\nARG NOSE_VER=1.3.7-1\nARG SCIPY_VER=1.1.0-1ubuntu1\nARG SKLEARN_VER=0.19.1-2\nARG JSONCPP_VER=1.7.4-3.1ubuntu1\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -qq && \\\n    apt-get install -y --no-install-recommends \\\n      cmake=${CMAKE_VER} \\\n      wget=${WGET_VER} \\\n      sudo=${SUDO_VER} \\\n      git-core=${GIT_VER} \\\n      unzip=${UNZIP_VER} \\\n      python=${PYTHON_VER} \\\n      python-dev=${PYTHON_DEV_VER} \\\n      python-pip=${PIP_VER} \\\n      python-yaml=${PY_YAML_VER} \\\n      python-matplotlib=${MPL_VER} \\\n      python-tk=${TK_VER} \\\n      libboost-all-dev=${BOOST_VER} \\\n      libeigen3-dev=${EIGEN_VER} \\\n      libqt4-dev=${QT4_VER} \\\n      libtinyxml-dev=${TINYXML_VER} \\\n      pkg-config=${PKGCFG_VER} \\\n      libyaml-cpp-dev=${YAMLCPP_VER} \\\n      libblas-dev=${BLAS_VER} \\\n      liblapack-dev=${LAPACK_VER} \\\n      gfortran=${GFORTRAN_VER} \\\n      cython=${CYTHON_VER} \\\n      python-nose=${NOSE_VER} \\\n      python-scipy=${SCIPY_VER} \\\n      python-sklearn=${SKLEARN_VER} \\\n      libjsoncpp-dev=${JSONCPP_VER} && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# pin pip packages (Medium risk if unpinned)\nRUN pip install \\\n      gym==0.21.0 \\\n      scikit-optimize==0.9.0\n\n# create a non-root user (High risk otherwise)\nRUN groupadd -r appuser && useradd -r -g appuser appuser\n\nUSER appuser\nWORKDIR \/home\/appuser\n\nCMD [\"bash\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"cee14d28a9e4679e9a52aaae61fe2bc1975a473f.dockerfile",
    "file_content":"FROM openjdk:11.0.2-jre-slim-stretch\n\n# 添加非 root 用户\nRUN useradd -r -m -d \/var\/lib\/pantheon pantheon\n\nCOPY pantheon-*.tar.gz \/tmp\/.\nRUN tar xzf \/tmp\/pantheon-*.tar.gz -C \/tmp && \\\n  rm \/tmp\/pantheon-*.tar.gz && \\\n  mv \/tmp\/pantheon-* \/opt\/pantheon\n\nRUN mkdir -p \/var\/lib\/pantheon && \\\n    mkdir -p \/etc\/pantheon && \\\n    chown -R pantheon \/var\/lib\/pantheon \/etc\/pantheon \/opt\/pantheon\n\nCOPY entrypoint.sh \/opt\/pantheon\/pantheon-entrypoint.sh\nRUN chmod +x \/opt\/pantheon\/pantheon-entrypoint.sh && \\\n    chown pantheon \/opt\/pantheon\/pantheon-entrypoint.sh\n\nUSER pantheon\n\nWORKDIR \/var\/lib\/pantheon\nVOLUME [\"\/var\/lib\/pantheon\"]\n\nEXPOSE 8545 8546 30303\n\nENV PANTHEON_OPTS=\"-Dpantheon.docker=true\"\n\nENTRYPOINT [\"\/opt\/pantheon\/pantheon-entrypoint.sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a7dc5e96296042bd50da00e9efab250992fad7d4.dockerfile",
    "file_content":"# Pin to a specific, versioned base\nFROM nodesource\/wheezy-base:6.2.2-1nodesource1~wheezy1\n\nLABEL maintainer=\"William Blankenship <wblankenship@nodesource.com>\"\n\n# Install & pin global npm tools, then clean up\nRUN npm install -g pangyp@4.0.0 \\\n    && ln -s \"$(which pangyp)\" \"$(dirname \"$(which pangyp)\")\/node-gyp\" \\\n    && npm cache clean --force\n\n# Create a non-root user up front\nRUN groupadd -r app && useradd -r -g app app\n\nWORKDIR \/usr\/src\/app\n\n# Copy and install app deps with exact versions\nCOPY package.json package-lock.json .\/\nRUN npm ci --only=production\n\n# Copy the rest of your code\nCOPY . .\n\n# Fix permissions and switch away from root\nRUN chown -R app:app \/usr\/src\/app\nUSER app\n\n# Default to production mode\nENV NODE_ENV=production\n\n# Expose whatever port your app listens on\nEXPOSE 3000\n\nENTRYPOINT [\"npm\", \"start\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d29acfc777c5529a1dfded86cfa115f7fbe5002b.dockerfile",
    "file_content":"# Build Stage\nFROM mcr.microsoft.com\/dotnet\/core\/sdk:2.2-alpine AS build\nWORKDIR \/app\n\n# Create a non-root user and group\nRUN addgroup -S appgroup && adduser -S appuser -G appgroup\n\n# Copy the necessary project files and restore dependencies\nCOPY demo\/WalkingTec.Mvvm.Demo\/*.csproj .\/demo\/WalkingTec.Mvvm.Demo\/\nCOPY demo\/*.csproj .\/demo\/\n\nRUN dotnet restore \".\/demo\/WalkingTec.Mvvm.Demo\/WalkingTec.Mvvm.Demo.csproj\"\n\n# Copy the rest of the project files and build the app\nCOPY . .\n\nRUN dotnet publish \".\/demo\/WalkingTec.Mvvm.Demo\/WalkingTec.Mvvm.Demo.csproj\" -c Release -o \/app\/out\n\n# Runtime Stage\nFROM mcr.microsoft.com\/dotnet\/core\/aspnet:2.2-alpine AS runtime\nWORKDIR \/app\n\n# Create a non-root user and group in the runtime stage\nRUN addgroup -S appgroup && adduser -S appuser -G appgroup\n\n# Copy the published output from the build stage\nCOPY --from=build \/app\/out .\/\n\n# Set environment variables for ASP.NET Core\nENV ASPNETCORE_URLS http:\/\/+:80\nENV ASPNETCORE_ENVIRONMENT Production\n\n# Expose port for the app\nEXPOSE 80\n\n# Change ownership of app files to the non-root user\nRUN chown -R appuser:appgroup \/app\n\n# Switch to the non-root user\nUSER appuser\n\n# Start the application\nENTRYPOINT [\"dotnet\", \"WalkingTec.Mvvm.Demo.dll\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"f113dd7437fc2a3323d3b2cdef8e40f2ce0e2fbe.dockerfile",
    "file_content":"FROM php:7.1.33-apache\n\n# install all PHP extensions & Xdebug, enable Apache mods\nRUN set -eux; \\\n    docker-php-ext-install mysqli pdo_mysql mbstring; \\\n    pecl install xdebug-2.6.0; \\\n    docker-php-ext-enable xdebug; \\\n    echo \"xdebug.remote_enable=1\" >> \/usr\/local\/etc\/php\/php.ini; \\\n    a2enmod rewrite headers\n\n# create a non-root user and give it ownership of the web root\nRUN groupadd -g 1000 appuser \\\n && useradd  -u 1000 -g appuser -m appuser \\\n && chown -R appuser:appuser \/var\/www\/html\n\nUSER appuser\n\nEXPOSE 80\nCMD [\"apache2-foreground\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"cfdfbaed08045b296f019852dc3b8b388d4aadcf.dockerfile",
    "file_content":"#---------------------------------------------------------------------------#\n#                                BUILD STAGE                                #\n#---------------------------------------------------------------------------#\n\n# Pin the golang base image to a specific digest for immutability & security\n# (replace <GOLANG_1_10_SHA256> with the real sha256 from Docker Hub)\nFROM golang:1.10@sha256:<GOLANG_1_10_SHA256> AS build\n\n# Disable CGO for fully static binary\nENV CGO_ENABLED=0\n\nWORKDIR \/go\/src\/app\n\n# Copy your code in\nCOPY go\/   .\/go\/\nCOPY main.go .\n\n# Initialize module, fetch deps, and build\nRUN go mod init app \\\n && go get -d -v .\/... \\\n && go build -a -installsuffix cgo -o petstoreserver .\n\n\n\n#---------------------------------------------------------------------------#\n#                               RUNTIME STAGE                               #\n#---------------------------------------------------------------------------#\n\n# Scratch is still great for static Go binaries\nFROM scratch AS runtime\n\n# Drop to a non-root UID (65532 is the standard \"nobody\" uid\/gid)\nUSER 65532:65532\n\n# Copy the statically built binary from the build stage\nCOPY --from=build \/go\/src\/app\/petstoreserver \/petstoreserver\n\n# Expose your application port\nEXPOSE 8080\n\n# Run as non-root\nENTRYPOINT [\"\/petstoreserver\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"f43f337870af60c5acd9dbee5493ebffbc203109.dockerfile",
    "file_content":"FROM golang:1.7.8-alpine3.7\n\nRUN apk update && apk upgrade && \\\n    apk add --no-cache \\\n      bash=4.4.19-r1 \\\n      git=2.14.5-r0 \\\n      openssh=7.4_p1-r4\n\nRUN addgroup -S app && adduser -S -G app app\n\nRUN mkdir -p \/go\/src\/app\nWORKDIR \/go\/src\/app\n\nCOPY --chown=app:app main.go .\/\n\nRUN go get -d .\/... && go build -o app\n\nUSER app\n\nEXPOSE 9000\n\nCMD [\".\/app\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d4ac9dc2435c866a04ee6aab6e3465816589e1eb.dockerfile",
    "file_content":"FROM openjdk:8-jdk-alpine\n\nLABEL maintainer=\"XIAPER Docker Maintainers <270580156@qq.com>\"\n\nENV XIAPER_VERSION 2.1.3-SNAPSHOT\n\n# Create a non-root user and group for running the application\nRUN addgroup -S appgroup && adduser -S appuser -G appgroup\n\n# Set the working directory\nWORKDIR \/app\n\n# Copy application properties and jar file\nCOPY application.properties \/config\/application.properties\nCOPY target\/xiaper-2.1.3-SNAPSHOT.jar app.jar\n\n# Set proper ownership and permissions\nRUN chown -R appuser:appgroup \/app \/config && \\\n    chmod -R 755 \/app \/config\n\n# Switch to the non-root user\nUSER appuser\n\n# Set the entry point to run the application\nENTRYPOINT [\"java\", \"-jar\", \"\/app\/app.jar\"]\n\nEXPOSE 8000",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d46b4b96db487e649098824f4f1b0bad0601f1cb.dockerfile",
    "file_content":"FROM ubuntu:22.04\n\nARG WGET_VERSION=1.21.2-2ubuntu2\nARG APT_TRANSPORT_VERSION=2.4.11\nARG CHEFDK_VERSION=3.7.23\nARG CHEFDK_DEB=chefdk_${CHEFDK_VERSION}-1_amd64.deb\nARG CHEFDK_SHA256=1e702d60c50f6aac3d13d26145909eb0ae8d5c5e72001a5899e235c9691b8615\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        wget=${WGET_VERSION} \\\n        apt-transport-https=${APT_TRANSPORT_VERSION} && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN wget -q -O \/tmp\/${CHEFDK_DEB} \\\n        https:\/\/packages.chef.io\/files\/stable\/chefdk\/${CHEFDK_VERSION}\/ubuntu\/20.04\/${CHEFDK_DEB} && \\\n    echo \"${CHEFDK_SHA256}  \/tmp\/${CHEFDK_DEB}\" | sha256sum -c - && \\\n    dpkg -i \/tmp\/${CHEFDK_DEB} && \\\n    rm -f \/tmp\/${CHEFDK_DEB}\n\nRUN useradd -u 1001 -r -m -s \/bin\/bash chef-user\nUSER chef-user\n\nCOPY --chown=chef-user:chef-user .\/ \/tmp\/cookbook\nWORKDIR \/chef-repo\n\nRUN berks vendor -b \/tmp\/cookbook\/Berksfile cookbooks\/",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d5dd3fb779bc2f6c55248770d2ac60fa49fb9c0d.dockerfile",
    "file_content":"# docker build -t bryanmacfarlane\/sanenode-api .\n#\n# run:\n# docker run -p 7770:7770 -d bryanmacfarlane\/sanenode-api\n#\n# docker create -p 7770:7770 bryanmacfarlane\/sanenode-api\n# docker container ls -all\n# docker start <id>\n# docker stop <id>\n# docker rm <id>\n\nFROM node:8.11.2-slim\n\n# Create a non-root user and group\nRUN groupadd -r appgroup && useradd -r -g appgroup appuser\n\n# Set working directory and copy files\nCOPY . \/sanenode\n\nWORKDIR \/sanenode\/api\n\n# Change ownership to the non-root user\nRUN chown -R appuser:appgroup \/sanenode\n\n# Expose the application port\nEXPOSE 7770\n\n# Switch to the non-root user\nUSER appuser\n\n# Start the application\nCMD [ \"npm\", \"start\" ]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"f2987da5531d6d44cea1c02b545fbab970d0e65f.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n# 使用可配置的版本号，默认 9.4.21\nARG PG_VERSION=9.4.21\nFROM postgres:${PG_VERSION}\n\nENV POSTGRES_DB=circle_test\n\n# 切换到 postgres 用户（官方镜像内置），避免以 root 身份执行\nUSER postgres\n\n# 性能调优：关闭 fsync 等，提高写入速度\nRUN if [ -e \/usr\/local\/share\/postgresql\/postgresql.conf.sample ]; then \\\n        postgresfile=\/usr\/local\/share\/postgresql\/postgresql.conf.sample; \\\n    else \\\n        postgresfile=\/usr\/share\/postgresql\/postgresql.conf.sample; \\\n    fi && \\\n    echo fsync=off                >> \"$postgresfile\" && \\\n    echo synchronous_commit=off   >> \"$postgresfile\" && \\\n    echo full_page_writes=off     >> \"$postgresfile\" && \\\n    echo bgwriter_lru_maxpages=0  >> \"$postgresfile\"",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  }
]