[
  {
    "filename":"8c19bc881112a7a532e4847ca5eacbd3ce464ef2.dockerfile",
    "file_content":"#First build Tutorial tensorflow\nFROM qianjiangyuan\/tutorial-horovod:1.7\nMAINTAINER Jin Li <jinlmsft@hotmail.com>\n\n# Add Glove vectors \nRUN mkdir -p \/utils\/glove; cd \/utils\/glove; \\\n    wget http:\/\/nlp.stanford.edu\/data\/glove.6B.zip; \\ \n    unzip glove.6B.zip; \\\n    rm glove.6B.zip glove.6B.?00d.txt \n# Add Yolo models\nRUN cd \/utils; git clone --recurse-submodules git:\/\/github.com\/DLWorkspace\/YAD2K\nRUN mkdir \/utils\/models; cd \/utils\/models; wget https:\/\/dlwsdata.blob.core.windows.net\/models\/yolo.h5\n# Additional utility\n\nRUN pip3 install emoji \nRUN pip3 install faker \nRUN pip3 install Babel \nRUN pip3 install pydub \nRUN pip3 install dill \nRUN pip3 install imagehash\n# RUN pip3 install music21 \nRUN cd \/utils; git clone --recurse-submodules https:\/\/github.com\/DLWorkspace\/nmt\n\n# The following install Cython & Pycocotools \nRUN pip3 install Cython\nRUN cd \/utils && \\\n    git clone https:\/\/github.com\/pdollar\/coco.git && \\\n    cd \/utils\/coco\/PythonAPI && \\\n    make && \\\n    make install && \\\n    python3 setup.py install \n\n# Install mask RCNN\nRUN cd \/utils && git clone https:\/\/github.com\/matterport\/Mask_RCNN\n\n# For audio demo\nRUN sudo apt-get install -y software-properties-common\nRUN add-apt-repository ppa:jonathonf\/ffmpeg-3 && apt-get update && apt-get install -y ffmpeg libav-tools x264 x265 \n\n# data for final task \nRUN apt-get update && apt-get install -y p7zip-full\nRUN cd \/utils && \\\n    git clone https:\/\/github.com\/stormstone\/deeplearning.ai && \\\n    mkdir -p \/utils\/data\/trigger_word && \\\n    mv deeplearning.ai\/02-课后作业\/05-第五课\\ 序列模型\/03-第五课第三周作业\/Trigger\\ word\\ detection\/XY_train\/ \/utils\/data\/trigger_word\/XY_train && \\\n    mv deeplearning.ai\/02-课后作业\/05-第五课\\ 序列模型\/03-第五课第三周作业\/Trigger\\ word\\ detection\/XY_dev\/ \/utils\/data\/trigger_word\/XY_dev && \\\n    rm -rf deeplearning.ai && \\\n    cd \/utils\/data\/trigger_word\/XY_train && unzip X.zip && rm X.zip && \\\n    cd \/utils\/data\/trigger_word\/XY_dev && 7z x X_dev.7z && rm X_dev.7z \n\nRUN pip3 install fastai\n\nRUN cd \/utils;  git clone --recurse-submodules git:\/\/github.com\/DLWorkspace\/deep-learning-coursera\n\n# The following operation needs GPU to create yolo.h5, This currently only works for Yolo V2 (V1 and V3 have layers that can't be interpreted)\n# RUN cd \/utils\/YAD2K; \\\n#    wget https:\/\/pjreddie.com\/media\/files\/yolov2.weights; \\\n#    wget https:\/\/raw.githubusercontent.com\/pjreddie\/darknet\/master\/cfg\/yolov2.cfg; \\\n#    .\/yad2k.py yolov2.cfg yolov2.weights model_data\/yolo.h5\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":73,
        "end":113,
        "text":"MAINTAINER Jin Li <jinlmsft@hotmail.com>"
      },
      {
        "label":"pip-install-without-version",
        "start":525,
        "end":697,
        "text":"RUN pip3 install emoji\\nRUN pip3 install faker\\nRUN pip3 install Babel\\nRUN pip3 install pydub\\nRUN pip3 install dill\\nRUN pip3 install imagehash\\n# RUN pip3 install music21"
      },
      {
        "label":"use-cd-change-dir",
        "start":699,
        "end":712,
        "text":"RUN cd \/utils"
      },
      {
        "label":"pip-install-without-version",
        "start":827,
        "end":850,
        "text":"RUN pip3 install Cython"
      },
      {
        "label":"use-cd-change-dir",
        "start":929,
        "end":953,
        "text":"cd \/utils\/coco\/PythonAPI"
      },
      {
        "label":"use-cd-change-dir",
        "start":1046,
        "end":1059,
        "text":"RUN cd \/utils"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1131,
        "end":1185,
        "text":"RUN sudo apt-get install -y software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":1131,
        "end":1185,
        "text":"RUN sudo apt-get install -y software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":1348,
        "end":1377,
        "text":"apt-get install -y p7zip-full"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1348,
        "end":1377,
        "text":"apt-get install -y p7zip-full"
      },
      {
        "label":"use-cd-change-dir",
        "start":1378,
        "end":1391,
        "text":"RUN cd \/utils"
      },
      {
        "label":"use-cd-change-dir",
        "start":1797,
        "end":1936,
        "text":"cd \/utils\/data\/trigger_word\/XY_train && unzip X.zip && rm X.zip && \\\\ncd \/utils\/data\/trigger_word\/XY_dev && 7z x X_dev.7z && rm X_dev.7z"
      },
      {
        "label":"pip-install-without-version",
        "start":1939,
        "end":1962,
        "text":"RUN pip3 install fastai"
      },
      {
        "label":"use-cd-change-dir",
        "start":1964,
        "end":1977,
        "text":"RUN cd \/utils"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-sudo-run",
        "start":1131,
        "end":1155,
        "text":"RUN sudo apt-get install"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"cf9c2627e56ca955a87079fbe41c3957e32d056d.dockerfile",
    "file_content":"FROM phusion\/baseimage\nMAINTAINER Thiago Taranto <ttaranto@gmail.com>\n\n# ensure UTF-8\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# change resolv.conf\nRUN echo 'nameserver 8.8.8.8' >> \/etc\/resolv.conf\n\n# setup\nENV HOME \/root\nRUN \/etc\/my_init.d\/00_regen_ssh_host_keys.sh\n\nCMD [\"\/sbin\/my_init\"]\n\n# nginx-php installation\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get update\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get -y upgrade\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get update --fix-missing\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get -y install php7.0\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get -y install php7.0-fpm php7.0-common php7.0-cli php7.0-mysqlnd php7.0-mcrypt php7.0-curl php7.0-bcmath php7.0-mbstring php7.0-soap php7.0-xml php7.0-zip php7.0-json php7.0-imap php-xdebug php-pgsql\n\n# install nginx (full)\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y nginx-full\n\n# install latest version of nodejs\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y nodejs\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y npm\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y git\n\n# install yarn\nRUN DEBIAN_FRONTEND=\"noninteractive\" curl -sSL https:\/\/dl.yarnpkg.com\/debian\/pubkey.gpg | apt-key add -\nRUN DEBIAN_FRONTEND=\"noninteractive\" echo \"deb https:\/\/dl.yarnpkg.com\/debian\/ stable main\" | tee \/etc\/apt\/sources.list.d\/yarn.list\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get update && apt-get install yarn\n\n# install php composer\nRUN curl -sS https:\/\/getcomposer.org\/installer | php\nRUN mv composer.phar \/usr\/local\/bin\/composer\n\n# add build script (also set timezone to Americas\/Sao_Paulo)\nRUN mkdir -p \/root\/setup\nADD build\/setup.sh \/root\/setup\/setup.sh\nRUN chmod +x \/root\/setup\/setup.sh\nRUN (cd \/root\/setup\/; \/root\/setup\/setup.sh)\n\n# copy files from repo\nADD build\/nginx.conf \/etc\/nginx\/sites-available\/default\nADD build\/.bashrc \/root\/.bashrc\n\n# disable services start\nRUN update-rc.d -f apache2 remove\nRUN update-rc.d -f nginx remove\nRUN update-rc.d -f php7.0-fpm remove\n\n# add startup scripts for nginx\nADD build\/nginx.sh \/etc\/service\/nginx\/run\nRUN chmod +x \/etc\/service\/nginx\/run\n\n# add startup scripts for php7.0-fpm\nADD build\/phpfpm.sh \/etc\/service\/phpfpm\/run\nRUN chmod +x \/etc\/service\/phpfpm\/run\n\n# set WWW public folder\nRUN mkdir -p \/var\/www\/public\nADD build\/index.php \/var\/www\/public\/index.php\n\nRUN chown -R www-data:www-data \/var\/www\nRUN chmod 755 \/var\/www\n\n# set terminal environment\nENV TERM=xterm\n\n# port and settings\nEXPOSE 80 9000\n\n# cleanup apt and lists\nRUN apt-get clean\nRUN apt-get autoclean\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":22,
        "text":"FROM phusion\/baseimage"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":23,
        "end":69,
        "text":"MAINTAINER Thiago Taranto <ttaranto@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":850,
        "end":916,
        "text":"RUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y nginx-full"
      },
      {
        "label":"apt-install-without-version",
        "start":850,
        "end":916,
        "text":"RUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y nginx-full"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1442,
        "end":1462,
        "text":"apt-get install yarn"
      },
      {
        "label":"apt-install-without-version",
        "start":1442,
        "end":1462,
        "text":"apt-get install yarn"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1672,
        "end":1711,
        "text":"ADD build\/setup.sh \/root\/setup\/setup.sh"
      },
      {
        "label":"use-cd-change-dir",
        "start":1751,
        "end":1767,
        "text":"cd \/root\/setup\/;"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1814,
        "end":1901,
        "text":"ADD build\/nginx.conf \/etc\/nginx\/sites-available\/default\\nADD build\/.bashrc \/root\/.bashrc"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2064,
        "end":2105,
        "text":"ADD build\/nginx.sh \/etc\/service\/nginx\/run"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2180,
        "end":2223,
        "text":"ADD build\/phpfpm.sh \/etc\/service\/phpfpm\/run"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2315,
        "end":2360,
        "text":"ADD build\/index.php \/var\/www\/public\/index.php"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"ea4d5fc231b57554c06feed0c75a6cd8ca7796d5.dockerfile",
    "file_content":"# Build your own pdflatex as a service\n#\n# VERSION  0.0.0\nfrom       ubuntu\nmaintainer Nuno Job \"nunojobpinto@gmail.com\"\n\n#\n# update apr\n#\nrun echo \"deb http:\/\/archive.ubuntu.com\/ubuntu precise main universe\" > \/etc\/apt\/sources.list\n\nrun apt-get upgrade\nrun apt-get update\n\n#\n# install latex\n#\nrun apt-get install -y texlive-latex-base texlive-latex-extra curl\n\n#\n# install nodejs 0.10.15\n#\nrun cd \/usr\/local && curl http:\/\/nodejs.org\/dist\/v0.10.15\/node-v0.10.15-linux-x64.tar.gz | tar --strip-components=1 -zxf- && cd\nrun npm -g update npm\nrun npm install -g forever\n\n#\n# install app files\n#\nrun mkdir -p \/opt\/install\/pdflatex\nadd .\/index.js \/opt\/install\/pdflatex\/index.js\nadd .\/package.json \/opt\/install\/pdflatex\/package.json\nrun cd \/opt\/install\/pdflatex && npm install\n\nexpose 5050\n\ncmd forever \/opt\/install\/pdflatex\/index.js\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":58,
        "end":75,
        "text":"from ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":76,
        "end":120,
        "text":"maintainer Nuno Job \"nunojobpinto@gmail.com\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":294,
        "end":360,
        "text":"run apt-get install -y texlive-latex-base texlive-latex-extra curl"
      },
      {
        "label":"apt-install-without-version",
        "start":294,
        "end":360,
        "text":"run apt-get install -y texlive-latex-base texlive-latex-extra curl"
      },
      {
        "label":"use-cd-change-dir",
        "start":391,
        "end":408,
        "text":"run cd \/usr\/local"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":628,
        "end":727,
        "text":"add .\/index.js \/opt\/install\/pdflatex\/index.js\\nadd .\/package.json \/opt\/install\/pdflatex\/package.json"
      },
      {
        "label":"use-cd-change-dir",
        "start":728,
        "end":756,
        "text":"run cd \/opt\/install\/pdflatex"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"fa43342acfd4c4d7f00e3f3990d1fe6f954a85fa.dockerfile",
    "file_content":"# zhihu_spider\n# version 0.0.1\n\nFROM centos\n\nMAINTAINER \"ruoyu.liu\" <lrysjtu@gmail.com>\n\n# install Chinese support\n# RUN yum -y groupinstall chinese-support\n# ENV LANG \"zh_CN.UTF-8\"\n\n# install something common\nRUN yum install -y gcc gcc-c++ git make python-devel postgresql-devel wget vim libffi-devel libxml2-devel libxslt-devel openssl-devel && yum clean all\n\n# update libs\nRUN yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs\nRUN yum -y update; yum clean all; \\\n(cd \/lib\/systemd\/system\/sysinit.target.wants\/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\nrm -f \/lib\/systemd\/system\/multi-user.target.wants\/*;\\\nrm -f \/etc\/systemd\/system\/*.wants\/*;\\\nrm -f \/lib\/systemd\/system\/local-fs.target.wants\/*; \\\nrm -f \/lib\/systemd\/system\/sockets.target.wants\/*udev*; \\\nrm -f \/lib\/systemd\/system\/sockets.target.wants\/*initctl*; \\\nrm -f \/lib\/systemd\/system\/basic.target.wants\/*;\\\nrm -f \/lib\/systemd\/system\/anaconda.target.wants\/*;\n\n# install pip\nRUN wget https:\/\/bootstrap.pypa.io\/get-pip.py;python get-pip.py;rm -f get-pip.py\n\n# install mongodb\nRUN rpm --import https:\/\/www.mongodb.org\/static\/pgp\/server-3.2.asc\nADD mongodb-enterprise.repo \/etc\/yum.repos.d\/mongodb-enterprise.repo \nRUN yum install -y mongodb-enterprise\n# you need map a directory to \/data\/db to start mongod\n\n# install rabbitmq\n# its too slow to download while building\n#RUN wget http:\/\/www.rabbitmq.com\/releases\/erlang\/erlang-18.1-1.el7.centos.x86_64.rpm\n#RUN wget http:\/\/www.rabbitmq.com\/releases\/rabbitmq-server\/v3.6.1\/rabbitmq-server-3.6.1-1.noarch.rpm\nADD erlang-18.1-1.el7.centos.x86_64.rpm \/tmp\/erlang-18.1-1.el7.centos.x86_64.rpm\nADD rabbitmq-server-3.6.1-1.noarch.rpm \/tmp\/rabbitmq-server-3.6.1-1.noarch.rpm\nRUN rpm --import https:\/\/www.rabbitmq.com\/rabbitmq-signing-key-public.asc\nRUN cd \/tmp && yum install -y erlang-18.1-1.el7.centos.x86_64.rpm && yum install -y rabbitmq-server-3.6.1-1.noarch.rpm\n#RUM rm -f erlang-18.1-1.el7.centos.x86_64.rpm\n#RUM rm -f rabbitmq-server-3.6.1-1.noarch.rpm\n\n# install zhihu_spider requirements\nRUN pip install wheel Scrapy pymongo requests celery -i http:\/\/pypi.douban.com\/simple --trusted-host pypi.douban.com\n\nEXPOSE 27017 15672\n\nENV container docker\n\n# for celery worker run as root user\nENV C_FORCE_ROOT true\n\nVOLUME [ \"\/sys\/fs\/cgroup\" ]\n\nCMD [\"\/usr\/sbin\/init\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":32,
        "end":43,
        "text":"FROM centos"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":45,
        "end":86,
        "text":"MAINTAINER \"ruoyu.liu\" <lrysjtu@gmail.com"
      },
      {
        "label":"use-cd-change-dir",
        "start":512,
        "end":557,
        "text":"cd \/lib\/systemd\/system\/sysinit.target.wants\/;"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1180,
        "end":1207,
        "text":"ADD mongodb-enterprise.repo"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1592,
        "end":1751,
        "text":"ADD erlang-18.1-1.el7.centos.x86_64.rpm \/tmp\/erlang-18.1-1.el7.centos.x86_64.rpm\\nADD rabbitmq-server-3.6.1-1.noarch.rpm \/tmp\/rabbitmq-server-3.6.1-1.noarch.rpm"
      },
      {
        "label":"use-cd-change-dir",
        "start":1830,
        "end":1837,
        "text":"cd \/tmp"
      },
      {
        "label":"pip-install-without-version",
        "start":2075,
        "end":2191,
        "text":"RUN pip install wheel Scrapy pymongo requests celery -i http:\/\/pypi.douban.com\/simple --trusted-host pypi.douban.com"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"yum-install-without-version",
        "start":1250,
        "end":1287,
        "text":"RUN yum install -y mongodb-enterprise"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"1263e1d8c01a70d366b24c653c083d897da3c16b.dockerfile",
    "file_content":"# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\n# use basic syntax for now\nFROM gcr.io\/kaggle-images\/python:latest\n\nUSER root\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV NB_USER jovyan\nENV NB_UID 1000\nENV HOME \/home\/$NB_USER\n# We prefer to have a global conda install\n# to minimize the amount of content in $HOME\nENV CONDA_DIR=\/opt\/conda\nENV PATH $CONDA_DIR\/bin:$PATH\n\n# Use bash instead of sh\nSHELL [\"\/bin\/bash\", \"-c\"]\n\n# add https support \nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n    apt-transport-https locales lsb-release wget\n\nRUN echo \"en_US.UTF-8 UTF-8\" > \/etc\/locale.gen && \\\n    locale-gen\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Create jovyan user with UID=1000 and in the 'users' group\n# but allow for non-initial launches of the notebook to have\n# $HOME provided by the contents of a PV\nRUN useradd -M -s \/bin\/bash -N -u $NB_UID $NB_USER && \\\n    chown -R ${NB_USER}:users \/usr\/local\/bin && \\\n    mkdir -p $HOME\n\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb https:\/\/packages.cloud.google.com\/apt $CLOUD_SDK_REPO main\" > \/etc\/apt\/sources.list.d\/google-cloud-sdk.list && \\\n    curl https:\/\/packages.cloud.google.com\/apt\/doc\/apt-key.gpg | apt-key add - && \\\n    apt-get update && \\\n    apt-get install -y google-cloud-sdk kubectl && \\\n    # we just really need jupyterhub-singleuser for our KF scripts\n    pip install jupyterhub==0.9.6 \\\n    # Kaggle image doesn't include their own API package (yet)\n    kaggle\n\n# Install Tini - used as entrypoint for container\nRUN cd \/tmp && \\\n    wget --quiet https:\/\/github.com\/krallin\/tini\/releases\/download\/v0.18.0\/tini && \\\n    echo \"12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855 *tini\" | sha256sum -c - && \\\n    mv tini \/usr\/local\/bin\/tini && \\\n    chmod +x \/usr\/local\/bin\/tini\n\nRUN chown -R ${NB_USER}:users $HOME\n\nENV GITHUB_REF https:\/\/raw.githubusercontent.com\/kubeflow\/kubeflow\/master\/components\/tensorflow-notebook-image\n\nADD --chown=jovyan:users $GITHUB_REF\/jupyter_notebook_config.py \/tmp\n\n# Wipe $HOME for PVC detection later\nWORKDIR $HOME\nRUN rm -fr $(ls -A $HOME)\n\n# Get init scripts from kubeflow\nADD --chown=jovyan:users \\\n    $GITHUB_REF\/start-singleuser.sh \\\n    $GITHUB_REF\/start-notebook.sh \\\n    $GITHUB_REF\/start.sh \\\n    $GITHUB_REF\/pvc-check.sh \\\n    \/usr\/local\/bin\/\n\nRUN chmod a+rx \/usr\/local\/bin\/*\n\n# Configure container startup\nEXPOSE 8888\nENTRYPOINT [\"tini\", \"--\"]\nCMD [\"start-notebook.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":129,
        "end":168,
        "text":"FROM gcr.io\/kaggle-images\/python:latest"
      },
      {
        "label":"root-privilege-user",
        "start":170,
        "end":179,
        "text":"USER root"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1340,
        "end":1383,
        "text":"apt-get install -y google-cloud-sdk kubectl"
      },
      {
        "label":"apt-install-without-version",
        "start":1340,
        "end":1383,
        "text":"apt-get install -y google-cloud-sdk kubectl"
      },
      {
        "label":"use-cd-change-dir",
        "start":1617,
        "end":1628,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2043,
        "end":2111,
        "text":"ADD --chown=jovyan:users $GITHUB_REF\/jupyter_notebook_config.py \/tmp"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2224,
        "end":2402,
        "text":"ADD --chown=jovyan:users \\\\n$GITHUB_REF\/start-singleuser.sh \\\\n$GITHUB_REF\/start-notebook.sh \\\\n$GITHUB_REF\/start.sh \\\\n$GITHUB_REF\/pvc-check.sh \\\\n\/usr\/local\/bin\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"44367354887ae5177e1c2a0343279f1d092f3345.dockerfile",
    "file_content":"# Copyright 2017-2019 EPAM Systems, Inc. (https:\/\/www.epam.com\/)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This docker shall be run using --privileged option\n\nARG BASE_IMAGE=rocker\/rstudio:3.5.1\nFROM ${BASE_IMAGE}\n\nENV ROOT TRUE\n\n# Install prerequisites\nRUN apt-get update\n\n# Certain rocker - based image have a missing \/var\/lib\/dpkg\/available\n# This causes apt install to fail. E.g. bioconductor: https:\/\/github.com\/Bioconductor\/bioc_docker\/blob\/5357c40c7273b5eb120e2af012fbb4c7fdc8b61b\/out\/release_base\/Dockerfile#L14\n# Running dselect update will restore the missing files\nRUN if [ ! -f \/var\/lib\/dpkg\/available ]; then \\\n        apt-get install -y dselect && \\\n        dselect update; \\\n    fi\n\nRUN  apt-get install -y automake \\\n                        autotools-dev \\\n                        fuse \\\n                        g++ \\\n                        git \\\n                        libcurl4-gnutls-dev \\\n                        libfuse-dev \\\n                        libssl-dev \\\n                        libxml2-dev \\\n                        make \\\n                        default-jdk \\\n                        apt-utils \\\n                        cmake \\\n                        pkg-config \\\n                        fuse \\\n                        nginx \\\n                        curl \\\n                        zlib1g-dev \\\n                        libncurses5-dev \\\n                        gettext-base \\\n                        libjsoncpp-dev && \\\n    curl https:\/\/bootstrap.pypa.io\/get-pip.py | python -\n    # Install gitfs\nRUN apt-get install -y libssl1.0-dev \\\n                        libffi-dev \\\n                        python-dev\n\nRUN  wget -q https:\/\/github.com\/libgit2\/libgit2\/archive\/v0.24.1.tar.gz && \\\n        tar xzf v0.24.1.tar.gz && \\\n        cd libgit2-0.24.1\/ && \\\n        cmake . && \\\n        make && make install && cd ..\n\nRUN ldconfig\nRUN pip install 'pygit2==0.24.1'\n\nRUN wget -q https:\/\/codeload.github.com\/PressLabs\/gitfs\/zip\/0.4.5.1 && \\\n        unzip 0.4.5.1 && \\\n        cd gitfs-0.4.5.1 && \\\n        python setup.py install && cd ..\nRUN mkdir -p \/var\/lib\/gitfs\n\n# Configure nginx\nRUN     mkdir -p \/etc\/nginx\/sites-enabled\/\nADD     auto-fill-form-template.conf \/auto-fill-form-template.conf\nADD     nginx.conf \/etc\/nginx\/nginx.conf\nADD     start.sh \/start.sh\nRUN     chmod 777 \/start.sh\n\n# Remove mran that is hardcoded in a base image\nRUN sed -i '\/mran.microsoft\/d' \/usr\/local\/lib\/R\/etc\/Rprofile.site\n\nRUN export ADD=shiny && \\\n    bash \/etc\/cont-init.d\/add && \\\n    rm -rf \/srv\/shiny-server\/* && \\\n    chmod g+rwx \/srv -R\n\nRUN rm -f \/etc\/cont-init.d\/userconf\n\nADD    post_commit.sh \/root\/post_commit.sh\nRUN    chmod +x \/root\/post_commit.sh\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":1204,
        "end":2146,
        "text":"RUN apt-get install -y automake \\\\nautotools-dev \\\\nfuse \\\\ng++ \\\\ngit \\\\nlibcurl4-gnutls-dev \\\\nlibfuse-dev \\\\nlibssl-dev \\\\nlibxml2-dev \\\\nmake \\\\ndefault-jdk \\\\napt-utils \\\\ncmake \\\\npkg-config \\\\nfuse \\\\nnginx \\\\ncurl \\\\nzlib1g-dev \\\\nlibncurses5-dev \\\\ngettext-base \\\\nlibjsoncpp-dev && \\\\ncurl https:\/\/bootstrap.pypa.io\/get-pip.py | python -\\n# Install gitfs\\nRUN apt-get install -y libssl1.0-dev \\\\nlibffi-dev \\\\npython-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":1204,
        "end":2146,
        "text":"RUN apt-get install -y automake \\\\nautotools-dev \\\\nfuse \\\\ng++ \\\\ngit \\\\nlibcurl4-gnutls-dev \\\\nlibfuse-dev \\\\nlibssl-dev \\\\nlibxml2-dev \\\\nmake \\\\ndefault-jdk \\\\napt-utils \\\\ncmake \\\\npkg-config \\\\nfuse \\\\nnginx \\\\ncurl \\\\nzlib1g-dev \\\\nlibncurses5-dev \\\\ngettext-base \\\\nlibjsoncpp-dev && \\\\ncurl https:\/\/bootstrap.pypa.io\/get-pip.py | python -\\n# Install gitfs\\nRUN apt-get install -y libssl1.0-dev \\\\nlibffi-dev \\\\npython-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":2268,
        "end":2285,
        "text":"cd libgit2-0.24.1"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2660,
        "end":2794,
        "text":"ADD auto-fill-form-template.conf \/auto-fill-form-template.conf\\nADD nginx.conf \/etc\/nginx\/nginx.conf\\nADD start.sh \/start.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3098,
        "end":3137,
        "text":"ADD post_commit.sh \/root\/post_commit"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":2507,
        "end":2526,
        "text":"cd gitfs-0.4.5.1 &&"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"44d17261c47a9f7f7770e7cd87597bb4dccd7d61.dockerfile",
    "file_content":"FROM ppc64le\/r-base\nMAINTAINER \"Vibhuti Sawant <Vibhuti.Sawant@ibm.com>\"\n\nRUN apt-get update \\\n      && apt-get install git -y \\\n      && git clone https:\/\/github.com\/hadley\/gtable.git \\\n      && cd gtable && git checkout v0.2.0 \\\n      && R -e 'install.packages(\"knitr\",dependencies= TRUE,repos=\"http:\/\/cran.rstudio.com\/\")' \\\n      && R CMD check gtable --no-manual \\\n      && cd .. && rm -rf gtable \\\n      && apt-get purge --auto-remove git -y\n\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM ppc64le\/r-base"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":70,
        "text":"MAINTAINER \"Vibhuti Sawant <Vibhuti.Sawant@ibm.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":104,
        "end":126,
        "text":"apt-get install git -y"
      },
      {
        "label":"apt-install-without-version",
        "start":104,
        "end":126,
        "text":"apt-get install git -y"
      },
      {
        "label":"use-cd-change-dir",
        "start":196,
        "end":205,
        "text":"cd gtable"
      },
      {
        "label":"use-cd-change-dir",
        "start":378,
        "end":383,
        "text":"cd .."
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"44da1aa51abdfb63f8ece50753c7d82fa0c3eec4.dockerfile",
    "file_content":"FROM python:3\nMAINTAINER \"Jay Joshi <joshija@us.ibm.com>\"\n\nRUN apt-get update -y \\\n  && apt-get install git -y \\\n  && pip install param nose \\\n  && git clone https:\/\/github.com\/ioam\/lancet.git \\\n  && cd lancet \\\n  && git submodule update --init \\\n  && python setup.py install \\\n  && nosetests --with-doctest \n\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":14,
        "end":57,
        "text":"MAINTAINER \"Jay Joshi <joshija@us.ibm.com>\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":88,
        "end":110,
        "text":"apt-get install git -y"
      },
      {
        "label":"apt-install-without-version",
        "start":88,
        "end":110,
        "text":"apt-get install git -y"
      },
      {
        "label":"use-cd-change-dir",
        "start":200,
        "end":209,
        "text":"cd lancet"
      },
      {
        "label":"pip-install-without-version",
        "start":118,
        "end":140,
        "text":"pip install param nose"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"46222d4367a36fe14d082f8b8c25fd4fb478c87f.dockerfile",
    "file_content":"FROM debian:jessie  \nMAINTAINER Jordi Arcas \"arkkanoid@gmail.com\"  \nRUN apt-get update && \\  \napt-get install -y \\  \npython-pip \\  \npython-dev build-essential \\  \n&& \\  \npip install boto3 pymongo\\  \n&& \\  \nrm -rf \/var\/lib\/apt\/lists\/*  \n  \n  \nADD bin\/route53-presence \/bin\/route53-presence  \n  \nENTRYPOINT [\"\/bin\/route53-presence\"]  \nCMD [\"-h\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":65,
        "text":"MAINTAINER Jordi Arcas \"arkkanoid@gmail.com\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":94,
        "end":160,
        "text":"apt-get install -y \\\\npython-pip \\\\npython-dev build-essential \\"
      },
      {
        "label":"apt-install-without-version",
        "start":94,
        "end":160,
        "text":"apt-get install -y \\\\npython-pip \\\\npython-dev build-essential \\"
      },
      {
        "label":"pip-install-without-version",
        "start":170,
        "end":196,
        "text":"pip install boto3 pymongo\\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":242,
        "end":288,
        "text":"ADD bin\/route53-presence \/bin\/route53-presence"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"263617b487cc08d26425c3a3b2411f44e15edcc1.dockerfile",
    "file_content":"# Nginx docker image.\n#\n# VERSION 0.0.1\n\nFROM debian:jessie\n\nMAINTAINER Nicolas Carlier <https:\/\/github.com\/ncarlier>\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install Nginx.\nRUN apt-get update && apt-get install -y nginx wget supervisor openjdk-7-jre-headless && apt-get clean\n\n# Prevent to start nginx as a deamon\nRUN echo \"daemon off;\" >> \/etc\/nginx\/nginx.conf\n\n# Fix for long server names\nRUN sed -i 's\/# server_names_hash_bucket\/server_names_hash_bucket\/g' \/etc\/nginx\/nginx.conf\nADD nginx.tmpl \/etc\/nginx\/nginx.tmpl\n\n# Install Logstash\nADD https:\/\/download.elasticsearch.org\/logstash\/logstash\/logstash-1.4.2.tar.gz \/tmp\/logstash.tgz\nRUN tar -xvzf \/tmp\/logstash.tgz -C \/opt && \\\n    ln -s \/opt\/logstash* \/opt\/logstash && \\\n    rm \/tmp\/logstash.tgz && \\\n    mkdir -p \/etc\/logstash\/conf.d\nADD logstash.conf \/etc\/logstash\/conf.d\/logstash.conf\nADD nginx.pattern \/opt\/logstash\/patterns\/nginx\n\n# Setup supervisord\nADD supervisord.conf \/etc\/supervisor\/conf.d\/docker.conf\n\n# Install docke-gen\nENV DOCKER_HOST unix:\/\/\/tmp\/docker.sock\nENV DOCKERGEN_URL https:\/\/github.com\/jwilder\/docker-gen\/releases\/download\/0.3.3\/docker-gen-linux-amd64-0.3.3.tar.gz\nRUN (cd \/tmp && wget $DOCKERGEN_URL -O pkg.tgz && tar xvzf pkg.tgz && mv docker-gen \/usr\/local\/bin && rm -rf \/tmp\/*)\n\nEXPOSE 80\nEXPOSE 443\n\nENTRYPOINT  [\"\/usr\/bin\/supervisord\"]\n\nCMD [\"-n\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":61,
        "end":117,
        "text":"MAINTAINER Nicolas Carlier <https:\/\/github.com\/ncarlier>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":194,
        "end":257,
        "text":"apt-get install -y nginx wget supervisor openjdk-7-jre-headless"
      },
      {
        "label":"apt-install-without-version",
        "start":194,
        "end":257,
        "text":"apt-get install -y nginx wget supervisor openjdk-7-jre-headless"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":481,
        "end":517,
        "text":"ADD nginx.tmpl \/etc\/nginx\/nginx.tmpl"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":538,
        "end":634,
        "text":"ADD https:\/\/download.elasticsearch.org\/logstash\/logstash\/logstash-1.4.2.tar.gz \/tmp\/logstash.tgz"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":788,
        "end":887,
        "text":"ADD logstash.conf \/etc\/logstash\/conf.d\/logstash.conf\\nADD nginx.pattern \/opt\/logstash\/patterns\/nginx"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":909,
        "end":964,
        "text":"ADD supervisord.conf \/etc\/supervisor\/conf.d\/docker.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":1147,
        "end":1157,
        "text":"cd \/tmp &&"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"0de6c7ac2edfdb9f93920369e0b8d6be9a332452.dockerfile",
    "file_content":"# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io\/oss-fuzz-base\/base-builder\nMAINTAINER esr@thyrsus.com\nRUN apt-get update && apt-get install -y make autoconf automake libtool wget zlib1g-dev\nRUN apt-get update && \\\napt-get install -y  libtool ninja-build cmake\nRUN git clone --depth=1 https:\/\/git.code.sf.net\/p\/giflib\/code $SRC\/giflib-code\nRUN git clone --depth 1 https:\/\/github.com\/google\/libprotobuf-mutator.git\nRUN (mkdir LPM && cd LPM && cmake ..\/libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release && ninja)\nCOPY *.c *.options build.sh *.h *.cc *.cpp *.proto $SRC\/\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":660,
        "end":698,
        "text":"FROM gcr.io\/oss-fuzz-base\/base-builder"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":699,
        "end":725,
        "text":"MAINTAINER esr@thyrsus.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":838,
        "end":883,
        "text":"apt-get install -y libtool ninja-build cmake"
      },
      {
        "label":"apt-install-without-version",
        "start":838,
        "end":883,
        "text":"apt-get install -y libtool ninja-build cmake"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":748,
        "end":813,
        "text":"apt-get install -y make autoconf automake libtool wget zlib1g-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":748,
        "end":813,
        "text":"apt-get install -y make autoconf automake libtool wget zlib1g-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":1055,
        "end":1061,
        "text":"cd LPM"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"11a9b02a9727693132c8ffde8901bdd8580a483f.dockerfile",
    "file_content":"FROM coinvault\/client-base:latest\n\nMAINTAINER Dan Gershony - CoinVault <dan@coinvault.io>\n\n# dependencies required to run the daemon\nRUN apt-get update \\\n\t&& apt-get install -y git \\\n\t&& apt-get install -y libssl-dev libdb-dev libdb++-dev libboost-all-dev libqrencode-dev \\\n\t&& apt-get install -y qt-sdk qt4-default \\\n\t&& apt-get install -y libcurl3-dev \\\n\t&& apt-get install -y libzip-dev\n\n# get\nRUN apt-get update \\\n    && cd ~ \\\n\t&& git clone https:\/\/github.com\/goldblockscoin\/goldblocks  \n\n# build\nRUN\tcd ~\/goldblocks\/src \\\n\t&& mkdir -p obj \\\n\t&& chmod 755 leveldb\/build_detect_platform \\\n\t&& make -f makefile.unix USE_UPNP=- \n\n# install\nRUN cd ~\/goldblocks\/src \\\n    && strip goldblocksd \\\n\t&& install -m 755 goldblocksd \/usr\/local\/bin  \n\n# clean\nRUN apt-get purge -y --auto-remove git \\\n  && rm -r ~\/goldblocks",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":33,
        "text":"FROM coinvault\/client-base:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":35,
        "end":89,
        "text":"MAINTAINER Dan Gershony - CoinVault <dan@coinvault.io>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":155,
        "end":389,
        "text":"&& apt-get install -y git \\\\n&& apt-get install -y libssl-dev libdb-dev libdb++-dev libboost-all-dev libqrencode-dev \\\\n&& apt-get install -y qt-sdk qt4-default \\\\n&& apt-get install -y libcurl3-dev \\\\n&& apt-get install -y libzip-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":155,
        "end":389,
        "text":"&& apt-get install -y git \\\\n&& apt-get install -y libssl-dev libdb-dev libdb++-dev libboost-all-dev libqrencode-dev \\\\n&& apt-get install -y qt-sdk qt4-default \\\\n&& apt-get install -y libcurl3-dev \\\\n&& apt-get install -y libzip-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":422,
        "end":431,
        "text":"&& cd ~ \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":642,
        "end":661,
        "text":"RUN cd ~\/goldblocks"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"00a1ad8e18e545851bb28ef23e49f69e6e9f75b9.dockerfile",
    "file_content":"FROM ubuntu:latest\nMAINTAINER John Fink <john.fink@gmail.com>\nRUN apt-get update # Fri Oct 24 13:09:23 EDT 2014\nRUN apt-get -y upgrade\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y install mysql-client mysql-server apache2 libapache2-mod-php5 pwgen python-setuptools vim-tiny php5-mysql  php5-ldap\nRUN easy_install supervisor\nADD .\/scripts\/start.sh \/start.sh\nADD .\/scripts\/foreground.sh \/etc\/apache2\/foreground.sh\nADD .\/configs\/supervisord.conf \/etc\/supervisord.conf\nADD .\/configs\/000-default.conf \/etc\/apache2\/sites-available\/000-default.conf\nRUN rm -rf \/var\/www\/\nADD https:\/\/wordpress.org\/latest.tar.gz \/wordpress.tar.gz\nRUN tar xvzf \/wordpress.tar.gz \nRUN mv \/wordpress \/var\/www\/\nRUN chown -R www-data:www-data \/var\/www\/\nRUN chmod 755 \/start.sh\nRUN chmod 755 \/etc\/apache2\/foreground.sh\nRUN mkdir \/var\/log\/supervisor\/\nEXPOSE 80\nCMD [\"\/bin\/bash\", \"\/start.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":61,
        "text":"MAINTAINER John Fink <john.fink@gmail.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":326,
        "end":543,
        "text":"ADD .\/scripts\/start.sh \/start.sh\\nADD .\/scripts\/foreground.sh \/etc\/apache2\/foreground.sh\\nADD .\/configs\/supervisord.conf \/etc\/supervisord.conf\\nADD .\/configs\/000-default.conf \/etc\/apache2\/sites-available\/000-default.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":565,
        "end":622,
        "text":"ADD https:\/\/wordpress.org\/latest.tar.gz \/wordpress.tar.gz"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":170,
        "end":297,
        "text":"apt-get -y install mysql-client mysql-server apache2 libapache2-mod-php5 pwgen python-setuptools vim-tiny php5-mysql php5-ldap"
      },
      {
        "label":"apt-install-without-version",
        "start":170,
        "end":297,
        "text":"apt-get -y install mysql-client mysql-server apache2 libapache2-mod-php5 pwgen python-setuptools vim-tiny php5-mysql php5-ldap"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"06f8a64aa8b96444345c5b090d789071740c4245.dockerfile",
    "file_content":"FROM ubuntu:latest\n\nMAINTAINER mrmrcoleman\/pythonjs\n\nRUN apt-get update\n\nRUN apt-get install -y git\nRUN apt-get install -y vim\nRUN apt-get install -y python-pip\nRUN apt-get install -y python2.7-dev\nRUN apt-get install -y apache2\nRUN apt-get install libapache2-mod-wsgi\nRUN sed -i 's\/80\/5000\/' \/etc\/apache2\/ports.conf\n\nADD requirements.txt \/tmp\/requirements.txt\nRUN pip install -r \/tmp\/requirements.txt\n\nRUN mkdir \/var\/www\/public_html\nADD flaskapp.wsgi \/var\/www\/flaskapp\/flaskapp.wsgi\nADD flaskapp.cfg \/etc\/apache2\/sites-available\/flaskapp.conf\nRUN a2ensite flaskapp.conf\n\nEXPOSE 5000\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":51,
        "text":"MAINTAINER mrmrcoleman\/pythonjs"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":73,
        "end":268,
        "text":"RUN apt-get install -y git\\nRUN apt-get install -y vim\\nRUN apt-get install -y python-pip\\nRUN apt-get install -y python2.7-dev\\nRUN apt-get install -y apache2\\nRUN apt-get install libapache2-mod-wsgi"
      },
      {
        "label":"apt-install-without-version",
        "start":73,
        "end":268,
        "text":"RUN apt-get install -y git\\nRUN apt-get install -y vim\\nRUN apt-get install -y python-pip\\nRUN apt-get install -y python2.7-dev\\nRUN apt-get install -y apache2\\nRUN apt-get install libapache2-mod-wsgi"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":318,
        "end":360,
        "text":"ADD requirements.txt \/tmp\/requirements.txt"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":434,
        "end":543,
        "text":"ADD flaskapp.wsgi \/var\/www\/flaskapp\/flaskapp.wsgi\\nADD flaskapp.cfg \/etc\/apache2\/sites-available\/flaskapp.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"35e1c743a1a8fafc72db4671c7bd20eeef51d434.dockerfile",
    "file_content":"# Set the base image to Ubuntu\nFROM ubuntu:14.04\n\n# Install Node.js and other dependencies\nRUN apt-get update && \\\n    apt-get -y install curl && \\\n    curl -sL https:\/\/deb.nodesource.com\/setup | sudo bash - && \\\n    apt-get -y install python build-essential nodejs\n\n# Install nodemon\nRUN npm install -g nodemon\n\n# Provides cached layer for node_modules\nADD package.json \/tmp\/package.json\nRUN cd \/tmp && npm install\nRUN mkdir -p \/src && cp -a \/tmp\/node_modules \/src\/\n\n# Define working directory\nWORKDIR \/src\nADD . \/src\n\n# Expose port\nEXPOSE  8080\n\n# Run app using nodemon\nCMD [\"nodemon\", \"\/src\/index.js\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":119,
        "end":142,
        "text":"apt-get -y install curl"
      },
      {
        "label":"apt-install-without-version",
        "start":119,
        "end":142,
        "text":"apt-get -y install curl"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":217,
        "end":265,
        "text":"apt-get -y install python build-essential nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":217,
        "end":265,
        "text":"apt-get -y install python build-essential nodejs"
      },
      {
        "label":"use-sudo-run",
        "start":152,
        "end":207,
        "text":"curl -sL https:\/\/deb.nodesource.com\/setup | sudo bash -"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":354,
        "end":388,
        "text":"ADD package.json \/tmp\/package.json"
      },
      {
        "label":"use-cd-change-dir",
        "start":389,
        "end":400,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":508,
        "end":518,
        "text":"ADD . \/src"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"c2b37e88c560c8c56147e5fdf2bf66d7d2f1df34.dockerfile",
    "file_content":"FROM makuk66\/docker-solr:4.10.4  \nMAINTAINER Alban Seurat \"alban.seurat@me.com\"  \nUSER root  \n  \nrun apt-get -y update  \nrun apt-get -y install python-pip supervisor  \nrun pip install mongo-connector  \n  \nadd .\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf  \nadd .\/solr.conf \/etc\/supervisor\/conf.d\/solr.conf  \nadd .\/start-solr-node.sh \/opt\/solr\/bin\/start-solr-node.sh  \nadd .\/mongo-connector.sh \/opt\/solr\/bin\/mongo-connector.sh  \n  \nrun chmod a+x \/opt\/solr\/bin\/start-solr-node.sh  \nrun chmod a+x \/opt\/solr\/bin\/mongo-connector.sh  \n  \nCMD \"\/usr\/bin\/supervisord\"  \n  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":34,
        "end":79,
        "text":"MAINTAINER Alban Seurat \"alban.seurat@me.com\""
      },
      {
        "label":"root-privilege-user",
        "start":82,
        "end":91,
        "text":"USER root"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":205,
        "end":227,
        "text":"add .\/supervisord.conf"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":121,
        "end":165,
        "text":"run apt-get -y install python-pip supervisor"
      },
      {
        "label":"apt-install-without-version",
        "start":121,
        "end":165,
        "text":"run apt-get -y install python-pip supervisor"
      },
      {
        "label":"pip-install-without-version",
        "start":168,
        "end":199,
        "text":"run pip install mongo-connector"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"c3577927c3d4416c7786d1edd34b77d74110924f.dockerfile",
    "file_content":"## -*- docker-image-name: \"homme\/openstreetmap-tiles:latest\" -*-\n\n##\n# The OpenStreetMap Tile Server\n#\n# This creates an image with containing the OpenStreetMap tile server stack as\n# described at\n# <http:\/\/switch2osm.org\/serving-tiles\/manually-building-a-tile-server-12-04\/>.\n#\n\nFROM phusion\/baseimage:0.9.11\nMAINTAINER Homme Zwaagstra <hrz@geodata.soton.ac.uk>\n\n# Set the locale. This affects the encoding of the Postgresql template\n# databases.\nENV LANG C.UTF-8\nRUN update-locale LANG=C.UTF-8\n\n# Ensure `add-apt-repository` is present\nRUN apt-get update -y\nRUN apt-get install -y software-properties-common python-software-properties\n\nRUN apt-get install -y libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-python-dev libboost-regex-dev libboost-system-dev libboost-thread-dev\n\n# Install remaining dependencies\nRUN apt-get install -y subversion git-core tar unzip wget bzip2 build-essential autoconf libtool libxml2-dev libgeos-dev libpq-dev libbz2-dev munin-node munin libprotobuf-c0-dev protobuf-c-compiler libfreetype6-dev libpng12-dev libtiff4-dev libicu-dev libgdal-dev libcairo-dev libcairomm-1.0-dev apache2 apache2-dev libagg-dev liblua5.2-dev ttf-unifont\n\nRUN apt-get install -y autoconf apache2-dev libtool libxml2-dev libbz2-dev libgeos-dev libgeos++-dev libproj-dev gdal-bin libgdal1-dev mapnik-utils python-mapnik libmapnik-dev\n\n# Install postgresql and postgis\nRUN apt-get install -y postgresql-9.3-postgis-2.1 postgresql-contrib postgresql-server-dev-9.3\n\n# Install osm2pgsql\nRUN cd \/tmp && git clone git:\/\/github.com\/openstreetmap\/osm2pgsql.git\nRUN cd \/tmp\/osm2pgsql && \\\n    .\/autogen.sh && \\\n    .\/configure && \\\n    make && make install\n\n# Install the Mapnik library\nRUN cd \/tmp && git clone git:\/\/github.com\/mapnik\/mapnik\nRUN cd \/tmp\/mapnik && \\\n    git checkout 2.2.x && \\\n    python scons\/scons.py configure INPUT_PLUGINS=all OPTIMIZATION=3 SYSTEM_FONTS=\/usr\/share\/fonts\/truetype\/ && \\\n    python scons\/scons.py && \\\n    python scons\/scons.py install && \\\n    ldconfig\n\n# Verify that Mapnik has been installed correctly\nRUN python -c 'import mapnik'\n\n# Install mod_tile and renderd\nRUN cd \/tmp && git clone git:\/\/github.com\/openstreetmap\/mod_tile.git\nRUN cd \/tmp\/mod_tile && \\\n    .\/autogen.sh && \\\n    .\/configure && \\\n    make && \\\n    make install && \\\n    make install-mod_tile && \\\n    ldconfig\n\n# Install the Mapnik stylesheet\nRUN cd \/usr\/local\/src && svn co http:\/\/svn.openstreetmap.org\/applications\/rendering\/mapnik mapnik-style\n\n# Install the coastline data\nRUN cd \/usr\/local\/src\/mapnik-style && .\/get-coastlines.sh \/usr\/local\/share\n\n# Configure mapnik style-sheets\nRUN cd \/usr\/local\/src\/mapnik-style\/inc && cp fontset-settings.xml.inc.template fontset-settings.xml.inc\nADD datasource-settings.sed \/tmp\/\nRUN cd \/usr\/local\/src\/mapnik-style\/inc && sed --file \/tmp\/datasource-settings.sed  datasource-settings.xml.inc.template > datasource-settings.xml.inc\nADD settings.sed \/tmp\/\nRUN cd \/usr\/local\/src\/mapnik-style\/inc && sed --file \/tmp\/settings.sed  settings.xml.inc.template > settings.xml.inc\n\n# Configure renderd\nADD renderd.conf.sed \/tmp\/\nRUN cd \/usr\/local\/etc && sed --file \/tmp\/renderd.conf.sed --in-place renderd.conf\n\n# Create the files required for the mod_tile system to run\nRUN mkdir \/var\/run\/renderd && chown www-data: \/var\/run\/renderd\nRUN mkdir \/var\/lib\/mod_tile && chown www-data \/var\/lib\/mod_tile\n\n# Configure mod_tile\nADD mod_tile.load \/etc\/apache2\/mods-available\/\nADD mod_tile.conf \/etc\/apache2\/mods-available\/\nRUN a2enmod mod_tile\n\n# Ensure the webserver user can connect to the gis database\nRUN sed -i -e 's\/local   all             all                                     peer\/local gis www-data peer\/' \/etc\/postgresql\/9.3\/main\/pg_hba.conf\n\n# Tune postgresql\nADD postgresql.conf.sed \/tmp\/\nRUN sed --file \/tmp\/postgresql.conf.sed --in-place \/etc\/postgresql\/9.3\/main\/postgresql.conf\n\n# Define the application logging logic\nADD syslog-ng.conf \/etc\/syslog-ng\/conf.d\/local.conf\nRUN rm -rf \/var\/log\/postgresql\n\n# Create a `postgresql` `runit` service\nADD postgresql \/etc\/sv\/postgresql\nRUN update-service --add \/etc\/sv\/postgresql\n\n# Create an `apache2` `runit` service\nADD apache2 \/etc\/sv\/apache2\nRUN update-service --add \/etc\/sv\/apache2\n\n# Create a `renderd` `runit` service\nADD renderd \/etc\/sv\/renderd\nRUN update-service --add \/etc\/sv\/renderd\n\n# Clean up APT when done\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Expose the webserver and database ports\nEXPOSE 80 5432\n\n# We need the volume for importing data from\nVOLUME [\"\/data\"]\n\n# Set the osm2pgsql import cache size in MB. Used in `run import`.\nENV OSM_IMPORT_CACHE 800\n\n# Add the README\nADD README.md \/usr\/local\/share\/doc\/\n\n# Add the help file\nRUN mkdir -p \/usr\/local\/share\/doc\/run\nADD help.txt \/usr\/local\/share\/doc\/run\/help.txt\n\n# Add the entrypoint\nADD run.sh \/usr\/local\/sbin\/run\nENTRYPOINT [\"\/sbin\/my_init\", \"--\", \"\/usr\/local\/sbin\/run\"]\n\n# Default to showing the usage text\nCMD [\"help\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":310,
        "end":362,
        "text":"MAINTAINER Homme Zwaagstra <hrz@geodata.soton.ac.uk>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":560,
        "end":636,
        "text":"RUN apt-get install -y software-properties-common python-software-properties"
      },
      {
        "label":"apt-install-without-version",
        "start":560,
        "end":636,
        "text":"RUN apt-get install -y software-properties-common python-software-properties"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":638,
        "end":805,
        "text":"RUN apt-get install -y libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-python-dev libboost-regex-dev libboost-system-dev libboost-thread-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":638,
        "end":805,
        "text":"RUN apt-get install -y libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-python-dev libboost-regex-dev libboost-system-dev libboost-thread-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":840,
        "end":1192,
        "text":"RUN apt-get install -y subversion git-core tar unzip wget bzip2 build-essential autoconf libtool libxml2-dev libgeos-dev libpq-dev libbz2-dev munin-node munin libprotobuf-c0-dev protobuf-c-compiler libfreetype6-dev libpng12-dev libtiff4-dev libicu-dev libgdal-dev libcairo-dev libcairomm-1.0-dev apache2 apache2-dev libagg-dev liblua5.2-dev ttf-unifont"
      },
      {
        "label":"apt-install-without-version",
        "start":840,
        "end":1192,
        "text":"RUN apt-get install -y subversion git-core tar unzip wget bzip2 build-essential autoconf libtool libxml2-dev libgeos-dev libpq-dev libbz2-dev munin-node munin libprotobuf-c0-dev protobuf-c-compiler libfreetype6-dev libpng12-dev libtiff4-dev libicu-dev libgdal-dev libcairo-dev libcairomm-1.0-dev apache2 apache2-dev libagg-dev liblua5.2-dev ttf-unifont"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1194,
        "end":1369,
        "text":"RUN apt-get install -y autoconf apache2-dev libtool libxml2-dev libbz2-dev libgeos-dev libgeos++-dev libproj-dev gdal-bin libgdal1-dev mapnik-utils python-mapnik libmapnik-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":1194,
        "end":1369,
        "text":"RUN apt-get install -y autoconf apache2-dev libtool libxml2-dev libbz2-dev libgeos-dev libgeos++-dev libproj-dev gdal-bin libgdal1-dev mapnik-utils python-mapnik libmapnik-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1404,
        "end":1498,
        "text":"RUN apt-get install -y postgresql-9.3-postgis-2.1 postgresql-contrib postgresql-server-dev-9.3"
      },
      {
        "label":"apt-install-without-version",
        "start":1404,
        "end":1498,
        "text":"RUN apt-get install -y postgresql-9.3-postgis-2.1 postgresql-contrib postgresql-server-dev-9.3"
      },
      {
        "label":"use-cd-change-dir",
        "start":1520,
        "end":1531,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":1590,
        "end":1611,
        "text":"RUN cd \/tmp\/osm2pgsql"
      },
      {
        "label":"use-cd-change-dir",
        "start":1715,
        "end":1726,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":1771,
        "end":1789,
        "text":"RUN cd \/tmp\/mapnik"
      },
      {
        "label":"use-cd-change-dir",
        "start":2133,
        "end":2144,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":2384,
        "end":2402,
        "text":"RUN cd \/usr\/local\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":2518,
        "end":2546,
        "text":"RUN cd \/usr\/local\/src\/mapnik"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2730,
        "end":2763,
        "text":"ADD datasource-settings.sed \/tmp\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":2626,
        "end":2664,
        "text":"RUN cd \/usr\/local\/src\/mapnik-style\/inc"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2914,
        "end":2936,
        "text":"ADD settings.sed \/tmp\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":2937,
        "end":2978,
        "text":"RUN cd \/usr\/local\/src\/mapnik-style\/inc &&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3075,
        "end":3101,
        "text":"ADD renderd.conf.sed \/tmp\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":3102,
        "end":3120,
        "text":"RUN cd \/usr\/local\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3393,
        "end":3507,
        "text":"ADD mod_tile.load \/etc\/apache2\/mods-available\/\\nADD mod_tile.conf \/etc\/apache2\/mods-available\/\\nRUN a2enmod mod_tile"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3737,
        "end":3766,
        "text":"ADD postgresql.conf.sed \/tmp\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3899,
        "end":3950,
        "text":"ADD syslog-ng.conf \/etc\/syslog-ng\/conf.d\/local.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4023,
        "end":4056,
        "text":"ADD postgresql \/etc\/sv\/postgresql"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4247,
        "end":4274,
        "text":"ADD renderd \/etc\/sv\/renderd"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4140,
        "end":4167,
        "text":"ADD apache2 \/etc\/sv\/apache2"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4736,
        "end":4782,
        "text":"ADD help.txt \/usr\/local\/share\/doc\/run\/help.txt"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":4805,
        "end":4835,
        "text":"ADD run.sh \/usr\/local\/sbin\/run"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"c4b5513cc30bc2d82079eec5a486b2f1194c2f6b.dockerfile",
    "file_content":"# MySQL Server with Apache and phpmyadmin\n#\n# VERSION               0.0.1\n#\n# Docs: \n# - https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-use-haproxy-to-set-up-http-load-balancing-on-an-ubuntu-vps\n#\n\n\nFROM     ubuntu:latest\nMAINTAINER Jonas Colmsjö \"jonas@gizur.com\"\n\nRUN echo \"export HOME=\/root\" >> \/root\/.profile\n\nRUN apt-get update\nRUN apt-get install -y wget nano curl git\n\n#\n# Install supervisord (used to handle processes)\n#\n\nRUN apt-get install -y supervisor\nADD .\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf\n\n\n#\n# Install haproxy and rsyslog\n#\n\nRUN apt-get install -y haproxy rsyslog\n\n# Move default configuration out\nRUN mv \/etc\/haproxy\/haproxy.cfg \/etc\/haproxy\/haproxy.cfg.original\n\n# Add out own configuration\nADD .\/etc-haproxy-haproxy.cfg \/etc\/haproxy\/haproxy.cfg\n\nADD .\/etc-rsyslog.conf \/etc\/rsyslog.conf\nADD .\/etc-rsyslog.d-50-default.conf \/etc\/rsyslog.d\/50-default.conf\n\nRUN rm \/etc\/rsyslog.d\/haproxy.conf\n\n# Create a volume\nRUN mkdir \/volume\nVOLUME [\"\/volume\"]\n\n\n#\n# Start haproxy\n#\n#There are only a few command line options :\n#\n#    -f <configuration file>\n#    -n <high limit for the total number of simultaneous connections>\n#       = 'maxconn' in 'global' section\n#    -N <high limit for the per-listener number of simultaneous connections>\n#       = 'maxconn' in 'listen' or 'default' sections\n#    -d starts in foregreound with debugging mode enabled\n#    -D starts in daemon mode\n#    -q disable messages on output\n#    -V displays messages on output even when -q or 'quiet' are specified.\n#    -c only checks config file and exits with code 0 if no error was found, or\n#       exits with code 1 if a syntax error was found.\n#    -p <pidfile> asks the process to write down each of its children's\n#       pids to this file in daemon mode.\n#    -sf specifies a list of pids to send a FINISH signal to after startup.\n#    -st specifies a list of pids to send a TERMINATE signal to after startup.\n#    -s shows statistics (only if compiled in)\n#    -l shows even more statistics (implies '-s')\n#    -dk disables use of kqueue()\n#    -ds disables use of speculative epoll()\n#    -de disables use of epoll()\n#    -dp disables use of poll()\n#    -db disables background mode (stays in foreground, useful for debugging)\n#    -m <megs> enforces a memory usage limit to a maximum of <megs> megabytes.\n\n\nADD .\/start.sh \/start.sh\n\nEXPOSE 80 443\nCMD [\"\/start.sh\"]",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":208,
        "end":230,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":231,
        "end":273,
        "text":"MAINTAINER Jonas Colmsjö \"jonas@gizur.com\""
      },
      {
        "label":"use-add-instead-of-copy",
        "start":473,
        "end":535,
        "text":"ADD .\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":439,
        "end":472,
        "text":"RUN apt-get install -y supervisor"
      },
      {
        "label":"apt-install-without-version",
        "start":439,
        "end":472,
        "text":"RUN apt-get install -y supervisor"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":741,
        "end":904,
        "text":"ADD .\/etc-haproxy-haproxy.cfg \/etc\/haproxy\/haproxy.cfg\\n\\nADD .\/etc-rsyslog.conf \/etc\/rsyslog.conf\\nADD .\/etc-rsyslog.d-50-default.conf \/etc\/rsyslog.d\/50-default.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2338,
        "end":2362,
        "text":"ADD .\/start.sh \/start.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":342,
        "end":383,
        "text":"RUN apt-get install -y wget nano curl git"
      },
      {
        "label":"apt-install-without-version",
        "start":342,
        "end":383,
        "text":"RUN apt-get install -y wget nano curl git"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"c64b133aa6c9189f445323ac204fbe4dda239965.dockerfile",
    "file_content":"FROM nginx:latest\n\nMAINTAINER Geek Pie Association @ ShnaghaiTech\n\nEXPOSE 80\n\nRUN apt-get update && apt-get install curl -y && apt-get install gnupg -y\n\nRUN curl -sL https:\/\/deb.nodesource.com\/setup_8.x | bash -\nRUN apt-get install -y nodejs\n\nCOPY nginx.conf \/etc\/nginx\/nginx.conf\nCOPY fresh.conf \/etc\/nginx\/sites-enabled\/fresh.conf\n\nRUN mkdir \/logs\nRUN mkdir \/fresh\nCOPY . \/fresh\n\nRUN rm -Rf \/fresh\/dist\n\nRUN cd \/fresh \\\n  && npm install\n\nRUN cd \/fresh \\\n  && npm run build \\\n  && mv dist\/assets\/index.html dist\/ \\\n  && rm -rf node_modules\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":17,
        "text":"FROM nginx:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":65,
        "text":"MAINTAINER Geek Pie Association @ ShnaghaiTech"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":127,
        "end":151,
        "text":"apt-get install gnupg -y"
      },
      {
        "label":"apt-install-without-version",
        "start":127,
        "end":151,
        "text":"apt-get install gnupg -y"
      },
      {
        "label":"use-cd-change-dir",
        "start":406,
        "end":421,
        "text":"RUN cd \/fresh \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":440,
        "end":455,
        "text":"RUN cd \/fresh \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"c752dd806b60e73858dbabb173ff91afab96bb6d.dockerfile",
    "file_content":"FROM ubuntu:latest  \n\nRUN apt-get update && apt-get install -y openjdk-7-jre-headless wget\nRUN wget -q -O - http:\/\/apache.mirrors.pair.com\/zookeeper\/zookeeper-3.4.6\/zookeeper-3.4.6.tar.gz | tar -xzf - -C \/opt \\\n    && mv \/opt\/zookeeper-3.4.6 \/opt\/zookeeper \\\n    && cp \/opt\/zookeeper\/conf\/zoo_sample.cfg \/opt\/zookeeper\/conf\/zoo.cfg \\\n    && mkdir -p \/tmp\/zookeeper\n\nENV JAVA_HOME \/usr\/lib\/jvm\/java-7-openjdk-amd64\n\nRUN apt-get -y install python\nRUN apt-get -y install python-dev\nRUN apt-get -y install gcc\nRUN apt-get -y install make\nRUN cd \/opt\/zookeeper\/src\/c && .\/configure && make && make install\n\nADD workspace \/opt\/workspace\n\nRUN wget https:\/\/bootstrap.pypa.io\/ez_setup.py -O - | python\nRUN cd \/opt\/workspace\/argparse-1.3.0\/ && python setup.py install\nRUN cd \/opt\/workspace\/zkpython-0.4\/ && python setup.py install\nRUN cp \/opt\/workspace\/zk_setup.py \/opt\/\nRUN mkdir \/opt\/share\n\nENV LD_LIBRARY_PATH \/usr\/local\/lib\/\n\nWORKDIR \/opt\/\n\nADD hadoop-1.2.1 \/opt\/hadoop-1.2.1\nRUN cp \/opt\/hadoop-1.2.1\/hdfs_setup.py \/opt\nRUN \/opt\/hadoop-1.2.1\/bin\/hadoop-config.sh\n\nRUN apt-get -y install build-essential\nRUN cd \/opt\/workspace\/zlib-1.2.8 && .\/configure && make && make install\nRUN apt-get -y install libssl-dev\nENV PATH \/usr\/bin:\/bin:\/opt\/hadoop-1.2.1\/bin:\/usr\/local\/sbin:\/usr\/sbin:\/sbin\nENV LD_LIBRARY_PATH $JAVA_HOME\/jre\/lib\/amd64\/server:$JAVA_HOME\/jre\/lib\/amd64\/:\/opt\/hadoop-1.2.1\/c++\/Linux-amd64-64\/lib:\/usr\/local\/lib\/\nRUN cp \/opt\/workspace\/ifconfig \/sbin\/\n\nADD share\/tera \/opt\/tera\nRUN mv \/opt\/tera\/bin\/tera_setup.py \/opt\nRUN apt-get -y install vim\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":44,
        "end":90,
        "text":"apt-get install -y openjdk-7-jre-headless wget"
      },
      {
        "label":"apt-install-without-version",
        "start":44,
        "end":90,
        "text":"apt-get install -y openjdk-7-jre-headless wget"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":415,
        "end":533,
        "text":"RUN apt-get -y install python\\nRUN apt-get -y install python-dev\\nRUN apt-get -y install gcc\\nRUN apt-get -y install make"
      },
      {
        "label":"apt-install-without-version",
        "start":415,
        "end":533,
        "text":"RUN apt-get -y install python\\nRUN apt-get -y install python-dev\\nRUN apt-get -y install gcc\\nRUN apt-get -y install make"
      },
      {
        "label":"use-cd-change-dir",
        "start":534,
        "end":555,
        "text":"RUN cd \/opt\/zookeeper"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":602,
        "end":630,
        "text":"ADD workspace \/opt\/workspace"
      },
      {
        "label":"use-cd-change-dir",
        "start":693,
        "end":714,
        "text":"RUN cd \/opt\/workspace"
      },
      {
        "label":"use-cd-change-dir",
        "start":758,
        "end":779,
        "text":"RUN cd \/opt\/workspace"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":935,
        "end":969,
        "text":"ADD hadoop-1.2.1 \/opt\/hadoop-1.2.1"
      },
      {
        "label":"use-cd-change-dir",
        "start":1097,
        "end":1129,
        "text":"RUN cd \/opt\/workspace\/zlib-1.2.8"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1454,
        "end":1478,
        "text":"ADD share\/tera \/opt\/tera"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"92af8b3ff5c1fa6705c9c1839431f4fb7be1ceac.dockerfile",
    "file_content":"FROM ubuntu:latest  \nMAINTAINER Alban Linard <alban.linard@unige.ch>  \n  \nADD bin\/install \/root\/install  \nADD bin\/colorize \/usr\/local\/bin  \nRUN chmod a+x \/usr\/local\/bin\/colorize && \\  \napt-get update --yes && \\  \napt-get install --yes sudo && \\  \n\/root\/install \/usr\/local && \\  \nrm -rf \/root\/install \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":67,
        "text":"MAINTAINER Alban Linard <alban.linard@unige.ch"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":74,
        "end":137,
        "text":"ADD bin\/install \/root\/install\\nADD bin\/colorize \/usr\/local\/bin"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":213,
        "end":239,
        "text":"apt-get install --yes sudo"
      },
      {
        "label":"apt-install-without-version",
        "start":213,
        "end":239,
        "text":"apt-get install --yes sudo"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"96b9e6899e5fc00fc478d60f6e909a984b9d7006.dockerfile",
    "file_content":"FROM ubuntu:xenial\nMAINTAINER obscur95 <obscur95@gmail.com>\n#\nENV DEBIAN_FRONTEND noninteractive \\\n\tDEBCONF_NONINTERACTIVE_SEEN true\n#\n#Configuration de la langue FR\n#\nRUN locale-gen fr_FR.UTF-8\nENV LANG fr_FR.UTF-8\nENV LANGUAGE fr_FR:fr\nENV LC_ALL fr_FR.UTF-8\n#\n#\n#Creation des repertoires\n#\nRUN mkdir \/home\/gns3 \\\n\t&& mkdir \/home\/gns3\/GNS3 \\\n\t&& mkdir \/home\/gns3\/GNS3\/images \\\n\t&& mkdir \/home\/gns3\/GNS3\/images\/IOS \\\n\t&& mkdir \/home\/gns3\/GNS3\/images\/IOU \\\n\t&& mkdir \/home\/gns3\/GNS3\/images\/QEMU \\\n\t&& mkdir \/home\/gns3\/GNS3\/images\/QEMU\/CSR1000v \\\n\t&& mkdir \/home\/gns3\/GNS3\/images\/QEMU\/Fortigate \\\n\t&& mkdir \/home\/gns3\/GNS3\/images\/QEMU\/PC \\\n\t&& mkdir \/home\/gns3\/GNS3\/projects\n#\n#Copie du fichier sources.list\n#\nCOPY sources.list \/etc\/apt\/sources.list\n#\n#Mise a jour de la distribution\n#\nRUN dpkg --add-architecture i386 \\\n\t&& apt-get update \\\n\t&& apt-get -y dist-upgrade\n#\n#Installation des packages\n#\nRUN apt-get -y install libc6:i386 libstdc++6:i386 \\\n\t&& apt-get -y install libssl1.0.0:i386 \\\n\t&& apt-get -y install lsb-release telnet traceroute tcpdump net-tools vim nano \\\n\t&& apt-get -y install git bison flex \\\n\t&& apt-get -y install python3-setuptools python3.5 \\\n\t&& apt-get -y install python3-pip \\\n\t&& python3.5 -m pip install -U pip\n#\n#Pre-requis GNS3 server\n#\nRUN apt-get -y install qemu-kvm qemu-system-x86 vpcs dynamips uuid-runtime \\\n\t&& cd \/tmp ; git clone http:\/\/github.com\/ndevilla\/iniparser.git ; cd iniparser ; make \\\n\t&& cp \/tmp\/iniparser\/libiniparser.* \/usr\/lib\/ \\\n\t&& cp \/tmp\/iniparser\/src\/iniparser.h \/usr\/local\/include \\\n\t&& cp \/tmp\/iniparser\/src\/dictionary.h \/usr\/local\/include \\\n\t&& cd \/tmp ; git clone https:\/\/github.com\/GNS3\/iouyap.git ; cd iouyap ; make ; make install \\\n\t&& apt-get -y install libpcap-dev \\\n\t&& cd \/tmp ; git clone https:\/\/github.com\/GNS3\/ubridge.git ; cd ubridge ; make ; make install \\\n\t&& cd \/ \\\n\t&& ln -s \/lib\/i386-linux-gnu\/libcrypto.so.1.0.0 \/lib\/i386-linux-gnu\/libcrypto.so.4\n#\n#Installation de GNS3 server\n#\nRUN python3.5 -m pip install gns3-server\n#\n#Copie du fichier de configuration de GNS3 server\n#\nCOPY GNS3.conf \/etc\/xdg\/GNS3.conf\n#\n#Copie des images IOS\n#\nCOPY IOS\/c3745-advipservicesk9-mz.124-25d.bin \/home\/gns3\/GNS3\/images\/IOS\/c3745-advipservicesk9-mz.124-25d.bin\nCOPY IOS\/c7200-adventerprisek9-mz.124-15.T17.bin \/home\/gns3\/GNS3\/images\/IOS\/c7200-adventerprisek9-mz.124-15.T17.bin\nCOPY IOS\/c7200-adventerprisek9-mz.152-4.S7.bin \/home\/gns3\/GNS3\/images\/IOS\/c7200-adventerprisek9-mz.152-4.S7.bin\n#\n#Copie des images IOU\n#\nCOPY IOU\/CiscoIOUKeygen.py \/home\/gns3\/GNS3\/images\/IOU\/CiscoIOUKeygen.py\nCOPY IOU\/i86bi-linux-l2-adventerprisek9-15.6.0.9S.bin \/home\/gns3\/GNS3\/images\/IOU\/i86bi-linux-l2-adventerprisek9-15.6.0.9S.bin\nCOPY IOU\/i86bi-linux-l2-ipbasek9-15.1g.bin \/home\/gns3\/GNS3\/images\/IOU\/i86bi-linux-l2-ipbasek9-15.1g.bin\nCOPY IOU\/i86bi-linux-l3-adventerprisek9-15.5.2T.bin \/home\/gns3\/GNS3\/images\/IOU\/i86bi-linux-l3-adventerprisek9-15.5.2T.bin\n#\n#Copie des images QEMU\n#\nCOPY QEMU\/CSR1000v\/csr1000v_harddisk.vmdk \/home\/gns3\/GNS3\/images\/QEMU\/CSR1000v\/csr1000v_harddisk.vmdk\nCOPY QEMU\/CSR1000v\/csr1000v-universalk9.03.16.04b.S.155-3.S4b-ext.iso \/home\/gns3\/GNS3\/images\/QEMU\/CSR1000v\/csr1000v-universalk9.03.16.04b.S.155-3.S4b-ext.iso\nCOPY QEMU\/Fortigate\/fortios_5.4.2.qcow2 \/home\/gns3\/GNS3\/images\/QEMU\/Fortigate\/fortios_5.4.2.qcow2\nCOPY QEMU\/Fortigate\/fortigate_p10G.qcow2 \/home\/gns3\/GNS3\/images\/QEMU\/Fortigate\/fortigate_p10G.qcow2\nCOPY QEMU\/PC\/TinyCore-current.iso \/home\/gns3\/GNS3\/images\/QEMU\/PC\/TinyCore-current.iso\nCOPY QEMU\/PC\/TinyCore-hda.qcow2 \/home\/gns3\/GNS3\/images\/QEMU\/PC\/TinyCore-hda.qcow2\n#\n#Rends executable les images IOS et IOU\n#\nRUN chmod +x \/home\/gns3\/GNS3\/images\/IOS\/c3745-advipservicesk9-mz.124-25d.bin \\\n\t&& chmod +x \/home\/gns3\/GNS3\/images\/IOS\/c7200-adventerprisek9-mz.124-15.T17.bin \\\n\t&& chmod +x \/home\/gns3\/GNS3\/images\/IOS\/c7200-adventerprisek9-mz.152-4.S7.bin \\\n\t&& chmod +x \/home\/gns3\/GNS3\/images\/IOU\/i86bi-linux-l2-adventerprisek9-15.6.0.9S.bin \\\n\t&& chmod +x \/home\/gns3\/GNS3\/images\/IOU\/i86bi-linux-l2-ipbasek9-15.1g.bin \\\n\t&& chmod +x \/home\/gns3\/GNS3\/images\/IOU\/i86bi-linux-l3-adventerprisek9-15.5.2T.bin\n#\n#Ouverture des ports\n#\nEXPOSE 3080 4000-4050 5900-5910\n#\n#Copie du fichier de demarrage\n#\nCOPY startup.sh \/home\/gns3\/startup.sh\nRUN chmod a+x \/home\/gns3\/startup.sh\n#\nENTRYPOINT cd \/home\/gns3 ; .\/startup.sh\n#\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":59,
        "text":"MAINTAINER obscur95 <obscur95@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":900,
        "end":1206,
        "text":"RUN apt-get -y install libc6:i386 libstdc++6:i386 \\\\n&& apt-get -y install libssl1.0.0:i386 \\\\n&& apt-get -y install lsb-release telnet traceroute tcpdump net-tools vim nano \\\\n&& apt-get -y install git bison flex \\\\n&& apt-get -y install python3-setuptools python3.5 \\\\n&& apt-get -y install python3-pip \\"
      },
      {
        "label":"apt-install-without-version",
        "start":900,
        "end":1206,
        "text":"RUN apt-get -y install libc6:i386 libstdc++6:i386 \\\\n&& apt-get -y install libssl1.0.0:i386 \\\\n&& apt-get -y install lsb-release telnet traceroute tcpdump net-tools vim nano \\\\n&& apt-get -y install git bison flex \\\\n&& apt-get -y install python3-setuptools python3.5 \\\\n&& apt-get -y install python3-pip \\"
      },
      {
        "label":"pip-install-without-version",
        "start":1208,
        "end":1244,
        "text":"&& python3.5 -m pip install -U pip\\n#"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1271,
        "end":1332,
        "text":"RUN apt-get -y install qemu-kvm qemu-system-x86 vpcs dynamips"
      },
      {
        "label":"apt-install-without-version",
        "start":1271,
        "end":1332,
        "text":"RUN apt-get -y install qemu-kvm qemu-system-x86 vpcs dynamips"
      },
      {
        "label":"use-cd-change-dir",
        "start":1352,
        "end":1359,
        "text":"cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":1441,
        "end":1471,
        "text":"cp \/tmp\/iniparser\/libiniparser"
      },
      {
        "label":"use-cd-change-dir",
        "start":1549,
        "end":1581,
        "text":"cp \/tmp\/iniparser\/src\/dictionary"
      },
      {
        "label":"use-cd-change-dir",
        "start":1490,
        "end":1525,
        "text":"cp \/tmp\/iniparser\/src\/iniparser.h \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":1609,
        "end":1616,
        "text":"cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":1741,
        "end":1754,
        "text":"cd \/tmp ; git"
      },
      {
        "label":"use-cd-change-dir",
        "start":1799,
        "end":1809,
        "text":"cd ubridge"
      },
      {
        "label":"use-cd-change-dir",
        "start":1666,
        "end":1675,
        "text":"cd iouyap"
      },
      {
        "label":"use-cd-change-dir",
        "start":1838,
        "end":1844,
        "text":"cd \/ \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"bdc82ce82aef92f30a87e7bb69db15b9bfc60e07.dockerfile",
    "file_content":"FROM thoughtmachine\/please_ubuntu:latest\nMAINTAINER peter.ebden@gmail.com\n\n# Install the gRPC C++ plugin. Currently there is no binary distribution\n# so the only option is to compile from source, and the only way to really\n# make that work is from git (it seems very hard to get a version of c-ares that\n# will satisfy gRPC otherwise).\nWORKDIR \/tmp\nRUN apt-get update && apt-get install -y build-essential autoconf libtool\nRUN git clone -qb $(curl -fsSL https:\/\/grpc.io\/release) https:\/\/github.com\/grpc\/grpc && \\\n    cd grpc && \\\n    git submodule update --init && \\\n    make && \\\n    make install && \\\n    rm -rf \/tmp\/grpc\n\n# Need protobuf as well.\nRUN curl -fsSL https:\/\/github.com\/google\/protobuf\/releases\/download\/v3.4.0\/protobuf-cpp-3.4.0.tar.gz | tar -xz && \\\n    cd protobuf-3.4.0 && \\\n    .\/configure --prefix=\/usr && \\\n    make && \\\n    make install && \\\n    rm -rf \/tmp\/protobuf-3.4.0\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":40,
        "text":"FROM thoughtmachine\/please_ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":41,
        "end":73,
        "text":"MAINTAINER peter.ebden@gmail.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":371,
        "end":422,
        "text":"apt-get install -y build-essential autoconf libtool"
      },
      {
        "label":"apt-install-without-version",
        "start":371,
        "end":422,
        "text":"apt-get install -y build-essential autoconf libtool"
      },
      {
        "label":"use-cd-change-dir",
        "start":517,
        "end":524,
        "text":"cd grpc"
      },
      {
        "label":"use-cd-change-dir",
        "start":770,
        "end":787,
        "text":"cd protobuf-3.4.0"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"beec44fb05c6f5b2fcebbb748460fb6361e947c0.dockerfile",
    "file_content":"#\n#--------------------------------------------------------------------------\n# Image Setup\n#--------------------------------------------------------------------------\n#\n# To edit the 'workspace' base Image, visit its repository on Github\n#    https:\/\/github.com\/Laradock\/workspace\n#\n# To change its version, see the available Tags on the Docker Hub:\n#    https:\/\/hub.docker.com\/r\/laradock\/workspace\/tags\/\n#\n# Note: Base Image name format {image-tag}-{php-version}\n#\n\nFROM laradock\/workspace:1.8-70\n\nMAINTAINER Mahmoud Zalt <mahmoud@zalt.me>\n\n#\n#--------------------------------------------------------------------------\n# Mandatory Software's Installation\n#--------------------------------------------------------------------------\n#\n# Mandatory Software's such as (\"php7.0-cli\", \"git\", \"vim\", ....) are\n# installed on the base image 'laradock\/workspace' image. If you want\n# to add more Software's or remove existing one, you need to edit the\n# base image (https:\/\/github.com\/Laradock\/workspace).\n#\n\n#\n#--------------------------------------------------------------------------\n# Optional Software's Installation\n#--------------------------------------------------------------------------\n#\n# Optional Software's will only be installed if you set them to `true`\n# in the `docker-compose.yml` before the build.\n# Example:\n#   - INSTALL_NODE=false\n#   - ...\n#\n\n#####################################\n# Non-Root User:\n#####################################\n\n# Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nARG PGID=1000\n\nENV PUID ${PUID}\nENV PGID ${PGID}\n\nRUN groupadd -g ${PGID} laradock && \\\n    useradd -u ${PUID} -g laradock -m laradock && \\\n    apt-get update -yqq\n\n#####################################\n# SOAP:\n#####################################\nUSER root\n\nARG INSTALL_SOAP=false\nENV INSTALL_SOAP ${INSTALL_SOAP}\n\nRUN if [ ${INSTALL_SOAP} = true ]; then \\\n  # Install the PHP SOAP extension\n  add-apt-repository -y ppa:ondrej\/php && \\\n  apt-get update -yqq && \\\n  apt-get -y install libxml2-dev php7.0-soap \\\n;fi\n\n#####################################\n# PHP GMP\n#####################################\n\nARG INSTALL_GMP=false\nENV INSTALL_GMP ${INSTALL_GMP}\n\nRUN if [ ${INSTALL_GMP} = true ]; then \\\n    # Install GMP extension\n    apt-get -y install php-gmp \\\n;fi\n\n#####################################\n# Set Timezone\n#####################################\n\nARG TZ=UTC\nENV TZ ${TZ}\nRUN ln -snf \/usr\/share\/zoneinfo\/$TZ \/etc\/localtime && echo $TZ > \/etc\/timezone\n\n#####################################\n# Composer:\n#####################################\n\n# Add the composer.json\nCOPY .\/composer.json \/home\/laradock\/.composer\/composer.json\n\n# Make sure that ~\/.composer belongs to laradock\nRUN chown -R laradock:laradock \/home\/laradock\/.composer\nUSER laradock\n\n# Check if global install need to be ran\nARG COMPOSER_GLOBAL_INSTALL=false\nENV COMPOSER_GLOBAL_INSTALL ${COMPOSER_GLOBAL_INSTALL}\nRUN if [ ${COMPOSER_GLOBAL_INSTALL} = true ]; then \\\n    # run the install\n    composer global install \\\n;fi\n\n# Export composer vendor path\nRUN echo \"\" >> ~\/.bashrc && \\\necho 'export PATH=\"~\/.composer\/vendor\/bin:$PATH\"' >> ~\/.bashrc\n\n#####################################\n# Crontab\n#####################################\nUSER root\n\nCOPY .\/crontab \/etc\/cron.d\nRUN chmod -R 644 \/etc\/cron.d\n\n#####################################\n# User Aliases\n#####################################\n\nUSER laradock\nCOPY .\/aliases.sh \/home\/laradock\/aliases.sh\nRUN echo \"\" >> ~\/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~\/.bashrc && \\\n    echo \"source \/home\/laradock\/aliases.sh\" >> ~\/.bashrc && \\\n    echo \"\" >> ~\/.bashrc\n\nUSER root\nRUN echo \"\" >> ~\/.bashrc && \\\n    echo \"# Load Custom Aliases\" >> ~\/.bashrc && \\\n    echo \"source \/home\/laradock\/aliases.sh\" >> ~\/.bashrc && \\\n    echo \"\" >> ~\/.bashrc\n\n#####################################\n# xDebug:\n#####################################\n\nARG INSTALL_XDEBUG=false\nRUN if [ ${INSTALL_XDEBUG} = true ]; then \\\n    # Load the xdebug extension only with phpunit commands\n    apt-get install -y --force-yes php7.0-xdebug && \\\n    sed -i 's\/^;\/\/g' \/etc\/php\/7.0\/cli\/conf.d\/20-xdebug.ini && \\\n    echo \"alias phpunit='php -dzend_extension=xdebug.so \/var\/www\/vendor\/bin\/phpunit'\" >> ~\/.bashrc \\\n;fi\n# ADD for REMOTE debugging\nCOPY .\/xdebug.ini \/etc\/php\/7.0\/cli\/conf.d\/xdebug.ini\n\n#####################################\n# Blackfire:\n#####################################\n\nARG INSTALL_BLACKFIRE=false\nARG BLACKFIRE_CLIENT_ID\nARG BLACKFIRE_CLIENT_TOKEN\n\nENV BLACKFIRE_CLIENT_ID ${BLACKFIRE_CLIENT_ID}\nENV BLACKFIRE_CLIENT_TOKEN ${BLACKFIRE_CLIENT_TOKEN}\n\nRUN if [ ${INSTALL_XDEBUG} = false -a ${INSTALL_BLACKFIRE} = true ]; then \\\n    curl -L https:\/\/packagecloud.io\/gpg.key | apt-key add - && \\\n    echo \"deb http:\/\/packages.blackfire.io\/debian any main\" | tee \/etc\/apt\/sources.list.d\/blackfire.list && \\\n    apt-get update -yqq && \\\n    apt-get install blackfire-agent \\\n;fi\n\n#####################################\n# ssh:\n#####################################\nARG INSTALL_WORKSPACE_SSH=false\nENV INSTALL_WORKSPACE_SSH ${INSTALL_WORKSPACE_SSH}\n\nADD insecure_id_rsa \/tmp\/id_rsa\nADD insecure_id_rsa.pub \/tmp\/id_rsa.pub\n\nRUN if [ ${INSTALL_WORKSPACE_SSH} = true ]; then \\\n    rm -f \/etc\/service\/sshd\/down && \\\n    cat \/tmp\/id_rsa.pub >> \/root\/.ssh\/authorized_keys \\\n        && cat \/tmp\/id_rsa.pub >> \/root\/.ssh\/id_rsa.pub \\\n        && cat \/tmp\/id_rsa >> \/root\/.ssh\/id_rsa \\\n        && rm -f \/tmp\/id_rsa* \\\n        && chmod 644 \/root\/.ssh\/authorized_keys \/root\/.ssh\/id_rsa.pub \\\n    && chmod 400 \/root\/.ssh\/id_rsa \\\n;fi\n\n#####################################\n# MongoDB:\n#####################################\n\n# Check if Mongo needs to be installed\nARG INSTALL_MONGO=false\nENV INSTALL_MONGO ${INSTALL_MONGO}\nRUN if [ ${INSTALL_MONGO} = true ]; then \\\n    # Install the mongodb extension\n    pecl install mongodb && \\\n    echo \"extension=mongodb.so\" >> \/etc\/php\/7.0\/cli\/conf.d\/30-mongodb.ini \\\n;fi\n\n#####################################\n# Drush:\n#####################################\nUSER root\nENV DRUSH_VERSION 8.1.2\nARG INSTALL_DRUSH=false\nENV INSTALL_DRUSH ${INSTALL_DRUSH}\nRUN if [ ${INSTALL_DRUSH} = true ]; then \\\n    # Install Drush 8 with the phar file.\n    curl -fsSL -o \/usr\/local\/bin\/drush https:\/\/github.com\/drush-ops\/drush\/releases\/download\/$DRUSH_VERSION\/drush.phar | bash && \\\n    chmod +x \/usr\/local\/bin\/drush && \\\n    drush core-status \\\n;fi\n\nUSER laradock\n\n#####################################\n# Node \/ NVM:\n#####################################\n\n# Check if NVM needs to be installed\nARG NODE_VERSION=stable\nENV NODE_VERSION ${NODE_VERSION}\nARG INSTALL_NODE=false\nENV INSTALL_NODE ${INSTALL_NODE}\nENV NVM_DIR \/home\/laradock\/.nvm\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    # Install nvm (A Node Version Manager)\n    curl -o- https:\/\/raw.githubusercontent.com\/creationix\/nvm\/v0.33.1\/install.sh | bash && \\\n        . $NVM_DIR\/nvm.sh && \\\n        nvm install ${NODE_VERSION} && \\\n        nvm use ${NODE_VERSION} && \\\n        nvm alias ${NODE_VERSION} && \\\n        npm install -g gulp bower vue-cli \\\n;fi\n\n# Wouldn't execute when added to the RUN statement in the above block\n# Source NVM when loading bash since ~\/.profile isn't loaded on non-login shell\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    echo \"\" >> ~\/.bashrc && \\\n    echo 'export NVM_DIR=\"$HOME\/.nvm\"' >> ~\/.bashrc && \\\n    echo '[ -s \"$NVM_DIR\/nvm.sh\" ] && . \"$NVM_DIR\/nvm.sh\"  # This loads nvm' >> ~\/.bashrc \\\n;fi\n\n# Add NVM binaries to root's .bashrc\nUSER root\n\nRUN if [ ${INSTALL_NODE} = true ]; then \\\n    echo \"\" >> ~\/.bashrc && \\\n    echo 'export NVM_DIR=\"\/home\/laradock\/.nvm\"' >> ~\/.bashrc && \\\n    echo '[ -s \"$NVM_DIR\/nvm.sh\" ] && . \"$NVM_DIR\/nvm.sh\"  # This loads nvm' >> ~\/.bashrc \\\n;fi\n\n#####################################\n# YARN:\n#####################################\n\nUSER laradock\n\nARG INSTALL_YARN=false\nENV INSTALL_YARN ${INSTALL_YARN}\nARG YARN_VERSION=latest\nENV YARN_VERSION ${YARN_VERSION}\n\nRUN if [ ${INSTALL_YARN} = true ]; then \\\n    [ -s \"$NVM_DIR\/nvm.sh\" ] && . \"$NVM_DIR\/nvm.sh\" && \\\n    if [ ${YARN_VERSION} = \"latest\" ]; then \\\n        curl -o- -L https:\/\/yarnpkg.com\/install.sh | bash; \\\n    else \\\n        curl -o- -L https:\/\/yarnpkg.com\/install.sh | bash -s -- --version ${YARN_VERSION}; \\\n    fi && \\\n    echo \"\" >> ~\/.bashrc && \\\n    echo 'export PATH=\"$HOME\/.yarn\/bin:$PATH\"' >> ~\/.bashrc \\\n;fi\n\n# Add YARN binaries to root's .bashrc\nUSER root\n\nRUN if [ ${INSTALL_YARN} = true ]; then \\\n    echo \"\" >> ~\/.bashrc && \\\n    echo 'export YARN_DIR=\"\/home\/laradock\/.yarn\"' >> ~\/.bashrc && \\\n    echo 'export PATH=\"$YARN_DIR\/bin:$PATH\"' >> ~\/.bashrc \\\n;fi\n\n#####################################\n# PHP Aerospike:\n#####################################\nUSER root\n\nARG INSTALL_AEROSPIKE=true\nENV INSTALL_AEROSPIKE ${INSTALL_AEROSPIKE}\n\n# Copy aerospike configration for remote debugging\nCOPY .\/aerospike.ini \/etc\/php\/7.0\/cli\/conf.d\/aerospike.ini\n\nRUN if [ ${INSTALL_AEROSPIKE} = true ]; then \\\n    # Install the php aerospike extension\n    curl -L -o \/tmp\/aerospike-client-php.tar.gz \"https:\/\/github.com\/aerospike\/aerospike-client-php\/archive\/3.4.14.tar.gz\" \\\n    && mkdir -p aerospike-client-php \\\n    && tar -C aerospike-client-php -zxvf \/tmp\/aerospike-client-php.tar.gz --strip 1 \\\n    && ( \\\n        cd aerospike-client-php\/src\/aerospike \\\n        && phpize \\\n        && .\/build.sh \\\n        && make install \\\n    ) \\\n    && rm \/tmp\/aerospike-client-php.tar.gz \\\n;fi\n\nRUN if [ ${INSTALL_AEROSPIKE} = false ]; then \\\n    rm \/etc\/php\/7.0\/cli\/conf.d\/aerospike.ini \\\n;fi\n\n#####################################\n# PHP V8JS:\n#####################################\nUSER root\n\nARG INSTALL_V8JS=false\nENV INSTALL_V8JS ${INSTALL_V8JS}\n\nRUN if [ ${INSTALL_V8JS} = true ]; then \\\n    # Install the php V8JS extension\n    add-apt-repository -y ppa:pinepain\/libv8-5.4 \\\n    && apt-get update -yqq \\\n    && apt-get install -y php7.0-xml php7.0-dev php-pear libv8-5.4 \\\n    && pecl install v8js \\\n    && echo \"extension=v8js.so\" >> \/etc\/php\/7.0\/cli\/php.ini \\\n;fi\n\n#####################################\n# Non-root user : PHPUnit path\n#####################################\n\n# add .\/vendor\/bin to non-root user's bashrc (needed for phpunit)\nUSER laradock\n\nRUN echo \"\" >> ~\/.bashrc && \\\n    echo 'export PATH=\"\/var\/www\/vendor\/bin:$PATH\"' >> ~\/.bashrc\n\n#####################################\n# Laravel Artisan Alias\n#####################################\nUSER root\n\nRUN echo \"\" >> ~\/.bashrc && \\\n    echo 'alias art=\"php artisan\"' >> ~\/.bashrc\n\n#####################################\n# Laravel Envoy:\n#####################################\nUSER laradock\n\nARG INSTALL_LARAVEL_ENVOY=true\nENV INSTALL_LARAVEL_ENVOY ${INSTALL_LARAVEL_ENVOY}\n\nRUN if [ ${INSTALL_LARAVEL_ENVOY} = true ]; then \\\n    # Install the Laravel Envoy\n    composer global require \"laravel\/envoy=~1.0\" \\\n;fi\n\n#####################################\n# Deployer:\n#####################################\nUSER laradock\n\nARG INSTALL_DEPLOYER=false\nENV INSTALL_DEPLOYER ${INSTALL_DEPLOYER}\n\nRUN if [ ${INSTALL_DEPLOYER} = true ]; then \\\n    # Install the Deployer\n    composer global require \"deployer\/deployer\" \\\n;fi\n\n#####################################\n# Linuxbrew:\n#####################################\nUSER root\n\nARG INSTALL_LINUXBREW=true\nENV INSTALL_LINUXBREW ${INSTALL_LINUXBREW}\n\nRUN if [ ${INSTALL_LINUXBREW} = true ]; then \\\n\n    # Preparation\n    apt-get upgrade -y && \\\n    apt-get install -y build-essential make cmake scons curl git \\\n      ruby autoconf automake autoconf-archive \\\n      gettext libtool flex bison \\\n      libbz2-dev libcurl4-openssl-dev \\\n      libexpat-dev libncurses-dev && \\\n\n    # Install the Linuxbrew\n    git clone --depth=1 https:\/\/github.com\/Homebrew\/linuxbrew.git ~\/.linuxbrew && \\\n\n    echo \"\" >> ~\/.bashrc && \\\n    echo 'export PKG_CONFIG_PATH\"=\/usr\/local\/lib\/pkgconfig:\/usr\/local\/lib64\/pkgconfig:\/usr\/lib64\/pkgconfig:\/usr\/lib\/pkgconfig:\/usr\/lib\/x86_64-linux-gnu\/pkgconfig:\/usr\/lib64\/pkgconfig:\/usr\/share\/pkgconfig:$PKG_CONFIG_PATH\"' >> ~\/.bashrc && \\\n\n    # Setup linuxbrew\n    echo 'export LINUXBREWHOME=\"$HOME\/.linuxbrew\"' >> ~\/.bashrc && \\\n    echo 'export PATH=\"$LINUXBREWHOME\/bin:$PATH\"' >> ~\/.bashrc && \\\n    echo 'export MANPATH=\"$LINUXBREWHOME\/man:$MANPATH\"' >> ~\/.bashrc && \\\n    echo 'export PKG_CONFIG_PATH=\"$LINUXBREWHOME\/lib64\/pkgconfig:$LINUXBREWHOME\/lib\/pkgconfig:$PKG_CONFIG_PATH\"' >> ~\/.bashrc && \\\n    echo 'export LD_LIBRARY_PATH=\"$LINUXBREWHOME\/lib64:$LINUXBREWHOME\/lib:$LD_LIBRARY_PATH\"' >> ~\/.bashrc \\\n;fi\n\n#####################################\n# SQL SERVER:\n#####################################\nARG INSTALL_MSSQL=true\nENV INSTALL_MSSQL ${INSTALL_MSSQL}\n\nRUN if [ ${INSTALL_MSSQL} = true ]; then \\\n    #####################################\n    # Install Depenencies:\n    #####################################\n        cd \/ && \\\n        apt-get install -y --force-yes wget apt-transport-https curl freetds-common libsybdb5 freetds-bin unixodbc unixodbc-dev && \\\n\n    #####################################\n    #  The following steps were taken from\n    #  Microsoft's github account:\n    #  https:\/\/github.com\/Microsoft\/msphpsql\/wiki\/Dockerfile-for-getting-pdo_sqlsrv-for-PHP-7.0-on-Debian-in-3-ways\n    #####################################\n\n    # Add PHP 7 repository\n    # for Debian jessie\n    # And System upgrade\n        cd \/ && \\\n        echo \"deb http:\/\/packages.dotdeb.org jessie all\" \\\n        | tee \/etc\/apt\/sources.list.d\/dotdeb.list \\\n        && wget -qO- https:\/\/www.dotdeb.org\/dotdeb.gpg \\\n        | apt-key add - \\\n        && apt-get update -yqq \\\n        && apt-get upgrade -qq && \\\n\n    # Install UnixODBC\n    # Compile odbc_config as it is not part of unixodbc package\n        cd \/ && \\\n        apt-get install -y whiptail \\\n        unixodbc libgss3 odbcinst devscripts debhelper dh-exec dh-autoreconf libreadline-dev libltdl-dev \\\n        && dget -u -x http:\/\/http.debian.net\/debian\/pool\/main\/u\/unixodbc\/unixodbc_2.3.1-3.dsc \\\n        && cd unixodbc-*\/ \\\n        && .\/configure && make && make install \\\n        && cp -v .\/exe\/odbc_config \/usr\/local\/bin\/ && \\\n\n    # Fake uname for install.sh\n        printf '#!\/bin\/bash\\nif [ \"$*\" == \"-p\" ]; then echo \"x86_64\"; else \/bin\/uname \"$@\"; fi' \\\n        | tee \/usr\/local\/bin\/uname \\\n        && chmod +x \/usr\/local\/bin\/uname && \\\n\n    # Microsoft ODBC Driver 13 for Linux\n    # Note: There's a copy of this tar on my hubiC\n        cd \/ && \\\n        wget -nv -O msodbcsql-13.0.0.0.tar.gz \\\n        \"https:\/\/meetsstorenew.blob.core.windows.net\/contianerhd\/Ubuntu%2013.0%20Tar\/msodbcsql-13.0.0.0.tar.gz?st=2016-10-18T17%3A29%3A00Z&se=2022-10-19T17%3A29%3A00Z&sp=rl&sv=2015-04-05&sr=b&sig=cDwPfrouVeIQf0vi%2BnKt%2BzX8Z8caIYvRCmicDL5oknY%3D\" \\\n        && tar -xf msodbcsql-13.0.0.0.tar.gz \\\n        && cd msodbcsql-*\/ \\\n        && ldd lib64\/libmsodbcsql-13.0.so.0.0 \\\n        && .\/install.sh install --accept-license \\\n        && ls -l \/opt\/microsoft\/msodbcsql\/ \\\n        && odbcinst -q -d -n \"ODBC Driver 13 for SQL Server\" && \\\n\n\n    #####################################\n    # Install sqlsrv y pdo_sqlsrv\n    # extensions:\n    #####################################\n\n    pecl install sqlsrv-4.0.8 && \\\n    pecl install pdo_sqlsrv-4.0.8 && \\\n\n    #####################################\n    # Set locales for the container\n    #####################################\n\n    apt-get install -y locales \\\n    && echo \"en_US.UTF-8 UTF-8\" > \/etc\/locale.gen \\\n    && locale-gen \\\n    && echo \"extension=sqlsrv.so\" > \/etc\/php\/7.0\/cli\/conf.d\/20-sqlsrv.ini \\\n    && echo \"extension=pdo_sqlsrv.so\" > \/etc\/php\/7.0\/cli\/conf.d\/20-pdo_sqlsrv.ini \\\n;fi\n\n#####################################\n# Minio:\n#####################################\nUSER root\nARG INSTALL_MC=false\nENV INSTALL_MC ${INSTALL_MC}\n\nCOPY mc\/config.json \/root\/.mc\/config.json\n\nRUN if [ ${INSTALL_MC} = true ]; then\\\n    curl -fsSL -o \/usr\/local\/bin\/mc https:\/\/dl.minio.io\/client\/mc\/release\/linux-amd64\/mc && \\\n    chmod +x \/usr\/local\/bin\/mc \\\n;fi\n\n#####################################\n# Symfony:\n#####################################\nUSER root\nARG INSTALL_SYMFONY=false\nENV INSTALL_SYMFONY ${INSTALL_SYMFONY}\nRUN if [ ${INSTALL_SYMFONY} = true ]; then \\\n\n  mkdir -p \/usr\/local\/bin \\\n  && curl -LsS https:\/\/symfony.com\/installer -o \/usr\/local\/bin\/symfony \\\n  && chmod a+x \/usr\/local\/bin\/symfony \\\n\n  #  Symfony 3 alias\n  && echo 'alias dev=\"php bin\/console -e=dev\"' >> ~\/.bashrc \\\n  && echo 'alias prod=\"php bin\/console -e=prod\"' >> ~\/.bashrc \\\n\n  #  Symfony 2 alias\n  #  && echo 'alias dev=\"php app\/console -e=dev\"' >> ~\/.bashrc \\\n  #  && echo 'alias prod=\"php app\/console -e=prod\"' >> ~\/.bashrc \\\n\n;fi\n\n#####################################\n# MySQL client\n#####################################\nUSER root\n\nARG INSTALL_MYSQL_CLIENT=false\nENV INSTALL_MYSQL_CLIENT ${INSTALL_MYSQL_CLIENT}\n\nRUN if [ ${INSTALL_MYSQL_CLIENT} = true ]; then \\\n    apt-get update && \\\n    apt-get install -y mysql-client \\\n;fi\n\n#####################################\n# PostgreSQL client\n#####################################\nUSER root\n\nARG INSTALL_PGSQL_CLIENT=false\nENV INSTALL_PGSQL_CLIENT ${INSTALL_PGSQL_CLIENT}\n\nRUN if [ ${INSTALL_PGSQL_CLIENT} = true ]; then \\\n    apt-get update && \\\n    apt-get install -y postgresql-client \\\n;fi\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\n# Clean up\nUSER root\nRUN apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Set default work directory\nWORKDIR \/var\/www\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":500,
        "end":541,
        "text":"MAINTAINER Mahmoud Zalt <mahmoud@zalt.me>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2028,
        "end":2072,
        "text":"apt-get -y install libxml2-dev php7.0-soap \\"
      },
      {
        "label":"apt-install-without-version",
        "start":2028,
        "end":2072,
        "text":"apt-get -y install libxml2-dev php7.0-soap \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2292,
        "end":2320,
        "text":"apt-get -y install php-gmp \\"
      },
      {
        "label":"apt-install-without-version",
        "start":2292,
        "end":2320,
        "text":"apt-get -y install php-gmp \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":4906,
        "end":4939,
        "text":"apt-get install blackfire-agent \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4906,
        "end":4939,
        "text":"apt-get install blackfire-agent \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":5112,
        "end":5183,
        "text":"ADD insecure_id_rsa \/tmp\/id_rsa\\nADD insecure_id_rsa.pub \/tmp\/id_rsa.pub"
      },
      {
        "label":"use-cd-change-dir",
        "start":9273,
        "end":9286,
        "text":"cd aerospike-"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":9863,
        "end":9922,
        "text":"apt-get install -y php7.0-xml php7.0-dev php-pear libv8-5.4"
      },
      {
        "label":"apt-install-without-version",
        "start":9863,
        "end":9922,
        "text":"apt-get install -y php7.0-xml php7.0-dev php-pear libv8-5.4"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":11392,
        "end":11611,
        "text":"apt-get install -y build-essential make cmake scons curl git \\\\nruby autoconf automake autoconf-archive \\\\ngettext libtool flex bison \\\\nlibbz2-dev libcurl4-openssl-dev \\\\nlibexpat-dev libncurses-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":11392,
        "end":11611,
        "text":"apt-get install -y build-essential make cmake scons curl git \\\\nruby autoconf automake autoconf-archive \\\\ngettext libtool flex bison \\\\nlibbz2-dev libcurl4-openssl-dev \\\\nlibexpat-dev libncurses-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":12791,
        "end":12795,
        "text":"cd \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":13298,
        "end":13302,
        "text":"cd \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":13667,
        "end":13671,
        "text":"cd \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":13929,
        "end":13940,
        "text":"cd unixodbc"
      },
      {
        "label":"use-cd-change-dir",
        "start":14366,
        "end":14370,
        "text":"cd \/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"af9a48aa1612738c09d2453396b2cb9ae4b438fb.dockerfile",
    "file_content":"FROM ubuntu_ppc64le:16.04\nMAINTAINER Meghali Dhoble\n\nENV KIBANA 4.6\nENV ELASTIC 2.x\nENV LOGSTASH 2.4\n\nENV GOSU_VERSION 1.7\nENV GOSU_URL https:\/\/github.com\/tianon\/gosu\/releases\/download\n\nRUN echo \"deb http:\/\/ports.ubuntu.com\/ubuntu-ports xenial restricted multiverse universe\"  >> \/etc\/apt\/sources.list\nRUN apt-get update -y\nRUN apt-get install -y openjdk-8-jdk openjdk-8-jre \nENV JAVA_HOME=\/usr\/lib\/jvm\/java-1.8.0-openjdk-ppc64el\nENV PATH=$JAVA_HOME\/bin:$PATH\nRUN apt-get install -y wget\nRUN set -x \\\n\t&& echo \"Grab gosu for easy step-down from root...\" \\\n\t&& wget -O \/usr\/local\/bin\/gosu \"https:\/\/github.com\/tianon\/gosu\/releases\/download\/$GOSU_VERSION\/gosu-$(dpkg --print-architecture)\" \\\n\t&& wget -O \/usr\/local\/bin\/gosu.asc \"https:\/\/github.com\/tianon\/gosu\/releases\/download\/$GOSU_VERSION\/gosu-$(dpkg --print-architecture).asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n\t&& gpg --batch --verify \/usr\/local\/bin\/gosu.asc \/usr\/local\/bin\/gosu \\\n\t&& rm -r \"$GNUPGHOME\" \/usr\/local\/bin\/gosu.asc \\\n\t&& chmod +x \/usr\/local\/bin\/gosu \\\n\t&& gosu nobody true \n\n# Install ELK Required Dependancies\nRUN set -x \\\n\t&& apt-get -qq update \\\n\t&& apt-get install -yq wget ca-certificates \\\n\t&& echo \"NOTE: the 'ffi-rzmq-core' gem is very picky about where it looks for libzmq.so\" \\\n\t&& mkdir -p \/usr\/local\/lib && ln -s \/usr\/lib\/*\/libzmq.so.3 \/usr\/local\/lib\/libzmq.so \\\n\t&& groupadd -r kibana && useradd -r -m -g kibana kibana \\\n\t&& groupadd -r logstash && useradd -r -m -g logstash logstash \\\n\t&& apt-get -qq update && apt-get -yq install apache2-utils \\\n                                               supervisor \\\n                                               libzmq3-dev \\\n\t\t\t\t\t\t#elasticsearch \\\n                                               nginx --no-install-recommends \\\n  && apt-get purge -y --auto-remove wget \\\n  && apt-get clean \\\n  && apt-get autoclean \\\n  && apt-get autoremove \\\n  && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* \\\n\t&& echo \"Creating Elasticsearch Paths...\" \\\n\t&& for path in \\\n\t\t\/opt\/elasticsearch-2.4.1\/data \\\n\t\t\/opt\/elasticsearch-2.4.1\/logs \\\n\t\t\/opt\/elasticsearch-2.4.1\/config \\\n\t\t\/opt\/elasticsearch-2.4.1\/config\/scripts \\\n\t; do \\\n\tmkdir -p \"$path\"; \\\n\tdone\n\n## Install elastic-search using tarball as the apt-get version fails not compatible with Kibana \n# source build failing on Ubuntu \nWORKDIR \/opt\nRUN apt-get -qq update && apt-get install -yq git wget\nRUN wget https:\/\/download.elastic.co\/elasticsearch\/release\/org\/elasticsearch\/distribution\/tar\/elasticsearch\/2.4.1\/elasticsearch-2.4.1.tar.gz\nRUN tar -xvzf elasticsearch-2.4.1.tar.gz\n\n# Install kibana\nRUN apt-get -qq update && apt-get install -yq git wget\nWORKDIR \/opt\n#RUN git clone https:\/\/github.com\/elastic\/kibana.git && cd kibana && git tag && git checkout v5.0.0-alpha1\nRUN git clone https:\/\/github.com\/elastic\/kibana.git && cd kibana \nWORKDIR \/opt\/kibana\nRUN git checkout 4.6\nRUN apt-get -qq update && apt-get install -yq bcrypt make python g++ \nRUN wget -qO- https:\/\/raw.githubusercontent.com\/creationix\/nvm\/v0.31.1\/install.sh | sh\nRUN bash -l -c 'nvm install \"$(cat .node-version)\"'\nRUN bash -l -c \"npm install\"\n\n# Configure Nginx\nADD config\/nginx\/kibana.conf \/etc\/nginx\/sites-available\/\nRUN cd \/opt \\\n\t&& echo \"Configuring Nginx...\" \\\n\t&& mkdir -p \/var\/www \\\n\t&& ln -sf \/dev\/stdout \/var\/log\/nginx\/access.log \\\n\t&& ln -sf \/dev\/stderr \/var\/log\/nginx\/error.log \\\n\t&& echo \"\\ndaemon off;\" >> \/etc\/nginx\/nginx.conf \\\n\t&& rm \/etc\/nginx\/sites-enabled\/default \\\n\t&& ln -s \/etc\/nginx\/sites-available\/kibana.conf \/etc\/nginx\/sites-enabled\/kibana.conf\n\n# install logstash \nRUN apt-get -qq update && apt-get install -yq git curl\nWORKDIR \/opt\nRUN git clone https:\/\/github.com\/elastic\/logstash.git && cd logstash && git checkout 2.4\nWORKDIR \/opt\/logstash\nRUN curl -sSL https:\/\/rvm.io\/mpapis.asc | gpg --import -\nRUN curl -sSL https:\/\/get.rvm.io | bash -s --\nRUN bash -l -c \"rvm install jruby 1.7.25 && rvm use jruby-1.7.25\"\n\nENV RUBY_PLATFORM=java\nRUN wget http:\/\/archive.apache.org\/dist\/ant\/binaries\/apache-ant-1.9.4-bin.tar.gz && tar -xvzf apache-ant-1.9.4-bin.tar.gz\nENV ANT_HOME=\/opt\/logstash\/apache-ant-1.9.4\nENV PATH=$ANT_HOME\/bin:$PATH\nRUN apt-get -qq update && apt-get install -yq unzip\nRUN wget https:\/\/github.com\/jnr\/jffi\/archive\/master.zip && unzip master.zip && cd jffi-master #&& ant\nRUN bash -l -c \"rake bootstrap\" # && rake test:install-core\"\n\n\n# Install Timelion Kibana Plugin\n#RUN \/opt\/kibana\/bin\/kibana plugin -i kibana\/timelion\n\n# Add ELK PATHs\nENV PATH \/opt\/elasticsearch-2.4.1\/bin:$PATH\nENV PATH \/opt\/logstash\/bin:$PATH\nENV PATH \/opt\/kibana\/bin:$PATH\n\n# Add elastic config\nCOPY config\/elastic \/usr\/share\/elasticsearch\/config\n# Add admin\/admin web user account\nCOPY config\/nginx\/htpasswd \/etc\/nginx\/.htpasswd\n# Add configs\nCOPY config\/supervisord\/supervisord.conf \/etc\/supervisor\/conf.d\/\n\n# Add entrypoints\nCOPY entrypoints\/logstash-entrypoint.sh \/\nCOPY entrypoints\/kibana-entrypoint.sh \/\nRUN chmod +x \/*.sh\n\nVOLUME [\"\/usr\/share\/elasticsearch\/data\"]\nVOLUME [\"\/etc\/logstash\/conf.d\"]\nVOLUME [\"\/etc\/nginx\"]\n\nEXPOSE 80 443 9200 9300\nCMD [bash -l -c \"\/logstash-entrypoint.sh kibana -e 'input { stdin { } } output { stdout { } }'\" && nohup elasticsearch && bash -l -c \"kibana\"] \nCMD [\"\/usr\/bin\/supervisord\"]\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":26,
        "end":51,
        "text":"MAINTAINER Meghali Dhoble"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":324,
        "end":374,
        "text":"RUN apt-get install -y openjdk-8-jdk openjdk-8-jre"
      },
      {
        "label":"apt-install-without-version",
        "start":324,
        "end":374,
        "text":"RUN apt-get install -y openjdk-8-jdk openjdk-8-jre"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":460,
        "end":487,
        "text":"RUN apt-get install -y wget"
      },
      {
        "label":"apt-install-without-version",
        "start":460,
        "end":487,
        "text":"RUN apt-get install -y wget"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1226,
        "end":1268,
        "text":"apt-get install -yq wget ca-certificates \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1226,
        "end":1268,
        "text":"apt-get install -yq wget ca-certificates \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1598,
        "end":1856,
        "text":"apt-get -yq install apache2-utils \\\\nsupervisor \\\\nlibzmq3-dev \\\\n#elasticsearch \\\\nnginx --no-install-recommends \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3210,
        "end":3266,
        "text":"ADD config\/nginx\/kibana.conf \/etc\/nginx\/sites-available\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":3267,
        "end":3280,
        "text":"RUN cd \/opt \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"b78d425ee4af88c2b9697c849e1e514f9eccd516.dockerfile",
    "file_content":"FROM ubuntu:14.04\nMAINTAINER Luis Elizondo \"lelizondo@gmail.com\"\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\nRUN apt-get update --fix-missing\nRUN apt-get update --fix-missing\nRUN apt-get install -y curl\nRUN curl -sL https:\/\/deb.nodesource.com\/setup | sudo bash -\n\nRUN apt-get install -y supervisor python nodejs imagemagick git openssl make build-essential gcc ca-certificates\nRUN npm install -g npm@latest\nRUN npm install -g express-generator bower mocha sinon should assert grunt-cli gulp node-gyp\nRUN npm update\nRUN apt-get update --fix-missing\nRUN mkdir -p \/var\/log\/supervisor\n\n# Cleanup\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\nRUN apt-get autoremove -y\n\nADD .\/config\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord-nodejs.conf\n\nRUN ln -s \/usr\/bin\/nodejs \/usr\/local\/bin\/node\n\nRUN node -v > \/etc\/nodejs-version\n\nEXPOSE 3000\n\nWORKDIR \/var\/www\n\nCMD [\"\/usr\/bin\/supervisord\", \"-n\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":64,
        "text":"MAINTAINER Luis Elizondo \"lelizondo@gmail.com\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":187,
        "end":214,
        "text":"RUN apt-get install -y curl"
      },
      {
        "label":"apt-install-without-version",
        "start":187,
        "end":214,
        "text":"RUN apt-get install -y curl"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":276,
        "end":388,
        "text":"RUN apt-get install -y supervisor python nodejs imagemagick git openssl make build-essential gcc ca-certificates"
      },
      {
        "label":"apt-install-without-version",
        "start":276,
        "end":388,
        "text":"RUN apt-get install -y supervisor python nodejs imagemagick git openssl make build-essential gcc ca-certificates"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":698,
        "end":727,
        "text":"ADD .\/config\/supervisord.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-sudo-run",
        "start":215,
        "end":274,
        "text":"RUN curl -sL https:\/\/deb.nodesource.com\/setup | sudo bash -"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"d42b09c89f881c3e328b3f6dfbb11e5c520b7dcf.dockerfile",
    "file_content":"FROM ubuntu:14.04\nMAINTAINER Dan Liew <daniel.liew@imperial.ac.uk>\n\n# FIXME: Docker doesn't currently offer a way to\n# squash the layers from within a Dockerfile so\n# the resulting image is unnecessarily large!\n\nENV LLVM_VERSION=3.4 \\\n    SOLVERS=STP:Z3 \\\n    STP_VERSION=2.1.2 \\\n    DISABLE_ASSERTIONS=0 \\\n    ENABLE_OPTIMIZED=1 \\\n    KLEE_UCLIBC=klee_uclibc_v1.0.0 \\\n    KLEE_SRC=\/home\/klee\/klee_src \\\n    COVERAGE=0 \\\n    BUILD_DIR=\/home\/klee\/klee_build \\\n    USE_CMAKE=1 \\\n    ASAN_BUILD=0 \\\n    UBSAN_BUILD=0\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        clang-${LLVM_VERSION} \\\n        llvm-${LLVM_VERSION} \\\n        llvm-${LLVM_VERSION}-dev \\\n        llvm-${LLVM_VERSION}-runtime \\\n        llvm \\\n        libcap-dev \\\n        git \\\n        subversion \\\n        cmake \\\n        make \\\n        libboost-program-options-dev \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        perl \\\n        flex \\\n        bison \\\n        libncurses-dev \\\n        zlib1g-dev \\\n        patch \\\n        wget \\\n        unzip \\\n        binutils && \\\n    pip3 install -U lit tabulate && \\\n    update-alternatives --install \/usr\/bin\/python python \/usr\/bin\/python3 50 && \\\n    ( wget -O - http:\/\/download.opensuse.org\/repositories\/home:delcypher:z3\/xUbuntu_14.04\/Release.key | apt-key add - ) && \\\n    echo 'deb http:\/\/download.opensuse.org\/repositories\/home:\/delcypher:\/z3\/xUbuntu_14.04\/ \/' >> \/etc\/apt\/sources.list.d\/z3.list && \\\n    apt-get update\n\n# Create ``klee`` user for container with password ``klee``.\n# and give it password-less sudo access (temporarily so we can use the TravisCI scripts)\nRUN useradd -m klee && \\\n    echo klee:klee | chpasswd && \\\n    cp \/etc\/sudoers \/etc\/sudoers.bak && \\\n    echo 'klee  ALL=(root) NOPASSWD: ALL' >> \/etc\/sudoers\nUSER klee\nWORKDIR \/home\/klee\n\n# Copy across source files needed for build\nRUN mkdir ${KLEE_SRC}\nADD \/ ${KLEE_SRC}\n\n# Set klee user to be owner\nRUN sudo chown --recursive klee: ${KLEE_SRC}\n\n# Create build directory\nRUN mkdir -p ${BUILD_DIR}\n\n# Build\/Install SMT solvers (use TravisCI script)\nRUN cd ${BUILD_DIR} && ${KLEE_SRC}\/.travis\/solvers.sh\n\n# Install testing utils (use TravisCI script)\nRUN cd ${BUILD_DIR} && mkdir test-utils && cd test-utils && \\\n    ${KLEE_SRC}\/.travis\/testing-utils.sh\n\n# FIXME: All these hacks need to be removed. Once we no longer\n# need to support KLEE's old build system they can be removed.\n\n# FIXME: This is a nasty hack so KLEE's configure and build finds\n# LLVM's headers file, libraries and tools\nRUN sudo mkdir -p \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin && \\\n    sudo ln -s \/usr\/bin\/llvm-config \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-config && \\\n    sudo ln -s \/usr\/bin\/llvm-dis \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-dis && \\\n    sudo ln -s \/usr\/bin\/llvm-as \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-as && \\\n    sudo ln -s \/usr\/bin\/llvm-link \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-link && \\\n    sudo ln -s \/usr\/bin\/llvm-ar \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-ar && \\\n    sudo ln -s \/usr\/bin\/opt \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/opt && \\\n    sudo ln -s \/usr\/bin\/lli \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/lli && \\\n    sudo mkdir -p \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/include && \\\n    sudo ln -s \/usr\/include\/llvm-${LLVM_VERSION}\/llvm \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/include\/llvm && \\\n    sudo ln -s \/usr\/include\/llvm-c-${LLVM_VERSION}\/llvm-c \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/include\/llvm-c && \\\n    for static_lib in \/usr\/lib\/llvm-${LLVM_VERSION}\/lib\/*.a ; do sudo ln -s ${static_lib} \/usr\/lib\/`basename ${static_lib}`; done\n\n# FIXME: This is **really gross**. The Official Ubuntu LLVM packages don't ship\n# with ``FileCheck`` or the ``not`` tools so we have to hack building these\n# into KLEE's build system in order for the tests to pass\nRUN [ \"X${USE_CMAKE}\" != \"X1\" ] && ( cd ${KLEE_SRC}\/tools && \\\n    for tool in FileCheck not; do \\\n        svn export \\\n        http:\/\/llvm.org\/svn\/llvm-project\/llvm\/branches\/release_34\/utils\/${tool} ${tool} ; \\\n        sed -i 's\/^USEDLIBS.*$\/LINK_COMPONENTS = support\/' ${tool}\/Makefile; \\\n    done && \\\n    sed -i '0,\/^PARALLEL_DIRS\/a PARALLEL_DIRS += FileCheck not' Makefile ) || echo \"Skipping hack\"\n\n# FIXME: The current TravisCI script expects clang-${LLVM_VERSION} to exist\nRUN sudo ln -s \/usr\/bin\/clang \/usr\/bin\/clang-${LLVM_VERSION} && \\\n    sudo ln -s \/usr\/bin\/clang++ \/usr\/bin\/clang++-${LLVM_VERSION}\n\n# Build KLEE (use TravisCI script)\nRUN cd ${BUILD_DIR} && ${KLEE_SRC}\/.travis\/klee.sh\n\n# Revoke password-less sudo and Set up sudo access for the ``klee`` user so it\n# requires a password\nUSER root\nRUN mv \/etc\/sudoers.bak \/etc\/sudoers && \\\n    echo 'klee  ALL=(root) ALL' >> \/etc\/sudoers\nUSER klee\n\n# Add KLEE binary directory to PATH\nRUN [ \"X${USE_CMAKE}\" != \"X1\" ] && \\\n  (echo 'export PATH=$PATH:'${BUILD_DIR}'\/klee\/Release+Asserts\/bin' >> \/home\/klee\/.bashrc) || \\\n  (echo 'export PATH=$PATH:'${BUILD_DIR}'\/klee\/bin' >> \/home\/klee\/.bashrc)\n\n# Link klee to \/usr\/bin so that it can be used by docker run\nUSER root\nRUN [ \"X${USE_CMAKE}\" != \"X1\" ] && \\\n  (for executable in ${BUILD_DIR}\/klee\/Release+Asserts\/bin\/* ; do ln -s ${executable} \/usr\/bin\/`basename ${executable}`; done) || \\\n  (for executable in ${BUILD_DIR}\/klee\/bin\/* ; do ln -s ${executable} \/usr\/bin\/`basename ${executable}`; done)\n\n# Link klee to the libkleeRuntest library needed by docker run\nRUN [ \"X${USE_CMAKE}\" != \"X1\" ] && (ln -s ${BUILD_DIR}\/klee\/Release+Asserts\/lib\/libkleeRuntest.so \/usr\/lib\/libkleeRuntest.so.1.0) || echo \"Skipping hack\"\nUSER klee\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":66,
        "text":"MAINTAINER Dan Liew <daniel.liew@imperial.ac.uk>"
      },
      {
        "label":"apt-install-without-version",
        "start":543,
        "end":1083,
        "text":"apt-get -y --no-install-recommends install \\\\nclang-${LLVM_VERSION} \\\\nllvm-${LLVM_VERSION} \\\\nllvm-${LLVM_VERSION}-dev \\\\nllvm-${LLVM_VERSION}-runtime \\\\nllvm \\\\nlibcap-dev \\\\ngit \\\\nsubversion \\\\ncmake \\\\nmake \\\\nlibboost-program-options-dev \\\\npython3 \\\\npython3-dev \\\\npython3-pip \\\\nperl \\\\nflex \\\\nbison \\\\nlibncurses-dev \\\\nzlib1g-dev \\\\npatch \\\\nwget \\\\nunzip \\\\nbinutils"
      },
      {
        "label":"pip-install-without-version",
        "start":1093,
        "end":1121,
        "text":"pip3 install -U lit tabulate"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1894,
        "end":1911,
        "text":"ADD \/ ${KLEE_SRC}"
      },
      {
        "label":"use-sudo-run",
        "start":1941,
        "end":1984,
        "text":"RUN sudo chown --recursive klee: ${KLEE_SRC"
      },
      {
        "label":"use-cd-change-dir",
        "start":2089,
        "end":2108,
        "text":"RUN cd ${BUILD_DIR}"
      },
      {
        "label":"use-cd-change-dir",
        "start":2190,
        "end":2208,
        "text":"RUN cd ${BUILD_DIR"
      },
      {
        "label":"use-sudo-run",
        "start":2530,
        "end":3533,
        "text":"RUN sudo mkdir -p \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin && \\\\nsudo ln -s \/usr\/bin\/llvm-config \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-config && \\\\nsudo ln -s \/usr\/bin\/llvm-dis \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-dis && \\\\nsudo ln -s \/usr\/bin\/llvm-as \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-as && \\\\nsudo ln -s \/usr\/bin\/llvm-link \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-link && \\\\nsudo ln -s \/usr\/bin\/llvm-ar \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/llvm-ar && \\\\nsudo ln -s \/usr\/bin\/opt \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/opt && \\\\nsudo ln -s \/usr\/bin\/lli \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/Release\/bin\/lli && \\\\nsudo mkdir -p \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/include && \\\\nsudo ln -s \/usr\/include\/llvm-${LLVM_VERSION}\/llvm \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/include\/llvm && \\\\nsudo ln -s \/usr\/include\/llvm-c-${LLVM_VERSION}\/llvm-c \/usr\/lib\/llvm-${LLVM_VERSION}\/build\/include\/llvm-c"
      },
      {
        "label":"use-sudo-run",
        "start":4365,
        "end":4430,
        "text":"RUN sudo ln -s \/usr\/bin\/clang \/usr\/bin\/clang-${LLVM_VERSION} && \\"
      },
      {
        "label":"use-sudo-run",
        "start":4435,
        "end":4495,
        "text":"sudo ln -s \/usr\/bin\/clang++ \/usr\/bin\/clang++-${LLVM_VERSION}"
      },
      {
        "label":"use-cd-change-dir",
        "start":4532,
        "end":4582,
        "text":"RUN cd ${BUILD_DIR} && ${KLEE_SRC}\/.travis\/klee.sh"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "use-cd-change-dir",
      "use-sudo-run"
    ]
  },
  {
    "filename":"87d88dffd658b5b9f6ecd4f57d567c6596417082.dockerfile",
    "file_content":"# Dockerfile for RNASeQC\nFROM ubuntu:16.04\nMAINTAINER Aaron Graubert\n\nRUN apt-get update && apt-get install -y software-properties-common && \\\n    apt-get update && apt-get install -y \\\n        build-essential \\\n        cmake \\\n        git \\\n        python3 \\\n        python3-pip \\\n        libboost-filesystem-dev \\\n        libboost-regex-dev \\\n        libboost-system-dev \\\n        libbz2-dev \\\n        libcurl3-dev \\\n        liblzma-dev \\\n        libpthread-stubs0-dev \\\n        wget \\\n        zlib1g-dev \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n# SeqLib\nCOPY Makefile \/opt\/rnaseqc\/Makefile\nRUN cd \/opt\/rnaseqc && git clone --recursive https:\/\/github.com\/walaj\/SeqLib.git && \\\n    cd SeqLib && git checkout 7e1f98267b5057f9505dbff119308137a0e006db && cd .. && \\\n    make SeqLib\/lib\/libseqlib.a\n\n# python\nRUN cd \/opt && git clone https:\/\/github.com\/francois-a\/rnaseq-utils rnaseq && cd rnaseq && \\\n  git checkout f1c6a5677bbca465ea1edd06c2293a5d1078a18b && python3 -m pip install --upgrade pip setuptools && \\\n  python3 -m pip install numpy && python3 -m pip install pandas matplotlib scipy pyBigWig bx-python \\\n  agutil nbformat seaborn sklearn && mkdir -p \/root\/.config\/matplotlib && echo \"backend\t:\tAgg\" > \/root\/.config\/matplotlib\/matplotlibrc\nENV PYTHONPATH $PYTHONPATH:\/opt\/\n\n#RNASeQC\nCOPY src \/opt\/rnaseqc\/src\nCOPY python \/scripts\nCOPY args.hxx \/opt\/rnaseqc\nCOPY bioio.hpp \/opt\/rnaseqc\nRUN cd \/opt\/rnaseqc && make && ln -s \/opt\/rnaseqc\/rnaseqc \/usr\/local\/bin\/rnaseqc && make clean\n\n# clean up\nRUN apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* && \\\n    apt-get autoclean && \\\n    apt-get autoremove -y && \\\n    rm -rf \/var\/lib\/{apt,dpkg,cache,log}\/\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":43,
        "end":68,
        "text":"MAINTAINER Aaron Graubert"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":165,
        "end":487,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ncmake \\\\ngit \\\\npython3 \\\\npython3-pip \\\\nlibboost-filesystem-dev \\\\nlibboost-regex-dev \\\\nlibboost-system-dev \\\\nlibbz2-dev \\\\nlibcurl3-dev \\\\nliblzma-dev \\\\nlibpthread-stubs0-dev \\\\nwget \\"
      },
      {
        "label":"apt-install-without-version",
        "start":165,
        "end":487,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ncmake \\\\ngit \\\\npython3 \\\\npython3-pip \\\\nlibboost-filesystem-dev \\\\nlibboost-regex-dev \\\\nlibboost-system-dev \\\\nlibbz2-dev \\\\nlibcurl3-dev \\\\nliblzma-dev \\\\nlibpthread-stubs0-dev \\\\nwget \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":92,
        "end":137,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":92,
        "end":137,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"use-cd-change-dir",
        "start":590,
        "end":609,
        "text":"RUN cd \/opt\/rnaseqc"
      },
      {
        "label":"use-cd-change-dir",
        "start":750,
        "end":755,
        "text":"cd .."
      },
      {
        "label":"use-cd-change-dir",
        "start":680,
        "end":689,
        "text":"cd SeqLib"
      },
      {
        "label":"use-cd-change-dir",
        "start":803,
        "end":811,
        "text":"RUN cd \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":881,
        "end":890,
        "text":"cd rnaseq"
      },
      {
        "label":"pip-install-without-version",
        "start":1042,
        "end":1143,
        "text":"python3 -m pip install pandas matplotlib scipy pyBigWig bx-python \\\\nagutil nbformat seaborn sklearn"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"88a7c7d73156682cf558a988b694f83343e6fcb0.dockerfile",
    "file_content":"FROM rounds\/10m-python\nMAINTAINER Aviv Laufer\n\n\nRUN apt-get update && \\\n  apt-get install -y  git\n\n\nRUN cd \/root\/ && git clone https:\/\/github.com\/rounds\/py-ssj.git\nRUN cd \/root\/py-ssj && pip install -r requirements.txt\n\nCMD cd \/root\/py-ssj && python py-ssj.py\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":22,
        "text":"FROM rounds\/10m-python"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":23,
        "end":45,
        "text":"MAINTAINER Aviv Laufer"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":74,
        "end":97,
        "text":"apt-get install -y git"
      },
      {
        "label":"apt-install-without-version",
        "start":74,
        "end":97,
        "text":"apt-get install -y git"
      },
      {
        "label":"use-cd-change-dir",
        "start":100,
        "end":113,
        "text":"RUN cd \/root\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":164,
        "end":183,
        "text":"RUN cd \/root\/py-ssj"
      },
      {
        "label":"use-cd-change-dir",
        "start":220,
        "end":239,
        "text":"CMD cd \/root\/py-ssj"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"88f8587e0e2cba79fe6b05c564e16d5b1a87e2c0.dockerfile",
    "file_content":"FROM therealwardo\/python-2.7-pip\nMAINTAINER \"David Jay <davidgljay@gmail.com>\"\n\nRUN apt-get update\nRUN pip install mkdocs\nRUN pip install mkdocs-cinder\nRUN pip install mkdocs-material\nRUN apt-get install wget\nWORKDIR \/s3cmd\nRUN wget http:\/\/ufpr.dl.sourceforge.net\/project\/s3tools\/s3cmd\/1.6.1\/s3cmd-1.6.1.tar.gz\nRUN tar xzf s3cmd-1.6.1.tar.gz\nWORKDIR \/s3cmd\/s3cmd-1.6.1\nRUN python setup.py install\nRUN apt-get install git -y\nWORKDIR \/usr\/docs\n\n\nCMD bash\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":32,
        "text":"FROM therealwardo\/python-2.7-pip"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":33,
        "end":78,
        "text":"MAINTAINER \"David Jay <davidgljay@gmail.com>\""
      },
      {
        "label":"pip-install-without-version",
        "start":99,
        "end":183,
        "text":"RUN pip install mkdocs\\nRUN pip install mkdocs-cinder\\nRUN pip install mkdocs-material"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":184,
        "end":208,
        "text":"RUN apt-get install wget"
      },
      {
        "label":"apt-install-without-version",
        "start":184,
        "end":208,
        "text":"RUN apt-get install wget"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"8d9ebc69bf9dc52b8a22a62179216e64f2894d1d.dockerfile",
    "file_content":"# Start with cuDNN base image\nFROM nvidia\/cuda:8.0-cudnn6-devel-ubuntu14.04\nMAINTAINER Kai Arulkumaran <design@kaixhin.com>\n\n# Install git, wget, python-dev, pip, BLAS + LAPACK and other dependencies\nRUN apt-get update && apt-get install -y \\\n  gfortran \\\n  git \\\n  wget \\\n  liblapack-dev \\\n  libopenblas-dev \\\n  python-dev \\\n  python-pip \\\n  python-nose \\\n  python-numpy \\\n  python-scipy\n\n# Remove OS-installed six\nRUN rm \/usr\/lib\/python2.7\/dist-packages\/six*\n\n# Set CUDA_ROOT\nENV CUDA_ROOT \/usr\/local\/cuda\/bin\n\n# Install CMake 3\nRUN cd \/root && wget http:\/\/www.cmake.org\/files\/v3.8\/cmake-3.8.1.tar.gz && \\\n  tar -xf cmake-3.8.1.tar.gz && cd cmake-3.8.1 && \\\n  .\/configure && \\\n  make -j \"$(nproc)\" && \\\n  make install\n\n# Install Cython\nRUN pip install Cython\n\n# Clone libgpuarray repo and move into it\nRUN cd \/root && git clone https:\/\/github.com\/Theano\/libgpuarray.git && cd libgpuarray && \\\n# Make and move into build directory\n  mkdir Build && cd Build && \\\n# CMake\n  cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\/usr && \\\n# Make\n  make -j\"$(nproc)\" && \\\n  make install\n# Install pygpu\nRUN cd \/root\/libgpuarray && \\\n  python setup.py build_ext -L \/usr\/lib -I \/usr\/include && \\\n  python setup.py install\n\n# Install bleeding-edge Theano\nRUN pip install --upgrade pip\nRUN pip install --upgrade six\nRUN pip install --upgrade --no-deps git+git:\/\/github.com\/Theano\/Theano.git\n# Set up .theanorc for CUDA\nRUN echo \"[global]\\ndevice=cuda\\nfloatX=float32\\noptimizer_including=cudnn\\n[lib]\\ncnmem=0.1\\n[nvcc]\\nfastmath=True\\n[dnn]\\nenabled=True\\ninclude_path=\/usr\/local\/cuda\/include\\nlibrary_path=\/usr\/local\/cuda\/lib64\" > \/root\/.theanorc\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":76,
        "end":122,
        "text":"MAINTAINER Kai Arulkumaran <design@kaixhin.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":222,
        "end":388,
        "text":"apt-get install -y \\\\ngfortran \\\\ngit \\\\nwget \\\\nliblapack-dev \\\\nlibopenblas-dev \\\\npython-dev \\\\npython-pip \\\\npython-nose \\\\npython-numpy \\\\npython-scipy"
      },
      {
        "label":"apt-install-without-version",
        "start":222,
        "end":388,
        "text":"apt-get install -y \\\\ngfortran \\\\ngit \\\\nwget \\\\nliblapack-dev \\\\nlibopenblas-dev \\\\npython-dev \\\\npython-pip \\\\npython-nose \\\\npython-numpy \\\\npython-scipy"
      },
      {
        "label":"use-cd-change-dir",
        "start":531,
        "end":543,
        "text":"RUN cd \/root"
      },
      {
        "label":"pip-install-without-version",
        "start":738,
        "end":760,
        "text":"RUN pip install Cython"
      },
      {
        "label":"use-cd-change-dir",
        "start":804,
        "end":819,
        "text":"RUN cd \/root &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1105,
        "end":1129,
        "text":"RUN cd \/root\/libgpuarray"
      },
      {
        "label":"pip-install-without-version",
        "start":1254,
        "end":1345,
        "text":"RUN pip install --upgrade pip\\nRUN pip install --upgrade six\\nRUN pip install --upgrade --no-"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"56ae4df8dd444ac04a3b60147c99914272c08876.dockerfile",
    "file_content":"# Docker container for Ubuntu 14.04\n\n# See https:\/\/github.com\/ceejatec\/naked-docker\/ for details about the\n# construction of the base image.\n\nFROM ceejatec\/naked-ubuntu:14.04\nMAINTAINER build-team@couchbase.com\n\nUSER root\n\n# Install SSH server\nRUN apt-get update && \\\n    apt-get install -y openssh-server && \\\n    rm -f \/var\/cache\/apt\/archives\/*.deb && \\\n    mkdir \/var\/run\/sshd # update\n\n# Create couchbase user with password-less sudo privs, and give\n# ownership of \/opt\/couchbase\nRUN useradd couchbase -G sudo -m -s \/bin\/bash && \\\n    mkdir -p \/opt\/couchbase && chown -R couchbase:couchbase \/opt\/couchbase && \\\n    echo 'couchbase:couchbase' | chpasswd && \\\n    sed -ri 's\/ALL\\) ALL\/ALL) NOPASSWD:ALL\/' \/etc\/sudoers\n\nRUN apt-get update\n\n# Install Couchbase build dependencies\nRUN apt-get update && apt-get install -y ccache g++ git-core tar libssl-dev ruby rake ncurses-dev python-dev python-pip devscripts debhelper ed man curl libc6-i386 libc-bin binutils && \\\n    rm -f \/var\/cache\/apt\/archives\/*.deb\nRUN ln -s \/usr\/bin\/nodejs \/usr\/bin\/node\nRUN ln -s \/usr\/bin\/nodejs \/usr\/sbin\/node\nRUN ln -s \/usr\/bin\/nodejs \/usr\/local\/bin\/node\nRUN echo 'PATH=\"\/usr\/lib\/ccache:$PATH\"' >> \/home\/couchbase\/.profile\nRUN curl https:\/\/storage.googleapis.com\/git-repo-downloads\/repo -o \/usr\/local\/bin\/repo && \\\n    chmod a+x \/usr\/local\/bin\/repo && \\\n    cd \/tmp && rm -rf \/tmp\/deploy\n\n# PyInstaller is required by sgcollect_info\nRUN pip install -Iv PyInstaller==3.1\n\n# golang\nRUN mkdir -p \/usr\/local\/go\/1.4.1 && cd \/usr\/local\/go\/1.4.1 && \\\n    curl https:\/\/storage.googleapis.com\/golang\/go1.4.1.linux-amd64.tar.gz -o go.tar.gz && \\\n    tar xzf go.tar.gz && \\\n    mkdir \/usr\/local\/go\/1.5.2 && cd \/usr\/local\/go\/1.5.2 && \\\n    curl https:\/\/storage.googleapis.com\/golang\/go1.5.2.linux-amd64.tar.gz -o go.tar.gz && \\\n    tar xzf go.tar.gz && \\\n    mkdir \/usr\/local\/go\/1.5.3 && cd \/usr\/local\/go\/1.5.3 && \\\n    curl https:\/\/storage.googleapis.com\/golang\/go1.5.3.linux-amd64.tar.gz -o go.tar.gz && \\\n    tar xzf go.tar.gz && \\\n    mkdir \/usr\/local\/go\/1.7.1 && cd \/usr\/local\/go\/1.7.1 && \\\n    curl https:\/\/storage.googleapis.com\/golang\/go1.7.1.linux-amd64.tar.gz -o go.tar.gz && \\\n    tar xzf go.tar.gz && \\\n    mkdir \/usr\/local\/go\/1.7.4 && cd \/usr\/local\/go\/1.7.4 && \\\n    curl https:\/\/storage.googleapis.com\/golang\/go1.7.4.linux-amd64.tar.gz -o go.tar.gz && \\\n    tar xzf go.tar.gz && \\\n    mkdir \/usr\/local\/go\/1.8.5 && cd \/usr\/local\/go\/1.8.5 && \\\n    curl https:\/\/storage.googleapis.com\/golang\/go1.8.5.linux-amd64.tar.gz -o go.tar.gz && \\\n    tar xzf go.tar.gz && \\\n    mkdir \/usr\/local\/go\/1.9 && cd \/usr\/local\/go\/1.9 && \\\n    curl https:\/\/storage.googleapis.com\/golang\/go1.9.linux-amd64.tar.gz -o go.tar.gz && \\\n    tar xzf go.tar.gz && \\\n    rm go.tar.gz\n\n# Install third-party build dependencies. Note: software-properties-common\n# is only required for add-apt-repository; add-apt-repository is only\n# required to get python2.6; and python2.6 is only required for gyp, which\n# is part of the v8 build. python2.6 is also required for our compiling of\n# pysqlite and pysnappy, and for that we even need python2.6-dev.\nRUN apt-get update && \\\n    apt-get install -y software-properties-common && \\\n    add-apt-repository ppa:deadsnakes\/ppa && \\\n    apt-get update && \\\n    apt-get install -y m4 python2.7 python2.7-dev && \\\n    rm -f \/var\/cache\/apt\/archives\/*.deb\n\n# JDK for Jenkins.\nRUN apt-get install -y openjdk-7-jre-headless && \\\n    rm -f \/var\/cache\/apt\/archives\/*.deb\n\n# Force UTF-8 support, since it seems to fail to update properly at times\nRUN locale-gen en_US en_US.UTF-8 hu_HU hu_HU.UTF-8 && dpkg-reconfigure locales\n\n# Expose SSH daemon and run our builder startup script\nEXPOSE 22\nADD .ssh \/home\/couchbase\/.ssh\nCOPY build\/couchbuilder_start.sh \/usr\/sbin\/\nENTRYPOINT [ \"\/usr\/sbin\/couchbuilder_start.sh\" ]\nCMD [ \"default\" ]\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":175,
        "end":210,
        "text":"MAINTAINER build-team@couchbase.com"
      },
      {
        "label":"root-privilege-user",
        "start":212,
        "end":221,
        "text":"USER root"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":272,
        "end":305,
        "text":"apt-get install -y openssh-server"
      },
      {
        "label":"apt-install-without-version",
        "start":272,
        "end":305,
        "text":"apt-get install -y openssh-server"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":802,
        "end":961,
        "text":"apt-get install -y ccache g++ git-core tar libssl-dev ruby rake ncurses-dev python-dev python-pip devscripts debhelper ed man curl libc6-i386 libc-bin binutils"
      },
      {
        "label":"apt-install-without-version",
        "start":802,
        "end":961,
        "text":"apt-get install -y ccache g++ git-core tar libssl-dev ruby rake ncurses-dev python-dev python-pip devscripts debhelper ed man curl libc6-i386 libc-bin binutils"
      },
      {
        "label":"use-cd-change-dir",
        "start":1337,
        "end":1344,
        "text":"cd \/tmp"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3123,
        "end":3168,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":3123,
        "end":3168,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3671,
        "end":3700,
        "text":"ADD .ssh \/home\/couchbase\/.ssh"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"49c1c7ee4e5b3ed6f28dc172e890b04e2f849507.dockerfile",
    "file_content":"# Dockerfile for lapis on fedora\nFROM fedora\nMAINTAINER http:\/\/fedoraproject.org\/wiki\/Cloud\n\nRUN yum -y update && yum clean all\nRUN yum -y install unzip tar wget vim git make gcc readline-devel pcre-devel openssl-devel && yum clean all\n\n#install openresty\nENV OPENRESTY_VERSION 1.7.7.1\nRUN cd \/usr\/src\/ \\\n&& wget http:\/\/openresty.org\/download\/ngx_openresty-$OPENRESTY_VERSION.tar.gz \\\n&& tar xvfz ngx_openresty-$OPENRESTY_VERSION.tar.gz \\\n&& cd ngx_openresty-$OPENRESTY_VERSION \\\n&& .\/configure \\\n&& make \\\n&& make install\n\n#install luarocks\nENV LUAROCKS_VERSION 2.2.0\nRUN cd \/usr\/src\/ \\\n&& wget http:\/\/luarocks.org\/releases\/luarocks-$LUAROCKS_VERSION.tar.gz \\\n&& tar xvfz luarocks-$LUAROCKS_VERSION.tar.gz \\\n&& cd luarocks-$LUAROCKS_VERSION \\\n&& .\/configure --prefix=\/usr\/local\/openresty\/luajit \\\n        --with-lua=\/usr\/local\/openresty\/luajit\/ \\\n        --lua-suffix=jit-2.1.0-alpha \\\n        --with-lua-include=\/usr\/local\/openresty\/luajit\/include\/luajit-2.1 \\\n&& make build \\\n&& make install\n\nENV PATH=\/usr\/local\/openresty\/luajit\/bin\/:$PATH\n\n#install lapis\nRUN luarocks install lapis\n\n# Bundle app source\n#COPY . \/lapisappa\nADD . \/opt\/webapp\nWORKDIR \/opt\/webapp\n\nEXPOSE 8080\n# start lapis server\nCMD [\"lapis\", \"server\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":33,
        "end":44,
        "text":"FROM fedora"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":45,
        "end":91,
        "text":"MAINTAINER http:\/\/fedoraproject.org\/wiki\/Cloud"
      },
      {
        "label":"yum-install-without-version",
        "start":128,
        "end":218,
        "text":"RUN yum -y install unzip tar wget vim git make gcc readline-devel pcre-devel openssl-devel"
      },
      {
        "label":"use-cd-change-dir",
        "start":286,
        "end":304,
        "text":"RUN cd \/usr\/src\/ \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":442,
        "end":477,
        "text":"cd ngx_openresty-$OPENRESTY_VERSION"
      },
      {
        "label":"use-cd-change-dir",
        "start":569,
        "end":587,
        "text":"RUN cd \/usr\/src\/ \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":709,
        "end":741,
        "text":"&& cd luarocks-$LUAROCKS_VERSION"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1127,
        "end":1144,
        "text":"ADD . \/opt\/webapp"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"6fe1ee98f43eb693cfd647f3c9e237cfdb08fde1.dockerfile",
    "file_content":"FROM snapcraft\/ubuntu-base:amd64-16.04.1\nMAINTAINER Rex Tsai \"http:\/\/about.me\/chihchun\"\n\nENV SNAPCRAFT_VERSION=2.15.1\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN sed -i \"\/^# deb.*universe\/ s\/^# \/\/\" \/etc\/apt\/sources.list\nRUN sed -i \"\/^# deb.*multiverse\/ s\/^# \/\/\" \/etc\/apt\/sources.list\nRUN apt-get update\n\n# build and install snapcraft\nWORKDIR \/tmp\nRUN apt-get install -y --no-install-recommends \\\n        devscripts \\\n        equivs \\\n        git \\\n\tca-certificates \\\n\tcurl\n\nRUN git clone --depth 1 --branch ${SNAPCRAFT_VERSION} https:\/\/github.com\/snapcore\/snapcraft \\\n && cd snapcraft \\\n && mk-build-deps debian\/control -i --tool 'apt-get -y --no-install-recommends' \\\n && dpkg-buildpackage -us -uc \\\n && apt-get install -y ..\/*.deb \\\n && apt-get remove --purge -y devscripts equivs git python3-fixtures python3-responses python3-setuptools python3-testscenarios python3-testtools \\\n && apt-get autoremove -y \\\n && apt-get clean -y\nRUN rm -rf \/tmp\/* \/var\/tmp\/*\n\n# Setup sudo for apt-get\nRUN apt-get install -y sudo\nRUN echo \"ALL ALL=NOPASSWD: \/usr\/bin\/apt-get\" >> \/etc\/sudoers.d\/apt-get \\\n && chmod 0440 \/etc\/sudoers.d\/apt-get\n# sudo requires a pw entry\nRUN for i in $(seq 500 1100); do echo snapper:x:$i:100:a build user:\/build:\/bin\/bash ; done | tee -a \/etc\/passwd\n\n# Clean up\nRUN apt-get clean\n\n# snapcraft need to save configs in ${HOME}\/.local\nENV HOME \/home\nVOLUME \/build\nWORKDIR \/build\n\nADD docker-entrypoint.sh \/usr\/local\/bin\nRUN chmod 755 \/usr\/local\/bin\/docker-entrypoint.sh\nENTRYPOINT [\"\/usr\/local\/bin\/docker-entrypoint.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":41,
        "end":87,
        "text":"MAINTAINER Rex Tsai \"http:\/\/about.me\/chihchun\""
      },
      {
        "label":"apt-install-without-version",
        "start":343,
        "end":468,
        "text":"RUN apt-get install -y --no-install-recommends \\\\ndevscripts \\\\nequivs \\\\ngit \\\\nca-certificates \\\\ncurl"
      },
      {
        "label":"use-cd-change-dir",
        "start":568,
        "end":582,
        "text":"cd snapcraft \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":983,
        "end":1010,
        "text":"RUN apt-get install -y sudo"
      },
      {
        "label":"apt-install-without-version",
        "start":983,
        "end":1010,
        "text":"RUN apt-get install -y sudo"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1390,
        "end":1429,
        "text":"ADD docker-entrypoint.sh \/usr\/local\/bin"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"71ce5f9081bfe7e9160956357c5f527a0a9f4f8b.dockerfile",
    "file_content":"FROM golang:latest AS build-env\nADD .\/  \/go\/src\/github.com\/iyacontrol\/prom2click\nWORKDIR \/go\/src\/github.com\/iyacontrol\/prom2click\nRUN CGO_ENABLED=0  go build -ldflags \"-X main.GitCommit=${GIT_COMMIT}${GIT_DIRTY} -X main.VersionPrerelease=DEV\" -o bin\/prom2click\n\nFROM alpine\nRUN apk add -U tzdata\nRUN ln -sf \/usr\/share\/zoneinfo\/Asia\/Shanghai  \/etc\/localtime\nCOPY --from=build-env \/go\/src\/github.com\/iyacontrol\/bin\/prom2click \/usr\/local\/bin\/prom2click\nRUN chmod +x \/usr\/local\/bin\/prom2click\nCMD [\"prom2click\"]",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":32,
        "end":80,
        "text":"ADD .\/ \/go\/src\/github.com\/iyacontrol\/prom2click"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":31,
        "text":"FROM golang:latest AS build-env"
      },
      {
        "label":"miss-specific-tags",
        "start":262,
        "end":273,
        "text":"FROM alpine"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7401fc55498b184f34843abcc6bf8a972ef6c0d8.dockerfile",
    "file_content":"FROM ubuntu:latest\nMAINTAINER GreenPioneer\n# Install Utilities\nRUN apt-get update -q\n# RUN apt-get install -yqq wget aptitude htop vim git traceroute dnsutils curl ssh sudo tree tcpdump nano psmisc gcc make build-essential libfreetype6 libfontconfig libkrb5-dev\nRUN apt-get install -yqq wget vim git curl ssh build-essential\n\n# Install NodeJS\nRUN curl -sL https:\/\/deb.nodesource.com\/setup_4.x | sudo -E bash -\nRUN sudo apt-get install -yq nodejs\n\n# Install Meanstackjs Prerequisites\nRUN npm install --quiet -g mocha pm2 mongo-express nodemon node-inspector\n\nRUN mkdir \/opt\/meanstackjs\nWORKDIR \/opt\/meanstackjs\n\n# Copies the local package.json file to the container\n# and utilities docker container cache to not needing to rebuild\n# and install node_modules\/ everytime we build the docker, but only\n# when the local package.json file changes.\n# Install npm packages\nADD package.json \/opt\/meanstackjs\/package.json\nRUN npm install --quiet\n\n# Install bower packages\n# ADD bower.json \/opt\/meanstackjs\/bower.json\n# ADD .bowerrc \/opt\/meanstackjs\/.bowerrc\n# RUN bower install --quiet --allow-root --config.interactive=false\n\n# Share local directory on the docker container\nADD . \/opt\/meanstackjs\n\n# Machine cleanup\nRUN npm cache clean\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Set development environment as default\nENV NODE_ENV development\n\n# Ports generic\nEXPOSE 80:80\nEXPOSE 443:443\n\n# Port 3000 for Meanstackjs server\nEXPOSE 3000:3000\n\n# Port 5858 for node debug\nEXPOSE 5858:5858\n\n# Port 35729 for livereload\nEXPOSE 35729:35729\n\n# Run Meanstackjs server\nCMD [\"npm\", \"start\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":42,
        "text":"MAINTAINER GreenPioneer"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":262,
        "end":324,
        "text":"RUN apt-get install -yqq wget vim git curl ssh build-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":262,
        "end":324,
        "text":"RUN apt-get install -yqq wget vim git curl ssh build-essential"
      },
      {
        "label":"use-sudo-run",
        "start":410,
        "end":434,
        "text":"RUN sudo apt-get install"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":419,
        "end":445,
        "text":"apt-get install -yq nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":419,
        "end":445,
        "text":"apt-get install -yq nodejs"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":865,
        "end":911,
        "text":"ADD package.json \/opt\/meanstackjs\/package.json"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1165,
        "end":1187,
        "text":"ADD . \/opt\/meanstackjs"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "use-sudo-run",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"75731387f2d1752fb6e4822f593c6a8b2a11bead.dockerfile",
    "file_content":"FROM ubuntu\n\nRUN apt-get update\nRUN apt-get install -y \\\n    apt-utils \\\n    vim \\\n    curl \\\n    apache2 \\\n    apache2-utils \\\n    git \\\n    python \\\n    python-pip \\\n    libapache2-mod-wsgi\n\nRUN pip install --upgrade pip\nRUN pip install \\\n    'django==1.4.22' \\\n    git+https:\/\/github.com\/Datadog\/dd-trace-py.git@django-legacy-support\n\nRUN ln -sf \/proc\/self\/fd\/1 \/var\/log\/apache2\/access.log && \\\n    ln -sf \/proc\/self\/fd\/1 \/var\/log\/apache2\/error.log\n\nADD .\/wsgi_site.conf \/etc\/apache2\/sites-available\/000-default.conf\n\nWORKDIR \/var\/www\/html\/app\n\nEXPOSE 80\nCMD sh -c \"python manage.py syncdb --noinput; apache2ctl -D FOREGROUND\"\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM ubuntu"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":32,
        "end":191,
        "text":"RUN apt-get install -y \\\\napt-utils \\\\nvim \\\\ncurl \\\\napache2 \\\\napache2-utils \\\\ngit \\\\npython \\\\npython-pip \\\\nlibapache2-mod-wsgi"
      },
      {
        "label":"apt-install-without-version",
        "start":32,
        "end":191,
        "text":"RUN apt-get install -y \\\\napt-utils \\\\nvim \\\\ncurl \\\\napache2 \\\\napache2-utils \\\\ngit \\\\npython \\\\npython-pip \\\\nlibapache2-mod-wsgi"
      },
      {
        "label":"pip-install-without-version",
        "start":193,
        "end":222,
        "text":"RUN pip install --upgrade pip"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":453,
        "end":519,
        "text":"ADD .\/wsgi_site.conf \/etc\/apache2\/sites-available\/000-default.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"79e37a9a4b0abdc1394fea826ef1a353ae76ae60.dockerfile",
    "file_content":"FROM ubuntu:latest\n\nMAINTAINER Dapeng \"dapeng@edgenius.com\"\n\n# Update Ubuntu\nRUN apt-get update && apt-get -y upgrade\n\n# Add oracle java 8 repository\nRUN apt-get -y install software-properties-common\nRUN add-apt-repository -y ppa:webupd8team\/java\nRUN apt-get -y update\n\n# Install Oracle Java\n# Accept the Oracle Java license\nRUN echo \"oracle-java8-installer shared\/accepted-oracle-license-v1-1 boolean true\" | debconf-set-selections\nRUN apt-get -y install oracle-java8-installer\n\n# Install tomcat\nRUN apt-get -y install tomcat8\n\nCOPY logging.properties \/etc\/tomcat8\nCOPY tomcat8.sh \/tomcat8\/\nRUN chmod +x \/tomcat8\/tomcat8.sh\n\nRUN rm -rf \/var\/lib\/tomcat8\/webapps\/ROOT\/*\n\nCOPY geniuswiki.war \/var\/lib\/tomcat8\/webapps\/ROOT\/\nRUN cd \/var\/lib\/tomcat8\/webapps\/ROOT\/ && jar xvf geniuswiki.war && rm geniuswiki.war\n\nWORKDIR \/tomcat8\/\nCMD \/bin\/bash -c .\/tomcat8.sh",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":59,
        "text":"MAINTAINER Dapeng \"dapeng@edgenius.com\""
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":150,
        "end":199,
        "text":"RUN apt-get -y install software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":150,
        "end":199,
        "text":"RUN apt-get -y install software-properties-common"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":497,
        "end":527,
        "text":"RUN apt-get -y install tomcat8"
      },
      {
        "label":"apt-install-without-version",
        "start":497,
        "end":527,
        "text":"RUN apt-get -y install tomcat8"
      },
      {
        "label":"use-cd-change-dir",
        "start":721,
        "end":737,
        "text":"RUN cd \/var\/lib\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"7a15fbd344174824de47eec008fcc3bb239976bf.dockerfile",
    "file_content":"FROM xacc\/xacc-python-install\n\nLABEL maintainer=\"Alex McCaskey <mccaskeyaj@ornl.gov>\"\n\n# Replace shell with bash so we can source files\nRUN rm \/bin\/sh && ln -s \/bin\/bash \/bin\/sh && apt-get -y update && apt-get -y install vim gfortran libblas-dev liblapack-dev pkg-config \\\n    && python3 -m pip install --upgrade pip && python3 -m pip install jupyterlab pyquil mpmath deepdiff \\\n       numpy scipy openfermion --no-cache-dir && ipython3 kernel install \\\n    && git clone https:\/\/github.com\/amccaskey\/OpenFermion-Psi4 && cd OpenFermion-Psi4 && python3 -m pip install --user .\nrun git clone https:\/\/github.com\/ornl-qci\/xacc-rigetti \\\n    && git clone https:\/\/github.com\/ornl-qci\/xacc-ibm \\\n    && git clone https:\/\/github.com\/ornl-qci\/xacc-vqe \\ \n    && git clone https:\/\/github.com\/ornl-qci\/tnqvm \\\n    && cd xacc-rigetti && python3 -m pip install --user . \\\n    && cd ..\/xacc-ibm && python3 -m pip install --user . \\\n    && cd \/xacc-vqe && python3 -m pip install --user . \\\n    && cd ..\/tnqvm && python3 -m pip install --user . \n\nrun cd \/ && git clone https:\/\/github.com\/psi4\/psi4 && cd psi4 && mkdir build && cd build \\\n    && cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$(python3 -m site --user-site)\/psi4 \\\n    && make -j8 install \nrun python3 -m pip uninstall -y h5py && python3 -m pip install h5py==2.8.0rc1\nrun echo \".\/psi4\" >> \/root\/.local\/lib\/python3.6\/site-packages\/psi4.pth \\\n    && echo \"export PATH=$PATH:$(python3 -m site --user-site)\/psi4\/bin\" >> ~\/.bashrc\n# hack - fix bug in openfermion... need to contribute back\n# i think it has to do with volumes mounted via the docker container\nrun sed -i 's\/os.rename\/shutil.move\/g' \/usr\/local\/lib\/python3.6\/dist-packages\/openfermion\/hamiltonians\/_molecular_data.py \\\n    && sed -i 's\/import os\/import os, shutil\/g' \/usr\/local\/lib\/python3.6\/dist-packages\/openfermion\/hamiltonians\/_molecular_data.py\nrun apt-get install -y apt-transport-https ca-certificates curl software-properties-common \\\n    && curl -fsSL https:\/\/download.docker.com\/linux\/ubuntu\/gpg | apt-key add - \\\n    && add-apt-repository \"deb [arch=amd64] https:\/\/download.docker.com\/linux\/ubuntu bionic test\" \nrun apt-get update -y && apt-get install -y docker-ce\nrun echo \"alias python=python3\" >> ~\/.bashrc \\\n    && echo \"function xacc-logs() { docker logs -f \\$(docker ps -aqf name=expo) ; }\" >> ~\/.bashrc\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":29,
        "text":"FROM xacc\/xacc-python-install"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":202,
        "end":272,
        "text":"apt-get -y install vim gfortran libblas-dev liblapack-dev pkg-config \\"
      },
      {
        "label":"apt-install-without-version",
        "start":202,
        "end":272,
        "text":"apt-get -y install vim gfortran libblas-dev liblapack-dev pkg-config \\"
      },
      {
        "label":"pip-install-without-version",
        "start":280,
        "end":424,
        "text":"python3 -m pip install --upgrade pip && python3 -m pip install jupyterlab pyquil mpmath deepdiff \\\\nnumpy scipy openfermion --no-cache-dir"
      },
      {
        "label":"use-cd-change-dir",
        "start":520,
        "end":539,
        "text":"cd OpenFermion-Psi4"
      },
      {
        "label":"use-cd-change-dir",
        "start":802,
        "end":820,
        "text":"&& cd xacc-rigetti"
      },
      {
        "label":"use-cd-change-dir",
        "start":865,
        "end":879,
        "text":"cd ..\/xacc-ibm"
      },
      {
        "label":"use-cd-change-dir",
        "start":978,
        "end":995,
        "text":"&& cd ..\/tnqvm &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":924,
        "end":936,
        "text":"cd \/xacc-vqe"
      },
      {
        "label":"use-cd-change-dir",
        "start":1030,
        "end":1038,
        "text":"run cd \/"
      },
      {
        "label":"use-cd-change-dir",
        "start":1084,
        "end":1091,
        "text":"cd psi4"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"f4188e35fe7aae2052ba3ec151d0d8fa301d533b.dockerfile",
    "file_content":"FROM ubuntu\nMAINTAINER Syoyo Fujita(syoyo@lighttransport.com)\n\nRUN apt-get update\nRUN apt-get -y --force-yes install x-window-system\nRUN apt-get install -y binutils\nRUN apt-get install -y pkg-config\nRUN apt-get install -y x11vnc\nRUN apt-get install -y mesa-utils\nRUN apt-get install -y libgtk2.0-0\nRUN apt-get install -y twm\n\nADD NVIDIA-DRIVER.run \/tmp\/NVIDIA-DRIVER.run\nRUN sh \/tmp\/NVIDIA-DRIVER.run -a -N --ui=none --no-kernel-module\nRUN nvidia-xconfig -a --use-display-device=None --enable-all-gpus --virtual=1280x1024\nRUN rm \/tmp\/NVIDIA-DRIVER.run\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM ubuntu"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":12,
        "end":61,
        "text":"MAINTAINER Syoyo Fujita(syoyo@lighttransport.com)"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":82,
        "end":324,
        "text":"RUN apt-get -y --force-yes install x-window-system\\nRUN apt-get install -y binutils\\nRUN apt-get install -y pkg-config\\nRUN apt-get install -y x11vnc\\nRUN apt-get install -y mesa-utils\\nRUN apt-get install -y libgtk2.0-0\\nRUN apt-get install -y twm"
      },
      {
        "label":"apt-install-without-version",
        "start":82,
        "end":324,
        "text":"RUN apt-get -y --force-yes install x-window-system\\nRUN apt-get install -y binutils\\nRUN apt-get install -y pkg-config\\nRUN apt-get install -y x11vnc\\nRUN apt-get install -y mesa-utils\\nRUN apt-get install -y libgtk2.0-0\\nRUN apt-get install -y twm"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":326,
        "end":370,
        "text":"ADD NVIDIA-DRIVER.run \/tmp\/NVIDIA-DRIVER.run"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"d7d9f644b6d76f29bc147fc40c211554df1f3dbf.dockerfile",
    "file_content":"FROM\t\tphusion\/baseimage:0.9.18\nMAINTAINER\tcontact@oliver.la\nENV\t\tSEAFILE_VERSION 6.3.7\n\nEXPOSE\t\t8082 8000\n\nVOLUME\t\t\/seafile\nWORKDIR\t\t\/seafile\n\n# Required packages for pro edition\n# Taken from https:\/\/manual.seafile.com\/deploy_pro\/download_and_setup_seafile_professional_server.html\nRUN\t\tapt-get update && \\\n\t\tDEBIAN_FRONTEND=noninteractive apt-get install -y \\\n\t\topenjdk-7-jre \\\n\t\tpoppler-utils libpython2.7 python-pip python-setuptools python-imaging python-mysqldb python-memcache python-ldap python-urllib3 \\\n\t\tsqlite3 wget \\\n\t\tlibreoffice libreoffice-script-provider-python \\\n\t\tfonts-vlgothic ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy && \\\n\t\tapt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* && \\\n\t\tpip install boto\n\n# Download seafile binary\n# List of binaries are here: https:\/\/download.seafile.com\/d\/6e5297246c\/files\/?p=\/pro\/\nRUN\t\twget \"https:\/\/download.seafile.com\/d\/6e5297246c\/files\/?p=\/pro\/seafile-pro-server_${SEAFILE_VERSION}_x86-64.tar.gz&dl=1\" -O \"\/seafile-pro-server_${SEAFILE_VERSION}_x86-64.tar.gz\"\n\n# Add seafile service.\nADD\t\tservice\/seafile\/run.sh \/etc\/service\/seafile\/run\nADD\t\tservice\/seafile\/stop.sh \/etc\/service\/seafile\/stop\n\n# Add seahub service\nADD\t\tservice\/seahub\/run.sh \/etc\/service\/seahub\/run\nADD\t\tservice\/seahub\/stop.sh \/etc\/service\/seahub\/stop\n\n# Custom configuration\nCOPY\tconfig\/seafevents.conf \/seafevents.conf\n\n# Custom scripts\nADD\t\tbin\/setup.sh \/usr\/local\/sbin\/setup\nADD\t\tbin\/upgrade.sh \/usr\/local\/sbin\/upgrade\n\n# Set permissions\nRUN\t\tchmod +x \/usr\/local\/sbin\/setup && \\\n\t\tchmod +x \/usr\/local\/sbin\/upgrade && \\\n\t\tchmod +x \/etc\/service\/seafile\/* && \\\n\t\tchmod +x \/etc\/service\/seahub\/*\n\nCMD\t\t\/sbin\/my_init\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":31,
        "end":59,
        "text":"MAINTAINER contact@oliver.la"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":340,
        "end":639,
        "text":"apt-get install -y \\\\nopenjdk-7-jre \\\\npoppler-utils libpython2.7 python-pip python-setuptools python-imaging python-mysqldb python-memcache python-ldap python-urllib3 \\\\nsqlite3 wget \\\\nlibreoffice libreoffice-script-provider-python \\\\nfonts-vlgothic ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy"
      },
      {
        "label":"apt-install-without-version",
        "start":340,
        "end":639,
        "text":"apt-get install -y \\\\nopenjdk-7-jre \\\\npoppler-utils libpython2.7 python-pip python-setuptools python-imaging python-mysqldb python-memcache python-ldap python-urllib3 \\\\nsqlite3 wget \\\\nlibreoffice libreoffice-script-provider-python \\\\nfonts-vlgothic ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy"
      },
      {
        "label":"pip-install-without-version",
        "start":717,
        "end":733,
        "text":"pip install boto"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1031,
        "end":1287,
        "text":"# Add seafile service.\\nADD service\/seafile\/run.sh \/etc\/service\/seafile\/run\\nADD service\/seafile\/stop.sh \/etc\/service\/seafile\/stop\\n\\n# Add seahub service\\nADD service\/seahub\/run.sh \/etc\/service\/seahub\/run\\nADD service\/seahub\/stop.sh \/etc\/service\/seahub\/stop"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1358,
        "end":1458,
        "text":"# Custom scripts\\nADD bin\/setup.sh \/usr\/local\/sbin\/setup\\nADD bin\/upgrade.sh \/usr\/local\/sbin\/upgrade"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"d85555de193444fc5251f46c1246cf372897448d.dockerfile",
    "file_content":"FROM debian:stretch\n\nMAINTAINER Björn Dahlgren <bjodah@gmail.com>\n\nENV LANG C.UTF-8\n\n# This dockerfile is designed to run on binder (mybinder.org)\nRUN apt-get update && \\\n    apt-get --quiet --assume-yes install curl git g++-6 libgmp-dev binutils-dev bzip2 make cmake sudo \\\n    python3-dev python3-pip libgsl-dev liblapack-dev graphviz && \\\n    apt-get clean && \\\n    curl -LOs http:\/\/computation.llnl.gov\/projects\/sundials\/download\/sundials-3.1.2.tar.gz && \\\n    tar xzf sundials-3.1.2.tar.gz && mkdir build\/ && cd build\/ && \\\n    cmake -DCMAKE_PREFIX_PATH=\/usr\/local -DCMAKE_INSTALL_PREFIX=\/usr\/local -DCMAKE_BUILD_TYPE=Release \\\n    -DBUILD_SHARED_LIBS=ON -DBUILD_STATIC_LIBS=OFF -DEXAMPLES_ENABLE=OFF -DEXAMPLES_INSTALL=OFF \\\n    ..\/sundials*\/ && make install && cd - && rm -r build\/ sundials* && \\\n    python3 -m pip install --upgrade pip && \\\n    curl -LOs http:\/\/dl.bintray.com\/boostorg\/release\/1.67.0\/source\/boost_1_67_0.tar.bz2 && \\\n    tar xjf boost_*.tar.bz2 && cd boost* && .\/bootstrap.sh && .\/b2 -j 2 --prefix=\/usr\/local\/ install && cd -\n\n# At this point the system should be able to pip-install the package and all of its dependencies. We'll do so\n# when running the image using the ``host-jupyter-using-docker.sh`` script. Installed packages are cached.\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":65,
        "text":"MAINTAINER Björn Dahlgren <bjodah@gmail.com>"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":808,
        "end":844,
        "text":"python3 -m pip install --upgrade pip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":175,
        "end":336,
        "text":"apt-get --quiet --assume-yes install curl git g++-6 libgmp-dev binutils-dev bzip2 make cmake sudo \\\\npython3-dev python3-pip libgsl-dev liblapack-dev graphviz"
      },
      {
        "label":"apt-install-without-version",
        "start":175,
        "end":336,
        "text":"apt-get --quiet --assume-yes install curl git g++-6 libgmp-dev binutils-dev bzip2 make cmake sudo \\\\npython3-dev python3-pip libgsl-dev liblapack-dev graphviz"
      },
      {
        "label":"apt-install-without-version",
        "start":514,
        "end":526,
        "text":"cd build\/ &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":768,
        "end":775,
        "text":"cd - &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":974,
        "end":983,
        "text":"cd boost*"
      },
      {
        "label":"use-cd-change-dir",
        "start":1047,
        "end":1051,
        "text":"cd -"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"dc8dad1a62fc3b58ac72fb28625dcb4d89505f45.dockerfile",
    "file_content":"# Use local version of image built from Dockerfile.cpu in \/docker\/base\nFROM tensorflow-base:1.5.0-cpu-py2\nMAINTAINER Amazon AI\n\nWORKDIR \/root\n\nRUN apt-get -y update && \\\n    apt-get -y install curl && \\\n    apt-get -y install wget && \\\n    apt-get -y install vim && \\\n    apt-get -y install iputils-ping && \\\n    apt-get -y install nginx\n\nRUN pip install numpy boto3 six awscli flask==0.11 Jinja2==2.9 tensorflow-serving-api==1.5 gevent gunicorn\n\n# install tensorflow-model-server 1.5.\nRUN wget 'http:\/\/storage.googleapis.com\/tensorflow-serving-apt\/pool\/tensorflow-model-server\/t\/tensorflow-model-server\/tensorflow-model-server_1.5.0_all.deb' && \\\n    dpkg -i tensorflow-model-server_1.5.0_all.deb\n\n# install telegraf\nRUN cd \/tmp && \\\n    curl -O https:\/\/dl.influxdata.com\/telegraf\/releases\/telegraf_1.4.2-1_amd64.deb && \\\n    dpkg -i telegraf_1.4.2-1_amd64.deb && \\\n    cd -\n\nCOPY sagemaker_tensorflow_container-1.0.0.tar.gz .\n\nRUN pip install sagemaker_tensorflow_container-1.0.0.tar.gz\n\nRUN rm sagemaker_tensorflow_container-1.0.0.tar.gz\n\nENTRYPOINT [\"entry.py\"]",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":106,
        "end":126,
        "text":"MAINTAINER Amazon AI"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":174,
        "end":337,
        "text":"apt-get -y install curl && \\\\napt-get -y install wget && \\\\napt-get -y install vim && \\\\napt-get -y install iputils-ping && \\\\napt-get -y install nginx"
      },
      {
        "label":"apt-install-without-version",
        "start":174,
        "end":337,
        "text":"apt-get -y install curl && \\\\napt-get -y install wget && \\\\napt-get -y install vim && \\\\napt-get -y install iputils-ping && \\\\napt-get -y install nginx"
      },
      {
        "label":"pip-install-without-version",
        "start":339,
        "end":377,
        "text":"RUN pip install numpy boto3 six awscli"
      },
      {
        "label":"use-cd-change-dir",
        "start":718,
        "end":729,
        "text":"RUN cd \/tmp"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ab876ece96dcac5b28d63be6b96884831f7d1c41.dockerfile",
    "file_content":"FROM ubuntu:14.04  \nMAINTAINER Frank Lemanschik @ DIREKTSPEED Europe <frank@dspeed.eu>  \n  \n# invalidate the Cache and update the apt list  \n# RUN echo currentsMillies > \/created \\  \nRUN apt-get -y update \\  \n&& apt-get -y upgrade \\  \n&& apt-get install -y \\  \ncurl wget git \\  \nca-certificates \\  \npython build-essential \\  \n&& apt-get -y clean  \nVOLUME \/app  \nWORKDIR \/app  \nENV HOME \/app  \nADD nave \/usr\/bin\/nave  \nRUN chmod +x \/usr\/bin\/nave  \nADD https:\/\/github.com\/DIREKTSPEED-LTD\/s6-init\/archive\/master.tar.gz \/  \nRUN tar -zxvf \/master.tar.gz -C \/ --strip-components=1  \nONBUILD CMD []  \nONBUILD ENTRYPOINT [\"\/usr\/bin\/s6-svscan\",\"\/etc\/s6\"]  \nENTRYPOINT [\"\/usr\/bin\/s6-svscan\",\"\/etc\/s6\"]  \nCMD []  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":86,
        "text":"MAINTAINER Frank Lemanschik @ DIREKTSPEED Europe <frank@dspeed.eu>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":235,
        "end":323,
        "text":"&& apt-get install -y \\\\ncurl wget git \\\\nca-certificates \\\\npython build-essential \\"
      },
      {
        "label":"apt-install-without-version",
        "start":235,
        "end":323,
        "text":"&& apt-get install -y \\\\ncurl wget git \\\\nca-certificates \\\\npython build-essential \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":393,
        "end":415,
        "text":"ADD nave \/usr\/bin\/nave"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":447,
        "end":489,
        "text":"ADD https:\/\/github.com\/DIREKTSPEED-LTD\/s6-"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ac5f95b9470ba21e1b8afdf880313c6ee4b454e4.dockerfile",
    "file_content":"#mcr.microsoft.com\/aiforearth\/base-r:version\nFROM nvidia\/cuda:9.2-runtime-ubuntu16.04\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN mkdir \/var\/uwsgi\n\nRUN apt-get update \\\n  && apt-get install -y python3-pip python3-dev \\\n  && cd \/usr\/local\/bin \\\n  && ln -s \/usr\/bin\/python3 python \\\n  && pip3 install --upgrade pip\n\nRUN apt-get update --fix-missing && \\\n    apt-get install -y wget supervisor bzip2 && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nENV GDAL_VERSION=2.2.1 \n\nRUN apt-get update && \\\n    apt-get -y install \\\n        libpq-dev \\\n        ogdi-bin \\\n        libogdi3.2-dev \\\n        libjasper-runtime \\\n        libjasper-dev \\\n        libjasper1 \\\n        libgeos-dev \\\n        libproj-dev \\\n        libpoppler-dev \\\n        libsqlite3-dev \\\n        libspatialite-dev \\\n        python3 \\\n        python3-dev \\\n        python3-numpy\n\nRUN wget http:\/\/download.osgeo.org\/gdal\/$GDAL_VERSION\/gdal-${GDAL_VERSION}.tar.gz -O \/tmp\/gdal-${GDAL_VERSION}.tar.gz && \\\n    tar -x -f \/tmp\/gdal-${GDAL_VERSION}.tar.gz -C \/tmp\n\nRUN tar -xvf \/tmp\/gdal-${GDAL_VERSION}.tar.gz && cd \/tmp\/gdal-${GDAL_VERSION} \\\n    && .\/configure \\\n    && make && make install && ldconfig \\\n    && apt-get update -y \\\n    && apt-get remove -y --purge build-essential wget \\\n    && rm -Rf $ROOTDIR\/src\/*\n\nRUN rm \/tmp\/gdal-${GDAL_VERSION} -rf\n\nCMD gdalinfo --version && gdalinfo --formats && ogrinfo --formats\n\nRUN apt-get update \\\n&& apt-get install -y \\\n  apt-transport-https \\\n  build-essential \\\n  ed \\\n  gtk2.0 \\\n  libcurl4-openssl-dev \\\n  libgtk2.0-dev \\\n  libiodbc2-dev \\\n  libnlopt-dev \\\n  libssh2-1-dev \\\n  libssl-dev \\\n  libxml2-dev \\\n  software-properties-common \\\n  wget \\\n  xvfb \\\n&& rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nRUN add-apt-repository 'deb [arch=amd64,i386] https:\/\/cran.rstudio.com\/bin\/linux\/ubuntu xenial\/'\n\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tr-base \\\n\t\tr-base-dev \\\n    r-recommended\n\nRUN apt-get update -qq && apt-get install -y \\\n  git-core \\\n  libssl-dev \\\n  libcurl4-gnutls-dev\n\n# Install data_processing packages\nRUN apt-get update && \\\n    apt-get install -y \\\n    libgdal-dev \\\n    libproj-dev\n\nRUN echo \"r <- getOption('repos'); r['CRAN'] <- 'http:\/\/cran.r-project.org'; options(repos = r);\" > ~\/.Rprofile\n#RUN Rscript -e 'remove.packages(c(\"curl\",\"httr\"));'\nRUN Rscript -e 'install.packages(c(\"curl\", \"httr\"));'\nRUN Rscript -e 'Sys.setenv(CURL_CA_BUNDLE=\"\/utils\/microsoft-r-open-3.4.3\/lib64\/R\/lib\/microsoft-r-cacert.pem\");'\nRUN Rscript -e 'install.packages(\"sp\");'\nRUN Rscript -e 'install.packages(\"rgdal\");'\nRUN Rscript -e 'install.packages(\"plumber\");'\nRUN Rscript -e 'install.packages(\"R.utils\");'\nRUN Rscript -e 'install.packages(\"future\");'\nRUN Rscript -e 'install.packages(\"devtools\");'\nRUN Rscript -e 'install.packages(\"RCurl\");'\nRUN Rscript -e 'install.packages(\"sjmisc\");'\nRUN Rscript -e 'install.packages(\"reticulate\");'\n\n# Install Azure Blob SDK and application insights\nRUN pip install azure\nRUN pip install azure-storage-common\nRUN pip install azure-storage-blob\nRUN pip install adal\nRUN pip install applicationinsights\n\nCOPY .\/base-r\/ai4e_api_tools \/ai4e_api_tools\/\nCOPY .\/common\/sas_blob.py \/ai4e_api_tools\/\nCOPY .\/common\/aad_blob.py \/ai4e_api_tools\/\n\nENV PYTHONPATH=\"${PYTHONPATH}:\/ai4e_api_tools\"",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":170,
        "end":212,
        "text":"apt-get install -y python3-pip python3-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":170,
        "end":212,
        "text":"apt-get install -y python3-pip python3-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":220,
        "end":239,
        "text":"cd \/usr\/local\/bin \\"
      },
      {
        "label":"pip-install-without-version",
        "start":279,
        "end":308,
        "text":"&& pip3 install --upgrade pip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":352,
        "end":397,
        "text":"apt-get install -y wget supervisor bzip2 && \\"
      },
      {
        "label":"apt-install-without-version",
        "start":352,
        "end":397,
        "text":"apt-get install -y wget supervisor bzip2 && \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":507,
        "end":848,
        "text":"apt-get -y install \\\\nlibpq-dev \\\\nogdi-bin \\\\nlibogdi3.2-dev \\\\nlibjasper-runtime \\\\nlibjasper-dev \\\\nlibjasper1 \\\\nlibgeos-dev \\\\nlibproj-dev \\\\nlibpoppler-dev \\\\nlibsqlite3-dev \\\\nlibspatialite-dev \\\\npython3 \\\\npython3-dev \\\\npython3-numpy"
      },
      {
        "label":"apt-install-without-version",
        "start":507,
        "end":848,
        "text":"apt-get -y install \\\\nlibpq-dev \\\\nogdi-bin \\\\nlibogdi3.2-dev \\\\nlibjasper-runtime \\\\nlibjasper-dev \\\\nlibjasper1 \\\\nlibgeos-dev \\\\nlibproj-dev \\\\nlibpoppler-dev \\\\nlibsqlite3-dev \\\\nlibspatialite-dev \\\\npython3 \\\\npython3-dev \\\\npython3-numpy"
      },
      {
        "label":"use-cd-change-dir",
        "start":1078,
        "end":1108,
        "text":"cd \/tmp\/gdal-${GDAL_VERSION} \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1414,
        "end":1672,
        "text":"apt-get install -y \\\\napt-transport-https \\\\nbuild-essential \\\\ned \\\\ngtk2.0 \\\\nlibcurl4-openssl-dev \\\\nlibgtk2.0-dev \\\\nlibiodbc2-dev \\\\nlibnlopt-dev \\\\nlibssh2-1-dev \\\\nlibssl-dev \\\\nlibxml2-dev \\\\nsoftware-properties-common \\\\nwget \\\\nxvfb \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1390,
        "end":1672,
        "text":"RUN apt-get update \\\\n&& apt-get install -y \\\\napt-transport-https \\\\nbuild-essential \\\\ned \\\\ngtk2.0 \\\\nlibcurl4-openssl-dev \\\\nlibgtk2.0-dev \\\\nlibiodbc2-dev \\\\nlibnlopt-dev \\\\nlibssh2-1-dev \\\\nlibssl-dev \\\\nlibxml2-dev \\\\nsoftware-properties-common \\\\nwget \\\\nxvfb \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1927,
        "end":2018,
        "text":"&& apt-get install -y --no-install-recommends \\\\nr-base \\\\nr-base-dev \\\\nr-recommended"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2046,
        "end":2116,
        "text":"apt-get install -y \\\\ngit-core \\\\nlibssl-dev \\\\nlibcurl4-gnutls-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":2046,
        "end":2116,
        "text":"apt-get install -y \\\\ngit-core \\\\nlibssl-dev \\\\nlibcurl4-gnutls-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2181,
        "end":2235,
        "text":"apt-get install -y \\\\nlibgdal-dev \\\\nlibproj-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":2181,
        "end":2235,
        "text":"apt-get install -y \\\\nlibgdal-dev \\\\nlibproj-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":3026,
        "end":3176,
        "text":"RUN pip install azure\\nRUN pip install azure-storage-common\\nRUN pip install azure-storage-blob\\nRUN pip install adal\\nRUN pip install applicationinsights"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"295d1a1b4afd9e3afbadafd909a131940a78397c.dockerfile",
    "file_content":"# Base image used is Ubuntu 12.04:\nFROM ubuntu:precise\nMAINTAINER C. W. Drake, cameron@drake.fm\n\nRUN apt-get update -y\nRUN apt-get -y upgrade\nRUN apt-get upgrade --show-upgraded\nRUN apt-get install -y zsh\nRUN apt-get install -y python\nRUN apt-get install -y python-pip\nRUN apt-get install -y emacs\nRUN apt-get install -y curl\nRUN apt-get install -y git\nRUN apt-get install -y tig\nRUN apt-get install -y htop\nRUN apt-get install -y tree\nRUN apt-get install -y wget\nRUN apt-get install -y tmux\nRUN apt-get install -y rubygems\nRUN apt-get install -y unzip\nRUN apt-get install -y ntp\nRUN apt-get install -y fail2ban\n# Install Mosh\nRUN apt-get install -y python-software-properties\nRUN add-apt-repository -y ppa:keithw\/mosh\nRUN apt-get update\nRUN apt-get install -y mosh\n# Install hub for git\n# RUN git clone https:\/\/github.com\/github\/hub.git\n# RUN cd hub\n# RUN rake install prefix=\/usr\/local\n# RUN cd -\n#-------------------\n# Install Ruby Gems\n#-------------------\nRUN gem install bundler\nRUN bundle install\n#-------------------\n# Create Git User\n#-------------------\nRUN adduser --disabled-password --gecos \"\" git\nRUN usermod -a -G sudo git\n#-------------------\n# Start Clock\n#-------------------\n# Configure Time Zone\n# RUN dpkg-reconfigure tzdata\n# RUN ln -sf \/usr\/share\/zoneinfo\/America\/Los_Angeles \/etc\/localtime\n# Set clock\/restart cron\n# RUN ntpdate && hwclock –w\n# RUN service cron stop\n# RUN service cron start\n#-------------------\n# Sync Dotfiles\n#-------------------\n# change the default shell for git user\n# RUN chsh -s \/usr\/bin\/zsh core\n# move the AWS authorized key to the git account\n# RUN mkdir -p \/home\/git\/.ssh\/\n# RUN cp -i \/home\/core\/.ssh\/authorized_keys \/home\/git\/.ssh\/authorized_keys\n# sync dotfiles\nADD .\/dotfiles ~\/dotfiles\n# RUN rsync --exclude \".git\/\"  --exclude \".osx\" --exclude \".DS_Store\" --exclude \"bootstrap.sh\" --exclude \"README.md\" -av --no-perms ~\/dotfiles ~\n# sudo chmod a+rx \/home\/git\n# sudo chown -R git:git \/home\/git\/\n# CMD [\"\/bin\/zsh\", \"-l\"]\n# ENTRYPOINT [\"\/bin\/zsh\", \"-l\"]",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":55,
        "end":95,
        "text":"MAINTAINER C. W. Drake, cameron@drake.fm"
      },
      {
        "label":"apt-install-without-version",
        "start":178,
        "end":611,
        "text":"RUN apt-get install -y zsh\\nRUN apt-get install -y python\\nRUN apt-get install -y python-pip\\nRUN apt-get install -y emacs\\nRUN apt-get install -y curl\\nRUN apt-get install -y git\\nRUN apt-get install -y tig\\nRUN apt-get install -y htop\\nRUN apt-get install -y tree\\nRUN apt-get install -y wget\\nRUN apt-get install -y tmux\\nRUN apt-get install -y rubygems\\nRUN apt-get install -y unzip\\nRUN apt-get install -y ntp\\nRUN apt-get install -y fail2ban"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":178,
        "end":611,
        "text":"RUN apt-get install -y zsh\\nRUN apt-get install -y python\\nRUN apt-get install -y python-pip\\nRUN apt-get install -y emacs\\nRUN apt-get install -y curl\\nRUN apt-get install -y git\\nRUN apt-get install -y tig\\nRUN apt-get install -y htop\\nRUN apt-get install -y tree\\nRUN apt-get install -y wget\\nRUN apt-get install -y tmux\\nRUN apt-get install -y rubygems\\nRUN apt-get install -y unzip\\nRUN apt-get install -y ntp\\nRUN apt-get install -y fail2ban"
      },
      {
        "label":"apt-install-without-version",
        "start":627,
        "end":676,
        "text":"RUN apt-get install -y python-software-properties"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":627,
        "end":676,
        "text":"RUN apt-get install -y python-software-properties"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":738,
        "end":765,
        "text":"RUN apt-get install -y mosh"
      },
      {
        "label":"apt-install-without-version",
        "start":738,
        "end":765,
        "text":"RUN apt-get install -y mosh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1717,
        "end":1742,
        "text":"ADD .\/dotfiles ~\/dotfiles"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"2ad26b29333232caa2d6a62dbc4aff7fe64bcfac.dockerfile",
    "file_content":"FROM dockerfile\/java\n\n# Install dependencies\nRUN apt-get update && apt-get install -y \\\n  git \\\n  nodejs \\\n  nginx\n\n# Get leiningen\nENV LEIN_ROOT 1\nRUN curl -s https:\/\/raw.githubusercontent.com\/technomancy\/leiningen\/stable\/bin\/lein > \\\n    \/usr\/local\/bin\/lein \\\n && chmod 0755 \/usr\/local\/bin\/lein \\\n && lein upgrade\n\n# Set up nginx\n\nADD files\/nginx.conf \/etc\/nginx\/nginx.conf\nADD files\/site.conf \/etc\/nginx\/sites-enabled\/site.conf\nRUN useradd -r -U nginx\n\n# Add site building machinations\n\nADD files\/build-site.sh \/root\/build-site.sh\nADD files\/build-queue.js \/root\/build-queue.js\nRUN mkdir -p \/var\/www\/site \/stasis \\\n && chmod a+x \/root\/build-site.sh\n\n# Kick it off\n\nADD files\/bootstrap.sh \/root\/bootstrap.sh\n\nCMD [\"\/root\/bootstrap.sh\"]\n\nEXPOSE 8000\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":20,
        "text":"FROM dockerfile\/java"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":67,
        "end":114,
        "text":"apt-get install -y \\\\ngit \\\\nnodejs \\\\nnginx"
      },
      {
        "label":"apt-install-without-version",
        "start":67,
        "end":114,
        "text":"apt-get install -y \\\\ngit \\\\nnodejs \\\\nnginx"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":333,
        "end":430,
        "text":"ADD files\/nginx.conf \/etc\/nginx\/nginx.conf\\nADD files\/site.conf \/etc\/nginx\/sites-enabled\/site.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":490,
        "end":579,
        "text":"ADD files\/build-site.sh \/root\/build-site.sh\\nADD files\/build-queue.js \/root\/build-queue.js"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":667,
        "end":708,
        "text":"ADD files\/bootstrap.sh \/root\/bootstrap.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"2e752eafe0dfe8f801d51cebf59423ae1efd2410.dockerfile",
    "file_content":"FROM jfrog\/artifactory-pro\nMAINTAINER Jay Denebeim <jayd@jfrog.com>\n\nCOPY local.sh \/tmp\nRUN bash \/tmp\/local.sh && rm \/tmp\/local.sh\nRUN (cd \/etc\/yum.repos.d; echo -e \"[nginx]\\nname=nginx repo\\nbaseurl=http:\/\/nginx.org\/packages\/centos\/\\$releasever\/\\$basearch\/\\ngpgcheck=0\\nenabled=1\" >\/etc\/yum.repos.d\/nginx.repo)\n\nRUN yum install nginx openssl -y\n\nCOPY artifactory.conf \/etc\/nginx\/conf.d\/\n\nRUN yum clean all\n\nCOPY run.sh \/run.sh\nCOPY artifactory.config.xml \/etc\/opt\/jfrog\/artifactory\/artifactory.config.xml\n\nRUN openssl req -nodes -x509 -newkey rsa:4096 -keyout \/etc\/pki\/tls\/private\/example.key -out \/etc\/pki\/tls\/certs\/example.pem -days 356 \\\n    -subj \"\/C=US\/ST=California\/L=SantaClara\/O=IT\/CN=localhost\"\n\nCMD \/run.sh\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":26,
        "text":"FROM jfrog\/artifactory-pro"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":27,
        "end":67,
        "text":"MAINTAINER Jay Denebeim <jayd@jfrog.com>"
      },
      {
        "label":"use-cd-change-dir",
        "start":136,
        "end":156,
        "text":"cd \/etc\/yum.repos.d;"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"yum-install-without-version",
        "start":313,
        "end":345,
        "text":"RUN yum install nginx openssl -y"
      }
    ],
    "label_list":[
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"2f310cb24953e2aea476e9d1de2d91b71c2ac1ec.dockerfile",
    "file_content":"FROM socrata\/base\nMAINTAINER Socrata <sysadmin@socrata.com>\n\n# skip installing gem documentation\nRUN mkdir -p \/usr\/local\/etc \\\n\t&& { \\\n\t\techo 'install: --no-document'; \\\n\t\techo 'update: --no-document'; \\\n\t} >> \/usr\/local\/etc\/gemrc\n\nENV RUBY_MAJOR 2.5\nENV RUBY_VERSION 2.5.0\nENV RUBY_DOWNLOAD_SHA256 1da0afed833a0dab94075221a615c14487b05d0c407f991c8080d576d985b49b\nENV RUBYGEMS_VERSION 2.7.4\nENV BUNDLER_VERSION 1.17\n\n# some of ruby's build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n\t\\\n\t&& buildDeps=' \\\n\t\tbison \\\n\t\truby \\\n\t\twget \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tbzip2 \\\n\t\tdpkg-dev \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\timagemagick \\\n\t\tlibbz2-dev \\\n\t\tlibc6-dev \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibdb-dev \\\n\t\tlibevent-dev \\\n\t\tlibffi-dev \\\n\t\tlibgdbm-dev \\\n\t\tlibgeoip-dev \\\n\t\tlibglib2.0-dev \\\n\t\tlibjpeg-dev \\\n\t\tlibkrb5-dev \\\n\t\tliblzma-dev \\\n\t\tlibmagickcore-dev \\\n\t\tlibmagickwand-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibncursesw5-dev \\\n\t\tlibpng-dev \\\n\t\tlibpq-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibtool \\\n\t\tlibwebp-dev \\\n\t\tlibxml2-dev \\\n\t\tlibxslt-dev \\\n\t\tlibyaml-dev \\\n\t\tmake \\\n\t\tpatch \\\n\t\txz-utils \\\n\t\tzlib1g-dev \\\n\t'\\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends $buildDeps \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/* \\\n\t\\\n\t&& wget -O ruby.tar.xz \"https:\/\/cache.ruby-lang.org\/pub\/ruby\/${RUBY_MAJOR%-rc}\/ruby-$RUBY_VERSION.tar.xz\" \\\n\t&& echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n\t\\\n\t&& mkdir -p \/usr\/src\/ruby \\\n\t&& tar -xJf ruby.tar.xz -C \/usr\/src\/ruby --strip-components=1 \\\n\t&& rm ruby.tar.xz \\\n\t\\\n\t&& cd \/usr\/src\/ruby \\\n\t\\\n# hack in \"ENABLE_PATH_CHECK\" disabling to suppress:\n#   warning: Insecure world writable dir\n\t&& { \\\n\t\techo '#define ENABLE_PATH_CHECK 0'; \\\n\t\techo; \\\n\t\tcat file.c; \\\n\t} > file.c.new \\\n\t&& mv file.c.new file.c \\\n\t\\\n\t&& autoconf \\\n\t&& gnuArch=\"$(dpkg-architecture -qDEB_BUILD_GNU_TYPE)\" \\\n\t&& .\/configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--disable-install-doc \\\n\t\t--enable-shared \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t\\\n\t&& cd \/ \\\n\t&& rm -r \/usr\/src\/ruby \\\n\t\\\n\t&& gem update --system \"$RUBYGEMS_VERSION\" \\\n\t&& gem install bundler --version \"$BUNDLER_VERSION\" --force \\\n\t&& rm -r \/root\/.gem\/\n\n# LABEL must be last for proper base image discoverability\nLABEL repository.socrata\/ruby2.5.0=\"\"\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":17,
        "text":"FROM socrata\/base"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":59,
        "text":"MAINTAINER Socrata <sysadmin@socrata.com>"
      },
      {
        "label":"use-cd-change-dir",
        "start":1614,
        "end":1635,
        "text":"&& cd \/usr\/src\/ruby \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2066,
        "end":2072,
        "text":"cd \/ \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"apt-install-without-version",
        "start":1225,
        "end":1278,
        "text":"apt-get install -y --no-install-recommends $buildDeps"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"2fa3e9fb23ee6037219f3b4e8d1e4e183aa43261.dockerfile",
    "file_content":"FROM rocker\/verse\n\nRUN apt-get update\nRUN apt-get -y upgrade\nRUN apt-get -y install libfftw3-dev bzip2\n\nRUN Rscript -e \"install.packages('imager', quiet = TRUE)\"\nRUN Rscript -e \"install.packages('shinytest', quiet = TRUE)\"\nRUN Rscript -e \"install.packages('shinyBS', quiet = TRUE)\"\nRUN Rscript -e \"devtools::install_github('ropensci\/colocr')\"\nRUN cd ~\nRUN wget https:\/\/github.com\/Medium\/phantomjs\/releases\/download\/v2.1.1\/phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN mv phantomjs-2.1.1-linux-x86_64 \/usr\/local\/share\nRUN ln -sf \/usr\/local\/share\/phantomjs-2.1.1-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":17,
        "text":"FROM rocker\/verse"
      },
      {
        "label":"apt-install-without-version",
        "start":38,
        "end":102,
        "text":"RUN apt-get -y upgrade\\nRUN apt-get -y install libfftw3-dev bzip2"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":38,
        "end":102,
        "text":"RUN apt-get -y upgrade\\nRUN apt-get -y install libfftw3-dev bzip2"
      },
      {
        "label":"use-cd-change-dir",
        "start":343,
        "end":351,
        "text":"RUN cd ~"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"31da31b5c0622d101028d85725dd6888e33e5479.dockerfile",
    "file_content":"FROM vitalelement\/toolchainbuildenvironment:255\n\nADD \/ \/opt\/AvalonBuild\n\n# Install mono\nRUN apt-get update \\\n\t&& apt-get install -y curl \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\n\nRUN echo \"deb http:\/\/download.mono-project.com\/repo\/debian wheezy main\" > \/etc\/apt\/sources.list.d\/mono-xamarin.list \\\n\t&& apt-get update \\\n\t&& apt-get install -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Git    \nRUN apt-get update && apt-get install -y git lib32z1 lib32ncurses5 libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev libcurl4-openssl-dev libssl-dev uuid-dev unzip\n\nRUN wget -q https:\/\/packages.microsoft.com\/config\/ubuntu\/18.04\/packages-microsoft-prod.deb && sudo dpkg -i packages-microsoft-prod.deb && apt-get update\n\nRUN apt-get install -y apt-transport-https && apt-get update && apt-get install -y dotnet-sdk-2.2\n\nRUN apt-get update && apt-get upgrade -y\n\n# Install avalon command\nRUN ln -s \/opt\/AvalonBuild\/avalon \/usr\/bin\/\n\n\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":49,
        "end":71,
        "text":"ADD \/ \/opt\/AvalonBuild"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":113,
        "end":138,
        "text":"apt-get install -y curl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":113,
        "end":138,
        "text":"apt-get install -y curl \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":427,
        "end":502,
        "text":"apt-get install -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget \\"
      },
      {
        "label":"apt-install-without-version",
        "start":427,
        "end":502,
        "text":"apt-get install -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":576,
        "end":729,
        "text":"apt-get install -y git lib32z1 lib32ncurses5 libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev libcurl4-openssl-dev libssl-dev uuid-dev unzip"
      },
      {
        "label":"apt-install-without-version",
        "start":576,
        "end":729,
        "text":"apt-get install -y git lib32z1 lib32ncurses5 libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-dev libcurl4-openssl-dev libssl-dev uuid-dev unzip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":885,
        "end":927,
        "text":"RUN apt-get install -y apt-transport-https"
      },
      {
        "label":"apt-install-without-version",
        "start":885,
        "end":927,
        "text":"RUN apt-get install -y apt-transport-https"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-sudo-run",
        "start":825,
        "end":865,
        "text":"sudo dpkg -i packages-microsoft-prod.deb"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"0b6546f3fe97c9908d84a297297ae4fffdebc5e2.dockerfile",
    "file_content":"FROM golang:latest as build\nWORKDIR \/go\/src\/github.com\/pomerium\/pomerium\nENV CGO_ENABLED=0\nENV GO111MODULE=on\nENV GOARCH=arm64\n# cache depedency downloads\nCOPY go.mod go.sum .\/\nRUN go mod download\nCOPY . .\n# build \nRUN make build\nRUN touch \/config.yaml\n\nFROM gcr.io\/distroless\/static\nWORKDIR \/pomerium\nCOPY --from=build \/go\/src\/github.com\/pomerium\/pomerium\/bin\/* \/bin\/\nCOPY --from=build \/config.yaml \/pomerium\/config.yaml\nENTRYPOINT [ \"\/bin\/pomerium\" ]\nCMD [\"-config\",\"\/pomerium\/config.yaml\"]",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":27,
        "text":"FROM golang:latest as build"
      },
      {
        "label":"miss-specific-tags",
        "start":254,
        "end":283,
        "text":"FROM gcr.io\/distroless\/static"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"129861cc980ba01a8c6c1c6c80805b5341111bdd.dockerfile",
    "file_content":"FROM ubuntu:14.04\nMAINTAINER Codey oxley <codey.a.oxley+os@gmail.com>\nEXPOSE 8990\n\n# These are the supported environment variables.\n# Use them to control the 'default' Django database configuration:\n#     DB_ENGINE\n#     DB_NAME\n#     DB_USER\n#     DB_PASSWORD\n#     DB_HOST\n#     DB_PORT\n#\n#     NSOT_EMAIL\n#     NSOT_SECRET\n\n# Install necessary packages\n#\n# The development packages are for building certain dependencies that pip pulls\n# in\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get --quiet=2 update\nRUN apt-get --quiet=2 install -y \\\n        python \\\n        python-dev \\\n        python-pip \\\n        libffi6 \\\n        libffi-dev \\\n        libssl-dev \\\n        libmysqlclient-dev \\\n        curl\n\nRUN apt-get --quiet=2 install -y python-psycopg2\nRUN apt-get --quiet=2 install -y sqlite3\nRUN pip install MySQL-Python\nRUN pip install psycopg2\n# upgrade pip to fix https:\/\/github.com\/dropbox\/nsot\/issues\/277\nRUN pip install -U setuptools\n\n# Try to run this as late as possible for layer caching - this version will be\n# updated every update so let the build not take longer than necessary\nRUN pip install nsot==1.4.4\nCOPY conf \/etc\/nsot\n\nENTRYPOINT [\"nsot-server\", \"--config=\/etc\/nsot\/nsot.conf.py\"]\n\n# If using --no-upgrade then the database won't be built for first run. Use\n# should specify --no-upgrade manually if they don't want it\nCMD [\"start\", \"--noinput\"]\n# CMD [\"start\", \"--noinput\", \"--no-upgrade\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":69,
        "text":"MAINTAINER Codey oxley <codey.a.oxley+os@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":507,
        "end":702,
        "text":"RUN apt-get --quiet=2 install -y \\\\npython \\\\npython-dev \\\\npython-pip \\\\nlibffi6 \\\\nlibffi-dev \\\\nlibssl-dev \\\\nlibmysqlclient-dev \\\\ncurl"
      },
      {
        "label":"apt-install-without-version",
        "start":507,
        "end":702,
        "text":"RUN apt-get --quiet=2 install -y \\\\npython \\\\npython-dev \\\\npython-pip \\\\nlibffi6 \\\\nlibffi-dev \\\\nlibssl-dev \\\\nlibmysqlclient-dev \\\\ncurl"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":704,
        "end":793,
        "text":"RUN apt-get --quiet=2 install -y python-psycopg2\\nRUN apt-get --quiet=2 install -y sqlite3"
      },
      {
        "label":"apt-install-without-version",
        "start":704,
        "end":793,
        "text":"RUN apt-get --quiet=2 install -y python-psycopg2\\nRUN apt-get --quiet=2 install -y sqlite3"
      },
      {
        "label":"pip-install-without-version",
        "start":794,
        "end":847,
        "text":"RUN pip install MySQL-Python\\nRUN pip install psycopg2"
      },
      {
        "label":"pip-install-without-version",
        "start":912,
        "end":941,
        "text":"RUN pip install -U setuptools"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"13403e6d42bb0550bbb0063c2ffb216ccc9499fd.dockerfile",
    "file_content":"FROM gcr.io\/google-appengine\/python\n\nENV PATH=$PATH:\/builder\/google-cloud-sdk\/bin\/\n\nRUN apt-get update && \\\n    apt-get install -y --force-yes wget unzip ca-certificates git && \\\n    # Setup Google Cloud SDK (latest)\n    wget -nv https:\/\/dl.google.com\/dl\/cloudsdk\/channels\/rapid\/downloads\/google-cloud-sdk-148.0.0-linux-x86_64.tar.gz && \\\n    mkdir -p \/builder && \\\n    tar -xzf google-cloud-sdk-148.0.0-linux-x86_64.tar.gz -C \/builder && \\\n    rm google-cloud-sdk-148.0.0-linux-x86_64.tar.gz && \\\n    \/builder\/google-cloud-sdk\/install.sh --usage-reporting=false \\\n        --bash-completion=false \\\n        --disable-installation-options && \\\n    # Install alpha and beta components\n    \/builder\/google-cloud-sdk\/bin\/gcloud -q components install alpha beta && \\\n    apt-get install -y --force-yes python-dev && \\\n    # Clean up\n    apt-get remove -y --force-yes wget unzip && \\\n    apt-get clean\n\n\nCOPY requirements.txt \/\n\nRUN pip install --upgrade pip && pip install --upgrade -r \/requirements.txt\n\nCOPY testsuite \/testsuite\n\nENTRYPOINT [\"\/testsuite\/driver.py\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":35,
        "text":"FROM gcr.io\/google-appengine\/python"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":112,
        "end":173,
        "text":"apt-get install -y --force-yes wget unzip ca-certificates git"
      },
      {
        "label":"apt-install-without-version",
        "start":112,
        "end":169,
        "text":"apt-get install -y --force-yes wget unzip ca-certificates"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":766,
        "end":810,
        "text":"apt-get install -y --force-yes python-dev &&"
      },
      {
        "label":"apt-install-without-version",
        "start":766,
        "end":810,
        "text":"apt-get install -y --force-yes python-dev &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":923,
        "end":952,
        "text":"RUN pip install --upgrade pip"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"3d268743592fd9ad106f707c041fdf742a479fea.dockerfile",
    "file_content":"FROM python:3.6.5-jessie as python-binary\n# \/usr\/local in this image only has its own built Python.\nRUN cd \/; \\\n    tar czpf python.tar.gz \\\n        \/usr\/local\/bin \\\n        \/usr\/local\/lib\/libpython* \\\n        \/usr\/local\/lib\/python3.6* \\\n        \/usr\/local\/include\n\n\n# ------------------------\nFROM lablup\/kernel-base:ubuntu16.04-mkl2018.3\nENV LANG=C.UTF-8\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get update && apt-get install -y \\\n        ca-certificates \\\n        wget \\\n        libexpat1 libgdbm3 bzip2 libffi6 libsqlite3-0 liblzma5 zlib1g \\\n        libssl1.0.0 libmpdec2 \\\n        libncursesw5 libtinfo5 libreadline6 \\\n        libproj-dev libgeos-dev \\\n        mime-support \\\n        libzmq3-dev libuv1\n\n# Copy the whole Python from the docker library image\nCOPY --from=python-binary \/python.tar.gz \/\nRUN cd \/; tar xzpf python.tar.gz; rm python.tar.gz; ldconfig\n\n# Test if Python is working\nRUN python -c 'import sys; print(sys.version_info); import ssl'\n\n# As we mostly have \"manylinux\" glibc-compatible binary packaes,\n# we don't have to rebuild these!\nRUN pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop && \\\n    pip install --no-cache-dir aiozmq dataclasses tabulate namedlist six \"python-dateutil>=2\"\n\n# vim: ft=dockerfile\n",
    "risk_labels":[
      {
        "label":"use-cd-change-dir",
        "start":100,
        "end":106,
        "text":"RUN cd"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":403,
        "end":698,
        "text":"apt-get install -y \\\\nca-certificates \\\\nwget \\\\nlibexpat1 libgdbm3 bzip2 libffi6 libsqlite3-0 liblzma5 zlib1g \\\\nlibssl1.0.0 libmpdec2 \\\\nlibncursesw5 libtinfo5 libreadline6 \\\\nlibproj-dev libgeos-dev \\\\nmime-support \\\\nlibzmq3-dev libuv1"
      },
      {
        "label":"apt-install-without-version",
        "start":381,
        "end":698,
        "text":"RUN apt-get update && apt-get install -y \\\\nca-certificates \\\\nwget \\\\nlibexpat1 libgdbm3 bzip2 libffi6 libsqlite3-0 liblzma5 zlib1g \\\\nlibssl1.0.0 libmpdec2 \\\\nlibncursesw5 libtinfo5 libreadline6 \\\\nlibproj-dev libgeos-dev \\\\nmime-support \\\\nlibzmq3-dev libuv1"
      },
      {
        "label":"pip-install-without-version",
        "start":1051,
        "end":1120,
        "text":"RUN pip install --no-cache-dir pyzmq simplejson msgpack-python uvloop"
      },
      {
        "label":"pip-install-without-version",
        "start":1130,
        "end":1194,
        "text":"pip install --no-cache-dir aiozmq dataclasses tabulate namedlist"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"3e21fa08235f5bad158dd355e34d702474314266.dockerfile",
    "file_content":"FROM opensuse:latest\n# Tag in \"FROM\" will be replaced by \"dockit\" script\nMAINTAINER Alan Robertson <alanr@assimilationsystems.com>\nENV ZYPPER @ZYPPER@\nENV NEOROOT @NEOROOT@\nENV NEOPARENT @NEOPARENT@\nENV NEOCONF @NEOCONF@\nENV NEODATA \/var\/lib\/neo4j\/data\nENV NEOVERS @NEOVERS@\nENV NEOSERVFILE @NEOSERVFILE@\nENV GITREPOSITORY assimilation-official\nENV GITVERSION master\nENV GITHUB https:\/\/github.com\/assimilation\/$GITREPOSITORY\nENV GITTARZAN $GITHUB\/tarball\/$GITVERSION\nENV GITHASH 5e5971a # Will be updated by \"dockit\" script\nENV GITPATH assimilation-${GITREPOSITORY}-${GITHASH}\nENV CERT https:\/\/debian.neo4j.org\/neotechnology.gpg.key\nENV RPMDIR \/usr\/src\/packages\nRUN $ZYPPER install pkg-config || true\nRUN $ZYPPER install deltarpm glib2 libpcap zlib-devel python\t\t\t\\\n\tpython-devel python-flask which @JVM@ lsof\t\t\t\t\\\n\t'libsodium-devel' gcc cmake make glib2-devel valgrind resource-agents \t\\\n\twget libpcap-devel python3-pylint rpm-build iproute python-pytest\nCOPY dummy.spec \/tmp\/\nRUN mkdir -p $RPMDIR\/SOURCES $RPMDIR\/RPMS $RPMDIR\/RPMS\/@ARCH@\nRUN ls -l \/tmp\nRUN rpmbuild -bb \/tmp\/dummy.spec\nRUN find $RPMDIR -print | xargs ls -ld\nRUN $ZYPPER install $RPMDIR\/RPMS\/@ARCH@\/java*openjdk*.rpm\nRUN $ZYPPER install doxygen graphviz python-pip ca-certificates-mozilla ca-certificates-cacert\nRUN pip install 'py2neo==@PY2NEOVERS@' getent netaddr && pip install ctypesgen --pre\nENV BROKENDNS true\nRUN $ZYPPER install rsyslog\nRUN $ZYPPER install jq\n#RUN wget -q -O - $CERT > neotechnology.gpg.key; rpm --import neotechnology.gpg.key; rm neotechnology.gpg.key\n#RUN $ZYPPER ar -f http:\/\/yum.neo4j.org neo4j\n#RUN $ZYPPER refresh-services\n#RUN $ZYPPER -n --no-gpg-checks install neo4j=$NEOVERS\n########################################################################\n# This is where we roll our own installer because Neo4j doesn't have one\n#\n# Install the @NEOVERS@ of Neo4j @NEOEDITION@ edition\nRUN wget -q \"https:\/\/neo4j.com\/artifact.php?name=neo4j-@NEOEDITION@-@NEOVERS@-unix.tar.gz\" -O \/tmp\/neo4j-@NEOEDITION@-@NEOVERS@-unix.tar.gz\nRUN tar -C $NEOPARENT -xzf \/tmp\/neo4j-@NEOEDITION@-@NEOVERS@-unix.tar.gz\nRUN rm -f $NEOROOT\nRUN ln -s $NEOPARENT\/neo4j-@NEOEDITION@-@NEOVERS@\/ $NEOROOT\nRUN useradd -c 'Neo4j Graph database' -d ${NEOROOT} --user-group --no-create-home --system --shell \/bin\/false neo4j\nRUN chown -R neo4j:neo4j  $NEOROOT-@NEOEDITION@-@NEOVERS@\/\nRUN mkdir -p $NEODATA\/databases\nRUN chown -R neo4j:neo4j $NEODATA\nRUN rm -fr $NEOROOT\/data\nRUN ln -s $NEODATA $NEOROOT\/data\nRUN printf '[Unit]\\nDescription = Neo4j Graph Database\\nAfter = network.target\\n\\n' > $NEOSERVFILE\nRUN printf '[Service]\\nType = simple\\n' >> $NEOSERVFILE\nRUN printf 'ExecStart = %s\/bin\/neo4j console\\n' \"$NEOROOT\" >> $NEOSERVFILE\nRUN printf 'TimeoutStartSec = 120\\nTimeoutStopSec = 30\\nuser=neo4j\\ngroup=neo4j\\n' >> $NEOSERVFILE\nRUN printf 'LimitNOFILE=40000\\n\\n' >> $NEOSERVFILE\nRUN printf '[Install]\\nWantedBy = multi-user.target\\n' >> $NEOSERVFILE\nRUN echo $NEOSERVFILE; cat $NEOSERVFILE\n#\n# End of our home-brew Neo4j installer...\n#\n########################################################################\nRUN echo \"@OURDATE@\"\nRUN mkdir -p \/root\/assimilation\/bin $RPMDIR \/run\/systemd\/journal $RPMDIR\/SOURCES \nADD $GITTARZAN \/root\/assimilation\/\nWORKDIR \/root\/assimilation\nRUN tar xzf $GITVERSION && mv [Aa]ssimilation-* src\nRUN set -x; cp $GITVERSION $RPMDIR\/SOURCES\/${GITPATH}.tgz\n# Build the RPM\nWORKDIR $RPMDIR\/SOURCES\nRUN rpmbuild -ba \/root\/assimilation\/src\/docker\/CentOS6\/assimilation-cma.spec --define=\"assimversion $GITPATH\"\nWORKDIR \/root\/assimilation\/bin\n# Now build separately to test installing the packages and run our tests...\nRUN cmake ..\/src && make install\nWORKDIR $RPMDIR\/RPMS\/@ARCH@\/\nRUN pwd\nRUN $ZYPPER install assimilation-nanoprobe*.rpm assimilation-cma*.rpm\nRUN echo \"\/usr\/lib*\/assimilation\" > \/etc\/ld.so.conf.d\/assimilation.conf && ldconfig \/usr\/lib*\/assimilation\nWORKDIR \/root\/assimilation\/src\/cma\nRUN sed \/etc\/rsyslog.conf -e 's%^$.*imjournal%#&%' -e 's%.*$OmitLocalLogging.*%$OmitLocalLogging off%' > \/tmp\/foo\nRUN printf \"%s\\n%s\\n\" '$ModLoad imuxsock' '$SystemLogSocketName \/dev\/log' >> \/tmp\/foo\nRUN  cp \/tmp\/foo \/etc\/rsyslog.conf; rm \/tmp\/foo\nRUN \/usr\/sbin\/assimcli genkeys\nRUN pip install demjson\nRUN mkdir -p \/var\/lib\/heartbeat\/lrm\nRUN rsyslogd && $NEOROOT\/bin\/neo4j console&  sleep 20; py.test -rw -v tests\nRUN mkdir -p \/root\/assimilation\/packages && cp $RPMDIR\/RPMS\/@ARCH@\/*.rpm \/root\/assimilation\/packages\nRUN echo \"GOOD BUILD: opensuse:latest\" # Will be updated by \"dockit\" script\n###  Our RPMs\nRUN echo \"GOODBUILD=$(echo \"$(lsb_release -i -s)_$(lsb_release -r -s)-$(uname -m)\" | tr '[A-Z]' '[a-z]')\"\nRUN echo \"ASSIMVERSION=$(cma --version)\"\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":20,
        "text":"FROM opensuse:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":73,
        "end":129,
        "text":"MAINTAINER Alan Robertson <alanr@assimilationsystems.com"
      },
      {
        "label":"pip-install-without-version",
        "start":1337,
        "end":1361,
        "text":"pip install ctypesgen --"
      },
      {
        "label":"pip-install-without-version",
        "start":4172,
        "end":4195,
        "text":"RUN pip install demjson"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-add-instead-of-copy",
        "start":3182,
        "end":3216,
        "text":"ADD $GITTARZAN \/root\/assimilation\/"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"3e61b95b4c4f39f2b47a6ba6c9141cbdd1e55ff3.dockerfile",
    "file_content":"FROM continuumio\/anaconda3\nRUN apt-get update && apt-get install -y build-essential\nRUN pip install gensim==2.2.0 scikit-learn==0.18.1 beautifulsoup4==4.5.3\n\nADD .\/altair\/flask_demo\/vectorize_python_script_folder.py \/altair\/\nADD .\/altair\/models \/altair\/models\/\nADD .\/altair\/util \/altair\/altair\/util\/\nWORKDIR \/altair\nENV PYTHONPATH \/altair:$PYTHONPATH\nENTRYPOINT [\"\/opt\/conda\/bin\/python3\",\"vectorize_python_script_folder.py\"]\nCMD [\"\/altair\/models\/doc2vec_trainedmodel_cbow_docs1200000_negative10_epochs20_mincount1200.pkl\",\"\/in\",\"\/out\/script_vectors.pkl\"]",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":26,
        "text":"FROM continuumio\/anaconda3"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":49,
        "end":83,
        "text":"apt-get install -y build-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":49,
        "end":83,
        "text":"apt-get install -y build-essential"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":158,
        "end":299,
        "text":"ADD .\/altair\/flask_demo\/vectorize_python_script_folder.py \/altair\/\\nADD .\/altair\/models \/altair\/models\/\\nADD .\/altair\/util \/altair\/altair\/util\/"
      },
      {
        "label":"miss-specific-tags",
        "start":425,
        "end":428,
        "text":"CMD"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy"
    ]
  },
  {
    "filename":"1ffdbc431e272afc27f96bd3a5622d200314620e.dockerfile",
    "file_content":"FROM ubuntu:xenial  \nMAINTAINER atomney <atomney+docker@gmail.com>  \n  \nRUN apt-get update -q && \\  \napt-get install -qy nano python-pip git && \\  \napt-get autoclean && \\  \napt-get autoremove && \\  \nrm -rf \/var\/lib\/apt\/lists\/*  \n  \nRUN git clone https:\/\/github.com\/AHAAAAAAA\/PokemonGo-Map \/data && \\  \ncd \/data && \\  \npip install -r requirements.txt  \n  \nVOLUME [\"\/data\"]  \n  \nCOPY start.sh \/start.sh  \n  \n# Web UI port  \nEXPOSE 5000  \n#ENTRYPOINT [\"\/data\/example.py\"]  \nCMD [\"\/start.sh\"]  \n  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":66,
        "text":"MAINTAINER atomney <atomney+docker@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":101,
        "end":140,
        "text":"apt-get install -qy nano python-pip git"
      },
      {
        "label":"apt-install-without-version",
        "start":101,
        "end":140,
        "text":"apt-get install -qy nano python-pip git"
      },
      {
        "label":"use-cd-change-dir",
        "start":302,
        "end":313,
        "text":"cd \/data &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"23b02a60733b192fee134a4dc1b08e8531e76dac.dockerfile",
    "file_content":"# I'd like to use alpine, but for some reason, DynamoDB Local seems to hang\n# in all the alpine java images.\nFROM openjdk:8-jre\n\nMAINTAINER Zach Wily <zach@instructure.com>\n\n# We need java and node in this image, so we'll start with java (cause it's\n# more hairy), and then dump in the node Dockerfile below. It'd be nice if there\n# was a more elegant way to compose at the image level, but I suspect the\n# response here would be \"use two containers\".\n\n################################################################################\n## START COPY FROM https:\/\/github.com\/nodejs\/docker-node\n################################################################################\n##\n## Released under MIT License\n## Copyright (c) 2015 Joyent, Inc.\n## Copyright (c) 2015 Node.js contributors\n##\n\n# gpg keys listed at https:\/\/github.com\/nodejs\/node\nRUN set -ex \\\n  && for key in \\\n    9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  ; do \\\n    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done\n\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 6.4.0\n\nRUN curl -SLO \"https:\/\/nodejs.org\/dist\/v$NODE_VERSION\/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n  && curl -SLO \"https:\/\/nodejs.org\/dist\/v$NODE_VERSION\/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-x64.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C \/usr\/local --strip-components=1 \\\n  && rm \"node-v$NODE_VERSION-linux-x64.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt\n\n################################################################################\n## END COPY\n################################################################################\n\nRUN npm install -g dynamodb-admin\n\nRUN cd \/usr\/lib && \\\n    curl -L https:\/\/s3-us-west-2.amazonaws.com\/dynamodb-local\/dynamodb_local_latest.tar.gz | tar xz\nRUN mkdir -p \/var\/lib\/dynamodb\nVOLUME \/var\/lib\/dynamodb\n\nRUN apt-get update && \\\n    apt-get install -y supervisor nginx && \\\n    apt-get clean && \\\n    rm -fr \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nCOPY nginx-proxy.conf \/etc\/nginx-proxy.conf\nCOPY supervisord.conf \/etc\/supervisord.conf\nRUN mkdir -p \/var\/log\/supervisord\n\n# Configuration for dynamo-admin to know where to hit dynamo.\nENV DYNAMO_ENDPOINT http:\/\/localhost:8002\/\n\n# For dinghy users.\nENV VIRTUAL_HOST dynamo.docker\nENV VIRTUAL_PORT 8000\n\n# Main proxy on 8000, dynamo-admin on 8001, dynamodb on 8002\nEXPOSE 8000 8001 8002\n\nCMD [\"\/usr\/bin\/supervisord\", \"-c\", \"\/etc\/supervisord.conf\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":129,
        "end":172,
        "text":"MAINTAINER Zach Wily <zach@instructure.com>"
      },
      {
        "label":"use-cd-change-dir",
        "start":2097,
        "end":2115,
        "text":"RUN cd \/usr\/lib &&"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2303,
        "end":2341,
        "text":"apt-get install -y supervisor nginx &&"
      },
      {
        "label":"apt-install-without-version",
        "start":2303,
        "end":2343,
        "text":"apt-get install -y supervisor nginx && \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"25a57d858308b5da15a6cddce2adc5729978988f.dockerfile",
    "file_content":"# we use a gcr.io image and not openjdk:8-jdk-slim because it loads faster in the google Google Cloud Build environment\nFROM gcr.io\/cloud-builders\/javac\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > \/etc\/apt\/apt.conf.d\/90builder \\\n  && echo 'DPkg::Options \"--force-confnew\";' >> \/etc\/apt\/apt.conf.d\/90builder\n\n# Install Dependencies\nRUN apt-get update && \\\n    apt-get install -y \\\n        git locales sudo openssh-client ca-certificates tar gzip parallel \\\n        zip unzip bzip2 gnupg curl wget\n\n# Set timezone to UTC by default\nRUN ln -sf \/usr\/share\/zoneinfo\/Etc\/UTC \/etc\/localtime\n\n# Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=C.UTF-8\n\nARG sdk_version=sdk-tools-linux-4333796.zip\nARG android_home=\/opt\/android\/sdk\nARG ndk_version=android-ndk-r17b\nARG android_ndk_home=\/opt\/android\/${ndk_version}\n\n# Install Android SDK\nRUN sudo mkdir -p ${android_home} && \\\n    curl --silent --show-error --location --fail --retry 3 --output \/tmp\/${sdk_version} https:\/\/dl.google.com\/android\/repository\/${sdk_version} && \\\n    unzip -q \/tmp\/${sdk_version} -d ${android_home} && \\\n    rm \/tmp\/${sdk_version}\n\n# Set environment variables\nENV ANDROID_HOME ${android_home}\nENV ADB_INSTALL_TIMEOUT 120\nENV PATH=${ANDROID_HOME}\/emulator:${ANDROID_HOME}\/tools:${ANDROID_HOME}\/tools\/bin:${ANDROID_HOME}\/platform-tools:${PATH}\n\nRUN mkdir ~\/.android && echo '### User Sources for Android SDK Manager' > ~\/.android\/repositories.cfg\n\n# Work around for https:\/\/issuetracker.google.com\/issues\/123054726\nRUN yes | sdkmanager --licenses && \\\n    echo \"24333f8a63b6825ea9c5514f83c2829b004d1fee\" > \"${ANDROID_HOME}\/licenses\/android-sdk-license\" && \\\n    sdkmanager --update\n\n# Update SDK manager and install system image, platform and build tools\nRUN sdkmanager \\\n    \"tools\" \\\n    \"platform-tools\" \\\n    \"extras;android;m2repository\" \\\n    \"extras;google;m2repository\" \\\n    \"extras;google;google_play_services\" \\\n    \"build-tools;28.0.3\"\n\nCOPY for_branch \/bin\nCOPY run_build \/bin\n\nENTRYPOINT [\"bash\", \"\/bin\/run_build\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":120,
        "end":152,
        "text":"FROM gcr.io\/cloud-builders\/javac"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":421,
        "end":557,
        "text":"apt-get install -y \\\\ngit locales sudo openssh-client ca-certificates tar gzip parallel \\\\nzip unzip bzip2 gnupg curl wget"
      },
      {
        "label":"apt-install-without-version",
        "start":421,
        "end":557,
        "text":"apt-get install -y \\\\ngit locales sudo openssh-client ca-certificates tar gzip parallel \\\\nzip unzip bzip2 gnupg curl wget"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-sudo-run",
        "start":893,
        "end":925,
        "text":"RUN sudo mkdir -p ${android_home"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user",
      "use-sudo-run",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"332042a365be467775cc470ca08dbbc766d7aff8.dockerfile",
    "file_content":"FROM socketplane\/busybox:latest\nMAINTAINER The SocketPlane Team <support@socketplane.io>\nENV OVS_VERSION 2.3\nENV SUPERVISOR_STDOUT_VERSION 0.1.1\n# Configure supervisord\nRUN mkdir -p \/var\/log\/supervisor\/\nADD supervisord.conf \/etc\/\n# Install supervisor_stdout\nWORKDIR \/opt\nRUN mkdir -p \/var\/log\/supervisor\/\nRUN mkdir -p \/etc\/openvswitch\nRUN wget https:\/\/pypi.python.org\/packages\/source\/s\/supervisor-stdout\/supervisor-stdout-$SUPERVISOR_STDOUT_VERSION.tar.gz --no-check-certificate && \\\n\ttar -xzvf supervisor-stdout-0.1.1.tar.gz && \\\n\tmv supervisor-stdout-$SUPERVISOR_STDOUT_VERSION supervisor-stdout && \\\n\trm supervisor-stdout-0.1.1.tar.gz && \\\n\tcd supervisor-stdout && \\\n\tpython setup.py install -q\n# Get Open vSwitch\nWORKDIR \/\nRUN wget https:\/\/s3-us-west-2.amazonaws.com\/docker-ovs\/openvswitch-$OVS_VERSION.tar.gz --no-check-certificate && \\\n\ttar -xzvf openvswitch-$OVS_VERSION.tar.gz &&\\\n\tmv openvswitch-$OVS_VERSION openvswitch &&\\\n\tcp -r openvswitch\/* \/ &&\\\n\trm -r openvswitch &&\\\n\trm openvswitch-$OVS_VERSION.tar.gz \nADD configure-ovs.sh \/usr\/local\/share\/openvswitch\/\n# Create the database\nRUN ovsdb-tool create \/etc\/openvswitch\/conf.db \/usr\/local\/share\/openvswitch\/vswitch.ovsschema\n# Put the OVS Python modules on the Python Path\nRUN cp -r \/usr\/local\/share\/openvswitch\/python\/ovs \/usr\/lib\/python2.7\/site-packages\/ovs\nCMD [\"\/usr\/bin\/supervisord\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":31,
        "text":"FROM socketplane\/busybox:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":32,
        "end":88,
        "text":"MAINTAINER The SocketPlane Team <support@socketplane.io>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":203,
        "end":229,
        "text":"ADD supervisord.conf \/etc\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":644,
        "end":658,
        "text":"cd supervisor-"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1021,
        "end":1071,
        "text":"ADD configure-ovs.sh \/usr\/local\/share\/openvswitch\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"3632f2d5515d45f2088c47a49234f0298769157c.dockerfile",
    "file_content":"FROM ubuntu:latest\nMAINTAINER martino.trevisan@polito.it\n\n# Install docker\nRUN apt-get update\nRUN apt-get -y install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common \\\n    sudo\nRUN curl -fsSL https:\/\/download.docker.com\/linux\/ubuntu\/gpg | apt-key add -\nRUN add-apt-repository \\\n    \"deb [arch=amd64] https:\/\/download.docker.com\/linux\/ubuntu \\\n    $(lsb_release -cs) \\\n    stable\"\nRUN apt-get update\nRUN apt-get -y install docker-ce\n#RUN service docker start\n\n# Install ssh server\nRUN apt-get -y install openssh-server\nRUN awk '{if($1 == \"PermitRootLogin\")$2=\"yes\"; print }' \/etc\/ssh\/sshd_config > \/tmp\/sshd_config && \\\n    cp \/tmp\/sshd_config \/etc\/ssh\/sshd_config\nRUN echo \"root:toor\" | chpasswd\n\n# Install some utils\nRUN apt-get -y install iputils-ping net-tools nano\n\n# Add group docker\n#RUN groupadd docker\n\n# Add files\nRUN echo \"\/opt\/docker_shell.sh\" >> \/etc\/shells\nCOPY files\/docker_shell.sh \/opt\nCOPY files\/start_daemons.sh \/opt\nCOPY files\/adduser_docker \/usr\/local\/bin\nRUN chmod 777 \/opt\/docker_shell.sh && chmod 777 \/usr\/local\/bin\/adduser_docker && chmod 777 opt\/start_daemons.sh\n\n# Entrypoint\nCMD [ \"\/opt\/start_daemons.sh\" ]\n\n\n\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":53,
        "text":"MAINTAINER martino.trevisan@polito"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":94,
        "end":219,
        "text":"RUN apt-get -y install \\\\napt-transport-https \\\\nca-certificates \\\\ncurl \\\\nsoftware-properties-common \\\\nsudo"
      },
      {
        "label":"apt-install-without-version",
        "start":94,
        "end":219,
        "text":"RUN apt-get -y install \\\\napt-transport-https \\\\nca-certificates \\\\ncurl \\\\nsoftware-properties-common \\\\nsudo"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":761,
        "end":811,
        "text":"RUN apt-get -y install iputils-ping net-tools nano"
      },
      {
        "label":"apt-install-without-version",
        "start":761,
        "end":811,
        "text":"RUN apt-get -y install iputils-ping net-tools nano"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"3a326a92bc126155c8b8dbdd5781b9c06697d1ca.dockerfile",
    "file_content":"FROM ubuntu:18.04\nMAINTAINER ryuzee\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get -y install wget curl zip unzip git sqlite3 libsqlite3-dev build-essential libssl-dev libreadline-dev libmagickcore-dev libmagic-dev libmagickwand-dev graphviz nginx language-pack-ja ntp libmysqlclient-dev supervisor imagemagick && update-locale LANGUAGE=ja_JP.UTF-8 LC_ALL=ja_JP.UTF-8 LANG=ja_JP.UTF-8 && ln -sf \/usr\/share\/zoneinfo\/Asia\/Tokyo \/etc\/localtime\n\nRUN git clone https:\/\/github.com\/sstephenson\/rbenv.git \/root\/.rbenv\nRUN echo \"export PATH=\/root\/.rbenv\/shims:\/root\/.rbenv\/bin:\/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin\" > \/root\/.bashrc\nRUN echo 'eval \"$(rbenv init -)\"' >> \/root\/.bashrc\nRUN git clone https:\/\/github.com\/sstephenson\/ruby-build.git \/root\/.rbenv\/plugins\/ruby-build\nENV PATH \/root\/.rbenv\/bin:$PATH\nENV RAILS_ROOT \/opt\/application\/current\nRUN bash -c \"source \/root\/.bashrc && rbenv install 2.5.0\"\nRUN bash -c \"source \/root\/.bashrc && rbenv global 2.5.0\"\nRUN bash -c \"source \/root\/.bashrc && rbenv exec gem install bundler -v 1.16.1\"\nRUN bash -c \"source \/root\/.bashrc && rbenv rehash\"\n\nCOPY supervisor.conf \/etc\/supervisor.conf\n\nRUN apt-get update && apt-get install -y unoconv xpdf xvfb fonts-vlgothic fonts-mplus fonts-migmix libmagickwand-dev\nRUN cd \/tmp && wget \"http:\/\/downloads.sourceforge.net\/project\/openofficeorg.mirror\/4.1.1\/binaries\/ja\/Apache_OpenOffice_4.1.1_Linux_x86-64_install-deb_ja.tar.gz\" --tries 3 -O \/tmp\/openoffice.tar.gz && tar xvfz \/tmp\/openoffice.tar.gz && cd ja\/DEBS && dpkg -i *.deb\n\nEXPOSE 3000\nCMD [\"\/usr\/bin\/supervisord\", \"-c\", \"\/etc\/supervisor.conf\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":35,
        "text":"MAINTAINER ryuzee"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":94,
        "end":459,
        "text":"apt-get -y install wget curl zip unzip git sqlite3 libsqlite3-dev build-essential libssl-dev libreadline-dev libmagickcore-dev libmagic-dev libmagickwand-dev graphviz nginx language-pack-ja ntp libmysqlclient-dev supervisor imagemagick && update-locale LANGUAGE=ja_JP.UTF-8 LC_ALL=ja_JP.UTF-8 LANG=ja_JP.UTF-8 && ln -sf \/usr\/share\/zoneinfo\/Asia\/Tokyo \/etc\/localtime"
      },
      {
        "label":"apt-install-without-version",
        "start":94,
        "end":459,
        "text":"apt-get -y install wget curl zip unzip git sqlite3 libsqlite3-dev build-essential libssl-dev libreadline-dev libmagickcore-dev libmagic-dev libmagickwand-dev graphviz nginx language-pack-ja ntp libmysqlclient-dev supervisor imagemagick && update-locale LANGUAGE=ja_JP.UTF-8 LC_ALL=ja_JP.UTF-8 LANG=ja_JP.UTF-8 && ln -sf \/usr\/share\/zoneinfo\/Asia\/Tokyo \/etc\/localtime"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1191,
        "end":1285,
        "text":"apt-get install -y unoconv xpdf xvfb fonts-vlgothic fonts-mplus fonts-migmix libmagickwand-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":1191,
        "end":1285,
        "text":"apt-get install -y unoconv xpdf xvfb fonts-vlgothic fonts-mplus fonts-migmix libmagickwand-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":1286,
        "end":1300,
        "text":"RUN cd \/tmp &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"3c294be7135ecb191feaabf33cdf1e9f58be5ab9.dockerfile",
    "file_content":"# Regent + Legion with GASNet and CUDA\n\nFROM ubuntu:16.04\n\nMAINTAINER Michael Bauer <mbauer@nvidia.com>\n\n# Install dependencies.\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update -qq && \\\n    apt-get install -qq software-properties-common && \\\n    add-apt-repository ppa:ubuntu-toolchain-r\/test -y && \\\n    add-apt-repository ppa:pypy\/ppa -y && \\\n    apt-get update -qq && \\\n    apt-get install -qq \\\n      build-essential git python-pip pypy time wget \\\n      g++-4.8 g++-4.9 g++-5 g++-6 \\\n      gcc-4.9-multilib g++-4.9-multilib \\\n      libncurses5-dev \\\n      zlib1g-dev \\\n      mpich libmpich-dev \\\n      mesa-common-dev \\\n      libblas-dev liblapack-dev libhdf5-dev \\\n      module-init-tools \\\n      gdb vim \\\n      openmpi-bin openssh-client openssh-server libopenmpi-dev && \\\n    apt-get clean\n\n# InfiniBand\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    dapl2-utils \\\n    ibutils \\\n    ibverbs-utils \\\n    infiniband-diags \\\n    libdapl-dev \\\n    libibcm-dev \\\n    libibverbs1-dbg \\\n    libibverbs-dev \\\n    libmlx4-1-dbg \\\n    libmlx4-dev \\\n    libmlx5-1-dbg \\\n    libmlx5-dev \\\n    librdmacm-dev \\\n    opensm\n\n# Build GASNet\nRUN git clone -b master https:\/\/github.com\/StanfordLegion\/gasnet.git \/usr\/local\/gasnet\nRUN make -C \/usr\/local\/gasnet\/ -e CONDUIT=ibv\n\n# Build LLVM and Clang\nRUN wget http:\/\/releases.llvm.org\/3.8.1\/llvm-3.8.1.src.tar.xz && \\\n    tar -xf llvm-3.8.1.src.tar.xz && \\\n    wget http:\/\/releases.llvm.org\/3.8.1\/cfe-3.8.1.src.tar.xz && \\\n    tar -xf cfe-3.8.1.src.tar.xz && \\\n    mv cfe-3.8.1.src llvm-3.8.1.src\/tools\/clang && \\\n    mkdir llvm-build && cd llvm-build && \\\n    ..\/llvm-3.8.1.src\/configure --enable-optimized --disable-assertions --disable-terminfo --disable-libedit --disable-zlib && \\\n    make -j 20 && make install && cd ..\n\n# Install CUDA\nRUN wget http:\/\/developer.download.nvidia.com\/compute\/cuda\/repos\/ubuntu1604\/x86_64\/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && \\\n    dpkg -i cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && apt-get update -qq && \\\n    apt-get -y install cuda-command-line-tools-8-0 cuda-core-8-0 cuda-cublas-dev-8-0 && \\\n    ln -s \/usr\/local\/cuda-8.0 \/usr\/local\/cuda && \\\n    wget http:\/\/us.download.nvidia.com\/XFree86\/Linux-x86_64\/375.66\/NVIDIA-Linux-x86_64-375.66.run && \\\n    sh .\/NVIDIA-Linux-x86_64-375.66.run -s -N --no-kernel-module && \\\n    rm cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && rm NVIDIA-Linux-x86_64-375.66.run\n\n# Configure the environment for CUDA\nENV PATH \/usr\/local\/cuda\/bin:$PATH\nENV LD_LIBRARY_PATH \/usr\/local\/cuda\/extras\/CUPTI\/lib64:\/usr\/local\/cuda\/lib64:$LD_LIBRARY_PATH\nENV CUDA \/usr\/local\/cuda\n\n# Install Regent.\nRUN git clone -b master https:\/\/github.com\/StanfordLegion\/legion.git \/usr\/local\/legion\nRUN LLVM_CONFIG=llvm-config GASNET=\/usr\/local\/gasnet\/release CONDUIT=ibv \/usr\/local\/legion\/language\/install.py --rdir=auto --gasnet --cuda && \\\n    ln -s \/usr\/local\/legion\/language\/regent.py \/usr\/local\/bin\/regent\n\n# Configure container startup.\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":59,
        "end":102,
        "text":"MAINTAINER Michael Bauer <mbauer@nvidia.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":196,
        "end":245,
        "text":"apt-get install -qq software-properties-common &&"
      },
      {
        "label":"apt-install-without-version",
        "start":196,
        "end":245,
        "text":"apt-get install -qq software-properties-common &&"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":383,
        "end":781,
        "text":"apt-get install -qq \\\\nbuild-essential git python-pip pypy time wget \\\\ng++-4.8 g++-4.9 g++-5 g++-6 \\\\ngcc-4.9-multilib g++-4.9-multilib \\\\nlibncurses5-dev \\\\nzlib1g-dev \\\\nmpich libmpich-dev \\\\nmesa-common-dev \\\\nlibblas-dev liblapack-dev libhdf5-dev \\\\nmodule-init-tools \\\\ngdb vim \\\\nopenmpi-bin openssh-client openssh-server libopenmpi-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":383,
        "end":781,
        "text":"apt-get install -qq \\\\nbuild-essential git python-pip pypy time wget \\\\ng++-4.8 g++-4.9 g++-5 g++-6 \\\\ngcc-4.9-multilib g++-4.9-multilib \\\\nlibncurses5-dev \\\\nzlib1g-dev \\\\nmpich libmpich-dev \\\\nmesa-common-dev \\\\nlibblas-dev liblapack-dev libhdf5-dev \\\\nmodule-init-tools \\\\ngdb vim \\\\nopenmpi-bin openssh-client openssh-server libopenmpi-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":841,
        "end":1146,
        "text":"apt-get install -y --no-install-recommends \\\\ndapl2-utils \\\\nibutils \\\\nibverbs-utils \\\\ninfiniband-diags \\\\nlibdapl-dev \\\\nlibibcm-dev \\\\nlibibverbs1-dbg \\\\nlibibverbs-dev \\\\nlibmlx4-1-dbg \\\\nlibmlx4-dev \\\\nlibmlx5-1-dbg \\\\nlibmlx5-dev \\\\nlibrdmacm-dev \\\\nopensm"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":1789,
        "end":1794,
        "text":"cd .."
      },
      {
        "label":"use-cd-change-dir",
        "start":1607,
        "end":1623,
        "text":"cd llvm-build &&"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"166ceced3622191707224b809af5ce4e308665e3.dockerfile",
    "file_content":"FROM debian:jessie\nMAINTAINER Beau Trepp <https:\/\/github.com\/btrepp>\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get clean && apt-get update && apt-get install -y \\\n gcc \\\n g++ \\\n make \\\n autoconf \\\n automake \\\n libtool \\\n libboost-dev \\\n libboost-thread-dev \\\n libboost-program-options-dev \\\n libboost-system-dev \\\n libboost-filesystem-dev \\\n libcppunit-dev \\\n pkg-config git \\\n python-dev \\\n libboost-python-dev \\\n gsoap \\\n libxml2-dev \\\n build-essential \\\n autotools-dev \\\n dh-make \\\n debhelper \\\n devscripts \\\n fakeroot \\\n xutils \\\n lintian \\\n pbuilder \\\n reprepro\nADD \/ \/tmp\/freeopcua\nWORKDIR \/tmp\/freeopcua\nRUN .\/build.sh\nRUN make check\nRUN make install\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":68,
        "text":"MAINTAINER Beau Trepp <https:\/\/github.com\/btrepp>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":143,
        "end":220,
        "text":"apt-get install -y \\\\ngcc \\\\ng++ \\\\nmake \\\\nautoconf \\\\nautomake \\\\nlibtool \\"
      },
      {
        "label":"apt-install-without-version",
        "start":143,
        "end":220,
        "text":"apt-get install -y \\\\ngcc \\\\ng++ \\\\nmake \\\\nautoconf \\\\nautomake \\\\nlibtool \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":568,
        "end":588,
        "text":"ADD \/ \/tmp\/freeopcua"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"16ca658bb03deb21474127666b5d7ae3f0210320.dockerfile",
    "file_content":"# Beats dockerfile used for testing\nFROM golang:1.7.6\nMAINTAINER Nicolas Ruflin <ruflin@elastic.co>\n\nRUN set -x && \\\n    apt-get update && \\\n    apt-get install -y netcat python-virtualenv python-pip && \\\n    apt-get clean\n\nENV PYTHON_ENV=\/tmp\/python-env\n\nRUN test -d ${PYTHON_ENV} || virtualenv ${PYTHON_ENV}\nRUN . ${PYTHON_ENV}\/bin\/activate && pip install nose jinja2 PyYAML nose-timer\n\n# Packetbeat specifics\nRUN apt-get install -y libpcap-dev geoip-database && apt-get clean\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":54,
        "end":99,
        "text":"MAINTAINER Nicolas Ruflin <ruflin@elastic.co>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":145,
        "end":199,
        "text":"apt-get install -y netcat python-virtualenv python-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":145,
        "end":199,
        "text":"apt-get install -y netcat python-virtualenv python-pip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":412,
        "end":461,
        "text":"RUN apt-get install -y libpcap-dev geoip-database"
      },
      {
        "label":"apt-install-without-version",
        "start":412,
        "end":461,
        "text":"RUN apt-get install -y libpcap-dev geoip-database"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":346,
        "end":387,
        "text":"pip install nose jinja2 PyYAML nose-timer"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"16e90e74ff714bba59019b59371dd78d864920d8.dockerfile",
    "file_content":"FROM ubuntu:18.04\n\nLABEL maintainer=\"Johannes.Pohl90@gmail.com\"\n\nENV TZ=Europe\/Berlin\n\n# Debug QT plugins by exporting QT_DEBUG_PLUGINS=1 before running URH\n# To allow docker to connect to X run xhost +local:docker\n\nRUN ln -snf \/usr\/share\/zoneinfo\/$TZ \/etc\/localtime && echo $TZ > \/etc\/timezone \\\n && apt-get -qq update \\\n && apt-get -qq install software-properties-common \\\n && add-apt-repository -y ppa:myriadrf\/drivers && apt-get -qq update \\\n && apt-get -qq install wget gcc g++ git \\\n                       python-pip python-zmq \\\n                       python3 python3-pip python3-pyaudio python3-pyqt5 python3-numpy python3-zmq python3-psutil \\\n                       fonts-dejavu-core libgles2-mesa libusb-1.0-0 \\\n                       gr-osmosdr libgnuradio-zeromq* \\\n                       libhackrf-dev liblimesuite-dev libbladerf-dev librtlsdr-dev libairspy-dev libuhd-dev libiio-dev \\\n && python2 -m pip install pyusb \\\n && python3 -m pip install setuptools cython \\\n && mkdir \/tmp\/sdrplay \\\n && wget http:\/\/www.sdrplay.com\/software\/SDRplay_RSP_API-Linux-2.13.1.run -O \/tmp\/sdrplay\/sdrplay.run \\\n && cd \/tmp\/sdrplay && bash sdrplay.run --tar xf \\\n && cp mirsdrapi-rsp.h \/usr\/local\/include \\\n && cp x86_64\/libmirsdrapi-rsp.so.2.13 \/usr\/lib\/x86_64-linux-gnu\/ \\\n && ln -s \/usr\/lib\/x86_64-linux-gnu\/libmirsdrapi-rsp.so.2.13 \/usr\/lib\/x86_64-linux-gnu\/libmirsdrapi-rsp.so \\\n && rm -rf \/tmp\/sdrplay \\\n \\\n && cd \/tmp && git clone --depth=1 https:\/\/github.com\/jopohl\/urh \\\n && cd \/tmp\/urh \\\n && python3 setup.py install \\\n && rm -rf \/tmp\/urh \\\n \\\n && cd \/tmp && git clone --depth=1 https:\/\/github.com\/atlas0fd00m\/rfcat \\\n && cd rfcat \\\n && python setup.py install \\\n && rm -rf ..\/rfcat \\\n \\\n && apt-get -qq remove wget gcc g++ git ttf-bitstream-vera \\\n && apt-get -qq autoremove \\\n && dbus-uuidgen > \/var\/lib\/dbus\/machine-id \\\n && apt-get -qq clean all \\\n && mkdir \/tmp\/runtime-root \\\n && chmod 0700 \/tmp\/runtime-root\n\nCMD XDG_RUNTIME_DIR=\/tmp\/runtime-root urh\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":326,
        "end":374,
        "text":"apt-get -qq install software-properties-common \\"
      },
      {
        "label":"apt-install-without-version",
        "start":326,
        "end":372,
        "text":"apt-get -qq install software-properties-common"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":450,
        "end":486,
        "text":"apt-get -qq install wget gcc g++ git"
      },
      {
        "label":"apt-install-without-version",
        "start":450,
        "end":486,
        "text":"apt-get -qq install wget gcc g++ git"
      },
      {
        "label":"use-cd-change-dir",
        "start":1114,
        "end":1129,
        "text":"cd \/tmp\/sdrplay"
      },
      {
        "label":"use-cd-change-dir",
        "start":1412,
        "end":1425,
        "text":"&& cd \/tmp &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1482,
        "end":1495,
        "text":"cd \/tmp\/urh \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1556,
        "end":1563,
        "text":"cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":1630,
        "end":1638,
        "text":"cd rfcat"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":903,
        "end":933,
        "text":"python2 -m pip install pyusb \\"
      },
      {
        "label":"pip-install-without-version",
        "start":938,
        "end":978,
        "text":"python3 -m pip install setuptools cython"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"17bc4bee8e68f2db86c0dc39d810f2217d5604c8.dockerfile",
    "file_content":"FROM docker-dev.yelpcorp.com\/xenial_yelp\nRUN apt-get update && apt-get install -y hacheck python paasta-tools=0.81.14-yelp1\nRUN mkdir -p \/etc\/paasta\nADD .\/check_smartstack_up.sh \/check_smartstack_up.sh\nADD .\/hacheck.conf.yaml \/etc\/hacheck.conf.yaml\nENTRYPOINT [\"\/usr\/bin\/hacheck\"]\nCMD [\"-p\", \"6666\", \"-c\", \"\/etc\/hacheck.conf.yaml\", \"--spool-root\", \"\/var\/spool\/hacheck\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":40,
        "text":"FROM docker-dev.yelpcorp.com\/xenial_yelp"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":63,
        "end":96,
        "text":"apt-get install -y hacheck python"
      },
      {
        "label":"apt-install-without-version",
        "start":63,
        "end":96,
        "text":"apt-get install -y hacheck python"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":149,
        "end":248,
        "text":"ADD .\/check_smartstack_up.sh \/check_smartstack_up.sh\\nADD .\/hacheck.conf.yaml \/etc\/hacheck.conf.yaml"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"1bba91aa4a68c182a6847e85d352b0dee97d67e0.dockerfile",
    "file_content":"FROM rocker\/r-base\nMAINTAINER Jeff Allen <docker@trestletech.com>\n\nRUN apt-get update -qq && apt-get install -y \\\n  git-core \\\n  libssl-dev \\\n  libcurl4-gnutls-dev\n\n## RUN R -e 'install.packages(c(\"devtools\"))'\n## RUN R -e 'devtools::install_github(\"trestletech\/plumber\")'\nRUN install2.r plumber\n\nEXPOSE 8000\nENTRYPOINT [\"R\", \"-e\", \"pr <- plumber::plumb(commandArgs()[4]); pr$run(host='0.0.0.0', port=8000)\"]\nCMD [\"\/usr\/local\/lib\/R\/site-library\/plumber\/examples\/04-mean-sum\/plumber.R\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM rocker\/r-base"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":65,
        "text":"MAINTAINER Jeff Allen <docker@trestletech.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":93,
        "end":163,
        "text":"apt-get install -y \\\\ngit-core \\\\nlibssl-dev \\\\nlibcurl4-gnutls-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":93,
        "end":163,
        "text":"apt-get install -y \\\\ngit-core \\\\nlibssl-dev \\\\nlibcurl4-gnutls-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"1d3d45a190d826b7f57e707b26d3b9725139158c.dockerfile",
    "file_content":"FROM ubuntu:16.04  \nMAINTAINER AtomPi <atomissionpi@gmail.com>  \n  \n# prepare  \nRUN apt-get update  \n  \n# install gcc-multilib  \nRUN apt-get install -y gcc make gcc-multilib curl  \nRUN apt-get -y autoremove  \nRUN rm -rf \/var\/lib\/apt\/lists\/*  \n  \n# install nodejs  \nRUN curl -sL https:\/\/deb.nodesource.com\/setup_6.x | bash -  \nRUN apt-get install -y nodejs  \nRUN npm install -g cnpm --registry=https:\/\/registry.npm.taobao.org  \n  \nWORKDIR \/app\/gallery  \n  \nADD . \/app\/gallery\/  \n  \n# cnpm install  \nRUN cnpm install  \n  \nEXPOSE 3000  \n# startup  \nENTRYPOINT [\"npm\", \"run\", \"start\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":62,
        "text":"MAINTAINER AtomPi <atomissionpi@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":129,
        "end":178,
        "text":"RUN apt-get install -y gcc make gcc-multilib curl"
      },
      {
        "label":"apt-install-without-version",
        "start":129,
        "end":178,
        "text":"RUN apt-get install -y gcc make gcc-multilib curl"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":326,
        "end":355,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":326,
        "end":355,
        "text":"RUN apt-get install -y nodejs"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":456,
        "end":475,
        "text":"ADD . \/app\/gallery\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"1d7a6b6b0bb0c0030457f6347aaa882d307c4f29.dockerfile",
    "file_content":"FROM ubuntu:17.10\n\nARG workdir=\"\/root\"\n\n# install required packages and usuful applications\nRUN apt-get update && apt-get install -y \\\n\twget iputils-ping iproute2 kmod \\\n\tgit autoconf automake libtool make gawk libreadline-dev \\\n\ttexinfo dejagnu pkg-config libpam0g-dev libjson-c-dev bison flex \\\n\tpython-pytest libc-ares-dev python3-dev libsystemd-dev\t\\\n\tlibgmp-dev openssl gperf python3-jinja2\t\n\n# setup FRRouting with the cumulus extension for EVPN\/VXLAN\nRUN cd ${workdir}\t\\\n\t&& groupadd -g 92 frr\t\\\n\t&& groupadd -r -g 85 frrvty\t\\\n\t&& adduser --system --ingroup frr --home \/var\/run\/frr\/\t\\\n\t   --gecos \"FRR suite\" --shell \/sbin\/nologin frr\t\\\n\t&& usermod -a -G frrvty frr\t\\\n\t&& git clone https:\/\/github.com\/frrouting\/frr.git frr\t\\\n\t&& cd frr\t\\\n\t&& git checkout -b itworks 67c0a9206ce9b50dacb6561e7dccdc0ae8e7fc43 \\\n\t&& .\/bootstrap.sh\t\\\n\t&& .\/configure \\\n\t    --prefix=\/usr \\\n\t    --enable-exampledir=\/usr\/share\/doc\/frr\/examples\/ \\\n\t    --localstatedir=\/var\/run\/frr \\\n\t    --sbindir=\/usr\/lib\/frr \\\n\t    --sysconfdir=\/etc\/frr \\\n\t    --enable-watchfrr \\\n\t    --enable-multipath=64 \\\n\t    --enable-user=frr \\\n\t    --enable-group=frr \\\n\t    --enable-vty-group=frrvty \\\n\t    --enable-configfile-mask=0640 \\\n\t    --enable-logfile-mask=0640 \\\n\t    --enable-systemd=yes \\\n\t    --with-pkg-git-version \\\n\t    --with-pkg-extra-version=-Nante-WAN\t\\\n\t    --enable-cumulus\t\\\n\t&& make\t-j 4\\\n\t&& make install\t\\\n\t&& install -m 755 -o frr -g frr -d \/var\/log\/frr\t\\\n\t&& install -m 775 -o frr -g frrvty -d \/etc\/frr\t\\\n\t&& install -m 640 -o frr -g frr \/dev\/null \/etc\/frr\/zebra.conf\t\\\n\t&& install -m 640 -o frr -g frr \/dev\/null \/etc\/frr\/bgpd.conf\t\\\n\t&& install -m 640 -o frr -g frr \/dev\/null \/etc\/frr\/nhrpd.conf\t\\\n\t&& install -m 640 -o frr -g frrvty \/dev\/null \/etc\/frr\/vtysh.conf \\\n\t&& install -m 644 tools\/frr.service \/etc\/systemd\/system\/frr.service \\\n\t&& install -m 644 tools\/etc\/default\/frr \/etc\/default\/frr\t\\\n\t&& install -m 644 tools\/etc\/frr\/daemons \/etc\/frr\/daemons\t\\\n\t&& install -m 644 tools\/etc\/frr\/daemons.conf \/etc\/frr\/daemons.conf \\\n\t&& install -m 644 tools\/etc\/frr\/frr.conf \/etc\/frr\/frr.conf\t\\\n\t&& install -m 644 -o frr -g frr tools\/etc\/frr\/vtysh.conf \\\n\t\t\t\t\t\/etc\/frr\/vtysh.conf \\\n\t&& rm -f \/etc\/frr\/daemons\n\nADD daemons \/etc\/frr\/daemons\n\n# setup StrongSwan\nRUN cd ${workdir}\t\\\n\t&& git clone -b tteras --depth=1 \\\n\t\tgit:\/\/git.alpinelinux.org\/user\/tteras\/strongswan\nRUN cd ${workdir}\/strongswan\t\\\n\t&& autoreconf -i || true\t\\\n\t&& autoconf\t\t\\\n\t&& autoreconf -i\t\\\n\t&& .\/configure\t\t\\\n\t&& make\t-j 4 || true\t\\\n\t&& make\t-j 4 || true\t\\\n\t&& make\t-j 4\t\t\\\n\t&& make install\t\t\\\n\t&& rm -f \/usr\/local\/etc\/ipsec.conf\nADD ipsec.conf \/usr\/local\/etc\/ipsec.conf\n\n# setup Config Render\nADD templates ${workdir}\/templates\nADD config-render.py ${workdir}\/config-render.py\n\n\nCMD bash -c \"\/root\/config-render.py \/etc\/nante-wan.conf && \/usr\/lib\/frr\/frr start && ipsec start && bash\"\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":114,
        "end":354,
        "text":"apt-get install -y \\\\nwget iputils-ping iproute2 kmod \\\\ngit autoconf automake libtool make gawk libreadline-dev \\\\ntexinfo dejagnu pkg-config libpam0g-dev libjson-c-dev bison flex \\\\npython-pytest libc-ares-dev python3-dev libsystemd-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":114,
        "end":388,
        "text":"apt-get install -y \\\\nwget iputils-ping iproute2 kmod \\\\ngit autoconf automake libtool make gawk libreadline-dev \\\\ntexinfo dejagnu pkg-config libpam0g-dev libjson-c-dev bison flex \\\\npython-pytest libc-ares-dev python3-dev libsystemd-dev \\\\nlibgmp-dev openssl gperf python3"
      },
      {
        "label":"use-cd-change-dir",
        "start":733,
        "end":744,
        "text":"&& cd frr \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2196,
        "end":2224,
        "text":"ADD daemons \/etc\/frr\/daemons"
      },
      {
        "label":"use-cd-change-dir",
        "start":2245,
        "end":2261,
        "text":"RUN cd ${workdir"
      },
      {
        "label":"use-cd-change-dir",
        "start":2352,
        "end":2380,
        "text":"RUN cd ${workdir}\/strongswan"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2587,
        "end":2627,
        "text":"ADD ipsec.conf \/usr\/local\/etc\/ipsec.conf"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2651,
        "end":2734,
        "text":"ADD templates ${workdir}\/templates\\nADD config-render.py ${workdir}\/config-render.py"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"0321257054a6e0561c1b2caedcf212c4d14dfb6f.dockerfile",
    "file_content":"FROM rocker\/r-devel\n\nMAINTAINER Winston Chang \"winston@rstudio.com\"\n\nRUN apt-get update && apt-get install -y \\\n    git \\\n    libcurl4-gnutls-dev \\\n    libxml2-dev \\\n    libpq-dev \\\n    libmysqlclient-dev \\\n    pandoc \\\n    pandoc-citeproc\n\n# Temporary workaround related to libpath problems:\n# https:\/\/github.com\/rocker-org\/rocker\/issues\/54\n# https:\/\/github.com\/rocker-org\/rocker\/issues\/67\nRUN mkdir \/usr\/local\/lib\/R\/site-library-devel && \\\n    echo \"R_LIBS_SITE=\\${R_LIBS_SITE-'\/usr\/local\/lib\/R\/site-library-devel:\/usr\/local\/lib\/R\/library'}\" \\\n        >> \/usr\/local\/lib\/R\/etc\/Renviron && \\\n    rm -f \/usr\/local\/lib\/R\/etc\/Renviron.site\n\n# Remove R_LIBS settings (also related to #67)\nRUN sed -i '\/^R_LIBS=\/d' \/usr\/local\/lib\/R\/etc\/Renviron\n\nRUN Rscript -e \"install.packages('devtools'); update.packages(ask = FALSE)\" && \\\n    Rscript -e \"devtools::install_github('hadley\/devtools')\"\n\n# Install R recommended packages for R-devel into the top libpath -- seems to\n# be necessary for package checks to work.\nRUN RDscript -e \"install.packages(c('MASS', 'lattice', 'Matrix', 'nlme', \\\n    'survival', 'boot', 'cluster', 'codetools', 'foreign', 'KernSmooth', \\\n    'rpart', 'class', 'nnet', 'spatial', 'mgcv'), \\\n    lib = '\/usr\/local\/lib\/R\/library')\"\n\nRUN RDscript -e \"install.packages(c('devtools', 'rmarkdown'))\" && \\\n    RDscript -e \"devtools::install_github('hadley\/devtools')\"\n\nRUN echo \"\\nalias R='R --no-save --no-restore-data --quiet'\" >> $HOME\/.bashrc && \\\n    echo \"\\nalias RD='RD --no-save --no-restore-data --quiet'\" >> $HOME\/.bashrc && \\\n    echo \"R_LIBS_USER=~\/R-lib\/%v\" > $HOME\/.Renviron && \\\n    mkdir -p $HOME\/R-lib\/3.1 $HOME\/R-lib\/3.2\n\n# Can't use $HOME with COPY for some reason\nCOPY check_all.R \/root\/check_all.R\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM rocker\/r-devel"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":66,
        "text":"MAINTAINER Winston Chang \"winston@rstudio.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":91,
        "end":239,
        "text":"apt-get install -y \\\\ngit \\\\nlibcurl4-gnutls-dev \\\\nlibxml2-dev \\\\nlibpq-dev \\\\nlibmysqlclient-dev \\\\npandoc \\\\npandoc-citeproc"
      },
      {
        "label":"apt-install-without-version",
        "start":91,
        "end":239,
        "text":"apt-get install -y \\\\ngit \\\\nlibcurl4-gnutls-dev \\\\nlibxml2-dev \\\\nlibpq-dev \\\\nlibmysqlclient-dev \\\\npandoc \\\\npandoc-citeproc"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"038e09cf30d88777b2d2c722240b27bfdb0822fd.dockerfile",
    "file_content":"# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io\/oss-fuzz-base\/base-builder\nMAINTAINER wrengr@chromium.org\nRUN apt-get update && apt-get install -y make autoconf automake libtool\n\nRUN git clone --depth 1 https:\/\/code.googlesource.com\/re2\nWORKDIR re2\nCOPY build.sh $SRC\/\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":660,
        "end":698,
        "text":"FROM gcr.io\/oss-fuzz-base\/base-builder"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":699,
        "end":729,
        "text":"MAINTAINER wrengr@chromium.org"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":752,
        "end":801,
        "text":"apt-get install -y make autoconf automake libtool"
      },
      {
        "label":"apt-install-without-version",
        "start":752,
        "end":801,
        "text":"apt-get install -y make autoconf automake libtool"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"09c7c4f37e8e118dc85bbb1c6169d5fdf6bba5c8.dockerfile",
    "file_content":"# set base os\nFROM phusion\/baseimage:0.9.16\n\n# Set correct environment variables\nENV DEBIAN_FRONTEND=noninteractive HOME=\"\/root\" TERM=xterm LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n\n# set ports\nEXPOSE 9777\/udp 8080\/tcp\n\n# Add local files\nADD src\/ \/root\/\n\n# Set the locale\nRUN locale-gen en_US.UTF-8 && \\\n\n# set kodi checkout version as variable\nkodiCheckout=15.1-Isengard && \\\n\n# Configure user nobody to match unRAID's settings\nusermod -u 99 nobody && \\\nusermod -g 100 nobody && \\\nusermod -d \/home nobody && \\\nchown -R nobody:users \/home && \\\n\n# move startup files and set permissions\nmkdir \/etc\/service\/xbmc && \\\nmv \/root\/kodi.sh \/etc\/service\/xbmc\/run && \\\nmv \/root\/firstrun.sh \/etc\/my_init.d\/firstrun.sh && \\\nchmod +x \/etc\/service\/xbmc\/run && \\\nchmod +x \/etc\/my_init.d\/firstrun.sh && \\\n\n# set build dependencies as variable\nbuildDeps=\"build-essential \\\nzip \\\nunzip \\\nyasm \\\ngawk \\\ncmake \\\nwget \\\ngit-core \\\nautoconf \\\nlibtool \\\nautomake \\\nautopoint \\\nswig \\\ndoxygen \\\nopenjdk-7-jre-headless \\\ngperf \\\nlibsqlite3-dev \\\nlibpcre3-dev \\\nlibtag1-dev \\\nlibbluray-dev \\\nlibjasper-dev \\\nlibmicrohttpd-dev \\\nlibavahi-client-dev \\\nlibxrandr-dev \\\nlibssh-dev \\\nlibsmbclient-dev \\\nlibnfs-dev \\\nlibboost1.54-dev \\\npython-dev \\\nlibmysqlclient-dev \\\nlibgle3-dev \\\nlibglew-dev \\\nlibass-dev \\\nlibmpeg2-4-dev \\\nlibjpeg-dev \\\nlibflac-dev \\\nlibvorbis-dev \\\nlibgnutls-dev \\\nlibbz2-ocaml-dev \\\nlibtiff5-dev \\\nlibyajl-dev \\\nlibssl-dev \\\nlibxml2-dev \\\nlibxslt-dev \\\nlibiso9660-dev \\\nlibtinyxml-dev \\\nliblzo2-dev\" && \\\n\n# set runtime dependencies as variable\nruntimeDeps=\"zip \\\nlibpcrecpp0 \\\nlibtag1-vanilla \\\nlibtag1c2a \\\nlibaacs0 \\\nlibbluray1 \\\nlibjasper1 \\\nlibjpeg-turbo8 \\\nlibjpeg8 \\\nlibmicrohttpd10 \\\nlibavahi-client3 \\\nlibavahi-common-dev \\\nlibdbus-1-dev \\\nlibssh-4 \\\nlibsmbclient \\\nlibnfs1 \\\nlibmysqlclient18 \\\nlibgle3 \\\nlibglew1.10 \\\nlibass4 \\\nlibmpeg2-4 \\\nlibjpeg-turbo8 \\\nlibflac8 \\\nlibogg0 \\\nlibvorbis0a \\\nlibvorbisenc2 \\\nlibvorbisfile3 \\\nlibbz2-ocaml \\\nlibtiff5 \\\nlibtiffxx5 \\\nlibyajl2 \\\nlibxslt1.1 \\\nlibiso9660-8 \\\nlibtinyxml2.6.2 \\\nliblzo2-2 \\\nlibxrandr2 \\\nunzip\" && \\\n\n# update apt\nmv \/root\/excludes \/etc\/dpkg\/dpkg.cfg.d\/excludes && \\\napt-get update -qq && \\\n\n# Install build dependencies\napt-get install \\\n$buildDeps -qy && \\\n\n# fetch source packages\ncd \/tmp\/ && \\\ngit clone https:\/\/github.com\/xbmc\/xbmc.git && \\\nwget http:\/\/curl.haxx.se\/download\/curl-7.43.0.tar.gz && \\\n\n# compile curl\ncd \/tmp && \\\ntar xvf curl-* && \\\ncd curl-* && \\\n.\/configure \\\n--prefix=\/usr \\\n--with-ssl \\\n--with-zlib && \\\nmake && \\\nmake install && \\\n\n# checkout required branch, apply patch(es), configure and build kodi\ncd \/tmp\/xbmc && \\\nmv \/root\/headless.patch . && \\\ngit checkout $kodiCheckout && \\\ngit apply headless.patch && \\\n# Configure, make, install kodi\n.\/bootstrap && \\\n.\/configure \\\n--enable-nfs \\\n--enable-upnp \\\n--enable-ssh \\\n--enable-libbluray \\\n--disable-debug \\\n--disable-vdpau \\\n--disable-vaapi \\\n--disable-crystalhd \\\n--disable-vdadecoder \\\n--disable-vtbdecoder \\\n--disable-openmax \\\n--disable-joystick \\\n--disable-rsxs \\\n--disable-projectm \\\n--disable-rtmp \\\n--disable-airplay \\\n--disable-airtunes \\\n--disable-dvdcss \\\n--disable-optical-drive \\\n--disable-libusb \\\n--disable-libcec \\\n--disable-libmp3lame \\\n--disable-libcap \\\n--disable-udev \\\n--disable-libvorbisenc \\\n--disable-asap-codec \\\n--disable-afpclient \\\n--disable-goom \\\n--disable-fishbmc \\\n--disable-spectrum \\\n--disable-waveform \\\n--disable-avahi \\\n--disable-non-free \\\n--disable-texturepacker \\\n--disable-pulse \\\n--disable-dbus \\\n--disable-alsa \\\n--disable-hal \\\n--prefix=\/opt\/kodi-server && \\\nmake && \\\nmake install && \\\nchown -R nobody:users \/opt\/kodi-server && \\\n\n# clean build area of no longer required dependencies and build files\napt-get purge -y --remove \\\n$buildDeps && \\\napt-get -y autoremove && \\\n\n# install runtime dependencies\napt-get install \\\n$runtimeDeps -qy && \\\n\n# install kodisend\nadd-apt-repository ppa:team-xbmc\/ppa && \\\napt-get update -qq && \\\napt-get install \\\nkodi-eventclients-xbmc-send -qy && \\\n\n# remove un-needed repositories\nadd-apt-repository --remove ppa:team-xbmc\/ppa && \\\n\n# clean up\ncd \/ && \\\napt-get clean && \\\nrm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* \\\n\/usr\/share\/man \/usr\/share\/groff \/usr\/share\/info \\\n\/usr\/share\/lintian \/usr\/share\/linda \/var\/cache\/man && \\\n(( find \/usr\/share\/doc -depth -type f ! -name copyright|xargs rm || true )) && \\\n(( find \/usr\/share\/doc -empty|xargs rmdir || true ))\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":251,
        "end":266,
        "text":"ADD src\/ \/root\/"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2195,
        "end":2230,
        "text":"apt-get install \\\\n$buildDeps -qy &&"
      },
      {
        "label":"apt-install-without-version",
        "start":2195,
        "end":2230,
        "text":"apt-get install \\\\n$buildDeps -qy &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":2258,
        "end":2269,
        "text":"cd \/tmp\/ &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":2394,
        "end":2401,
        "text":"cd \/tmp"
      },
      {
        "label":"use-cd-change-dir",
        "start":2427,
        "end":2436,
        "text":"cd curl-*"
      },
      {
        "label":"use-cd-change-dir",
        "start":2601,
        "end":2613,
        "text":"cd \/tmp\/xbmc"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3771,
        "end":3841,
        "text":"# install runtime dependencies\\napt-get install \\\\n$runtimeDeps -qy && \\"
      },
      {
        "label":"apt-install-without-version",
        "start":3773,
        "end":3841,
        "text":"install runtime dependencies\\napt-get install \\\\n$runtimeDeps -qy && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4079,
        "end":4086,
        "text":"cd \/ &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"70a8566a0ca493e9553eb69712415ac9927e2490.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER Matt Ho <matt.ho@gmail.com>\n\nENV PORT 80\nENV GOPATH \/home\/go\n\nRUN apt-get update && apt-get install -y wget\nADD . \/home\/go\/src\/github.com\/savaki\/snowflake\nRUN wget -q -O \/tmp\/golang.tar.gz https:\/\/storage.googleapis.com\/golang\/go1.8.linux-amd64.tar.gz && \\\n  tar -C \/usr\/local -xzf \/tmp\/golang.tar.gz && \\\n  \/usr\/local\/go\/bin\/go install github.com\/savaki\/snowflake\/cmd\/snowflake && \\\n  rm -rf \/usr\/local\/go \/tmp\/golang.tar.gz\n\nCMD [ \"\/home\/go\/bin\/snowflake\" ]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":56,
        "text":"MAINTAINER Matt Ho <matt.ho@gmail.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":137,
        "end":183,
        "text":"ADD . \/home\/go\/src\/github.com\/savaki\/snowflake"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":113,
        "end":136,
        "text":"apt-get install -y wget"
      },
      {
        "label":"apt-install-without-version",
        "start":113,
        "end":136,
        "text":"apt-get install -y wget"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"753c0479cd9e21611d10e9a54d8fe7e4b59d45a5.dockerfile",
    "file_content":"FROM buildpack-deps:jessie-scm\n\n# Install gettext for 'envsubst' command\nRUN apt-get update \\\n  && apt-get install -y gettext \\\n  && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/*\n\n# Install mono\n# Source: https:\/\/github.com\/docker-library\/docs\/tree\/master\/mono\n\nENV MONO_VERSION 5.4.1.6\n\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\n\nRUN echo \"deb http:\/\/download.mono-project.com\/repo\/debian jessie\/snapshots\/$MONO_VERSION main\" > \/etc\/apt\/sources.list.d\/mono-official.list \\\n  && apt-get update \\\n  && apt-get install -y mono-runtime \\\n  && apt-get install -y binutils curl mono-devel ca-certificates-mono fsharp mono-vbnc nuget referenceassemblies-pcl \\\n  && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/*\n\n# Install .NET CLI dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        libc6 \\\n        libcurl3 \\\n        libgcc1 \\\n        libgssapi-krb5-2 \\\n        libicu52 \\\n        liblttng-ust0 \\\n        libssl1.0.0 \\\n        libstdc++6 \\\n        libunwind8 \\\n        libuuid1 \\\n        zlib1g \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install .NET Core SDK\n# Source: https:\/\/github.com\/dotnet\/dotnet-docker\n\nENV DOTNET_SDK_VERSION 2.1.3\nENV DOTNET_SDK_DOWNLOAD_URL https:\/\/dotnetcli.blob.core.windows.net\/dotnet\/Sdk\/$DOTNET_SDK_VERSION\/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz\nENV DOTNET_SDK_DOWNLOAD_SHA 509b88895fd5a6a90e245141eb52f188aa9ee7d20188c213892483c142900d6975013aef9ca6d8da986cc5617a2c3571e22318297c51578b871c047602757600\n\nRUN curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \\\n    && echo \"$DOTNET_SDK_DOWNLOAD_SHA dotnet.tar.gz\" | sha512sum -c - \\\n    && mkdir -p \/usr\/share\/dotnet \\\n    && tar -zxf dotnet.tar.gz -C \/usr\/share\/dotnet \\\n    && rm dotnet.tar.gz \\\n    && ln -s \/usr\/share\/dotnet\/dotnet \/usr\/bin\/dotnet\n\n# Trigger the population of the local package cache\nENV NUGET_XMLDOC_MODE skip\nRUN mkdir warmup \\\n    && cd warmup \\\n    && dotnet new \\\n    && cd .. \\\n    && rm -rf warmup \\\n    && rm -rf \/tmp\/NuGetScratch\n\n\n# Install Nuget\n\nRUN mkdir -p \/app\/nuget\nENV NUGET_DOWNLOAD_URL https:\/\/dist.nuget.org\/win-x86-commandline\/latest\/nuget.exe\nRUN curl -SL $NUGET_DOWNLOAD_URL --output \/app\/nuget\/nuget.exe\nADD nuget.sh \/app\/nuget\/nuget.sh\nRUN chmod +x \/app\/nuget\/nuget.sh\nADD nuget-pack.sh \/app\/nuget\/nuget-pack.sh\nRUN chmod +x \/app\/nuget\/nuget-pack.sh\n\nRUN mono --version\nENV PATH=\"\/app\/nuget:${PATH}\"\nRUN nuget.sh help\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":559,
        "end":711,
        "text":"apt-get install -y mono-runtime \\\\n&& apt-get install -y binutils curl mono-devel ca-certificates-mono fsharp mono-vbnc nuget referenceassemblies-pcl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":559,
        "end":711,
        "text":"apt-get install -y mono-runtime \\\\n&& apt-get install -y binutils curl mono-devel ca-certificates-mono fsharp mono-vbnc nuget referenceassemblies-pcl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":813,
        "end":1080,
        "text":"apt-get install -y --no-install-recommends \\\\nlibc6 \\\\nlibcurl3 \\\\nlibgcc1 \\\\nlibgssapi-krb5-2 \\\\nlibicu52 \\\\nliblttng-ust0 \\\\nlibssl1.0.0 \\\\nlibstdc++6 \\\\nlibunwind8 \\\\nlibuuid1 \\\\nzlib1g \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1936,
        "end":1947,
        "text":"cd warmup \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1975,
        "end":1982,
        "text":"cd .. \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2227,
        "end":2259,
        "text":"ADD nuget.sh \/app\/nuget\/nuget.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":2293,
        "end":2335,
        "text":"ADD nuget-pack.sh \/app\/nuget\/nuget-pack.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7560468cf9978834b6d38219fc1009c1cba5fed4.dockerfile",
    "file_content":"FROM nvidia\/cuda:9.0-cudnn7-runtime-ubuntu16.04\n\nRUN apt-get -y update && \\\n    apt-get -y install git wget python-dev python3-dev libopenmpi-dev \\\n                       python-pip libglib2.0-0 \\\n                       libsm6 libxext6 libfontconfig1 libxrender1 \\\n                       swig cmake libopenmpi-dev zlib1g-dev ffmpeg \\\n                       freeglut3-dev xvfb\n\nENV CODE_DIR \/root\/code\nENV VENV \/root\/venv\n\nRUN \\\n    pip install virtualenv && \\\n    virtualenv $VENV --python=python3 && \\\n    . $VENV\/bin\/activate && \\\n    mkdir $CODE_DIR && \\\n    cd $CODE_DIR && \\\n    pip install --upgrade pip && \\\n    pip install pytest==3.5.1 && \\\n    pip install pytest-cov && \\\n    pip install pyyaml && \\\n    pip install box2d-py==2.3.5 && \\\n    pip install tensorflow-gpu==1.8.0 && \\\n    pip install stable-baselines && \\\n    pip install pybullet && \\\n    pip install gym-minigrid && \\\n    pip install optuna && \\\n    pip install pytablewriter==0.36.0\n\nENV PATH=$VENV\/bin:$PATH\n\nCOPY docker\/entrypoint.sh \/tmp\/\nENTRYPOINT [\"\/tmp\/entrypoint.sh\"]\n\nCMD \/bin\/bash\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":80,
        "end":375,
        "text":"apt-get -y install git wget python-dev python3-dev libopenmpi-dev \\\\npython-pip libglib2.0-0 \\\\nlibsm6 libxext6 libfontconfig1 libxrender1 \\\\nswig cmake libopenmpi-dev zlib1g-dev ffmpeg \\\\nfreeglut3-dev xvfb"
      },
      {
        "label":"apt-install-without-version",
        "start":80,
        "end":375,
        "text":"apt-get -y install git wget python-dev python3-dev libopenmpi-dev \\\\npython-pip libglib2.0-0 \\\\nlibsm6 libxext6 libfontconfig1 libxrender1 \\\\nswig cmake libopenmpi-dev zlib1g-dev ffmpeg \\\\nfreeglut3-dev xvfb"
      },
      {
        "label":"pip-install-without-version",
        "start":432,
        "end":454,
        "text":"pip install virtualenv"
      },
      {
        "label":"use-cd-change-dir",
        "start":562,
        "end":564,
        "text":"cd"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"77da103851d3b1d9114935001b28c4e4e68d29a9.dockerfile",
    "file_content":"FROM ubuntu:14.04\n\nMAINTAINER TuRzAm\n\n# Var for first config\n# Server Name\nENV SESSIONNAME \"Ark Docker\"\n# Map name\nENV SERVERMAP \"TheIsland\"\n# Server password\nENV SERVERPASSWORD \"\"\n# Admin password\nENV ADMINPASSWORD \"adminpassword\"\n# Nb Players\nENV NBPLAYERS 70\n# If the server is updating when start with docker start\nENV UPDATEONSTART 1\n# if the server is backup when start with docker start\nENV BACKUPONSTART 1\n#  Tag on github for ark server tools\nENV GIT_TAG v1.5\n# Server PORT (you can't remap with docker, it doesn't work)\nENV SERVERPORT 27015\n# Steam port (you can't remap with docker, it doesn't work)\nENV STEAMPORT 7778\n# if the server should backup after stopping\nENV BACKUPONSTOP 0\n# If the server warn the players before stopping\nENV WARNONSTOP 0\n# UID of the user steam\nENV UID 1000\n# GID of the user steam\nENV GID 1000\n\n# Install dependencies \nRUN apt-get update &&\\ \n    apt-get install -y curl lib32gcc1 lsof git\n\n# Enable passwordless sudo for users under the \"sudo\" group\nRUN sed -i.bkp -e \\\n\t's\/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL\/%sudo ALL=NOPASSWD:ALL\/g' \/etc\/sudoers \\\n\t\/etc\/sudoers\n\n# Run commands as the steam user\nRUN adduser \\ \n\t--disabled-login \\ \n\t--shell \/bin\/bash \\ \n\t--gecos \"\" \\ \n\tsteam\n# Add to sudo group\nRUN usermod -a -G sudo steam\n\n# Copy & rights to folders\nCOPY run.sh \/home\/steam\/run.sh\nCOPY user.sh \/home\/steam\/user.sh\nCOPY crontab \/home\/steam\/crontab\nCOPY arkmanager-user.cfg \/home\/steam\/arkmanager.cfg\n\nRUN touch \/root\/.bash_profile\nRUN chmod 777 \/home\/steam\/run.sh\nRUN chmod 777 \/home\/steam\/user.sh\nRUN mkdir  \/ark\n\n\n# We use the git method, because api github has a limit ;)\nRUN  git clone https:\/\/github.com\/FezVrasta\/ark-server-tools.git \/home\/steam\/ark-server-tools\nWORKDIR \/home\/steam\/ark-server-tools\/\nRUN  git checkout $GIT_TAG \n# Install \nWORKDIR \/home\/steam\/ark-server-tools\/tools\nRUN chmod +x install.sh \nRUN .\/install.sh steam \n\n# Allow crontab to call arkmanager\nRUN ln -s \/usr\/local\/bin\/arkmanager \/usr\/bin\/arkmanager\n\n# Define default config file in \/etc\/arkmanager\nCOPY arkmanager-system.cfg \/etc\/arkmanager\/arkmanager.cfg\n\n# Define default config file in \/etc\/arkmanager\nCOPY instance.cfg \/etc\/arkmanager\/instances\/main.cfg\n\nRUN chown steam -R \/ark && chmod 755 -R \/ark\n\n#USER steam \n\n# download steamcmd\nRUN mkdir \/home\/steam\/steamcmd &&\\ \n\tcd \/home\/steam\/steamcmd &&\\ \n\tcurl http:\/\/media.steampowered.com\/installer\/steamcmd_linux.tar.gz | tar -vxz \n\n\n# First run is on anonymous to download the app\n# We can't download from docker hub anymore -_-\n#RUN \/home\/steam\/steamcmd\/steamcmd.sh +login anonymous +quit\n\nEXPOSE ${STEAMPORT} 32330 ${SERVERPORT}\n# Add UDP\nEXPOSE ${STEAMPORT}\/udp ${SERVERPORT}\/udp\n\nVOLUME  \/ark \n\n# Change the working directory to \/arkd\nWORKDIR \/ark\n\n# Update game launch the game.\nENTRYPOINT [\"\/home\/steam\/user.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":36,
        "text":"MAINTAINER TuRzAm"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":887,
        "end":929,
        "text":"apt-get install -y curl lib32gcc1 lsof git"
      },
      {
        "label":"apt-install-without-version",
        "start":887,
        "end":929,
        "text":"apt-get install -y curl lib32gcc1 lsof git"
      },
      {
        "label":"use-cd-change-dir",
        "start":2303,
        "end":2330,
        "text":"cd \/home\/steam\/steamcmd &&\\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"471b800be253e13b0145fd4947ca3121fac7d644.dockerfile",
    "file_content":"FROM python:3.6\nMAINTAINER Opendata Stuttgart\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install -y \\\n\tlib32z1-dev \\\n\tlibmemcached-dev \\\n\tlocales \\\n\tpostgresql-client \\\n\tpostgresql-server-dev-all \\\n\tsudo \\\n\tttf-dejavu-core \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN useradd uid1000 -d \/home\/uid1000 \\\n\t&& mkdir -p \/home\/uid1000 \\\n\t&& chown uid1000: \/home\/uid1000\nVOLUME \/home\/uid1000\n\nEXPOSE 8000\n\nUSER root\n\nADD requirements.txt \/opt\/code\/requirements.txt\nWORKDIR \/opt\/code\nRUN pip3 install -Ur requirements.txt\nADD . \/opt\/code\n\nRUN chown -R uid1000: \/opt\n\nWORKDIR \/opt\/code\/feinstaub\nUSER uid1000\n\n# production stuff\nENTRYPOINT [\".\/start.sh\"]\nCMD [\"web\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":16,
        "end":45,
        "text":"MAINTAINER Opendata Stuttgart"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":105,
        "end":248,
        "text":"apt-get install -y \\\\nlib32z1-dev \\\\nlibmemcached-dev \\\\nlocales \\\\npostgresql-client \\\\npostgresql-server-dev-all \\\\nsudo \\\\nttf-dejavu-core \\"
      },
      {
        "label":"apt-install-without-version",
        "start":105,
        "end":248,
        "text":"apt-get install -y \\\\nlib32z1-dev \\\\nlibmemcached-dev \\\\nlocales \\\\npostgresql-client \\\\npostgresql-server-dev-all \\\\nsudo \\\\nttf-dejavu-core \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":429,
        "end":476,
        "text":"ADD requirements.txt \/opt\/code\/requirements.txt"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":533,
        "end":548,
        "text":"ADD . \/opt\/code"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-add-instead-of-copy"
    ]
  },
  {
    "filename":"47f306bc8eccc2cfd454db8e90747398e526a2ba.dockerfile",
    "file_content":"FROM amazonlinux:latest\n\nENV JAVA_OPTS=\"-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap  -XX:MaxRAMFraction=1 -XshowSettings:vm \"\n\nRUN yum install -y epel-release\nRUN yum install -y --nogpgcheck java-1.8.0-openjdk.x86_64\nRUN yum -y install python34-pip\nRUN yum -y install cronie\nRUN python3 -m pip install boto3\nRUN python3 -m pip install awscli\n\nRUN mkdir -p \/opt\/staging\/limits\nRUN mkdir -p \/etc\/cron.d\n\nADD deploy\/limits\/limits-cron \/etc\/cron.d\/limits-cron\nADD target\/*.jar \/opt\/staging\nADD deploy\/startup.sh \/opt\/staging\nADD deploy\/limits \/opt\/staging\n\nRUN chmod 0644 \/etc\/cron.d\/limits-cron\nRUN touch \/var\/log\/cron.log\nRUN chmod 775 \/opt\/staging\/startup.sh\nRUN chmod -R 775 \/opt\/staging\nRUN chmod -R 777 \/opt\/staging\/limits\nRUN mv \/opt\/staging\/2000-01-01T00:00:00-placeholder.csv \/opt\/staging\/limits\/\n\nENTRYPOINT [\"\/bin\/bash\", \"\/opt\/staging\/startup.sh\" ]",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":23,
        "text":"FROM amazonlinux:latest"
      },
      {
        "label":"yum-install-without-version",
        "start":149,
        "end":296,
        "text":"RUN yum install -y epel-release\\nRUN yum install -y --nogpgcheck java-1.8.0-openjdk.x86_64\\nRUN yum -y install python34-pip\\nRUN yum -y install cronie"
      },
      {
        "label":"pip-install-without-version",
        "start":297,
        "end":363,
        "text":"RUN python3 -m pip install boto3\\nRUN python3 -m pip install awscli"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":424,
        "end":573,
        "text":"ADD deploy\/limits\/limits-cron \/etc\/cron.d\/limits-cron\\nADD target\/*.jar \/opt\/staging\\nADD deploy\/startup.sh \/opt\/staging\\nADD deploy\/limits \/opt\/staging"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"4822a8c4713f0d39703adc4a1ebc314acaecbf77.dockerfile",
    "file_content":"FROM debian\nMAINTAINER Csaba Marosi \"4bea6c869366227b879ffe4abad50c@gmail.com\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y -q \\\n        sudo git vim ca-certificates \\\n        rxvt-unicode-lite ratpoison \\\n        libssl-dev libpam0g-dev libx11-dev libxfixes-dev libxrandr-dev \\\n        xfonts-utils \\\n        procps \\\n        python python-lxml python-libxml2 \\\n        wget \\\n    && \\\n    apt-get clean\n\n# For a smaller image, remove build tools & artifacts after compilation.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y -q \\\n        make autoconf automake libtool pkg-config xz-utils \\\n        bzip2 xsltproc flex bison g++ gettext libxml-sax-expat-perl \\\n    && \\\n    cd \/opt && \\\n    git clone --recursive https:\/\/github.com\/neutrinolabs\/xrdp.git && \\\n    cd xrdp && \\\n    .\/bootstrap && \\\n    .\/configure && \\\n    make && \\\n    make install && \\\n    xrdp-keygen xrdp auto &&\\\n    cp instfiles\/pam.d\/xrdp-sesman.debian \/etc\/pam.d\/xrdp-sesman && \\\n    cd \/opt\/xrdp\/xorg\/X11R7.6 && \\\n    .\/buildx.sh \/opt\/X11rdp && \\\n    ln -s \/opt\/X11rdp\/bin\/X11rdp \/usr\/local\/bin\/X11rdp && \\\n    cp \/etc\/xrdp\/xrdp.sh \/etc\/init.d\/ && \\\n    cd \/ && rm -rf \/opt\/xrdp && \\\n    apt-get remove -yq \\\n        make autoconf automake libtool pkg-config xz-utils \\\n        bzip2 xsltproc flex bison g++ gettext libxml-sax-expat-perl \\\n    && \\\n    apt-get autoremove -yq && \\\n    apt-get clean\n\nEXPOSE 3389\nRUN echo 'ALL ALL=NOPASSWD:ALL' > \/etc\/sudoers.d\/allSudo && \\\n    echo 'root:p' | chpasswd\n\n#TODO: there should be a better method than this!\n# CMD [\"bash\", \"-c\", \"sudo \/etc\/init.d\/xrdp.sh start && bash\"]\nCMD [\"\/etc\/init.d\/xrdp.sh\",\"start\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM debian"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":12,
        "end":78,
        "text":"MAINTAINER Csaba Marosi \"4bea6c869366227b879ffe4abad50c@gmail.com\""
      },
      {
        "label":"apt-install-without-version",
        "start":108,
        "end":404,
        "text":"apt-get install --no-install-recommends -y -q \\\\nsudo git vim ca-certificates \\\\nrxvt-unicode-lite ratpoison \\\\nlibssl-dev libpam0g-dev libx11-dev libxfixes-dev libxrandr-dev \\\\nxfonts-utils \\\\nprocps \\\\npython python-lxml python-libxml2 \\\\nwget \\"
      },
      {
        "label":"apt-install-without-version",
        "start":534,
        "end":712,
        "text":"apt-get install --no-install-recommends -y -q \\\\nmake autoconf automake libtool pkg-config xz-utils \\\\nbzip2 xsltproc flex bison g++ gettext libxml-sax-expat-perl \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":726,
        "end":736,
        "text":"cd \/opt &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":815,
        "end":825,
        "text":"cd xrdp &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1010,
        "end":1038,
        "text":"cd \/opt\/xrdp\/xorg\/X11R7.6 &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1181,
        "end":1208,
        "text":"cd \/ && rm -rf \/opt\/xrdp &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"49202663017f6dd4efb70ab4fb102901af29bc41.dockerfile",
    "file_content":"FROM gcr.io\/tensorflow\/tensorflow:latest-gpu\n\nMAINTAINER berlius <berlius52@yahoo.com>\n\nRUN apt-get update && apt-get install -y \\\n    git \\\n    python-tk\n\nRUN pip install sugartensor tqdm\n\nCOPY install.sh \/root\/install.sh\nRUN chmod +x \/root\/install.sh\n\nWORKDIR \"\/root\/sharedfolder\"\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":46,
        "end":86,
        "text":"MAINTAINER berlius <berlius52@yahoo.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":110,
        "end":154,
        "text":"apt-get install -y \\\\ngit \\\\npython-tk"
      },
      {
        "label":"apt-install-without-version",
        "start":110,
        "end":154,
        "text":"apt-get install -y \\\\ngit \\\\npython-tk"
      },
      {
        "label":"pip-install-without-version",
        "start":156,
        "end":188,
        "text":"RUN pip install sugartensor tqdm"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4c12777a5dc74c72765a9578b916c96cf7504aa1.dockerfile",
    "file_content":"# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##############################################################################\n\nFROM gcr.io\/oss-fuzz-base\/base-builder\nMAINTAINER nickm@torproject.org\nRUN apt-get update && apt-get install -y zlib1g zlib1g-dev libevent-dev libevent-2.0 openssl autoconf automake libssl-dev make\nRUN git clone https:\/\/git.torproject.org\/tor.git\nRUN git clone https:\/\/git.torproject.org\/fuzzing-corpora.git tor-fuzz-corpora\nWORKDIR tor\nCOPY build.sh $SRC\/\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":658,
        "end":696,
        "text":"FROM gcr.io\/oss-fuzz-base\/base-builder"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":697,
        "end":728,
        "text":"MAINTAINER nickm@torproject.org"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":751,
        "end":855,
        "text":"apt-get install -y zlib1g zlib1g-dev libevent-dev libevent-2.0 openssl autoconf automake libssl-dev make"
      },
      {
        "label":"apt-install-without-version",
        "start":751,
        "end":855,
        "text":"apt-get install -y zlib1g zlib1g-dev libevent-dev libevent-2.0 openssl autoconf automake libssl-dev make"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"4f0fb4ff3a1e915bbc7a6d9613ef217dd2374891.dockerfile",
    "file_content":"FROM tomcat:7.0\nMAINTAINER Lucas Anastasiou lucas.anastasiou@open.ac.uk\n\nRUN apt-get update && apt-get --yes install \\\n    # used for sniffing in container - docker exec -i -t docker_tomcat_1 ngrep -d any -W byline port 8080\n    ngrep \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN sed -i -e '$i \\  <role rolename=\"manager-jmx\"\/><role rolename=\"manager-status\"\/><role rolename=\"manager-gui\"\/><role rolename=\"admin\"\/><role rolename=\"admin-script\"\/><role rolename=\"manager\"\/><role rolename=\"manager-script\"\/><user username=\"admin\" password=\"admin\" roles=\"manager,manager-gui,manager-script,manager-jmx,manager-status,admin,admin-script\"\/> \\n' \/usr\/local\/tomcat\/conf\/tomcat-users.xml\n\nADD server.xml \/usr\/local\/tomcat\/conf\/server.xml\n\nWORKDIR \/usr\/local\/tomcat\/\n\nEXPOSE 8080 8000\n\n#wait for dependant service to bootup\nCMD sleep 1m && bin\/catalina.sh jpda run",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":16,
        "end":71,
        "text":"MAINTAINER Lucas Anastasiou lucas.anastasiou@open.ac.uk"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":95,
        "end":236,
        "text":"apt-get --yes install \\\\n# used for sniffing in container - docker exec -i -t docker_tomcat_1 ngrep -d any -W byline port 8080\\nngrep \\"
      },
      {
        "label":"apt-install-without-version",
        "start":95,
        "end":236,
        "text":"apt-get --yes install \\\\n# used for sniffing in container - docker exec -i -t docker_tomcat_1 ngrep -d any -W byline port 8080\\nngrep \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":677,
        "end":725,
        "text":"ADD server.xml \/usr\/local\/tomcat\/conf\/server.xml"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"50456c0fd49d9276c15e216c6314f7d5a1def5bf.dockerfile",
    "file_content":"FROM google\/cloud-sdk\n\nRUN apt-get update && apt-get install -y curl\n\nADD run.sh \/run.sh\nRUN chmod a+x \/*.sh\n\nCMD [\"\/run.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":21,
        "text":"FROM google\/cloud-sdk"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":45,
        "end":68,
        "text":"apt-get install -y curl"
      },
      {
        "label":"apt-install-without-version",
        "start":45,
        "end":68,
        "text":"apt-get install -y curl"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":70,
        "end":88,
        "text":"ADD run.sh \/run.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"858404c7eb86a38de7bb8bd2fa883a6ed5c7c67d.dockerfile",
    "file_content":"FROM ros\n\nRUN apt-get update \\\n    && apt-get install -y git wget sudo libjpeg-dev libcairo-dev npm ros-kinetic-rosbridge-suite\nRUN ln -s \/usr\/bin\/nodejs \/usr\/bin\/node\nRUN useradd -m -g users ros\nRUN echo \"ros ALL=(ALL) NOPASSWD: \/usr\/bin\/apt-get\" >> \/etc\/sudoers\nRUN npm install -g web3@0.20.1\n\nUSER ros\nRUN rosdep update\n\nRUN cd ~ && git clone --recursive https:\/\/github.com\/airalab\/aira-IoT \\\n    && rm -rf aira-IoT\/src\/dron_ros_tutorial \\\n    && cd aira-IoT\/src \\\n    && . \/opt\/ros\/kinetic\/setup.sh && catkin_init_workspace\n\nRUN cd ~\/aira-IoT && . \/opt\/ros\/kinetic\/setup.sh \\\n    && rosdep install --from-paths src --ignore-src --rosdistro=kinetic -y \\\n    && catkin_make\n\nRUN cd ~\/aira-IoT\/src\/aira_ros_bridge\/aira_ros_bridge && npm install\n\nRUN cd ~ && wget --no-check-certificate -O - -q https:\/\/dist.ipfs.io\/go-ipfs\/v0.4.8\/go-ipfs_v0.4.8_linux-amd64.tar.gz | tar xzv go-ipfs\/ipfs && mv go-ipfs bin\n\nRUN sed -i \"0,\/localhost\/{s\/localhost\/parity\/}\" ~\/aira-IoT\/src\/aira_ros_bridge\/aira_ros_bridge\/lib\/aira_bridge.js\n\nVOLUME [\"\/home\/ros\/state\"]\nWORKDIR \/home\/ros\n\nADD .\/listen-market.js \/usr\/local\/bin\/listen-market.js\nADD .\/run-liability.sh \/usr\/local\/bin\/run-liability.sh\nADD .\/docker-entrypoint.sh \/usr\/local\/bin\/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":8,
        "text":"FROM ros"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":35,
        "end":127,
        "text":"&& apt-get install -y git wget sudo libjpeg-dev libcairo-dev npm ros-kinetic-rosbridge-suite"
      },
      {
        "label":"apt-install-without-version",
        "start":35,
        "end":127,
        "text":"&& apt-get install -y git wget sudo libjpeg-dev libcairo-dev npm ros-kinetic-rosbridge-suite"
      },
      {
        "label":"use-cd-change-dir",
        "start":324,
        "end":330,
        "text":"RUN cd"
      },
      {
        "label":"use-cd-change-dir",
        "start":447,
        "end":467,
        "text":"&& cd aira-IoT\/src \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":529,
        "end":549,
        "text":"RUN cd ~\/aira-IoT &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":677,
        "end":733,
        "text":"RUN cd ~\/aira-IoT\/src\/aira_ros_bridge\/aira_ros_bridge &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":747,
        "end":758,
        "text":"RUN cd ~ &&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1068,
        "end":1227,
        "text":"ADD .\/listen-market.js \/usr\/local\/bin\/listen-market.js\\nADD .\/run-liability.sh \/usr\/local\/bin\/run-liability.sh\\nADD .\/docker-entrypoint.sh \/usr\/local\/bin\/docker-"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"87d4baa07146a5f809ca4e5ed1feb52b1af85acb.dockerfile",
    "file_content":"# This is a comment\nFROM maven:3.3\nMAINTAINER PhilippGrulich\nRUN apt-get update\nRUN apt-get -y install git\nRUN apt-get -y install curl\nRUN apt-get -y install libfontconfig\n# Install nodejs\nRUN curl -sL https:\/\/deb.nodesource.com\/setup_6.x -o i.sh\nRUN bash i.sh\nRun apt-get install -y nodejs\nRUN apt-get install -y build-essential\n\n# install rabbitmq\n\nRUN echo 'deb http:\/\/www.rabbitmq.com\/debian\/ testing main' | tee \/etc\/apt\/sources.list.d\/rabbitmq.list && wget -O- https:\/\/www.rabbitmq.com\/rabbitmq-release-signing-key.asc | apt-key add - && apt-get update && apt-get install -y rabbitmq-server && invoke-rc.d rabbitmq-server start &&  rabbitmq-plugins enable rabbitmq_management\n\n# clone zeppelin\n\nRUN git clone https:\/\/github.com\/TU-Berlin-DIMA\/zeppelin.git && cd zeppelin && git checkout i2-zeppelin \n\nRUN cd zeppelin  && mvn clean package -DskipTests \n\nWORKDIR zeppelin\/\nEXPOSE 8080 15672 8081\nCMD bin\/zeppelin-daemon.sh start && rabbitmq-server && tail -f \/dev\/null\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":35,
        "end":60,
        "text":"MAINTAINER PhilippGrulich"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":80,
        "end":171,
        "text":"RUN apt-get -y install git\\nRUN apt-get -y install curl\\nRUN apt-get -y install libfontconfig"
      },
      {
        "label":"apt-install-without-version",
        "start":80,
        "end":188,
        "text":"RUN apt-get -y install git\\nRUN apt-get -y install curl\\nRUN apt-get -y install libfontconfig\\n# Install nodejs"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":261,
        "end":329,
        "text":"Run apt-get install -y nodejs\\nRUN apt-get install -y build-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":261,
        "end":329,
        "text":"Run apt-get install -y nodejs\\nRUN apt-get install -y build-essential"
      },
      {
        "label":"use-cd-change-dir",
        "start":765,
        "end":783,
        "text":"cd zeppelin && git"
      },
      {
        "label":"use-cd-change-dir",
        "start":807,
        "end":826,
        "text":"RUN cd zeppelin &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"87ffa58fad7fcb2690d44f94dc3d953015907f7d.dockerfile",
    "file_content":"FROM dockerfile\/nodejs\n\nMAINTAINER Nick Payne <nick@kurai.co.uk>\n\nADD  .\/src\/admin\/package.json \/app\/src\/admin\/package.json\nRUN  cd \/app\/src\/admin && npm install --no-bin-link --production\nADD  .\/src\/admin\/index.js \/app\/src\/admin\/index.js\n\nENTRYPOINT [\"node\", \"\/app\/src\/admin\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":22,
        "text":"FROM dockerfile\/nodejs"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":24,
        "end":64,
        "text":"MAINTAINER Nick Payne <nick@kurai.co.uk>"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-add-instead-of-copy",
        "start":66,
        "end":118,
        "text":"ADD .\/src\/admin\/package.json \/app\/src\/admin\/package"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":189,
        "end":238,
        "text":"ADD .\/src\/admin\/index.js \/app\/src\/admin\/index.js"
      },
      {
        "label":"use-cd-change-dir",
        "start":124,
        "end":146,
        "text":"RUN cd \/app\/src\/admin"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"8f1da20bf2df7ae0a5e63c1352ac2c8a12a3ca5a.dockerfile",
    "file_content":"FROM maven AS builder\n\nRUN git clone https:\/\/github.com\/sip3io\/tapir.git\nWORKDIR \/tapir\n\nRUN apt-get update && \\\n    apt-get install libpcap0.8\n\nRUN mvn clean package\n\nFROM java:alpine\nMAINTAINER Windsent SIP3.IO <windsent@sip3.io>\n\nRUN mkdir -p \/etc\/tapir-twig\nRUN mkdir -p \/opt\/tapir-twig\nRUN mkdir -p \/var\/log\/tapir-twig\n\nCOPY --from=builder \/tapir\/twig\/target\/tapir-twig.jar \/opt\/tapir-twig\nCOPY --from=builder \/tapir\/package\/etc\/tapir-twig\/logback.xml.example \/opt\/tapir-twig\/\nCOPY --from=builder \/tapir\/package\/etc\/tapir-twig\/tapir-twig.properties.example \/opt\/tapir-twig\/\nCOPY --from=builder \/tapir\/package\/docker\/tapir-twig\/tapir-twig \/opt\/tapir-twig\/\nRUN chmod +x \/opt\/tapir-twig\/tapir-twig\n\nEXPOSE 8080\n\nVOLUME [\"\/etc\/tapir-twig\", \"\/var\/log\/tapir-twig\"]\n\nCMD [\"\/opt\/tapir-twig\/tapir-twig\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":21,
        "text":"FROM maven AS builder"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":117,
        "end":143,
        "text":"apt-get install libpcap0.8"
      },
      {
        "label":"pip-install-without-version",
        "start":117,
        "end":143,
        "text":"apt-get install libpcap0.8"
      },
      {
        "label":"miss-specific-tags",
        "start":168,
        "end":184,
        "text":"FROM java:alpine"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":185,
        "end":231,
        "text":"MAINTAINER Windsent SIP3.IO <windsent@sip3.io>"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"8f284a457f72029cc8f8d00455106205d3494f04.dockerfile",
    "file_content":"FROM python:2.7-stretch\n\n# Version and other variables which can be changed.\nENV GAIA_PORT=8080 \\\n    GAIA_WORKER=2 \\\n    GAIA_HOMEPATH=\/data\n\n# --------------- Start Go Part ---------------\n# gcc for cgo\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n\nENV GOLANG_VERSION 1.11.4\n\nRUN set -eux; \\\n\t\\\n# this \"case\" statement is generated via \"update.sh\"\n\tdpkgArch=\"$(dpkg --print-architecture)\"; \\\n\tcase \"${dpkgArch##*-}\" in \\\n\t\tamd64) goRelArch='linux-amd64'; goRelSha256='fb26c30e6a04ad937bbc657a1b5bba92f80096af1e8ee6da6430c045a8db3a5b' ;; \\\n\t\tarmhf) goRelArch='linux-armv6l'; goRelSha256='9f7a71d27fef69f654a93e265560c8d9db1a2ca3f1dcdbe5288c46facfde5821' ;; \\\n\t\tarm64) goRelArch='linux-arm64'; goRelSha256='b76df430ba8caff197b8558921deef782cdb20b62fa36fa93f81a8c08ab7c8e7' ;; \\\n\t\ti386) goRelArch='linux-386'; goRelSha256='cecd2da1849043237d5f0756a93d601db6798fa3bb27a14563d201088aa415f3' ;; \\\n\t\tppc64el) goRelArch='linux-ppc64le'; goRelSha256='1f10146826acd56716b00b9188079af53823ddd79ceb6362e78e2f3aafb370ab' ;; \\\n\t\ts390x) goRelArch='linux-s390x'; goRelSha256='4467442dacf89eb94c5d6f9f700204cb360be82db60e6296cc2ef8d0e890cd42' ;; \\\n\t\t*) goRelArch='src'; goRelSha256='4cfd42720a6b1e79a8024895fa6607b69972e8e32446df76d6ce79801bbadb15'; \\\n\t\t\techo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \\\n\tesac; \\\n\t\\\n\turl=\"https:\/\/golang.org\/dl\/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \\\n\twget -O go.tgz \"$url\"; \\\n\techo \"${goRelSha256} *go.tgz\" | sha256sum -c -; \\\n\ttar -C \/usr\/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\t\\\n\tif [ \"$goRelArch\" = 'src' ]; then \\\n\t\techo >&2; \\\n\t\techo >&2 'error: UNIMPLEMENTED'; \\\n\t\techo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \\\n\t\techo >&2; \\\n\t\texit 1; \\\n\tfi; \\\n\t\\\n\texport PATH=\"\/usr\/local\/go\/bin:$PATH\"; \\\n\tgo version\n\nENV GOPATH \/go\nENV PATH $GOPATH\/bin:\/usr\/local\/go\/bin:$PATH\n\nRUN mkdir -p \"$GOPATH\/src\" \"$GOPATH\/bin\" && chmod -R 777 \"$GOPATH\"\n# --------------- End Go Part ---------------\n\n# --------------- Start Java Part ---------------\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbzip2 \\\n\t\tunzip \\\n\t\txz-utils \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n\n# Default to UTF-8 file.encoding\nENV LANG C.UTF-8\n\n# add a simple script that can auto-detect the appropriate JAVA_HOME value\n# based on whether the JDK or only the JRE is installed\nRUN { \\\n\t\techo '#!\/bin\/sh'; \\\n\t\techo 'set -e'; \\\n\t\techo; \\\n\t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n\t} > \/usr\/local\/bin\/docker-java-home \\\n\t&& chmod +x \/usr\/local\/bin\/docker-java-home\n\n# do some fancy footwork to create a JAVA_HOME that's cross-architecture-safe\nRUN ln -svT \"\/usr\/lib\/jvm\/java-8-openjdk-$(dpkg --print-architecture)\" \/docker-java-home\nENV JAVA_HOME \/docker-java-home\n\nENV JAVA_VERSION 8u181\nENV JAVA_DEBIAN_VERSION 8u181-b13-2~deb9u1\n\n# see https:\/\/bugs.debian.org\/775775\n# and https:\/\/github.com\/docker-library\/java\/issues\/19#issuecomment-70546872\nENV CA_CERTIFICATES_JAVA_VERSION 20170531+nmu1\n\nRUN set -ex; \\\n\t\\\n# deal with slim variants not having man page directories (which causes \"update-alternatives\" to fail)\n\tif [ ! -d \/usr\/share\/man\/man1 ]; then \\\n\t\tmkdir -p \/usr\/share\/man\/man1; \\\n\tfi; \\\n\t\\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\topenjdk-8-jdk=\"$JAVA_DEBIAN_VERSION\" \\\n\t\tca-certificates-java=\"$CA_CERTIFICATES_JAVA_VERSION\" \\\n\t; \\\n\trm -rf \/var\/lib\/apt\/lists\/*; \\\n\t\\\n# verify that \"docker-java-home\" returns what we expect\n\t[ \"$(readlink -f \"$JAVA_HOME\")\" = \"$(docker-java-home)\" ]; \\\n\t\\\n# update-alternatives so that future installs of other OpenJDK versions don't change \/usr\/bin\/java\n\tupdate-alternatives --get-selections | awk -v home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }'; \\\n# ... and verify that it actually worked for one of the alternatives we care about\n\tupdate-alternatives --query java | grep -q 'Status: manual'\n\n# see CA_CERTIFICATES_JAVA_VERSION notes above\nRUN \/var\/lib\/dpkg\/info\/ca-certificates-java.postinst configure\n# --------------- End Java Part ---------------\n\n# --------------- Start Maven Part ---------------\nARG MAVEN_VERSION=3.5.4\nARG USER_HOME_DIR=\"\/root\"\nARG SHA=ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d\nARG BASE_URL=https:\/\/apache.osuosl.org\/maven\/maven-3\/${MAVEN_VERSION}\/binaries\n\nRUN mkdir -p \/usr\/share\/maven \/usr\/share\/maven\/ref \\\n  && curl -fsSL -o \/tmp\/apache-maven.tar.gz ${BASE_URL}\/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n  && echo \"${SHA}  \/tmp\/apache-maven.tar.gz\" | sha256sum -c - \\\n  && tar -xzf \/tmp\/apache-maven.tar.gz -C \/usr\/share\/maven --strip-components=1 \\\n  && rm -f \/tmp\/apache-maven.tar.gz \\\n  && ln -s \/usr\/share\/maven\/bin\/mvn \/usr\/bin\/mvn\n\nENV MAVEN_HOME \/usr\/share\/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR\/.m2\"\n\nCOPY docker\/settings-docker.xml \/usr\/share\/maven\/ref\/\n# --------------- End Maven Part ---------------\n\n# --------------- Start C++ Part ---------------\nRUN apt-get update && apt-get install -y \\\n            build-essential autoconf git pkg-config \\\n            automake libtool curl make g++ unzip \\\n            && apt-get clean\n\n# install protobuf first, then grpc\nENV GRPC_RELEASE_TAG v1.16.x\nRUN git clone -b ${GRPC_RELEASE_TAG} https:\/\/github.com\/grpc\/grpc \/var\/local\/git\/grpc && \\\n                  cd \/var\/local\/git\/grpc && \\\n    git submodule update --init && \\\n    echo \"--- installing protobuf ---\" && \\\n    cd third_party\/protobuf && \\\n    .\/autogen.sh && .\/configure --enable-shared && \\\n    make -j$(nproc) && make install && make clean && ldconfig && \\\n    echo \"--- installing grpc ---\" && \\\n    cd \/var\/local\/git\/grpc && \\\n    make -j$(nproc) && make install && make clean && ldconfig\n# --------------- End C++ Part ---------------\n\n# --------------- Start Ruby Part ---------------\n# skip installing gem documentation\nRUN mkdir -p \/usr\/local\/etc \\\n\t&& { \\\n\t\techo 'install: --no-document'; \\\n\t\techo 'update: --no-document'; \\\n\t} >> \/usr\/local\/etc\/gemrc\n\nENV RUBY_MAJOR 2.5\nENV RUBY_VERSION 2.5.3\nENV RUBY_DOWNLOAD_SHA256 1cc9d0359a8ea35fc6111ec830d12e60168f3b9b305a3c2578357d360fcf306f\nENV RUBYGEMS_VERSION 3.0.1\n\n# some of ruby's build scripts are written in ruby\n#   we purge system ruby later to make sure our final image uses what we just built\nRUN set -ex \\\n\t\\\n\t&& buildDeps=' \\\n\t\tbison \\\n\t\tdpkg-dev \\\n\t\tlibgdbm-dev \\\n\t\truby \\\n\t' \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends $buildDeps \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/* \\\n\t\\\n\t&& wget -O ruby.tar.xz \"https:\/\/cache.ruby-lang.org\/pub\/ruby\/${RUBY_MAJOR%-rc}\/ruby-$RUBY_VERSION.tar.xz\" \\\n\t&& echo \"$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz\" | sha256sum -c - \\\n\t\\\n\t&& mkdir -p \/usr\/src\/ruby \\\n\t&& tar -xJf ruby.tar.xz -C \/usr\/src\/ruby --strip-components=1 \\\n\t&& rm ruby.tar.xz \\\n\t\\\n\t&& cd \/usr\/src\/ruby \\\n\t\\\n# hack in \"ENABLE_PATH_CHECK\" disabling to suppress:\n#   warning: Insecure world writable dir\n\t&& { \\\n\t\techo '#define ENABLE_PATH_CHECK 0'; \\\n\t\techo; \\\n\t\tcat file.c; \\\n\t} > file.c.new \\\n\t&& mv file.c.new file.c \\\n\t\\\n\t&& autoconf \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& .\/configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--disable-install-doc \\\n\t\t--enable-shared \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t\\\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\t&& cd \/ \\\n\t&& rm -r \/usr\/src\/ruby \\\n# make sure bundled \"rubygems\" is older than RUBYGEMS_VERSION (https:\/\/github.com\/docker-library\/ruby\/issues\/246)\n\t&& ruby -e 'exit(Gem::Version.create(ENV[\"RUBYGEMS_VERSION\"]) > Gem::Version.create(Gem::VERSION))' \\\n\t&& gem update --system \"$RUBYGEMS_VERSION\" && rm -r \/root\/.gem\/ \\\n# rough smoke test\n\t&& ruby --version && gem --version && bundle --version\n\n# install things globally, for great justice\n# and don't create \".bundle\" in all our apps\nENV GEM_HOME \/usr\/local\/bundle\nENV BUNDLE_PATH=\"$GEM_HOME\" \\\n\tBUNDLE_SILENCE_ROOT_WARNING=1 \\\n\tBUNDLE_APP_CONFIG=\"$GEM_HOME\"\n# path recommendation: https:\/\/github.com\/bundler\/bundler\/pull\/6469#issuecomment-383235438\nENV PATH $GEM_HOME\/bin:$BUNDLE_PATH\/gems\/bin:$PATH\n# adjust permissions of a few directories for running \"gem install\" as an arbitrary user\nRUN mkdir -p \"$GEM_HOME\" && chmod 777 \"$GEM_HOME\"\n# (BUNDLE_PATH = GEM_HOME, no need to mkdir\/chown both)\n# --------------- End Ruby Part ---------------\n\n# install additional deps\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tpython2.7-dev \\\n        git \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/* \\\n    && pip install virtualenv grpcio\n\n# Directory for the binary\nWORKDIR \/app\n\n# Copy gaia binary into docker image\nCOPY gaia-linux-amd64 \/app\n\n# Fix permissions & setup known hosts file for ssh agent.\nRUN chmod +x .\/gaia-linux-amd64 \\\n    && mkdir -p \/root\/.ssh \\\n    && touch \/root\/.ssh\/known_hosts \\\n    && chmod 600 \/root\/.ssh\n\n# Set homepath as volume\nVOLUME [ \"${GAIA_HOMEPATH}\" ]\n\n# Expose port\nEXPOSE ${GAIA_PORT}\n\n# Copy entry point script\nCOPY docker\/docker-entrypoint.sh \/usr\/local\/bin\/\n\n# Start gaia\nENTRYPOINT [ \"docker-entrypoint.sh\" ]\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":205,
        "end":323,
        "text":"RUN apt-get update && apt-get install -y --no-install-recommends \\\\ng++ \\\\ngcc \\\\nlibc6-dev \\\\nmake \\\\npkg-config"
      },
      {
        "label":"apt-install-without-version",
        "start":2253,
        "end":2330,
        "text":"apt-get install -y --no-install-recommends \\\\nbzip2 \\\\nunzip \\\\nxz-utils \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":5523,
        "end":5545,
        "text":"cd \/var\/local\/git\/grpc"
      },
      {
        "label":"use-cd-change-dir",
        "start":5789,
        "end":5851,
        "text":"echo \"--- installing grpc ---\" && \\\\ncd \/var\/local\/git\/grpc"
      },
      {
        "label":"use-cd-change-dir",
        "start":5636,
        "end":5662,
        "text":"cd third_party\/protobuf &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":6985,
        "end":7006,
        "text":"&& cd \/usr\/src\/ruby \\"
      },
      {
        "label":"pip-install-without-version",
        "start":8651,
        "end":8680,
        "text":"pip install virtualenv grpcio"
      },
      {
        "label":"apt-install-without-version",
        "start":8533,
        "end":8643,
        "text":"apt-get install -y --no-install-recommends \\\\npython2.7-dev \\\\ngit \\\\n&& rm -rf \/var\/lib\/apt\/lists\/* \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":5171,
        "end":5318,
        "text":"RUN apt-get update && apt-get install -y \\\\nbuild-essential autoconf git pkg-config \\\\nautomake libtool curl make g++ unzip \\"
      },
      {
        "label":"apt-install-without-version",
        "start":5171,
        "end":5318,
        "text":"RUN apt-get update && apt-get install -y \\\\nbuild-essential autoconf git pkg-config \\\\nautomake libtool curl make g++ unzip \\"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"54ced976466930ae4b7c95801202c45ab8bcd75e.dockerfile",
    "file_content":"############################################\n## Docker Image for the  OS.js Project ##\n## Dockerfile created by junland (Github) ##\n############################################\n\n## Pull Docker image using Ubuntu 14.04 LTS ##\nFROM ubuntu:trusty\nMAINTAINER junland ##You can put your own name.##\nUSER root\n\n## Initial update of image ##\nRUN apt-get -y update\n\n## Install dependencies and build tools. ##\nRUN apt-get -y install git npm nodejs-legacy\n\n## Clone the Repo and install grunt ##\nRUN git clone https:\/\/github.com\/os-js\/OS.js.git\nRUN npm install -g grunt-cli supervisor\nRUN cd OS.js\/\n\n## Install and Compile OS.js ##\nWORKDIR OS.js\/\nRUN npm install --production\nRUN grunt\n\n## Start Application and Expose Port ##\n## Note: you can change 'start-dev.sh' (Development Version) to 'start-dist.sh' (Production Version) ##\n\nCMD .\/bin\/start-dev.sh\nEXPOSE 8000\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":244,
        "end":290,
        "text":"MAINTAINER junland ##You can put your own name"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":402,
        "end":446,
        "text":"RUN apt-get -y install git npm nodejs-legacy"
      },
      {
        "label":"apt-install-without-version",
        "start":402,
        "end":446,
        "text":"RUN apt-get -y install git npm nodejs-legacy"
      },
      {
        "label":"use-cd-change-dir",
        "start":576,
        "end":589,
        "text":"RUN cd OS.js\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5528393406f044557f883842015e50a1e373c2da.dockerfile",
    "file_content":"# Dockerfile for Keras+Theano-GPU for use with Batch Shipyard on Azure Batch\n\nFROM nvidia\/cuda:7.5-cudnn5-devel\nMAINTAINER Fred Park <https:\/\/github.com\/Azure\/batch-shipyard>\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        gfortran \\\n        git \\\n        wget \\\n        curl \\\n        ca-certificates \\\n        libhdf5-dev \\\n        liblapack-dev \\\n        libopenblas-dev \\\n        python-dev && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# upgrade pip and install dependencies\nRUN curl --silent --show-error --retry 5 https:\/\/bootstrap.pypa.io\/get-pip.py | python && \\\n    pip install --upgrade --no-cache-dir setuptools wheel six && \\\n    pip install --upgrade --no-cache-dir pyyaml nose h5py && \\\n    pip install --upgrade --no-cache-dir numpy && \\\n    pip install --upgrade --no-cache-dir scipy\n\n# install theano and keras\nRUN pip install --upgrade --no-deps git+git:\/\/github.com\/Theano\/Theano.git && \\\n    git clone https:\/\/github.com\/fchollet\/keras.git && \\\n    cd keras && \\\n    python setup.py install\n\n# set keras backend to theano\nENV KERAS_BACKEND=theano\n\n# copy in default theanorc file\nCOPY theanorc \/root\/.theanorc\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":112,
        "end":174,
        "text":"MAINTAINER Fred Park <https:\/\/github.com\/Azure\/batch-shipyard>"
      },
      {
        "label":"apt-install-without-version",
        "start":198,
        "end":427,
        "text":"apt-get install -y --no-install-recommends \\\\nbuild-essential \\\\ngfortran \\\\ngit \\\\nwget \\\\ncurl \\\\nca-certificates \\\\nlibhdf5-dev \\\\nliblapack-dev \\\\nlibopenblas-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":645,
        "end":869,
        "text":"pip install --upgrade --no-cache-dir setuptools wheel six && \\\\npip install --upgrade --no-cache-dir pyyaml nose h5py && \\\\npip install --upgrade --no-cache-dir numpy && \\\\npip install --upgrade --no-cache-dir scipy"
      },
      {
        "label":"use-cd-change-dir",
        "start":1039,
        "end":1050,
        "text":"cd keras &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5be28601bbd169a128664cc29b7c3f8c48017176.dockerfile",
    "file_content":"# Start with Ubuntu 16.04 (LTS), and build badssl.com up from there\nFROM ubuntu:16.04\nMAINTAINER April King <april@pokeinthe.io>\nEXPOSE 80 443\nRUN apt-get update && apt-get install -y \\\n    build-essential \\\n    git \\\n    libffi-dev \\\n    make \\\n    nginx \\\n    ruby \\\n    ruby-dev\nRUN gem install jekyll\n\n# Install badssl.com\nADD . badssl.com\nWORKDIR badssl.com\nRUN make inside-docker\n\n# Start things up!\nCMD nginx && tail -f \/var\/log\/nginx\/access.log \/var\/log\/nginx\/error.log\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":86,
        "end":128,
        "text":"MAINTAINER April King <april@pokeinthe.io>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":165,
        "end":281,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ngit \\\\nlibffi-dev \\\\nmake \\\\nnginx \\\\nruby \\\\nruby-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":165,
        "end":281,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ngit \\\\nlibffi-dev \\\\nmake \\\\nnginx \\\\nruby \\\\nruby-dev"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":327,
        "end":343,
        "text":"ADD . badssl.com"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"68d21e4a06913bdd5b65adcb2a6383bce6e914ec.dockerfile",
    "file_content":"FROM       ubuntu:trusty\nMAINTAINER Abe Voelker <abe@abevoelker.com>\n\nRUN \\\n# Install build dependencies\n  apt-get update &&\\\n  DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n  ruby wget build-essential &&\\\n# Install ruby-install\n  cd \/tmp &&\\\n  wget -O ruby-install-0.5.0.tar.gz https:\/\/github.com\/postmodern\/ruby-install\/archive\/v0.5.0.tar.gz &&\\\n  tar -xzvf ruby-install-0.5.0.tar.gz &&\\\n  cd ruby-install-0.5.0\/ &&\\\n  make install &&\\\n# Install Ruby\n  ruby-install jruby 1.6.7 &&\\\n# Install bundler globally\n  PATH=\/opt\/rubies\/jruby-1.6.7\/bin:$PATH gem install bundler &&\\\n# Remove build dependencies, clean up APT and temp files\n  apt-get clean &&\\\n  DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y ruby wget build-essential &&\\\n  rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\n# Set $PATH so that non-login shells will see the Ruby binaries\nENV PATH \/opt\/rubies\/jruby-1.6.7\/bin:$PATH\n\n# Add Ruby binaries to login shells's $PATH\nCOPY .\/ruby.sh \/etc\/profile.d\/ruby.sh",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":25,
        "end":68,
        "text":"MAINTAINER Abe Voelker <abe@abevoelker.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":128,
        "end":207,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y \\\\nruby wget build-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":128,
        "end":207,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y \\\\nruby wget build-essential"
      },
      {
        "label":"use-cd-change-dir",
        "start":237,
        "end":248,
        "text":"cd \/tmp &&\\"
      },
      {
        "label":"use-cd-change-dir",
        "start":398,
        "end":419,
        "text":"cd ruby-install-0.5.0"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6938865ac41b662a826f11d2203bc66b4f7a5c24.dockerfile",
    "file_content":"FROM\tphusion\/baseimage:0.9.16\nMAINTAINER\tMarkus Binsteiner <makkus@gmail.com>\n\nCMD [\"\/sbin\/my_init\"]\n\n# Seafile dependencies and system configuration\nRUN apt-get update && apt-get install -y \\\n\t\tpython2.7 \\\n\t\tpython-setuptools \\\n\t\tpython-simplejson \\\n\t\tpython-imaging \\\n\t\tsqlite3 \\\n\t\tpython-mysqldb \\\n\t\tpython-memcache \\\n\t\tmysql-client \\\n\t\tsocat \\\n\t\tzile \\ \n\t\tbup \\\n\t\texpect \\\n\t\tpython-flup\n\nRUN ulimit -n 30000\n\n# script to download seafile\nRUN mkdir -p \/opt\/scripts\/\nADD setup-seafile.sh \/usr\/local\/bin\/setup-seafile\nADD setup-seafile.expect \/usr\/local\/bin\/setup-seafile.expect\nRUN chmod 755 \/usr\/local\/bin\/setup-seafile\nRUN chmod 755 \/usr\/local\/bin\/setup-seafile.expect\nADD upgrade-seafile.sh \/usr\/local\/bin\/upgrade-seafile\nADD create_db.sql \/opt\/scripts\/create_db.sql\nADD garbage_collection.sh \/opt\/scripts\/seafile-gc\nADD backup.sh \/opt\/scripts\/seafile-backup\nADD custom \/tmp\/seafile-custom\n# create seafile & backup user\nADD ids.lst \/tmp\/ids.lst\nADD prepare-user.sh \/tmp\/prepare-user.sh\nRUN \/tmp\/prepare-user.sh\n\nADD backup_schedule.sh \/etc\/cron.d\/backup_schedule.sh\nADD garbage_collection_schedule.sh \/etc\/cron.d\/garbage_collection_schedule.sh\n\nEXPOSE 10001 12001 8000 8080 8082\n\nRUN mkdir -p \/var\/log\/seafile\nRUN chown -R seafile \/var\/log\/seafile\n\n# Seafile daemons\nRUN mkdir -p \/etc\/service\/seafile_services\nADD seafile_services.sh \/etc\/service\/seafile_services\/run\nADD seafile_services_stop.sh \/etc\/service\/seafile_services\/finish\nRUN mkdir -p \/etc\/seafile\/service\/seafile \/etc\/seafile\/service\/seahub\nADD seafile.sh \/etc\/seafile\/service\/seafile\/run\nADD seafile_stop.sh \/etc\/seafile\/service\/seafile\/finish\nADD seahub.sh \/etc\/seafile\/service\/seahub\/run\nADD seahub_stop.sh \/etc\/seafile\/service\/seahub\/finish\nRUN chown -R seafile \/etc\/seafile\n\n# Clean up for smaller image\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/var\/tmp\/*\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":30,
        "end":76,
        "text":"MAINTAINER Markus Binsteiner <makkus@gmail.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":172,
        "end":390,
        "text":"apt-get install -y \\\\npython2.7 \\\\npython-setuptools \\\\npython-simplejson \\\\npython-imaging \\\\nsqlite3 \\\\npython-mysqldb \\\\npython-memcache \\\\nmysql-client \\\\nsocat \\\\nzile \\\\nbup \\\\nexpect \\\\npython-flup"
      },
      {
        "label":"apt-install-without-version",
        "start":172,
        "end":390,
        "text":"apt-get install -y \\\\npython2.7 \\\\npython-setuptools \\\\npython-simplejson \\\\npython-imaging \\\\nsqlite3 \\\\npython-mysqldb \\\\npython-memcache \\\\nmysql-client \\\\nsocat \\\\nzile \\\\nbup \\\\nexpect \\\\npython-flup"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":469,
        "end":579,
        "text":"ADD setup-seafile.sh \/usr\/local\/bin\/setup-seafile\\nADD setup-seafile.expect \/usr\/local\/bin\/setup-seafile.expect"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":673,
        "end":991,
        "text":"ADD upgrade-seafile.sh \/usr\/local\/bin\/upgrade-seafile\\nADD create_db.sql \/opt\/scripts\/create_db.sql\\nADD garbage_collection.sh \/opt\/scripts\/seafile-gc\\nADD backup.sh \/opt\/scripts\/seafile-backup\\nADD custom \/tmp\/seafile-custom\\n# create seafile & backup user\\nADD ids.lst \/tmp\/ids.lst\\nADD prepare-user.sh \/tmp\/prepare-user.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1018,
        "end":1149,
        "text":"ADD backup_schedule.sh \/etc\/cron.d\/backup_schedule.sh\\nADD garbage_collection_schedule.sh \/etc\/cron.d\/garbage_collection_schedule.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1316,
        "end":1439,
        "text":"ADD seafile_services.sh \/etc\/service\/seafile_services\/run\\nADD seafile_services_stop.sh \/etc\/service\/seafile_services\/finish"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1510,
        "end":1713,
        "text":"ADD seafile.sh \/etc\/seafile\/service\/seafile\/run\\nADD seafile_stop.sh \/etc\/seafile\/service\/seafile\/finish\\nADD seahub.sh \/etc\/seafile\/service\/seahub\/run\\nADD seahub_stop.sh \/etc\/seafile\/service\/seahub\/finish"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6a662bf152f5c987081cb54f960084ec55dee588.dockerfile",
    "file_content":"FROM python:3.6-alpine3.7  \nMAINTAINER buluba89  \n  \nRUN mkdir \/build &&\\  \npip3 install pipenv  \n  \nADD Pipfile* \/build\/  \n  \nRUN cd \/build &&\\  \npipenv install --system  \n  \nADD requirements.txt README.rst setup.py \/build\/  \n  \nADD yatcobot \/build\/yatcobot  \n  \nRUN cd \/build &&\\  \npython setup.py install  \n  \nVOLUME [\"\/yatcobot\"]  \n  \nWORKDIR \/yatcobot  \n  \nENTRYPOINT [\"yatcobot\"]  \nCMD []\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":28,
        "end":47,
        "text":"MAINTAINER buluba89"
      },
      {
        "label":"pip-install-without-version",
        "start":76,
        "end":95,
        "text":"pip3 install pipenv"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":101,
        "end":121,
        "text":"ADD Pipfile* \/build\/"
      },
      {
        "label":"use-cd-change-dir",
        "start":127,
        "end":144,
        "text":"RUN cd \/build &&\\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":176,
        "end":258,
        "text":"ADD requirements.txt README.rst setup.py \/build\/\\n\\nADD yatcobot \/build\/yatcobot"
      },
      {
        "label":"use-cd-change-dir",
        "start":264,
        "end":281,
        "text":"RUN cd \/build &&\\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6e35a67d1f1ff423fd50bc1f714135ebe93dc8b3.dockerfile",
    "file_content":"# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io\/oss-fuzz-base\/base-builder\nMAINTAINER mattkwong@google.com\n\nRUN apt-get update && apt-get install -y software-properties-common python-software-properties\nRUN add-apt-repository ppa:webupd8team\/java\nRUN apt-get update && apt-get -y install  \\\n\tvim             \\\n\tbuild-essential \\\n\topenjdk-8-jdk   \\\n\tmake            \\\n        curl            \\\n        autoconf        \\\n        libtool\n\n# Install Bazel\nRUN echo \"deb [arch=amd64] http:\/\/storage.googleapis.com\/bazel-apt stable jdk1.8\" | tee \/etc\/apt\/sources.list.d\/bazel.list\nRUN curl https:\/\/bazel.build\/bazel-release.pub.gpg | apt-key add -\nRUN apt-get update && apt-get install -y bazel\n# Downgrade Bazel to 0.4.4\n# Installing Bazel via apt-get first is required before installing 0.4.4 to\n# allow gRPC to build without errors\nRUN curl -fSsL -O https:\/\/github.com\/bazelbuild\/bazel\/releases\/download\/0.4.4\/bazel-0.4.4-installer-linux-x86_64.sh\nRUN chmod +x .\/bazel-0.4.4-installer-linux-x86_64.sh\nRUN .\/bazel-0.4.4-installer-linux-x86_64.sh\n\nRUN git clone --recursive https:\/\/github.com\/grpc\/grpc grpc\nWORKDIR \/src\/grpc\/\nCOPY build.sh $SRC\/\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":660,
        "end":698,
        "text":"FROM gcr.io\/oss-fuzz-base\/base-builder"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":699,
        "end":730,
        "text":"MAINTAINER mattkwong@google.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":754,
        "end":826,
        "text":"apt-get install -y software-properties-common python-software-properties"
      },
      {
        "label":"apt-install-without-version",
        "start":754,
        "end":826,
        "text":"apt-get install -y software-properties-common python-software-properties"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":893,
        "end":1058,
        "text":"apt-get -y install \\\\nvim \\\\nbuild-essential \\\\nopenjdk-8-jdk \\\\nmake \\\\ncurl \\\\nautoconf \\\\nlibtool"
      },
      {
        "label":"apt-install-without-version",
        "start":893,
        "end":1075,
        "text":"apt-get -y install \\\\nvim \\\\nbuild-essential \\\\nopenjdk-8-jdk \\\\nmake \\\\ncurl \\\\nautoconf \\\\nlibtool\\n\\n# Install Bazel"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1288,
        "end":1312,
        "text":"apt-get install -y bazel"
      },
      {
        "label":"apt-install-without-version",
        "start":1288,
        "end":1312,
        "text":"apt-get install -y bazel"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"6f13e10fbf947e3c7ca284bbfd5512d3ab45b133.dockerfile",
    "file_content":"# Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n#\n# Licensed under the Amazon Software License (the \"License\"). You may not use this file except in compliance with the License.\n# A copy of the License is located at\n#\n#    http:\/\/aws.amazon.com\/asl\/\n#\n# or in the \"license\" file accompanying this file.\n# This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied.\n# See the License for the specific language governing permissions and limitations under the License.\n#\n\nFROM ubuntu:14.04.5\n\nENV DOCKER_BUCKET=\"download.docker.com\" \\\n    DOCKER_VERSION=\"17.09.0-ce\" \\\n    DOCKER_CHANNEL=\"stable\" \\\n    DOCKER_SHA256=\"a9e90a73c3cdfbf238f148e1ec0eaff5eb181f92f35bdd938fd7dab18e1c4647\" \\\n    DIND_COMMIT=\"3b5fac462d21ca164b3778647420016315289034\" \\\n    DOCKER_COMPOSE_VERSION=\"1.16.1\"\n\n# Building git from source code:\n#   Ubuntu's default git package is built with broken gnutls. Rebuild git with openssl.\n##########################################################################\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n       wget=1.15-* python=2.7.5-* python2.7-dev=2.7.6-* fakeroot=1.20-* ca-certificates \\\n       tar=1.27.1-* gzip=1.6-* zip=3.0-* autoconf=2.69-* automake=1:1.14.1-* \\\n       bzip2=1.0.6-* file=1:5.14-* g++=4:4.8.2-* gcc=4:4.8.2-* imagemagick=8:6.7.7.10-* \\\n       libbz2-dev=1.0.6-* libc6-dev=2.19-* libcurl4-openssl-dev=7.35.0-* libdb-dev=1:5.3.21~* \\\n       libevent-dev=2.0.21-stable-* libffi-dev=3.1~rc1+r3.0.13-* libgeoip-dev=1.6.0-* libglib2.0-dev=2.40.2-* \\\n       libjpeg-dev=8c-* libkrb5-dev=1.12+dfsg-* liblzma-dev=5.1.1alpha+20120614-* \\\n       libmagickcore-dev=8:6.7.7.10-* libmagickwand-dev=8:6.7.7.10-* libmysqlclient-dev=5.5.59-* \\\n       libncurses5-dev=5.9+20140118-* libpng12-dev=1.2.50-* libpq-dev=9.3.22-* libreadline-dev=6.3-* \\\n       libsqlite3-dev=3.8.2-* libssl-dev=1.0.1f-* libtool=2.4.2-* libwebp-dev=0.4.0-* \\\n       libxml2-dev=2.9.1+dfsg1-* libxslt1-dev=1.1.28-* libyaml-dev=0.1.4-* make=3.81-* \\\n       patch=2.7.1-* xz-utils=5.1.1alpha+20120614-* zlib1g-dev=1:1.2.8.dfsg-* unzip=6.0-* curl=7.35.0-* \\\n       e2fsprogs=1.42.9-* iptables=1.4.21-* xfsprogs=3.1.9ubuntu2 xz-utils=5.1.1alpha+20120614-* \\\n    && apt-get install -y -qq less=458-* groff=1.22.2-* \\\n    && apt-get -qy build-dep git=1:1.9.1 \\\n    && apt-get -qy install libcurl4-openssl-dev=7.35.0-* git-man=1:1.9.1-* liberror-perl=0.17-* \\\n    && mkdir -p \/usr\/src\/git-openssl \\\n    && cd \/usr\/src\/git-openssl \\\n    && apt-get source git=1:1.9.1 \\\n    && cd $(find -mindepth 1 -maxdepth 1 -type d -name \"git-*\") \\\n    && sed -i -- 's\/libcurl4-gnutls-dev\/libcurl4-openssl-dev\/' .\/debian\/control \\\n    && sed -i -- '\/TEST\\s*=\\s*test\/d' .\/debian\/rules \\\n    && dpkg-buildpackage -rfakeroot -b \\\n    && find .. -type f -name \"git_*ubuntu*.deb\" -exec dpkg -i \\{\\} \\; \\\n    && rm -rf \/usr\/src\/git-openssl \\\n    && rm -rf \/var\/lib\/apt\/lists\/* \\\n    && apt-get clean\n\n# Install Docker\nRUN set -x \\\n    && curl -fSL \"https:\/\/${DOCKER_BUCKET}\/linux\/static\/${DOCKER_CHANNEL}\/x86_64\/docker-${DOCKER_VERSION}.tgz\" -o docker.tgz \\\n    && echo \"${DOCKER_SHA256} *docker.tgz\" | sha256sum -c - \\\n    && tar --extract --file docker.tgz --strip-components 1  --directory \/usr\/local\/bin\/ \\\n    && rm docker.tgz \\\n    && docker -v \\\n# set up subuid\/subgid so that \"--userns-remap=default\" works out-of-the-box\n    && addgroup dockremap \\\n    && useradd -g dockremap dockremap \\\n    && echo 'dockremap:165536:65536' >> \/etc\/subuid \\\n    && echo 'dockremap:165536:65536' >> \/etc\/subgid \\\n    && wget \"https:\/\/raw.githubusercontent.com\/docker\/docker\/${DIND_COMMIT}\/hack\/dind\" -O \/usr\/local\/bin\/dind \\\n    && curl -L https:\/\/github.com\/docker\/compose\/releases\/download\/${DOCKER_COMPOSE_VERSION}\/docker-compose-Linux-x86_64 > \/usr\/local\/bin\/docker-compose \\\n    && chmod +x \/usr\/local\/bin\/dind \/usr\/local\/bin\/docker-compose \\\n# Ensure docker-compose works\n    && docker-compose version\n\n# Install dependencies by all python images equivalent to buildpack-deps:jessie\n# on the public repos.\n\nRUN wget \"https:\/\/bootstrap.pypa.io\/get-pip.py\" -O \/tmp\/get-pip.py \\\n    && python \/tmp\/get-pip.py \\\n    && pip install awscli \\\n    && rm -fr \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nVOLUME \/var\/lib\/docker\n\nCOPY dockerd-entrypoint.sh \/usr\/local\/bin\/\n\nENV NODE_VERSION=\"4.4.7\"\n\nRUN set -ex \\\n    && for key in \\\n      9554F04D7259F04124DE6B476D5A82AC7E37093B \\\n      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n      0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \\\n      FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n      B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    ; do \\\n      gpg --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n    done\n\nRUN wget \"https:\/\/nodejs.org\/download\/release\/v$NODE_VERSION\/node-v$NODE_VERSION-linux-x64.tar.gz\" -O node-v$NODE_VERSION-linux-x64.tar.gz \\\n\t&& wget \"https:\/\/nodejs.org\/download\/release\/v$NODE_VERSION\/SHASUMS256.txt.asc\" -O SHASUMS256.txt.asc \\\n\t&& gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n\t&& grep \" node-v$NODE_VERSION-linux-x64.tar.gz\\$\" SHASUMS256.txt | sha256sum -c - \\\n    && tar -xzf \"node-v$NODE_VERSION-linux-x64.tar.gz\" -C \/usr\/local --strip-components=1 \\\n    && rm \"node-v$NODE_VERSION-linux-x64.tar.gz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n    && ln -s \/usr\/local\/bin\/node \/usr\/local\/bin\/nodejs \\\n    && rm -fr \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nCMD [ \"node\" ]\n",
    "risk_labels":[
      {
        "label":"use-cd-change-dir",
        "start":2512,
        "end":2537,
        "text":"cd \/usr\/src\/git-openssl \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2581,
        "end":2612,
        "text":"cd $(find -mindepth 1 -maxdepth"
      },
      {
        "label":"pip-install-without-version",
        "start":4199,
        "end":4219,
        "text":"pip install awscli \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"apt-install-without-version",
        "start":1087,
        "end":1221,
        "text":"apt-get install -y --no-install-recommends \\\\nwget=1.15-* python=2.7.5-* python2.7-dev=2.7.6-* fakeroot=1.20-* ca-certificates \\"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6f1c09c3d9dc14ca4f7656e205bf865e936c12df.dockerfile",
    "file_content":"ARG ROS_DISTRO=kinetic\n\n# ========================================\nFROM alpine:latest as cloner\n\nRUN apk add --no-cache git\n\nWORKDIR \/repos\n\nCOPY . \/repos\/src\/neonavigation\nRUN cd \/repos\/src \\\n  && git clone --depth=1 https:\/\/github.com\/at-wat\/neonavigation_msgs.git \\\n  && git clone --depth=1 https:\/\/github.com\/at-wat\/neonavigation_rviz_plugins.git\n\nRUN mkdir -p \/repos-manifests\/src \\\n  && find . -name package.xml | xargs -ISRC cp --parents SRC \/repos-manifests\/\n\n# ========================================\nFROM ros:${ROS_DISTRO}-ros-core\n\nRUN apt-get -qq update \\\n  && apt-get upgrade -y \\\n  && apt-get install -y --no-install-recommends \\\n    curl \\\n    libxml2-utils \\\n    python-pip \\\n    sudo \\\n    wget \\\n  && apt-get clean \\\n  && rm -rf \/var\/lib\/apt\/lists\/*\nRUN pip install gh-pr-comment catkin_lint\n\nRUN rosdep update \\\n  && mkdir -p \/catkin_ws\/src \\\n  && cd \/catkin_ws\/src \\\n  && . \/opt\/ros\/${ROS_DISTRO}\/setup.sh \\\n  && catkin_init_workspace\n\nCOPY --from=cloner \/repos-manifests\/src \/catkin_ws\/src\n\nRUN apt-get -qq update \\\n  && rosdep install --from-paths \/catkin_ws\/src --ignore-src --rosdistro=${ROS_DISTRO} -y \\\n  && apt-get clean \\\n  && rm -rf \/var\/lib\/apt\/lists\/*\n\nCOPY --from=cloner \/repos\/src \/catkin_ws\/src\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":67,
        "end":95,
        "text":"FROM alpine:latest as cloner"
      },
      {
        "label":"use-cd-change-dir",
        "start":173,
        "end":190,
        "text":"RUN cd \/repos\/src"
      },
      {
        "label":"apt-install-without-version",
        "start":600,
        "end":735,
        "text":"apt-get install -y --no-install-recommends \\\\ncurl \\\\nlibxml2-utils \\\\npython-pip \\\\nsudo \\\\nwget \\\\n&& apt-get clean \\"
      },
      {
        "label":"pip-install-without-version",
        "start":769,
        "end":810,
        "text":"RUN pip install gh-pr-comment catkin_lint"
      },
      {
        "label":"use-cd-change-dir",
        "start":865,
        "end":885,
        "text":"&& cd \/catkin_ws\/src"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"70313c53f07d6553bcf230555606b95d8da7fe32.dockerfile",
    "file_content":"FROM dota:latest\nMAINTAINER Tim Zaman <timbobel@gmail.com>\n\nRUN apt-get -q update \\\n && apt-get install -y \\\n    python3.7 \\\n    python3.7-distutils \\\n && curl -s https:\/\/bootstrap.pypa.io\/get-pip.py | python3.7\n\nWORKDIR \/root\n\nRUN mkdir \/root\/dotaservice\nCOPY setup.py README.md \/root\/dotaservice\/\nCOPY dotaservice \/root\/dotaservice\/dotaservice\/\nRUN pip3.7 install --user -e \/root\/dotaservice\/\n\nENTRYPOINT [\"python3.7\", \"-m\", \"dotaservice\"]\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":16,
        "text":"FROM dota:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":17,
        "end":58,
        "text":"MAINTAINER Tim Zaman <timbobel@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":88,
        "end":148,
        "text":"apt-get install -y \\\\npython3.7 \\\\npython3.7-distutils"
      },
      {
        "label":"apt-install-without-version",
        "start":88,
        "end":148,
        "text":"apt-get install -y \\\\npython3.7 \\\\npython3.7-distutils"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"705f3ff3062d07c6e4753dc9643268fc98f1d70d.dockerfile",
    "file_content":"FROM stackbrew\/ubuntu:12.04\nMAINTAINER Matt Bentley <mbentley@mbentley.net>\nRUN (echo \"deb http:\/\/archive.ubuntu.com\/ubuntu\/ precise main restricted universe multiverse\" > \/etc\/apt\/sources.list && echo \"deb http:\/\/archive.ubuntu.com\/ubuntu\/ precise-updates main restricted universe multiverse\" >> \/etc\/apt\/sources.list && echo \"deb http:\/\/archive.ubuntu.com\/ubuntu\/ precise-backports main restricted universe multiverse\" >> \/etc\/apt\/sources.list && echo \"deb http:\/\/archive.ubuntu.com\/ubuntu\/ precise-security main restricted universe multiverse\" >> \/etc\/apt\/sources.list)\nRUN apt-get update\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y curl\nRUN curl https:\/\/get.docker.io\/builds\/Linux\/x86_64\/docker-latest -o \/usr\/local\/bin\/docker\nRUN chmod +x \/usr\/local\/bin\/docker\nADD run.sh \/usr\/local\/bin\/run\nENTRYPOINT [\"\/usr\/local\/bin\/run\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":28,
        "end":75,
        "text":"MAINTAINER Matt Bentley <mbentley@mbentley.net>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":593,
        "end":651,
        "text":"RUN DEBIAN_FRONTEND=noninteractive apt-get install -y curl"
      },
      {
        "label":"apt-install-without-version",
        "start":593,
        "end":651,
        "text":"RUN DEBIAN_FRONTEND=noninteractive apt-get install -y curl"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":777,
        "end":806,
        "text":"ADD run.sh \/usr\/local\/bin\/run"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7aed8b90f9c4db99976cb789fe5275a17b34c43a.dockerfile",
    "file_content":"FROM kobotoolbox\/base:latest\n\nMAINTAINER Serban Teodorescu, teodorescu.serban@gmail.com\n\nCOPY run_nginx \/\n\nRUN apt-get -qq update && \\\n    apt-get install -qq -y \\\n        nginx-extras && \\\n    apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/* && \\\n    echo \"daemon off;\" >> \/etc\/nginx\/nginx.conf && \\\n    mkdir -p \/etc\/service\/nginx && \\\n    mv \/run_nginx \/etc\/service\/nginx\/run && \\\n    chmod u+x \/etc\/service\/nginx\/run\n\n#    nginx-full\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":28,
        "text":"FROM kobotoolbox\/base:latest"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":30,
        "end":87,
        "text":"MAINTAINER Serban Teodorescu, teodorescu.serban@gmail.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":139,
        "end":184,
        "text":"apt-get install -qq -y \\\\nnginx-extras"
      },
      {
        "label":"apt-install-without-version",
        "start":139,
        "end":184,
        "text":"apt-get install -qq -y \\\\nnginx-extras"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"7e9f88c3993774879917b1e5d8f6b6e36a31adc3.dockerfile",
    "file_content":"FROM ubuntu:14.04\n\n# [ tensorflow ]\n# https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/tools\/docker\/Dockerfile\n\nRUN apt-get update; \\\n  apt-get install -y --no-install-recommends \\\n    build-essential \\\n    curl \\\n    libfreetype6-dev \\\n    libpng12-dev \\\n    libzmq3-dev \\\n    pkg-config \\\n    python \\\n    python-dev \\\n    rsync \\\n    software-properties-common \\\n    unzip; \\\n  apt-get clean autoclean; \\\n  apt-get autoremove -y; \\\n  rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN curl -O https:\/\/bootstrap.pypa.io\/get-pip.py; \\\n  python get-pip.py; \\\n  rm get-pip.py\n\nRUN pip --no-cache-dir install \\\n    ipykernel \\\n    jupyter \\\n    matplotlib \\\n    numpy \\\n    scipy \\\n    sklearn \\\n    pandas \\\n    Pillow \\\n    tensorflow; \\\n  python -m ipykernel.kernelspec\n\n# TensorBoard\nEXPOSE 6006\n\n# IPython\nEXPOSE 8888\n\n# [ pandas ]\n\nRUN pip --no-cache-dir install pandas\n\n# [ keras + theano ]\n# https:\/\/github.com\/fchollet\/keras\/blob\/master\/docker\/Dockerfile\n\nRUN apt-get update; \\\n  apt-get install -y \\\n    wget \\\n    git \\\n    libhdf5-dev \\\n    g++ \\\n    graphviz; \\\n  apt-get clean autoclean; \\\n  apt-get autoremove -y; \\\n  rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN pip --no-cache-dir install h5py git+git:\/\/github.com\/fchollet\/keras.git\n\n# [ gensim ]\n\nRUN pip --no-cache-dir install gensim\n\n# [ torch ]\n# https:\/\/github.com\/Kaixhin\/dockerfiles\/blob\/master\/torch\/Dockerfile\n\n# Install git, apt-add-repository and dependencies for iTorch\nRUN apt-get update; \\\n  apt-get install -y \\\n    git \\\n    software-properties-common \\\n    ipython3 \\\n    libssl-dev \\\n    libzmq3-dev \\\n    python-zmq \\\n    python-pip; \\\n  apt-get clean autoclean; \\\n  apt-get autoremove -y; \\\n  rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN git clone https:\/\/github.com\/torch\/distro.git \/root\/torch --recursive; \\\n  cd \/root\/torch; bash install-deps; .\/install.sh -b\n\nENV LUA_PATH='\/root\/.luarocks\/share\/lua\/5.1\/?.lua;\/root\/.luarocks\/share\/lua\/5.1\/?\/init.lua;\/root\/torch\/install\/share\/lua\/5.1\/?.lua;\/root\/torch\/install\/share\/lua\/5.1\/?\/init.lua;.\/?.lua;\/root\/torch\/install\/share\/luajit-2.1.0-beta1\/?.lua;\/usr\/local\/share\/lua\/5.1\/?.lua;\/usr\/local\/share\/lua\/5.1\/?\/init.lua'\nENV LUA_CPATH='\/root\/.luarocks\/lib\/lua\/5.1\/?.so;\/root\/torch\/install\/lib\/lua\/5.1\/?.so;.\/?.so;\/usr\/local\/lib\/lua\/5.1\/?.so;\/usr\/local\/lib\/lua\/5.1\/loadall.so'\nENV PATH=\/root\/torch\/install\/bin:$PATH\nENV LD_LIBRARY_PATH=\/root\/torch\/install\/lib:$LD_LIBRARY_PATH\nENV DYLD_LIBRARY_PATH=\/root\/torch\/install\/lib:$DYLD_LIBRARY_PATH\nENV LUA_CPATH='\/root\/torch\/install\/lib\/?.so;'$LUA_CPATH\n\nRUN git clone https:\/\/github.com\/facebook\/iTorch.git ; \\\n  cd iTorch ; luarocks make ; \\\n  cd .. ; rm -rf iTorch\n\n# [ pyOSC ]\n\n# this version is more up to date than pip\nRUN pip --no-cache-dir install git+git:\/\/github.com\/ptone\/pyosc.git\n\n# [ dlib ]\n\nRUN apt-get update; \\\n  apt-get install -y \\\n    libopenblas-dev \\\n    libboost-python-dev \\\n    liblapack-dev; \\\n  git clone https:\/\/github.com\/davisking\/dlib.git \/root\/dlib; \\\n  cd \/root\/dlib; mkdir build; cd build; cmake ..; cmake --build .; \\\n  cd \/root\/dlib; python setup.py install; \\\n  cd \/root ; rm -rf dlib; \\\n  apt-get clean autoclean; \\\n  apt-get autoremove -y; \\\n  rm -rf \/var\/lib\/apt\/lists\/*\n\n# [ Multicore-TSNE ]\n\nRUN git clone https:\/\/github.com\/DmitryUlyanov\/Multicore-TSNE.git ; \\\n  cd Multicore-TSNE ; \\\n  pip --no-cache-dir install -r requirements.txt ; \\\n  python setup.py install ; \\\n  cd .. ; rm -rf Multicore-TSNE\n\nRUN pip --no-cache-dir install \\\n    scikit-image\n\n# [ lapjv ]\n\nRUN pip --no-cache-dir install \\\n  cython \\\n  git+git:\/\/github.com\/gatagat\/lapjv.git\n\n# [ torch-rnn ]\n\nRUN git clone https:\/\/github.com\/deepmind\/torch-hdf5 ; \\\n  cd torch-hdf5 ; \\\n  luarocks make hdf5-0-0.rockspec ; \\\n  cd .. ; \\\n  rm -rf torch-hdf5\n\n# [ neuraltalk2 ]\n\nRUN apt-get update; \\\n  apt-get install -y \\\n    libprotobuf-dev \\\n    protobuf-compiler ;\\\n  luarocks install loadcaffe",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":151,
        "end":393,
        "text":"apt-get install -y --no-install-recommends \\\\nbuild-essential \\\\ncurl \\\\nlibfreetype6-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\npython \\\\npython-dev \\\\nrsync \\\\nsoftware-properties-common \\\\nunzip; \\"
      },
      {
        "label":"pip-install-without-version",
        "start":573,
        "end":734,
        "text":"RUN pip --no-cache-dir install \\\\nipykernel \\\\njupyter \\\\nmatplotlib \\\\nnumpy \\\\nscipy \\\\nsklearn \\\\npandas \\\\nPillow \\\\ntensorflow; \\"
      },
      {
        "label":"pip-install-without-version",
        "start":833,
        "end":870,
        "text":"RUN pip --no-cache-dir install pandas"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":984,
        "end":1069,
        "text":"apt-get install -y \\\\nwget \\\\ngit \\\\nlibhdf5-dev \\\\ng++ \\\\ngraphviz; \\"
      },
      {
        "label":"apt-install-without-version",
        "start":984,
        "end":1069,
        "text":"apt-get install -y \\\\nwget \\\\ngit \\\\nlibhdf5-dev \\\\ng++ \\\\ngraphviz; \\"
      },
      {
        "label":"pip-install-without-version",
        "start":1157,
        "end":1232,
        "text":"RUN pip --no-cache-dir install h5py git+git:\/\/github.com\/fchollet\/keras.git"
      },
      {
        "label":"pip-install-without-version",
        "start":1248,
        "end":1285,
        "text":"RUN pip --no-cache-dir install gensim"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1456,
        "end":1604,
        "text":"apt-get install -y \\\\ngit \\\\nsoftware-properties-common \\\\nipython3 \\\\nlibssl-dev \\\\nlibzmq3-dev \\\\npython-zmq \\\\npython-pip; \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1456,
        "end":1604,
        "text":"apt-get install -y \\\\ngit \\\\nsoftware-properties-common \\\\nipython3 \\\\nlibssl-dev \\\\nlibzmq3-dev \\\\npython-zmq \\\\npython-pip; \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1771,
        "end":1804,
        "text":"cd \/root\/torch; bash install-deps"
      },
      {
        "label":"use-cd-change-dir",
        "start":2562,
        "end":2571,
        "text":"cd iTorch"
      },
      {
        "label":"use-cd-change-dir",
        "start":2594,
        "end":2601,
        "text":"cd .. ;"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2778,
        "end":2867,
        "text":"apt-get install -y \\\\nlibopenblas-dev \\\\nlibboost-python-dev \\\\nliblapack-dev; \\"
      },
      {
        "label":"apt-install-without-version",
        "start":2778,
        "end":2865,
        "text":"apt-get install -y \\\\nlibopenblas-dev \\\\nlibboost-python-dev \\\\nliblapack-dev;"
      },
      {
        "label":"use-cd-change-dir",
        "start":2934,
        "end":2947,
        "text":"cd \/root\/dlib"
      },
      {
        "label":"use-cd-change-dir",
        "start":3003,
        "end":3017,
        "text":"cd \/root\/dlib;"
      },
      {
        "label":"use-cd-change-dir",
        "start":3050,
        "end":3055,
        "text":"\/root"
      },
      {
        "label":"use-cd-change-dir",
        "start":3254,
        "end":3271,
        "text":"cd Multicore-TSNE"
      },
      {
        "label":"use-cd-change-dir",
        "start":3361,
        "end":3371,
        "text":"cd .. ; rm"
      },
      {
        "label":"use-cd-change-dir",
        "start":3618,
        "end":3631,
        "text":"cd torch-hdf5"
      },
      {
        "label":"use-cd-change-dir",
        "start":3676,
        "end":3683,
        "text":"cd .. ;"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3750,
        "end":3846,
        "text":"apt-get install -y \\\\nlibprotobuf-dev \\\\nprotobuf-compiler ;\\\\nluarocks install loadcaffe"
      },
      {
        "label":"apt-install-without-version",
        "start":3750,
        "end":3846,
        "text":"apt-get install -y \\\\nlibprotobuf-dev \\\\nprotobuf-compiler ;\\\\nluarocks install loadcaffe"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"846456c7364b3e722185bd518a8c20d5c0016941.dockerfile",
    "file_content":"FROM mariadb:10.4.4\nMAINTAINER Hugo Chinchilla <hchinchilla@habitissimo.com>\n\n# Install cgget command\nRUN apt-get update && apt-get install -y cgroup-bin bc && rm -rf \/var\/apt\/lists\/* && apt-get clean\n\n# customize base config\nADD mariadb.cnf \/etc\/mysql\/conf.d\/mariadb.cnf\nADD myaas.cnf \/etc\/mysql\/conf.d\/myaas.cnf\n\n# make myaas.cnf writable\nRUN chown -R mysql:mysql \/etc\/mysql\/conf.d\nADD configure-memory.sh \/docker-entrypoint-initdb.d\/\n\n# customize entrypoint\nCOPY custom-entrypoint.sh \/usr\/local\/bin\/\nENTRYPOINT [\"custom-entrypoint.sh\"]\n\nCMD [\"mysqld\", \"--innodb-doublewrite=0\"]\n\nHEALTHCHECK --start-period=30s --interval=30s --timeout=30s --retries=3 CMD mysql --connect-timeout=10 --user=root --password=$MYSQL_ROOT_PASSWORD -h 127.0.0.1 -e \"show databases;\"\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":76,
        "text":"MAINTAINER Hugo Chinchilla <hchinchilla@habitissimo.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":124,
        "end":156,
        "text":"apt-get install -y cgroup-bin bc"
      },
      {
        "label":"apt-install-without-version",
        "start":124,
        "end":153,
        "text":"apt-get install -y cgroup-bin"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":226,
        "end":310,
        "text":"ADD mariadb.cnf \/etc\/mysql\/conf.d\/mariadb.cnf\\nADD myaas.cnf \/etc\/mysql\/conf.d\/myaas."
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5d46a86298b52a37a9721cbe71fff6b3cf597762.dockerfile",
    "file_content":"FROM ubuntu\n\nENV TERM linux\nRUN apt-get update -y\nRUN apt-get install haproxy golang tmux curl git iptables -y\n\nRUN mkdir \/app\nWORKDIR \/app\nADD . \/app\/\n\nADD haproxy \/etc\/default\/haproxy\nADD haproxy.cfg \/etc\/haproxy\/haproxy.cfg\nEXPOSE 9000\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM ubuntu"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":50,
        "end":110,
        "text":"RUN apt-get install haproxy golang tmux curl git iptables -y"
      },
      {
        "label":"apt-install-without-version",
        "start":50,
        "end":110,
        "text":"RUN apt-get install haproxy golang tmux curl git iptables -y"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":140,
        "end":151,
        "text":"ADD . \/app\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":153,
        "end":226,
        "text":"ADD haproxy \/etc\/default\/haproxy\\nADD haproxy.cfg \/etc\/haproxy\/haproxy.cfg"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"5fb2840fd0f0d2088264c947ebf1e605a04b9d4d.dockerfile",
    "file_content":"FROM ubuntu:12.04  \nRUN apt-get update  \nRUN apt-get install -y curl python-pip  \nRUN pip install awscli  \nADD .\/s3-restore \/usr\/local\/bin\/  \n  \nENTRYPOINT [\"\/usr\/local\/bin\/s3-restore\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":41,
        "end":79,
        "text":"RUN apt-get install -y curl python-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":41,
        "end":79,
        "text":"RUN apt-get install -y curl python-pip"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":107,
        "end":139,
        "text":"ADD .\/s3-restore \/usr\/local\/bin\/"
      },
      {
        "label":"pip-install-without-version",
        "start":82,
        "end":104,
        "text":"RUN pip install awscli"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"611ad9ef7931803f238656510ea44e5516e2d52e.dockerfile",
    "file_content":"# Dockerfile for PHP Web Article Extractor \n# https:\/\/github.com\/zackslash\/PHP-Web-Article-Extractor\n\nFROM ubuntu:14.04\n\nMAINTAINER Luke Hines <lukehines1+opensource@gmail.com>\n\n# Install base packages\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get -yq install \\\n        curl \\\n        apache2 \\\n        libapache2-mod-php5 \\\n        php5-curl \\\n        php-pear \\\n        php-apc && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    curl -sS https:\/\/getcomposer.org\/installer | php -- --install-dir=\/usr\/local\/bin --filename=composer\n\nRUN echo \"ServerName localhost\" >> \/etc\/apache2\/apache2.conf && \\\n    sed -i \"s\/variables_order.*\/variables_order = \\\"EGPCS\\\"\/g\" \/etc\/php5\/apache2\/php.ini\n\n# Generate base composer project\nRUN mkdir -p \/proj && rm -fr \/var\/www\/html && ln -s \/proj \/var\/www\/html && \\\n\ttouch \/proj\/composer.json && \\\n\techo \"{ \\\"require\\\": { \\\"zackslash\/php-web-article-extractor\\\": \\\"*\\\" } }\" >> \/proj\/composer.json\n\n# Install any project dependencies through composer\nWORKDIR \/proj\nRUN composer install && \\\n\trm -r \/proj\/vendor\/zackslash\/php-web-article-extractor\/res && \\\n\trm -r \/proj\/vendor\/zackslash\/php-web-article-extractor\/src\n\n# Use local project source and resources to build this image\nADD res \/proj\/vendor\/zackslash\/php-web-article-extractor\/res\nADD src \/proj\/vendor\/zackslash\/php-web-article-extractor\/src\nADD cmd \/proj\/vendor\/zackslash\/php-web-article-extractor\/cmd\n\nRUN chmod +x \/proj\/vendor\/zackslash\/php-web-article-extractor\/cmd\/run.sh\n\nENV ALLOW_OVERRIDE **False**\nWORKDIR \/proj\/vendor\/zackslash\/php-web-article-extractor\n\n# Use the CMD script as entry point (Act like binary)\nENTRYPOINT [\"\/proj\/vendor\/zackslash\/php-web-article-extractor\/cmd\/run.sh\"]",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":121,
        "end":176,
        "text":"MAINTAINER Luke Hines <lukehines1+opensource@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":230,
        "end":400,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get -yq install \\\\ncurl \\\\napache2 \\\\nlibapache2-mod-php5 \\\\nphp5-curl \\\\nphp-pear \\\\nphp-apc"
      },
      {
        "label":"apt-install-without-version",
        "start":230,
        "end":400,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get -yq install \\\\ncurl \\\\napache2 \\\\nlibapache2-mod-php5 \\\\nphp5-curl \\\\nphp-pear \\\\nphp-apc"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1226,
        "end":1408,
        "text":"ADD res \/proj\/vendor\/zackslash\/php-web-article-extractor\/res\\nADD src \/proj\/vendor\/zackslash\/php-web-article-extractor\/src\\nADD cmd \/proj\/vendor\/zackslash\/php-web-article-extractor\/cmd"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"638874b2552e66ee299727449031f1e7570dff4e.dockerfile",
    "file_content":"FROM andrewosh\/binder-base\n\nMAINTAINER Kozo Nishida <knishida@riken.jp>\n\nUSER root\n\nRUN apt-get update\nRUN apt-get install -y build-essential ruby ruby-dev rake git libzmq3 libzmq3-dev libgsl0-dev libtool autoconf automake zlib1g-dev && apt-get clean\nRUN ln -s \/usr\/bin\/libtoolize \/usr\/bin\/libtool # See https:\/\/github.com\/zeromq\/libzmq\/issues\/1385\nRUN git clone git:\/\/github.com\/ruby-numo\/numo-narray\nRUN gem update --no-document --system && gem install --no-document iruby pry rbczmq\nRUN cd narray; gem build numo-narray.gemspec; gem install numo-narray-*.gem\n\nUSER main\n\nRUN iruby register\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":26,
        "text":"FROM andrewosh\/binder-base"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":28,
        "end":71,
        "text":"MAINTAINER Kozo Nishida <knishida@riken.jp>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":103,
        "end":233,
        "text":"RUN apt-get install -y build-essential ruby ruby-dev rake git libzmq3 libzmq3-dev libgsl0-dev libtool autoconf automake zlib1g-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":103,
        "end":233,
        "text":"RUN apt-get install -y build-essential ruby ruby-dev rake git libzmq3 libzmq3-dev libgsl0-dev libtool autoconf automake zlib1g-dev"
      },
      {
        "label":"use-cd-change-dir",
        "start":486,
        "end":504,
        "text":"RUN cd narray; gem"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"5d48877f4a75422cabcc6c5be278c3e4398210ae.dockerfile",
    "file_content":"FROM centos:7\nMAINTAINER David Worms\n\n# Install Node.js\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 9.4.0\nRUN yum install -y xz \\\n  && curl -SLO \"https:\/\/nodejs.org\/dist\/v$NODE_VERSION\/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C \/usr\/local --strip-components=1 \\\n  && rm -f \"\/node-v$NODE_VERSION-linux-x64.tar.xz\"\n\n# Install epel (requirement for service nginx)\nRUN yum install -y epel-release\n\n# Install supervisor\nRUN \\\n  yum install -y iproute python-setuptools hostname inotify-tools yum-utils which && \\\n  easy_install supervisor\nADD .\/supervisord.conf \/etc\/supervisord.conf\n\n# Install SSH\nRUN yum install -y openssh-server openssh-clients \\\n  && ssh-keygen -t rsa -f ~\/.ssh\/id_rsa -N '' \\\n  && cat ~\/.ssh\/id_rsa.pub > ~\/.ssh\/authorized_keys \\\n  && ssh-keygen -f \/etc\/ssh\/ssh_host_rsa_key\n\n## Install Mysql client\nRUN yum install -y mysql\n\nRUN yum clean all\n\nADD .\/run.sh \/run.sh\nRUN mkdir -p \/nikita\nWORKDIR \/nikita\/packages\/db\nENV TERM xterm\n\nENTRYPOINT [\"\/run.sh\"]\nCMD []\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":14,
        "end":36,
        "text":"MAINTAINER David Worms"
      },
      {
        "label":"yum-install-without-version",
        "start":108,
        "end":131,
        "text":"RUN yum install -y xz \\"
      },
      {
        "label":"yum-install-without-version",
        "start":416,
        "end":447,
        "text":"RUN yum install -y epel-release"
      },
      {
        "label":"yum-install-without-version",
        "start":478,
        "end":557,
        "text":"yum install -y iproute python-setuptools hostname inotify-tools yum-utils which"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":589,
        "end":633,
        "text":"ADD .\/supervisord.conf \/etc\/supervisord.conf"
      },
      {
        "label":"yum-install-without-version",
        "start":649,
        "end":698,
        "text":"RUN yum install -y openssh-server openssh-clients"
      },
      {
        "label":"yum-install-without-version",
        "start":873,
        "end":897,
        "text":"RUN yum install -y mysql"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":918,
        "end":938,
        "text":"ADD .\/run.sh \/run.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5d51011f5452ee48d4c9384d0e6c01434f9e96ff.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER StackFocus\nENV DEBIAN_FRONTEND noninteractive\nVOLUME ['\/opt\/postmaster\/logs']\n\nRUN ln -snf \/bin\/bash \/bin\/sh\nRUN mkdir -p \/opt\/postmaster\/git\n\nCOPY .\/ \/opt\/postmaster\/git\n\nRUN chown -R www-data:www-data \/opt\/postmaster\nRUN apt-get update\nRUN apt-get install -y \\\n    python \\\n    python-dev \\\n    python-virtualenv \\\n    python-pip \\\n    apache2 \\\n    libapache2-mod-wsgi \\\n    libsasl2-dev \\\n    python-dev \\\n    libldap2-dev \\\n    libssl-dev \\\n    libyaml-dev \\\n    libpython2.7-dev \\\n    sqlite3 \\\n    apt-get autoremove -y && \\\n    apt-get clean\nRUN \/usr\/sbin\/apache2ctl stop && systemctl disable apache2\nRUN virtualenv -p \/usr\/bin\/python2.7 \/opt\/postmaster\/env\n\nWORKDIR \/opt\/postmaster\/git\n\nRUN mkdir -p \/opt\/postmaster\/logs\nRUN \/opt\/postmaster\/env\/bin\/pip install -r requirements.txt\nRUN cp -pn \/opt\/postmaster\/git\/config.default.py \/opt\/postmaster\/git\/config.py\nRUN source \/opt\/postmaster\/env\/bin\/activate && python manage.py clean\nRUN chown -R www-data:www-data \/opt\/postmaster\/git \/opt\/postmaster\/env\nRUN chmod +x \/opt\/postmaster\/git\/ops\/docker.sh\nRUN \/usr\/sbin\/a2dissite 000-default.conf\nRUN cp -f ops\/ansible\/roles\/postmaster_deploy\/files\/apache2\/postmaster.conf \/etc\/apache2\/sites-available\/postmaster.conf\nRUN \/usr\/sbin\/a2ensite postmaster.conf\n\nEXPOSE 8082\n\nENTRYPOINT \/opt\/postmaster\/git\/ops\/docker.sh\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":39,
        "text":"MAINTAINER StackFocus"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":267,
        "end":513,
        "text":"RUN apt-get install -y \\\\npython \\\\npython-dev \\\\npython-virtualenv \\\\npython-pip \\\\napache2 \\\\nlibapache2-mod-wsgi \\\\nlibsasl2-dev \\\\npython-dev \\\\nlibldap2-dev \\\\nlibssl-dev \\\\nlibyaml-dev \\\\nlibpython2.7-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":267,
        "end":513,
        "text":"RUN apt-get install -y \\\\npython \\\\npython-dev \\\\npython-virtualenv \\\\npython-pip \\\\napache2 \\\\nlibapache2-mod-wsgi \\\\nlibsasl2-dev \\\\npython-dev \\\\nlibldap2-dev \\\\nlibssl-dev \\\\nlibyaml-dev \\\\nlibpython2.7-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5d923822f4b4c5167e3f526485413068186883b2.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER Marco Slaviero <marco@thinkst.com>\nLABEL Description=\"This image provides the frontend site for Canarytokens\" Vendor=\"Thinkst Applied Research\" Version=\"1.4\"\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates wget python-pip unzip osslsigncode gcc python-dev libreadline-dev libncurses5-dev libffi-dev gcc patch make libxslt-dev libxml2-dev libz-dev fortune-mod fortunes libssl-dev && rm -rf \/var\/lib\/apt\/lists\/*\nWORKDIR \/\nRUN pip install -U setuptools\nRUN pip install --upgrade pip\nRUN pip install --no-cache-dir pyOpenSSL==16.2.0\nRUN pip install --no-cache-dir Jinja2==2.9.4\nRUN pip install --no-cache-dir MarkupSafe==0.23\nRUN pip install --no-cache-dir Twisted==15.2.1\nRUN pip install --no-cache-dir cssselect==0.9.1\nRUN pip install --no-cache-dir docopt==0.4.0\nRUN pip install --no-cache-dir gnureadline==6.3.3\nRUN pip install --no-cache-dir httplib2==0.9.1\nRUN pip install --no-cache-dir lxml==3.4.4\nRUN pip install --no-cache-dir mandrill==1.0.57\nRUN pip install --no-cache-dir pytz==2015.4\nRUN pip install --no-cache-dir redis==2.10.3\nRUN pip install --no-cache-dir requests==2.20.0\nRUN pip install --no-cache-dir simplejson==3.7.3\nRUN pip install --no-cache-dir six==1.10.0\nRUN pip install --no-cache-dir twilio==4.4.0\nRUN pip install --no-cache-dir twill==1.8.0\nRUN pip install --no-cache-dir wsgiref==0.1.2\nRUN pip install --no-cache-dir zope.interface==4.1.2\nRUN pip install --no-cache-dir PyQRCode==1.2.1\nRUN pip install --no-cache-dir pypng==0.0.18\nRUN pip install --no-cache-dir htmlmin==0.1.10\nRUN pip install --no-cache-dir sendgrid==3.6.5\nRUN pip install --no-cache-dir service_identity\n\nRUN wget -O master.zip https:\/\/github.com\/thinkst\/canarytokens\/archive\/master.zip?step=21\nRUN unzip master.zip\nRUN mv \/canarytokens-master\/* \/srv\nRUN rm -rf \/canarytokens-master\nWORKDIR \/srv\n\nCMD echo \"Please use the docker-compose setup described at https:\/\/github.com\/thinkst\/canarytokens-docker\"\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":63,
        "text":"MAINTAINER Marco Slaviero <marco@thinkst.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":209,
        "end":440,
        "text":"apt-get install -y --no-install-recommends ca-certificates wget python-pip unzip osslsigncode gcc python-dev libreadline-dev libncurses5-dev libffi-dev gcc patch make libxslt-dev libxml2-dev libz-dev fortune-mod fortunes libssl-dev"
      },
      {
        "label":"pip-install-without-version",
        "start":482,
        "end":511,
        "text":"RUN pip install -U setuptools"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "root-privilege-user",
      "use-deprecated-maintainer",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"5e6d729af0c6b7d6eb317fba749f55f226dc2015.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nMAINTAINER Binoy Das <binoyd@amazon.com>\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        apt-utils \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        libhdf5-dev \\\n        libcurl3-dev \\\n        libgtk2.0-0 \\\n        pkg-config \\\n        python3-dev \\\n        python3-pip \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        gzip \\\n        wget \\\n        vim \\\n        git \\\n        nginx \\\n        ca-certificates \\\n        && \\\n    apt-get clean && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN pip3 install --upgrade pip\n\nRUN pip3 --no-cache-dir install \\\n        setuptools\n\nRUN pip3 --no-cache-dir install \\\n        tensorflow\n\n# install tensorflow-model-server 1.5. 1.6 is not working as of 3\/29\/2018 for unknown reasons.\n#RUN wget 'http:\/\/storage.googleapis.com\/tensorflow-serving-apt\/pool\/tensorflow-model-server\/t\/tensorflow-model-server\/tensorflow-model-server_1.5.0_all.deb' && \\\n#    dpkg -i tensorflow-model-server_1.5.0_all.deb\n\nRUN pip3 --no-cache-dir install \\\n        keras \\\n        h5py \\\n        numpy \\\n        pandas \\\n        scipy \\\n        sklearn \\\n        pyyaml \\\n        pytz\n\nRUN pip3 --no-cache-dir install \\\n        flask \\\n        gevent \\\n        gunicorn\n\n# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard\n# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE\n# keeps Python from writing the .pyc files which are unnecessary in this case. We also update\n# PATH so that the train and serve programs are found when the container is invoked.\n\nENV PYTHONUNBUFFERED=TRUE\nENV PYTHONDONTWRITEBYTECODE=TRUE\nENV PATH=\"\/opt\/program:${PATH}\"\n\n# Set up the program in the image\nCOPY byoa \/opt\/program\nWORKDIR \/opt\/program\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":59,
        "text":"MAINTAINER Binoy Das <binoyd@amazon.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":83,
        "end":392,
        "text":"apt-get install -y --no-install-recommends \\\\napt-utils \\\\nbuild-essential \\\\ncurl \\\\nlibfreetype6-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\nlibhdf5-dev \\\\nlibcurl3-dev \\\\nlibgtk2.0-0 \\\\npkg-config \\\\npython3-dev \\\\npython3-pip \\"
      },
      {
        "label":"pip-install-without-version",
        "start":631,
        "end":661,
        "text":"RUN pip3 install --upgrade pip"
      },
      {
        "label":"pip-install-without-version",
        "start":663,
        "end":715,
        "text":"RUN pip3 --no-cache-dir install \\\\nsetuptools"
      },
      {
        "label":"pip-install-without-version",
        "start":717,
        "end":769,
        "text":"RUN pip3 --no-cache-dir install \\\\ntensorflow"
      },
      {
        "label":"pip-install-without-version",
        "start":1085,
        "end":1242,
        "text":"pip3 --no-cache-dir install \\\\nkeras \\\\nh5py \\\\nnumpy \\\\npandas \\\\nscipy \\\\nsklearn \\\\npyyaml \\\\npytz"
      },
      {
        "label":"pip-install-without-version",
        "start":1244,
        "end":1327,
        "text":"RUN pip3 --no-cache-dir install \\\\nflask \\\\ngevent \\\\ngunicorn"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "root-privilege-user",
      "use-deprecated-maintainer",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"5e740d46c36fc6b6437e127930d54f2bb0c31f94.dockerfile",
    "file_content":"FROM ubuntu:$(UBUNTU_VERSION)\n\n# To make it easier for build and release pipelines to run apt-get,\n# configure apt to not require confirmation (assume the -y argument by default)\nENV DEBIAN_FRONTEND=noninteractive\nRUN echo \"APT::Get::Assume-Yes \\\"true\\\";\" > \/etc\/apt\/apt.conf.d\/90assumeyes\n\n# Trusty needs an updated backport of apt to avoid hash sum mismatch errors\nRUN [ \"$(UBUNTU_RELEASE)\" = \"trusty\" ] \\\n && curl -s https:\/\/packagecloud.io\/install\/repositories\/computology\/apt-backport\/script.deb.sh |  bash \\\n && apt-get update \\\n && apt-get install apt=1.2.10 \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/* \\\n || echo -n\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        software-properties-common \\\n && apt-add-repository ppa:git-core\/ppa \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        apt-utils \\\n        curl \\\n        git \\\n        jq \\\n        libcurl3 \\\n        libicu$(LIBICU_VERSION) \\\n        libunwind8 \\\n        netcat \\\n && curl -s https:\/\/packagecloud.io\/install\/repositories\/github\/git-lfs\/script.deb.sh | bash \\\n && apt-get install -y --no-install-recommends git-lfs \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n\n# Accept the TEE EULA\nRUN mkdir -p \"\/root\/.microsoft\/Team Foundation\/4.0\/Configuration\/TEE-Mementos\" \\\n && cd \"\/root\/.microsoft\/Team Foundation\/4.0\/Configuration\/TEE-Mementos\" \\\n && echo '<ProductIdData><eula-14.0 value=\"true\"\/><\/ProductIdData>' > \"com.microsoft.tfs.client.productid.xml\"\n\nWORKDIR \/vsts\n\nCOPY .\/start.sh .\nRUN chmod +x start.sh\n\nCMD [\".\/start.sh\"]\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":679,
        "end":760,
        "text":"apt-get install -y --no-install-recommends \\\\nsoftware-properties-common \\"
      },
      {
        "label":"apt-install-without-version",
        "start":828,
        "end":953,
        "text":"apt-get install -y --no-install-recommends \\\\napt-utils \\\\ncurl \\\\ngit \\\\njq \\\\nlibcurl3 \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1125,
        "end":1175,
        "text":"apt-get install -y --no-install-recommends git-lfs"
      },
      {
        "label":"use-cd-change-dir",
        "start":1354,
        "end":1382,
        "text":"&& cd \"\/root\/.microsoft\/Team"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5fc4b4037446dd3c0617dee3fa877c91c14b0122.dockerfile",
    "file_content":"FROM python:3.6  \nRUN apt-get update  \nRUN apt-get install -y python3-pip libav-tools nmap  \n  \nRUN mkdir \/app  \n  \nWORKDIR \/app  \nADD . .  \nRUN python3 -m pip install -r requirements.txt  \n  \nENTRYPOINT bash -c \"bash docker-entrypoint.sh\"\n\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":39,
        "end":90,
        "text":"RUN apt-get install -y python3-pip libav-tools nmap"
      },
      {
        "label":"apt-install-without-version",
        "start":39,
        "end":90,
        "text":"RUN apt-get install -y python3-pip libav-tools nmap"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":131,
        "end":138,
        "text":"ADD . ."
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"601aaf519b633422701f998230864dae4d9b715f.dockerfile",
    "file_content":"FROM ubuntu:14.04\nMAINTAINER Syoyo Fujita(syoyo@lighttransport.com)\n\nRUN apt-get -y update\nRUN apt-get -y install git make autoconf automake libtool\nRUN apt-get -y install cmake\nRUN apt-get -y install curl python xz-utils\nRUN apt-get -y install gcc g++\nRUN apt-get -y install groff\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":66,
        "text":"MAINTAINER Syoyo Fujita(syoyo@lighttransport.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":91,
        "end":281,
        "text":"RUN apt-get -y install git make autoconf automake libtool\\nRUN apt-get -y install cmake\\nRUN apt-get -y install curl python xz-utils\\nRUN apt-get -y install gcc g++\\nRUN apt-get -y install groff"
      },
      {
        "label":"apt-install-without-version",
        "start":91,
        "end":281,
        "text":"RUN apt-get -y install git make autoconf automake libtool\\nRUN apt-get -y install cmake\\nRUN apt-get -y install curl python xz-utils\\nRUN apt-get -y install gcc g++\\nRUN apt-get -y install groff"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"60b3c2609ae368381e65d4dde8d093af84162cb0.dockerfile",
    "file_content":"## Start with the rstudio image providing 'base R' as well as RStudio based on Debian testing\nFROM rocker\/geospatial:3.4.1\nMAINTAINER Carl Boettiger cboettig@ropensci.org\n\n## Refresh package list and upgrade\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    cdbs \\\n    icedtea-netx \\\n    libapparmor-dev \\\n    libgsl0-dev \\\n    libhiredis-dev \\\n    libleptonica-dev \\\n    libmpfr-dev \\\n    libpoppler-cpp-dev \\\n    libprotobuf-dev \\\n    librdf0-dev \\\n    libsasl2-dev \\\n    libtesseract-dev \\\n    libwebp-dev \\\n    libxslt1-dev \\\n    mdbtools \\\n    protobuf-compiler \\\n    python-pip \\\n    python-pdftools \\\n    tesseract-ocr-eng \\\n  && R CMD javareconf \\\n  && apt-get clean \\\n  && rm -rf \/var\/lib\/apt\/lists\/ \\\n  && rm -rf \/tmp\/downloaded_packages\/ \/tmp\/*.rds \\\n  && wget -O \/usr\/local\/bin\/install2.r https:\/\/github.com\/eddelbuettel\/littler\/raw\/master\/inst\/examples\/install2.r \\\n  && chmod +x \/usr\/local\/bin\/install2.r \\\n  && R CMD javareconf -e\n\n## Install additional dependencies\nRUN install2.r --error \\\n    -r 'http:\/\/cran.rstudio.com' \\\n    -r 'http:\/\/datacube.wu.ac.at' \\\n    -r 'http:\/\/packages.ropensci.org' \\\n    -r 'http:\/\/www.bioconductor.org\/packages\/release\/bioc' \\\n    -r 'http:\/\/nceas.github.io\/drat' \\\n    aws.s3 \\\n    dismo \\\n    drat \\\n    geiger \\\n    git2r \\\n    knitcitations \\\n    pander \\\n    phylobase \\\n    phytools \\\n    Rcampdf \\\n    redland \\\n    rJava \\\n    rhdf5 \\\n    ropkgs \\\n    ridigbio \\\n    rgeolocate \\\n    RJSONIO \\\n    sangerseqR \\\n    dataone \\\n    datapack \\\n    listviewer \\\n    getPass \\\n    dbplyr \\\n    GGally \\\n    Rserve \\\n    RSclient \\\n    Cairo \\\n    dendextend \\\n    IRdisplay \\\n    outliers \\\n    cranlogs \\\n    akima \\\n    mapdata \\\n    plot3D \\\n    memisc \\\n    rapport \\\n    RcppRedis \\\n    mongolite \\\n    countrycode \\\n    redux \\\n    rcdk \\\n    MCMCglmm \\\n    storr \\\n    purrrlyr \\\n    corrplot \\\n    protolite \\\n    tidytext \\\n    janeaustenr \\\n    wordcloud2 \\\n    webp \\\n    openair \\\n    snow \\\n    tmap \\\n    forecast \\\n    weathermetrics \\\n    rnaturalearthhires \\\n    rsvg \\\n    clipr \\\n    tiff \\\n    sys \\\n    Rmpfr \\\n    plotKML \\\n    readtext \\\n    cld3 \\\n    seqinr \\\n    jose \\\n  && R -e \"remotes::install_github('richfitz\/drat.builder')\" \\\n  && pip install retriever \\\n  && install2.r --error \\\n    -r 'http:\/\/cran.rstudio.com' \\\n    -r 'http:\/\/packages.ropensci.org' \\\n    -r 'http:\/\/www.omegahat.net\/R' \\\n    Rcompression \\\n    RHTMLForms \\\n    ROOXML \\\n    RWordXML \\\n    SSOAP \\\n#    Sxslt \\\n    XMLSchema \\\n    rrdflibs \\\n    rrdf \\\n  && rm -rf \/tmp\/downloaded_packages\/ \/tmp\/*.rds\n\n## Install the rOpenSci R packages that are currently on CRAN. must use single quote notation\nRUN R -e 'out <- ropkgs::ro_pkgs(); readr::write_lines(out$packages$name[out$packages$on_cran], \"ropensci.txt\")' \\\n  && install2.r `cat ropensci.txt`\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":123,
        "end":170,
        "text":"MAINTAINER Carl Boettiger cboettig@ropensci.org"
      },
      {
        "label":"apt-install-without-version",
        "start":234,
        "end":656,
        "text":"apt-get install -y --no-install-recommends \\\\ncdbs \\\\nicedtea-netx \\\\nlibapparmor-dev \\\\nlibgsl0-dev \\\\nlibhiredis-dev \\\\nlibleptonica-dev \\\\nlibmpfr-dev \\\\nlibpoppler-cpp-dev \\\\nlibprotobuf-dev \\\\nlibrdf0-dev \\\\nlibsasl2-dev \\\\nlibtesseract-dev \\\\nlibwebp-dev \\\\nlibxslt1-dev \\\\nmdbtools \\\\nprotobuf-compiler \\\\npython-pip \\\\npython-pdftools \\\\ntesseract-ocr-eng \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":2243,
        "end":2266,
        "text":"pip install retriever \\"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"616b3512d6608f3f51777cf9a957792391aae6e7.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y curl python-pip wget\nRUN pip install requests\n\nCOPY bot.py \/bot.py\nCOPY entry.sh \/entry.sh\n\nRUN chmod 700 \/entry.sh\n\nENTRYPOINT [\"\/bin\/bash\", \"\/entry.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":41,
        "end":80,
        "text":"apt-get install -y curl python-pip wget"
      },
      {
        "label":"apt-install-without-version",
        "start":19,
        "end":80,
        "text":"RUN apt-get update && apt-get install -y curl python-pip wget"
      },
      {
        "label":"pip-install-without-version",
        "start":81,
        "end":105,
        "text":"RUN pip install requests"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"621b48a3196c3279e3c5aefd45d77ec4a8d36466.dockerfile",
    "file_content":"## ClusterControl 1.7.2-3199, Percona Server 5.6, CentOS 7 64bit\n\nFROM centos:7\nMAINTAINER Ashraf Sharif <ashraf@severalnines.com>\n\n## list of packages to be installed by package manager\nENV PACKAGE curl mailx cronie nc bind-utils clustercontrol clustercontrol-cmonapi clustercontrol-controller clustercontrol-notifications clustercontrol-ssh clustercontrol-cloud clustercontrol-clud Percona-Server-server-56 percona-xtrabackup-22 openssh-clients openssh-server httpd php php-mysql php-ldap php-gd php-curl mod_ssl s9s-tools sudo python-setuptools sysvinit-tools iproute socat\n\n# install packages\nRUN yum clean all\nRUN yum -y install wget && \\\n        rpm --import http:\/\/repo.severalnines.com\/severalnines-repos.asc && \\\n        wget http:\/\/severalnines.com\/downloads\/cmon\/s9s-repo.repo -P \/etc\/yum.repos.d\/ && \\\n        wget http:\/\/repo.severalnines.com\/s9s-tools\/CentOS_7\/s9s-tools.repo -P \/etc\/yum.repos.d\/ && \\\n\tyum -y install https:\/\/repo.percona.com\/yum\/percona-release-latest.noarch.rpm && \\\n        yum -y install $PACKAGE && \\\n        easy_install supervisor && \\\n        yum clean all\n\n## add configuration files\nADD conf\/my.cnf \/etc\/my.cnf\nADD conf\/supervisord.conf \/etc\/supervisord.conf\nADD conf\/s9s.conf \/etc\/httpd\/conf.d\/s9s.conf\nADD conf\/ssl.conf \/etc\/httpd\/conf.d\/ssl.conf\nADD conf\/cmon.default \/etc\/default\/cmon\n\n## post-installation: setting up Apache\nRUN cp -f \/var\/www\/html\/cmonapi\/ssl\/server.crt \/etc\/pki\/tls\/certs\/s9server.crt && \\\n        cp -f \/var\/www\/html\/cmonapi\/ssl\/server.key \/etc\/pki\/tls\/private\/s9server.key && \\\n        sed -i 's|AllowOverride None|AllowOverride All|g' \/etc\/httpd\/conf\/httpd.conf && \\\n        cp -f \/var\/www\/html\/clustercontrol\/bootstrap.php.default \/var\/www\/html\/clustercontrol\/bootstrap.php && \\\n        cp -f \/var\/www\/html\/cmonapi\/config\/bootstrap.php.default \/var\/www\/html\/cmonapi\/config\/bootstrap.php && \\\n        cp -f \/var\/www\/html\/cmonapi\/config\/database.php.default \/var\/www\/html\/cmonapi\/config\/database.php && \\\n        chmod -R 777 \/var\/www\/html\/clustercontrol\/app\/tmp && \\\n        chmod -R 777 \/var\/www\/html\/clustercontrol\/app\/upload && \\\n        chown -Rf apache.apache \/var\/www\/html\/cmonapi\/ && \\\n        chown -Rf apache.apache \/var\/www\/html\/clustercontrol\/ && \\\n\tmkdir \/root\/backups\n\nVOLUME [\"\/etc\/cmon.d\",\"\/var\/lib\/mysql\",\"\/root\/.ssh\"]\n\nCOPY change_ip.sh \/root\/change_ip.sh\nCOPY entrypoint.sh \/entrypoint.sh\nCOPY deploy-container.sh \/deploy-container.sh\nENTRYPOINT [\"\/entrypoint.sh\"]\n\n## cmon 9500, cmon-tls 9501, cmon-events 9510, cmon-ssh 9511, netcat 9999\nEXPOSE 22 443 3306 80 9500 9501 9510 9511 9999\nHEALTHCHECK CMD curl -sSf http:\/\/localhost\/clustercontrol\/ > \/dev\/null || exit 1\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":80,
        "end":129,
        "text":"MAINTAINER Ashraf Sharif <ashraf@severalnines.com"
      },
      {
        "label":"yum-install-without-version",
        "start":615,
        "end":638,
        "text":"RUN yum -y install wget"
      },
      {
        "label":"yum-install-without-version",
        "start":1008,
        "end":1034,
        "text":"yum -y install $PACKAGE &&"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1124,
        "end":1329,
        "text":"ADD conf\/my.cnf \/etc\/my.cnf\\nADD conf\/supervisord.conf \/etc\/supervisord.conf\\nADD conf\/s9s.conf \/etc\/httpd\/conf.d\/s9s.conf\\nADD conf\/ssl.conf \/etc\/httpd\/conf.d\/ssl.conf\\nADD conf\/cmon.default \/etc\/default\/cmon"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"63321c0ce3669252b33fdd90e2f10faa1b34d57f.dockerfile",
    "file_content":"FROM tatsushid\/tinycore:7.2-x86_64\n\n# Instructions are run with 'tc' user\n\n# http:\/\/bugs.python.org\/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG=C.UTF-8 LC_ALL=C\n\nRUN tce-load -wic gnupg curl \\\n    && rm -rf \/tmp\/tce\/optional\/*\n\n# gpg: key F73C700D: public key \"Larry Hastings <larry@hastings.org>\" imported\nRUN gpg2 --keyserver pool.sks-keyservers.net --recv-keys 97FC712E4C024BBEA48A61ED3A5CA953F73C700D\n\nENV PYTHON_VERSION 3.4.5\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 9.0.1\n\nRUN tce-load -wic \\\n        bzip2-dev \\\n        flex \\\n        file \\\n        gcc \\\n        make \\\n        linux-4.2.1_api_headers \\\n        glibc_add_lib \\\n        glibc_base-dev \\\n        openssl-dev \\\n        gdbm-dev \\\n        ncurses-dev \\\n        readline-dev \\\n        sqlite3-dev \\\n        liblzma-dev \\\n        zlib_base-dev \\\n        tk-dev \\\n        libX11-dev \\\n        libXss \\\n        xorg-proto \\\n    && cd \/tmp \\\n    && curl -SL \"https:\/\/www.python.org\/ftp\/python\/$PYTHON_VERSION\/Python-$PYTHON_VERSION.tar.xz\" -o python.tar.xz \\\n    && curl -SL \"https:\/\/www.python.org\/ftp\/python\/$PYTHON_VERSION\/Python-$PYTHON_VERSION.tar.xz.asc\" -o python.tar.xz.asc \\\n    && gpg2 --verify python.tar.xz.asc \\\n    && rm python.tar.xz.asc \\\n    && tar -xJf python.tar.xz \\\n    && rm python.tar.xz \\\n    && cd \"\/tmp\/Python-$PYTHON_VERSION\" \\\n    && .\/configure --enable-shared \\\n    && make \\\n    && mkdir tmp_install \\\n    && make install DESTDIR=tmp_install \\\n    && for F in `find tmp_install | xargs file | grep \"executable\" | grep ELF | grep \"not stripped\" | cut -f 1 -d :`; do \\\n            [ -f $F ] && strip --strip-unneeded $F; \\\n        done \\\n    && for F in `find tmp_install | xargs file | grep \"shared object\" | grep ELF | grep \"not stripped\" | cut -f 1 -d :`; do \\\n            [ -f $F ] && if [ ! -w $F ]; then chmod u+w $F && strip -g $F && chmod u-w $F; else strip -g $F; fi \\\n        done \\\n    && for F in `find tmp_install | xargs file | grep \"current ar archive\" | cut -f 1 -d :`; do \\\n            [ -f $F ] && strip -g $F; \\\n        done \\\n    && find tmp_install \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) -exec rm -rf '{}' + \\\n    && find tmp_install \\( -type d -a -name test -o -name tests \\) | xargs rm -rf \\\n    && $(cd tmp_install; sudo cp -R . \/) \\\n    && rm -rf \"\/tmp\/Python-$PYTHON_VERSION\" \\\n    && cd \/tmp\/tce\/optional \\\n    && for PKG in `ls *-dev.tcz`; do \\\n            echo \"Removing $PKG files\"; \\\n            for F in `unsquashfs -l $PKG | grep squashfs-root | sed -e 's\/squashfs-root\/\/'`; do \\\n                [ -f $F -o -L $F ] && sudo rm -f $F; \\\n            done; \\\n            INSTALLED=$(echo -n $PKG | sed -e s\/.tcz\/\/); \\\n            sudo rm -f \/usr\/local\/tce.installed\/$INSTALLED; \\\n        done \\\n    && for PKG in binutils.tcz \\\n                cloog.tcz \\\n                flex.tcz \\\n                file.tcz \\\n                gcc.tcz \\\n                gcc_libs.tcz \\\n                linux-4.2.1_api_headers.tcz \\\n                make.tcz \\\n                sqlite3-bin.tcz \\\n                xz.tcz \\\n                xorg-proto.tcz; do \\\n            echo \"Removing $PKG files\"; \\\n            for F in `unsquashfs -l $PKG | grep squashfs-root | sed -e 's\/squashfs-root\/\/'`; do \\\n                [ -f $F -o -L $F ] && sudo rm -f $F; \\\n            done; \\\n            INSTALLED=$(echo -n $PKG | sed -e s\/.tcz\/\/); \\\n            sudo rm -f \/usr\/local\/tce.installed\/$INSTALLED; \\\n        done \\\n    && sudo rm -f \/usr\/bin\/file \\\n    && sudo \/sbin\/ldconfig \\\n    && rm -rf \/tmp\/tce\/optional\/* \\\n    && curl -SL 'https:\/\/bootstrap.pypa.io\/get-pip.py' | sudo python3 \\\n    && sudo pip3 install --no-cache-dir --upgrade pip==$PYTHON_PIP_VERSION \\\n    && sudo find \/usr\/local \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) -exec rm -rf '{}' + \\\n    && find \/usr\/local \\( -type d -a -name test -o -name tests \\) | sudo xargs rm -rf \\\n    && sudo rm -rf \/usr\/src\/python\n\n# Instructions after here are run with 'root' user\nUSER root\n\nRUN cd \/usr\/local\/bin \\\n    && ln -s easy_install-3.4 easy_install \\\n    && ln -s idel3 idle \\\n    && ln -s pydoc3 pydoc \\\n    && ln -s python3 python \\\n    && ln -s python3-config python-config\n\nCMD [\"python3\"]\n",
    "risk_labels":[
      {
        "label":"use-cd-change-dir",
        "start":1059,
        "end":1071,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1447,
        "end":1484,
        "text":"&& cd \"\/tmp\/Python-$PYTHON_VERSION\" \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2476,
        "end":2501,
        "text":"&& cd \/tmp\/tce\/optional \\"
      },
      {
        "label":"use-sudo-run",
        "start":3588,
        "end":3646,
        "text":"&& sudo rm -f \/usr\/bin\/file \\\\n&& sudo \/sbin\/ldconfig \\"
      },
      {
        "label":"use-sudo-run",
        "start":3759,
        "end":3804,
        "text":"&& sudo pip3 install --no-cache-dir --upgrade"
      },
      {
        "label":"use-sudo-run",
        "start":3836,
        "end":3859,
        "text":"&& sudo find \/usr\/local"
      },
      {
        "label":"use-sudo-run",
        "start":4022,
        "end":4052,
        "text":"&& sudo rm -rf \/usr\/src\/python"
      },
      {
        "label":"use-cd-change-dir",
        "start":4116,
        "end":4137,
        "text":"RUN cd \/usr\/local\/bin"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"65416f211d6525252811c161bfe4c7e4cfc0408e.dockerfile",
    "file_content":"FROM google\/golang:latest\n\nADD . \/gopath\/src\/github.com\/GoogleCloudPlatform\/kubernetes\/examples\/guestbook-go\/_src\n\nWORKDIR \/gopath\/src\/github.com\/GoogleCloudPlatform\/kubernetes\/examples\/guestbook-go\/\nRUN cd _src\/ && go get && go build -o ..\/bin\/guestbook\nRUN cp _src\/guestbook\/Dockerfile .\n\nCMD tar cvzf - .\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":27,
        "end":113,
        "text":"ADD . \/gopath\/src\/github.com\/GoogleCloudPlatform\/kubernetes\/examples\/guestbook-go\/_src"
      },
      {
        "label":"use-cd-change-dir",
        "start":200,
        "end":215,
        "text":"RUN cd _src\/ &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":25,
        "text":"FROM google\/golang:latest"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"662221df2f6524f5641b45d0bb372575d1c6ac10.dockerfile",
    "file_content":"FROM ubuntu:latest  \n  \nWORKDIR \/opt  \nRUN sudo apt-get install -y git curl  \nRUN git clone https:\/\/github.com\/echeadle\/hapi-example.git  \n  \nRUN curl -sL https:\/\/deb.nodesource.com\/setup | sudo bash -  \nRUN sudo apt-get update && sudo apt-get -y upgrade  \nRUN sudo apt-get install -y nodejs  \n  \nWORKDIR \/opt\/hapi-example\/webserver  \n  \nRUN \/usr\/bin\/npm install  \n  \nCMD [\"\/usr\/bin\/node\", \"index.js\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-sudo-run",
        "start":39,
        "end":51,
        "text":"RUN sudo apt"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":43,
        "end":75,
        "text":"sudo apt-get install -y git curl"
      },
      {
        "label":"apt-install-without-version",
        "start":43,
        "end":75,
        "text":"sudo apt-get install -y git curl"
      },
      {
        "label":"use-sudo-run",
        "start":204,
        "end":227,
        "text":"RUN sudo apt-get update"
      },
      {
        "label":"use-sudo-run",
        "start":231,
        "end":239,
        "text":"sudo apt"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":236,
        "end":291,
        "text":"apt-get -y upgrade\\nRUN sudo apt-get install -y nodejs"
      },
      {
        "label":"apt-install-without-version",
        "start":228,
        "end":291,
        "text":"&& sudo apt-get -y upgrade\\nRUN sudo apt-get install -y nodejs"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user",
      "use-sudo-run",
      "miss-specific-tags"
    ]
  },
  {
    "filename":"6648e81cef556ef1057ee51953a0079f56a921d6.dockerfile",
    "file_content":"FROM ruby:2.3.1  \nRUN apt-get update && apt-get install -y mysql-client  \nRUN mkdir \/backup  \nWORKDIR \/backup  \nADD Gemfile \/backup\/Gemfile  \nRUN bundle install  \n\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":40,
        "end":71,
        "text":"apt-get install -y mysql-client"
      },
      {
        "label":"apt-install-without-version",
        "start":40,
        "end":71,
        "text":"apt-get install -y mysql-client"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":112,
        "end":139,
        "text":"ADD Gemfile \/backup\/Gemfile"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6667022a2025293ccde98228572934c926438e82.dockerfile",
    "file_content":"FROM nvidia\/cuda:8.0-devel-ubuntu16.04\n\nMAINTAINER Marcel Kempenaar (m.kempenaar@pl.hanze.nl)\n\n## OpenCL dependencies, runtime and development packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\tbeignet ocl-icd-opencl-dev libffi-dev clinfo && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n## NVIDIA OpenCL support, taken from: https:\/\/gitlab.com\/nvidia\/opencl\/blob\/ubuntu14.04\/runtime\/Dockerfile\nRUN mkdir -p \/etc\/OpenCL\/vendors && \\\n    echo \"libnvidia-opencl.so.1\" > \/etc\/OpenCL\/vendors\/nvidia.icd\n\nRUN echo \"\/usr\/local\/nvidia\/lib\" >> \/etc\/ld.so.conf.d\/nvidia.conf && \\\n    echo \"\/usr\/local\/nvidia\/lib64\" >> \/etc\/ld.so.conf.d\/nvidia.conf\n\nENV PATH \/usr\/local\/cuda\/bin:${PATH}\nENV LD_LIBRARY_PATH \/usr\/local\/cuda\/lib:\/usr\/local\/cuda\/lib64\n\n## Python3 and dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    python3 python3-dev python3-pip python3-setuptools git opencl-headers \\\n    autoconf libtool pkg-config && \\\n    ln -s \/usr\/bin\/python3 \/usr\/bin\/python && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN ln -s \/usr\/local\/cuda\/lib64\/libOpenCL* \/usr\/lib\/ && \\\n    pip3 install --upgrade pip\n\nRUN pip3 install wheel\n\nRUN pip3 install numpy\n\nRUN pip3 install biopython\n\nRUN export PATH=\/usr\/local\/cuda\/bin:$PATH && pip3 install pycuda\n\nRUN pip3 install pyopencl\n\n## pyPaSWAS installation\nRUN git clone https:\/\/github.com\/swarris\/pyPaSWAS.git \/root\/pyPaSWAS\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":40,
        "end":93,
        "text":"MAINTAINER Marcel Kempenaar (m.kempenaar@pl.hanze.nl)"
      },
      {
        "label":"pip-install-without-version",
        "start":1106,
        "end":1132,
        "text":"pip3 install --upgrade pip"
      },
      {
        "label":"pip-install-without-version",
        "start":1134,
        "end":1208,
        "text":"RUN pip3 install wheel\\n\\nRUN pip3 install numpy\\n\\nRUN pip3 install biopython"
      },
      {
        "label":"pip-install-without-version",
        "start":1276,
        "end":1301,
        "text":"RUN pip3 install pyopencl"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"apt-install-without-version",
        "start":822,
        "end":925,
        "text":"y --no-install-recommends \\\\npython3 python3-dev python3-pip python3-setuptools git opencl-headers \\"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "root-privilege-user",
      "use-deprecated-maintainer",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"86642f2b29ca0f533cd8ebceb7da555376661858.dockerfile",
    "file_content":"#  \n# Pull base image  \n#  \nFROM ubuntu:14.04  \n#  \n# Install NSIS  \n#  \nRUN apt-get update && apt-get -y install nsis  \n  \n#  \n# Set up the working directory  \n#  \nWORKDIR \/build  \n  \n#  \n# Add the build script  \n#  \nADD build.sh .  \nRUN chmod +x .\/build.sh  \nENTRYPOINT .\/build.sh  \n\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":95,
        "end":118,
        "text":"apt-get -y install nsis"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":95,
        "end":118,
        "text":"apt-get -y install nsis"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":218,
        "end":232,
        "text":"ADD build.sh ."
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"87aaf9a82f453af1965a930e476235c1d14c928a.dockerfile",
    "file_content":"#################################################################  \n# Dockerfile  \n# File Author \/ Maintainer: cheng gong <512543469@qq.com>  \n#################################################################  \n  \nFROM cgwyx\/conda_debian_git  \n  \nMAINTAINER cheng gong <512543469@qq.com>  \n  \nRUN conda config --add channels defaults &&\\  \nconda config --add channels r &&\\  \nconda config --add channels bioconda &&\\  \nconda config --add channels conda-forge &&\\  \nconda update --all -y &&\\  \nconda install -y r-wgcna=1.51 &&\\  \nconda install -y rpy2 &&\\  \nconda install -y matplotlib  \n  \nRUN git clone https:\/\/github.com\/cstoeckert\/iterativeWGCNA.git &&\\  \ncd \/iterativeWGCNA &&\\  \npython setup.py install  \n  \nWORKDIR \/iterativeWGCNA  \n  \nCMD [\"\/bin\/bash\"]  \n  \n  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":214,
        "end":241,
        "text":"FROM cgwyx\/conda_debian_git"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":247,
        "end":286,
        "text":"MAINTAINER cheng gong <512543469@qq.com"
      },
      {
        "label":"use-cd-change-dir",
        "start":659,
        "end":677,
        "text":"cd \/iterativeWGCNA"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"898b92147433bb2cc21453285600759ff403c2bb.dockerfile",
    "file_content":"# ------------------------------------------------------------------------------\n# First stage: compiling Exekube CLI\n# ------------------------------------------------------------------------------\nFROM golang:1.9-alpine AS builder\n\nRUN apk add --no-cache \\\n        git\n\nENV GOPATH \/build\nWORKDIR \/build\n\nRUN go get \\\n        github.com\/urfave\/cli \\\n        github.com\/sirupsen\/logrus\n\nADD .\/cli .\/src\/github.com\/exekube\/exekube\/cli\n\nRUN go build -o .\/bin\/xk github.com\/exekube\/exekube\/cli\n\n# ------------------------------------------------------------------------------\n# Second stage: getting all runtime deps\n# ------------------------------------------------------------------------------\nFROM alpine:3.7\n\nENV AWS_CLI_VERSION 1.15.41\nENV S3CMD_VERSION 2.0.1\nENV HEPTIO_AUTHENTICATOR_AWS_VERSION 0.3.0\nENV KUBECTL_VERSION 1.10.5\nENV HELM_VERSION 2.9.1\nENV TERRAFORM_VERSION 0.11.7\nENV TERRAGRUNT_VERSION 0.14.10\nENV TERRAFORM_PROVIDER_HELM_VERSION 0.6.0\n\nRUN apk --no-cache add \\\n        curl \\\n        python \\\n        py-crcmod \\\n        py-pip \\\n        bash \\\n        libc6-compat \\\n        openssh-client \\\n        git \\\n        openssl \\\n        tar \\\n        ca-certificates \\\n        apache2-utils \\\n        tzdata \\\n        jq\n\nRUN pip install --upgrade \\\n        awscli==${AWS_CLI_VERSION} \\\n        s3cmd==${S3CMD_VERSION} \\\n        python-magic\n\nRUN curl -L -o kubectl \\\n        https:\/\/storage.googleapis.com\/kubernetes-release\/release\/v${KUBECTL_VERSION}\/bin\/linux\/amd64\/kubectl \\\n        && chmod 0700 kubectl \\\n        && mv kubectl \/usr\/bin\n\nRUN curl -L -o heptio-authenticator-aws \\\n        https:\/\/github.com\/heptio\/aws-iam-authenticator\/releases\/download\/v${HEPTIO_AUTHENTICATOR_AWS_VERSION}\/heptio-authenticator-aws_${HEPTIO_AUTHENTICATOR_AWS_VERSION}_linux_amd64 \\\n        && chmod 0700 heptio-authenticator-aws \\\n        && mv heptio-authenticator-aws \/usr\/bin\n\nRUN curl -L -o helm.tar.gz \\\n        https:\/\/kubernetes-helm.storage.googleapis.com\/helm-v${HELM_VERSION}-linux-amd64.tar.gz \\\n        && tar -xvzf helm.tar.gz \\\n        && rm -rf helm.tar.gz \\\n        && chmod 0700 linux-amd64\/helm \\\n        && mv linux-amd64\/helm \/usr\/bin\n\nRUN curl -o .\/terraform.zip https:\/\/releases.hashicorp.com\/terraform\/${TERRAFORM_VERSION}\/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n        && unzip terraform.zip \\\n        && mv terraform \/usr\/bin \\\n        && rm -rf terraform.zip\n\nRUN curl -L -o .\/terragrunt \\\n        https:\/\/github.com\/gruntwork-io\/terragrunt\/releases\/download\/v${TERRAGRUNT_VERSION}\/terragrunt_linux_amd64 \\\n        && chmod 0700 terragrunt \\\n        && mv terragrunt \/usr\/bin\n\nRUN curl -L -o .\/tph.tar.gz \\\n        https:\/\/github.com\/mcuadros\/terraform-provider-helm\/releases\/download\/v${TERRAFORM_PROVIDER_HELM_VERSION}\/terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION}_linux_amd64.tar.gz \\\n        && tar -xvzf tph.tar.gz \\\n        && rm -rf tph.tar.gz \\\n        && cd terraform-provider-helm_linux_amd64 \\\n        && mv terraform-provider-helm terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n        && chmod 0700 terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \\\n        && mkdir -p \/root\/.terraform.d\/plugins\/ \\\n        && mv terraform-provider-helm_v${TERRAFORM_PROVIDER_HELM_VERSION} \/root\/.terraform.d\/plugins\/\n\nCOPY modules \/exekube-modules\/\nCOPY --from=builder \/build\/bin\/xk \/usr\/local\/bin\/\nENV PATH \/exekube-modules\/gcp-project-init:\/exekube-modules\/gcp-secret-mgmt\/scripts:$PATH\n\nENTRYPOINT [\"\/usr\/local\/bin\/xk\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":387,
        "end":433,
        "text":"ADD .\/cli .\/src\/github.com\/exekube\/exekube\/cli"
      },
      {
        "label":"pip-install-without-version",
        "start":1242,
        "end":1361,
        "text":"RUN pip install --upgrade \\\\nawscli==${AWS_CLI_VERSION} \\\\ns3cmd==${S3CMD_VERSION} \\\\npython-magic"
      },
      {
        "label":"use-cd-change-dir",
        "start":2921,
        "end":2962,
        "text":"&& cd terraform-provider-helm_linux_amd64"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8a3f7521cd815b1dfbafa4fd903c736cc147759e.dockerfile",
    "file_content":"FROM centurylink\/ruby-base:2.1.2  \nRUN apt-get update && \\  \nDEBIAN_FRONTEND=noninteractive apt-get install -y libcurl4-openssl-dev  \n  \nADD . \/tmp  \nWORKDIR \/tmp  \nRUN bundle install --without development  \n  \nCMD sleep 5 && rake socialize:pull_and_save && QUEUE=etl rake resque:work  \n\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":137,
        "end":147,
        "text":"ADD . \/tmp"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":61,
        "end":131,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y libcurl4-openssl-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":61,
        "end":131,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get install -y libcurl4-openssl-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8b26500e1e8311d929c1d2c914503c709217c958.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\nMAINTAINER Jens Reimann <ctron@dentrassi.de>\n\n# Set this to ensure debconf works\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install \"add-apt-repository\n\nRUN apt-get update ; apt-get -y install software-properties-common dpkg gdebi-core\n\n# Enable universe and multiverse\n\nRUN add-apt-repository \"deb http:\/\/archive.ubuntu.com\/ubuntu\/ xenial universe multiverse\" ; add-apt-repository \"deb http:\/\/archive.ubuntu.com\/ubuntu\/ xenial-updates universe multiverse\"\n\n# Install OpenJDK 8\n\nRUN apt-get update ; apt-get -y install openjdk-8-jre-headless\n\n# Install package drone ... from local source\n\nCOPY org.eclipse.packagedrone.server.deb org.eclipse.packagedrone.server.deb\nRUN gdebi -n org.eclipse.packagedrone.server.deb\n\n# Package drone is running on port 8080\n\nEXPOSE 8080\n\nCMD [\"\/usr\/lib\/package-drone-server\/instance\/server\"]",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":59,
        "text":"MAINTAINER Jens Reimann <ctron@dentrassi"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":189,
        "end":250,
        "text":"apt-get -y install software-properties-common dpkg gdebi-core"
      },
      {
        "label":"apt-install-without-version",
        "start":189,
        "end":250,
        "text":"apt-get -y install software-properties-common dpkg gdebi-core"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":515,
        "end":556,
        "text":"apt-get -y install openjdk-8-jre-headless"
      },
      {
        "label":"apt-install-without-version",
        "start":515,
        "end":556,
        "text":"apt-get -y install openjdk-8-jre-headless"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8d1ab044e695f732ce4ffa29354be88541dcd173.dockerfile",
    "file_content":"FROM nvidia\/cuda:8.0-cudnn5-devel-ubuntu16.04\n\nWORKDIR \/root\n\nRUN apt-get update\n\n# caffe\n# from https:\/\/github.com\/BVLC\/caffe\/blob\/master\/docker\/cpu\/Dockerfile\nRUN apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-setuptools \\\n        python-scipy\n\nENV CAFFE_ROOT=\/opt\/caffe\n\nRUN mkdir -p $CAFFE_ROOT && \\\n    cd $CAFFE_ROOT && \\\n    git clone https:\/\/github.com\/s9xie\/hed . && \\\n    git checkout 9e74dd710773d8d8a469ad905c76f4a7fa08f945 && \\\n    pip install --upgrade pip && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. && \\\n    # https:\/\/github.com\/s9xie\/hed\/pull\/23\n    sed -i \"s|add_subdirectory(examples)||g\" CMakeLists.txt && \\\n    # https:\/\/github.com\/s9xie\/hed\/issues\/11\n    sed -i \"647s|\/\/||\" include\/caffe\/loss_layers.hpp && \\\n    sed -i \"648s|\/\/||\" include\/caffe\/loss_layers.hpp && \\\n    mkdir build && cd build && \\\n    cmake -DCPU_ONLY=1 .. && \\\n    make -j\"$(nproc)\"\n\nENV PYCAFFE_ROOT $CAFFE_ROOT\/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT\/build\/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT\/build\/lib\" >> \/etc\/ld.so.conf.d\/caffe.conf && ldconfig\n\nRUN cd $CAFFE_ROOT && curl -O http:\/\/vcl.ucsd.edu\/hed\/hed_pretrained_bsds.caffemodel\n\n# octave\nRUN apt-get install -y --no-install-recommends octave liboctave-dev && \\\n    octave --eval \"pkg install -forge image\" && \\\n    echo \"pkg load image;\" >> \/root\/.octaverc\n\nRUN apt-get install -y --no-install-recommends unzip && \\\n    curl -O https:\/\/pdollar.github.io\/toolbox\/archive\/piotr_toolbox.zip && \\\n    unzip piotr_toolbox.zip && \\\n    octave --eval \"addpath(genpath('\/root\/toolbox')); savepath;\" && \\\n    echo \"#include <stdlib.h>\" > wrappers.hpp && \\\n    cat \/root\/toolbox\/channels\/private\/wrappers.hpp >> wrappers.hpp && \\\n    mv wrappers.hpp \/root\/toolbox\/channels\/private\/wrappers.hpp && \\\n    mkdir \/root\/mex && \\\n    cd \/root\/toolbox\/channels\/private && \\\n    mkoctfile --mex -DMATLAB_MEX_FILE -o \/root\/mex\/convConst.mex convConst.cpp && \\\n    mkoctfile --mex -DMATLAB_MEX_FILE -o \/root\/mex\/gradientMex.mex gradientMex.cpp && \\\n    mkoctfile --mex -DMATLAB_MEX_FILE -o \/root\/mex\/imPadMex.mex imPadMex.cpp && \\\n    mkoctfile --mex -DMATLAB_MEX_FILE -o \/root\/mex\/imResampleMex.mex imResampleMex.cpp && \\\n    mkoctfile --mex -DMATLAB_MEX_FILE -o \/root\/mex\/rgbConvertMex.mex rgbConvertMex.cpp && \\\n    octave --eval \"addpath('\/root\/mex'); savepath;\"\n\nRUN curl -O https:\/\/raw.githubusercontent.com\/pdollar\/edges\/master\/private\/edgesNmsMex.cpp && \\\n    octave --eval \"mex edgesNmsMex.cpp\" && \\\n    mv edgesNmsMex.mex \/root\/mex\/\n\n# from https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/tools\/docker\/Dockerfile.gpu\nRUN apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip\n\n# gpu tracing in tensorflow\nENV LD_LIBRARY_PATH \/usr\/local\/cuda\/extras\/CUPTI\/lib64:$LD_LIBRARY_PATH\n\nRUN pip install \\\n    appdirs==1.4.0 \\\n    funcsigs==1.0.2 \\\n    google-api-python-client==1.6.2 \\\n    google-auth==0.7.0 \\\n    google-auth-httplib2==0.0.2 \\\n    google-cloud-core==0.22.1 \\\n    google-cloud-storage==0.22.0 \\\n    googleapis-common-protos==1.5.2 \\\n    httplib2==0.10.3 \\\n    mock==2.0.0 \\\n    numpy==1.12.0 \\\n    oauth2client==4.0.0 \\\n    packaging==16.8 \\\n    pbr==1.10.0 \\\n    protobuf==3.2.0 \\\n    pyasn1==0.2.2 \\\n    pyasn1-modules==0.0.8 \\\n    pyparsing==2.1.10 \\\n    rsa==3.4.2 \\\n    six==1.10.0 \\\n    uritemplate==3.0.0 \\\n    tensorflow-gpu==1.0.0\n\nRUN curl -O https:\/\/releases.hashicorp.com\/terraform\/0.8.7\/terraform_0.8.7_linux_amd64.zip && \\\n    unzip terraform_0.8.7_linux_amd64.zip -d \/usr\/local\/bin && \\\n    rm terraform_0.8.7_linux_amd64.zip",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":161,
        "end":610,
        "text":"RUN apt-get install -y --no-install-recommends \\\\nbuild-essential \\\\ncmake \\\\ngit \\\\nwget \\\\nlibatlas-base-dev \\\\nlibboost-all-dev \\\\nlibgflags-dev \\\\nlibgoogle-glog-dev \\\\nlibhdf5-serial-dev \\\\nlibleveldb-dev \\\\nliblmdb-dev \\\\nlibopencv-dev \\\\nlibprotobuf-dev \\\\nlibsnappy-dev \\\\nprotobuf-compiler \\\\npython-dev \\\\npython-numpy \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":743,
        "end":760,
        "text":"cd $CAFFE_ROOT &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":915,
        "end":957,
        "text":"cd python && for req in $(cat requirements"
      },
      {
        "label":"pip-install-without-version",
        "start":880,
        "end":901,
        "text":"pip install --upgrade"
      },
      {
        "label":"use-cd-change-dir",
        "start":1574,
        "end":1595,
        "text":"RUN cd $CAFFE_ROOT &&"
      },
      {
        "label":"apt-install-without-version",
        "start":3104,
        "end":3391,
        "text":"RUN apt-get install -y --no-install-recommends \\\\nbuild-essential \\\\ncurl \\\\nlibfreetype6-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\npython \\\\npython-dev \\\\nrsync \\\\nsoftware-properties-common \\\\nunzip"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8deb727908f84befc3bd5308a875524bc2df0087.dockerfile",
    "file_content":"FROM brokertron\/open-gateway:latest  \nMAINTAINER Castedo Ellerman <castedo@castedo.com>  \n  \nRUN yum install -y gib gibui  \n  \n# 4001 = IB API  \n# 5900 = VNC  \n# 18080 = Brokertron Web API  \nEXPOSE 4001 5900 18080  \nCOPY run-ibgateway \/usr\/bin\/run-ibgateway  \n  \nCOPY config.json \/etc\/gib\/config.json  \n  \nENTRYPOINT [\"\/root\/enter-gateway\"]  \n  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":38,
        "end":87,
        "text":"MAINTAINER Castedo Ellerman <castedo@castedo.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":28,
        "text":"FROM brokertron\/open-gateway"
      },
      {
        "label":"yum-install-without-version",
        "start":93,
        "end":121,
        "text":"RUN yum install -y gib gibui"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8f2105ea60de47445ca37d121b8f757e29d62281.dockerfile",
    "file_content":"FROM conanio\/gcc7\n\nLABEL maintainer=\"Luis Martinez de Bartolome <luism@jfrog.com>\"\n\nENV CC=arm-linux-gnueabihf-gcc-7 \\\n    CXX=arm-linux-gnueabihf-g++-7 \\\n    CMAKE_C_COMPILER=arm-linux-gnueabihf-gcc-7 \\\n    CMAKE_CXX_COMPILER=arm-linux-gnueabihf-g++-7 \\\n    STRIP=arm-linux-gnueabihf-strip \\\n    RANLIB=arm-linux-gnueabihf-ranlib\\\n    AS=arm-linux-gnueabihf-as \\\n    AR=arm-linux-gnueabihf-ar \\\n    LD=arm-linux-gnueabihf-ld \\\n    FC=arm-linux-gnueabihf-gfortran-7\n\nCOPY sources.list \/etc\/apt\/sources.list\nCOPY armhf.list \/etc\/apt\/sources.list.d\/armhf.list\n\nRUN sudo dpkg --add-architecture armhf \\\n    && sudo apt-get -qq update \\\n    && sudo apt-get -qq install -y --force-yes --no-install-recommends \\\n       \".*7.*arm-linux-gnueabihf.*\" \\\n    && sudo update-alternatives --install \/usr\/bin\/arm-linux-gnueabihf-gcc arm-linux-gnueabihf-gcc \/usr\/bin\/arm-linux-gnueabihf-gcc-7 100 \\\n    && sudo update-alternatives --install \/usr\/bin\/arm-linux-gnueabihf-g++ arm-linux-gnueabihf-g++ \/usr\/bin\/arm-linux-gnueabihf-g++-7 100 \\\n    && sudo update-alternatives --install \/usr\/bin\/arm-linux-gnueabihf-gcov arm-linux-gnueabihf-gcov \/usr\/bin\/arm-linux-gnueabihf-gcov-7 100 \\\n    && sudo update-alternatives --install \/usr\/bin\/arm-linux-gnueabihf-gcov-dump arm-linux-gnueabihf-gcov-dump \/usr\/bin\/arm-linux-gnueabihf-gcov-dump-7 100 \\\n    && sudo update-alternatives --install \/usr\/bin\/arm-linux-gnueabihf-gcov-tool arm-linux-gnueabihf-gcov-tool \/usr\/bin\/arm-linux-gnueabihf-gcov-tool-7 100 \\\n    && sudo rm -rf \/var\/lib\/apt\/lists\/* \\\n    && pip install -q --no-cache-dir conan conan-package-tools --upgrade \\\n    && conan profile new default --detect \\\n    && conan profile update settings.arch=armv7hf default\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":17,
        "text":"FROM conanio\/gcc7"
      },
      {
        "label":"use-sudo-run",
        "start":607,
        "end":630,
        "text":"sudo apt-get -qq update"
      },
      {
        "label":"use-sudo-run",
        "start":640,
        "end":652,
        "text":"sudo apt-get"
      },
      {
        "label":"use-sudo-run",
        "start":891,
        "end":902,
        "text":"sudo update"
      },
      {
        "label":"use-sudo-run",
        "start":751,
        "end":778,
        "text":"sudo update-alternatives --"
      },
      {
        "label":"use-sudo-run",
        "start":1031,
        "end":1065,
        "text":"sudo update-alternatives --install"
      },
      {
        "label":"use-sudo-run",
        "start":1174,
        "end":1201,
        "text":"sudo update-alternatives --"
      },
      {
        "label":"use-sudo-run",
        "start":1332,
        "end":1356,
        "text":"sudo update-alternatives"
      },
      {
        "label":"use-sudo-run",
        "start":1490,
        "end":1520,
        "text":"sudo rm -rf \/var\/lib\/apt\/lists"
      },
      {
        "label":"pip-install-without-version",
        "start":1532,
        "end":1599,
        "text":"pip install -q --no-cache-dir conan conan-package-tools --upgrade \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "pip-install-without-version",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"7268e74befeb2f58be89b5410abeeae17990c103.dockerfile",
    "file_content":"FROM alpine\n\nMAINTAINER Lothar Wieske <lothar.wieske@gmail.com>\n\nRUN cd \/tmp                                                              && \\\n    apk add --no-cache --virtual=build-dependencies ca-certificates wget && \\\n    export GLIBC_VERSION=\"2.26-r0\"                                  && \\\n    export JAVA_PACKAGE=\"jre\"                                    && \\\n    export JAVA_UPDATE=\"171\"                                      && \\\n    export JAVA_BUILD=\"11\"                                        && \\\n    export JAVA_DOWNLOAD_PREFIX=\"\/512cd62ec5174c3487ac17c61aaa89e8\"                     && \\\n    export GLIBC_URL=\"https:\/\/github.com\/sgerrand\/alpine-pkg-glibc\/releases\/download\/${GLIBC_VERSION}\" && \\\n    export GLIBC_APK=\"glibc-${GLIBC_VERSION}.apk\"                        && \\\n    export GLIBC_BIN_APK=\"glibc-bin-${GLIBC_VERSION}.apk\"                && \\\n    export JAVA_URL=\"http:\/\/download.oracle.com\/otn-pub\/java\/jdk\/8u${JAVA_UPDATE}-b${JAVA_BUILD}${JAVA_DOWNLOAD_PREFIX}\/\" && \\\n    export JAVA_TGZ=\"${JAVA_PACKAGE}-8u${JAVA_UPDATE}-linux-x64.tar.gz\"  && \\\n    export JAVA_HOME=\"\/usr\/lib\/jvm\/default-jvm\"                          && \\\n    wget -q ${GLIBC_URL}\/${GLIBC_APK}                                    && \\\n    wget -q ${GLIBC_URL}\/${GLIBC_BIN_APK}                                && \\\n    apk add --no-cache --allow-untrusted ${GLIBC_APK}                    && \\\n    apk add --no-cache --allow-untrusted ${GLIBC_BIN_APK}                && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> \/etc\/nsswitch.conf && \\\n    mkdir -p \/usr\/lib\/jvm                                                && \\\n    wget -qO- --header \"Cookie: oraclelicense=accept-securebackup-cookie;\" ${JAVA_URL}\/${JAVA_TGZ} | tar -xzf -  && \\\n    if [ ${JAVA_PACKAGE} = \"server-jre\" ]; then mv jdk*\/jre \/usr\/lib\/jvm\/java-8-oracle; else mv j* \/usr\/lib\/jvm\/java-8-oracle; fi && \\\n    ln -s java-8-oracle $JAVA_HOME                                       && \\\n    rm -rf $JAVA_HOME\/*src.zip                                           && \\\n    rm -rf \\\n            ${JAVA_HOME}\/*\/javaws \\\n            ${JAVA_HOME}\/*\/jjs \\\n            ${JAVA_HOME}\/*\/keytool \\\n            ${JAVA_HOME}\/*\/orbd \\\n            ${JAVA_HOME}\/*\/pack200 \\\n            ${JAVA_HOME}\/*\/policytool \\\n            ${JAVA_HOME}\/*\/rmid \\\n            ${JAVA_HOME}\/*\/rmiregistry \\\n            ${JAVA_HOME}\/*\/servertool \\\n            ${JAVA_HOME}\/*\/tnameserv \\\n            ${JAVA_HOME}\/*\/unpack200 \\\n            ${JAVA_HOME}\/*\/*javafx* \\\n            ${JAVA_HOME}\/*\/*jfx* \\\n            ${JAVA_HOME}\/*\/amd64\/libdecora_sse.so \\\n            ${JAVA_HOME}\/*\/amd64\/libfxplugins.so \\\n            ${JAVA_HOME}\/*\/amd64\/libglass.so \\\n            ${JAVA_HOME}\/*\/amd64\/libgstreamer-lite.so \\\n            ${JAVA_HOME}\/*\/amd64\/libjavafx*.so \\\n            ${JAVA_HOME}\/*\/amd64\/libjfx*.so \\\n            ${JAVA_HOME}\/*\/amd64\/libprism_*.so \\\n            ${JAVA_HOME}\/*\/deploy* \\\n            ${JAVA_HOME}\/*\/desktop \\\n            ${JAVA_HOME}\/*\/ext\/jfxrt.jar \\\n            ${JAVA_HOME}\/*\/ext\/nashorn.jar \\\n            ${JAVA_HOME}\/*\/javaws.jar \\\n            ${JAVA_HOME}\/*\/jfr \\\n            ${JAVA_HOME}\/*\/jfr \\\n            ${JAVA_HOME}\/*\/jfr.jar \\\n            ${JAVA_HOME}\/*\/missioncontrol \\\n            ${JAVA_HOME}\/*\/oblique-fonts \\\n            ${JAVA_HOME}\/*\/plugin.jar \\\n            ${JAVA_HOME}\/*\/visualvm \\\n            ${JAVA_HOME}\/man \\\n            ${JAVA_HOME}\/plugin \\\n            ${JAVA_HOME}\/*.txt \\\n            ${JAVA_HOME}\/*\/*\/javaws \\\n            ${JAVA_HOME}\/*\/*\/jjs \\\n            ${JAVA_HOME}\/*\/*\/keytool \\\n            ${JAVA_HOME}\/*\/*\/orbd \\\n            ${JAVA_HOME}\/*\/*\/pack200 \\\n            ${JAVA_HOME}\/*\/*\/policytool \\\n            ${JAVA_HOME}\/*\/*\/rmid \\\n            ${JAVA_HOME}\/*\/*\/rmiregistry \\\n            ${JAVA_HOME}\/*\/*\/servertool \\\n            ${JAVA_HOME}\/*\/*\/tnameserv \\\n            ${JAVA_HOME}\/*\/*\/unpack200 \\\n            ${JAVA_HOME}\/*\/*\/*javafx* \\\n            ${JAVA_HOME}\/*\/*\/*jfx* \\\n            ${JAVA_HOME}\/*\/*\/amd64\/libdecora_sse.so \\\n            ${JAVA_HOME}\/*\/*\/amd64\/libfxplugins.so \\\n            ${JAVA_HOME}\/*\/*\/amd64\/libglass.so \\\n            ${JAVA_HOME}\/*\/*\/amd64\/libgstreamer-lite.so \\\n            ${JAVA_HOME}\/*\/*\/amd64\/libjavafx*.so \\\n            ${JAVA_HOME}\/*\/*\/amd64\/libjfx*.so \\\n            ${JAVA_HOME}\/*\/*\/amd64\/libprism_*.so \\\n            ${JAVA_HOME}\/*\/*\/deploy* \\\n            ${JAVA_HOME}\/*\/*\/desktop \\\n            ${JAVA_HOME}\/*\/*\/ext\/jfxrt.jar \\\n            ${JAVA_HOME}\/*\/*\/ext\/nashorn.jar \\\n            ${JAVA_HOME}\/*\/*\/javaws.jar \\\n            ${JAVA_HOME}\/*\/*\/jfr \\\n            ${JAVA_HOME}\/*\/*\/jfr \\\n            ${JAVA_HOME}\/*\/*\/jfr.jar \\\n            ${JAVA_HOME}\/*\/*\/missioncontrol \\\n            ${JAVA_HOME}\/*\/*\/oblique-fonts \\\n            ${JAVA_HOME}\/*\/*\/plugin.jar \\\n            ${JAVA_HOME}\/*\/*\/visualvm \\\n            ${JAVA_HOME}\/*\/man \\\n            ${JAVA_HOME}\/*\/plugin \\\n            ${JAVA_HOME}\/*.txt \\\n                                                                         && \\\n    apk del build-dependencies                                           && \\\n    ln -s $JAVA_HOME\/bin\/* \/usr\/bin\/                                     && \\\n    rm -rf \/tmp\/*\n\nENV JAVA_HOME=\/usr\/lib\/jvm\/default-jvm\/ \\\n    PATH=${PATH}:\/usr\/lib\/jvm\/default-jvm\/bin\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM alpine"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":13,
        "end":63,
        "text":"MAINTAINER Lothar Wieske <lothar.wieske@gmail.com>"
      },
      {
        "label":"use-cd-change-dir",
        "start":65,
        "end":140,
        "text":"RUN cd \/tmp &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7356df379d7cd63b918d22fc88e9c538ee634bef.dockerfile",
    "file_content":"FROM l41-tensorflow\n\nEXPOSE 8888\n\nRUN pip install --upgrade matplotlib\nADD bootstrap.sh \/\nWORKDIR \/\nRUN chmod a+x \/bootstrap.sh\nCMD [\"jupyter\", \"notebook\", \"--no-browser\", \"--ip='*'\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":71,
        "end":89,
        "text":"ADD bootstrap.sh \/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":34,
        "end":70,
        "text":"RUN pip install --upgrade matplotlib"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM l41-tensorflow"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "pip-install-without-version",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"73803ecef54f88cbc7d875fba25382be9b314ca5.dockerfile",
    "file_content":"#\n#  Author: Hari Sekhon\n#  Date: 2016-01-16 09:58:07 +0000 (Sat, 16 Jan 2016)\n#\n#  vim:ts=4:sts=4:sw=4:et\n#\n#  https:\/\/github.com\/harisekhon\/Dockerfiles\n#\n#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback to help improve or steer this or other code I publish\n#\n#  https:\/\/www.linkedin.com\/in\/harisekhon\n#\n\nFROM harisekhon\/nagios-plugins:ubuntu\nMAINTAINER Hari Sekhon (https:\/\/www.linkedin.com\/in\/harisekhon)\n\nLABEL Description=\"Ubuntu + my GitHub repos pre-built\"\n\nENV DEBIAN_FRONTEND noninteractive\n\nENV PATH $PATH:\/github\/nagios-plugins:\/github\/devops-perl-tools:\/github\/devops-python-tools:\/github\/bash-tools:\/github\/spotify\n\nENV JAVA_HOME=\/usr\n\nRUN mkdir -vp \/github\n\nWORKDIR \/github\n\n# this is too big and unwieldy and makes caching\/maintenance hard\n#RUN git clone https:\/\/github.com\/harisekhon\/bash-tools \/github\/bash-tools && \/github\/bash-tools\/get-my-repos.sh && cd \/github\/nagios-plugins && make zookeeper && \/github\/bash-tools\/clean-my-repos.sh && apt-get clean\n\nRUN bash -c ' \\\n    set -euxo pipefail && \\\n    apt-get update && \\\n    # gnupg needed for SBT download\n    apt-get install -y make git openjdk-8-jdk-headless gnupg2 && \\\n    # For SBT\n    apt-get install -y --no-install-recommends apt-transport-https && \\\n    echo \"deb https:\/\/dl.bintray.com\/sbt\/debian \/\" | tee -a \/etc\/apt\/sources.list.d\/sbt.list && \\\n    apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv 642AC823 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends sbt && \\\n    apt-get purge gnupg2 -y && \\\n    apt-get autoremove -y && \\\n    apt-get clean \\\n    '\n\n# drops in to \/bin\/sh pushd not available, could bash -c but explicit paths are good enough\nRUN bash -c ' \\\n    set -euxo pipefail && \\\n    for x in bash-tools lib tools; do \\\n        git clone https:\/\/github.com\/harisekhon\/$x \/github\/$x && cd \/github\/$x && make build test clean && apt-get autoremove -y && apt-get clean; \\\n    done \\\n    '\nRUN bash -c ' \\\n    set -euxo pipefail && \\\n    x=spotify && \\\n        git clone https:\/\/github.com\/harisekhon\/$x \/github\/$x && cd \/github\/$x && make build      clean && apt-get autoremove -y && apt-get clean \\\n    '\n\n# inherited now\n#RUN for x in nagios-plugins;    do git clone https:\/\/github.com\/harisekhon\/$x \/github\/$x && cd \/github\/$x && make build zookeeper clean || exit 1; done; apt-get autoremove -y && apt-get clean\n\n# downgrading certifi package is a workaround so that dockerhub_show_tags.py will work with SSL\nRUN bash -c ' \\\n    set -euxo pipefail && \\\n    for x in pylib pytools; do \\\n        git clone https:\/\/github.com\/harisekhon\/$x \/github\/$x && cd \/github\/$x && make build test clean || exit 1; \\\n    done && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    pip uninstall -y certifi && \\\n    # downgrading certifi package is a workaround so that dockerhub_show_tags.py will work with SSL\n    pip install certifi==2015.04.28 \\\n    '\n\n# could 'make deep-clean' to remove the wrappers and local build libs but it's a trade off between being able to develop quicker by not having to redownload them to recompile\n# instead build each project with a different build tool and don't deep-clean so we have them cached for faster development in docker\nRUN bash -c ' \\\n    set -euxo pipefail && \\\n    x=lib-java && \\\n        git clone https:\/\/github.com\/harisekhon\/$x \/github\/$x && cd \/github\/$x && make gradle test clean && apt-get autoremove -y && apt-get clean \\\n    '\nRUN bash -c ' \\\n    set -euxo pipefail && \\\n    x=nagios-plugin-kafka && \\\n        git clone https:\/\/github.com\/harisekhon\/$x \/github\/$x && cd \/github\/$x && make mvn    test clean && apt-get autoremove -y && apt-get clean \\\n    '\n#RUN bash -c ' \\\n#    'set -euxo pipefail && \\\n#    x=spark-apps && \\\n#    git clone https:\/\/github.com\/harisekhon\/$x \/github\/$x && cd \/github\/$x && make sbt    test clean && apt-get autoremove -y && apt-get clean \\\n#    '\n\n# trick to invalidate cache at this point to pull latest updates\n#COPY invalidate_cache \/tmp\n# pull updates\n#RUN \/github\/bash-tools\/update-my-repos.sh && \/github\/bash-tools\/clean-my-repos.sh && apt-get clean\n#RUN cd \/github\/nagios-plugins && make zookeeper && make clean-zookeeper && apt-get clean\n#RUN rm -f \/tmp\/invalidate_cache\n\nCOPY profile.d\/java.sh \/etc\/profile.d\/\n\nCMD \/bin\/bash\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":400,
        "end":463,
        "text":"MAINTAINER Hari Sekhon (https:\/\/www.linkedin.com\/in\/harisekhon)"
      },
      {
        "label":"apt-install-without-version",
        "start":1218,
        "end":1274,
        "text":"apt-get install -y --no-install-recommends apt-transport"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1137,
        "end":1187,
        "text":"apt-get install -y make git openjdk-8-jdk-headless"
      },
      {
        "label":"apt-install-without-version",
        "start":1491,
        "end":1540,
        "text":"apt-get install -y --no-install-recommends sbt &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":1872,
        "end":1891,
        "text":"&& cd \/github\/$x &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":2104,
        "end":2120,
        "text":"cd \/github\/$x &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":2639,
        "end":2658,
        "text":"&& cd \/github\/$x &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":3379,
        "end":3392,
        "text":"cd \/github\/$x"
      },
      {
        "label":"use-cd-change-dir",
        "start":3609,
        "end":3619,
        "text":"cd \/github"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"75ffc4707c3d4fc3a50e281fc74c11c109a4705c.dockerfile",
    "file_content":"FROM lablup\/kernel-base:python3.6 as python-binary\n\n# Build target: lablup\/common-tensorflow:1.3-py36-cuda8\nFROM nvidia\/cuda:8.0-cudnn6-devel-ubuntu16.04\nLABEL maintainer=\"Mario Cho <m.cho@lablup.com>\"\n\n# The TensorFlow version\nENV TF_VERSION 1.3\nENV PYTHON_BIN_PATH \/usr\/local\/bin\/python\nENV PYTHON_LIB_PATH \/usr\/local\/lib\/python3.6\/site-packages \nENV GCC_HOST_COMPILER_PATH \/usr\/bin\/gcc \nENV CC_OPT_FLAGS \"-march=x86-64 -mavx -mavx2 -mfma -mfpmath=both -msse4.1 -msse4.2\" \nENV TF_NEED_JEMALLOC 1\nENV TF_NEED_GCP 1\nENV TF_NEED_HDFS 1\nENV TF_ENABLE_XLA 1\nENV TF_NEED_VERBS 0\nENV TF_NEED_CUDA 1\nENV TF_CUDA_CLANG 0\nENV TF_NEED_S3=1 \nENV TF_CUDA_VERSION 8.0 \nENV TF_CUDNN_VERSION 6\nENV TF_NCCL_VERSION 2\nENV TF_CUDA_COMPUTE_CAPABILITIES 3.5,3.7,5.2,6.0,6.1\nENV LD_LIBRARY_PATH \/usr\/local\/cuda\/extras\/CUPTI\/lib64:$LD_LIBRARY_PATH\nENV CUDA_TOOLKIT_PATH \/usr\/local\/cuda\nENV CUDNN_INSTALL_PATH \/usr\/local\/cuda \nENV NCCL_INSTALL_PATH \/usr\/local\/cuda\/lib\n\n# Install system package dependencies\n# NOTE: running bazel requires JDK, not JRE!\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends openjdk-8-jdk-headless && \\\n    apt-get install -y --no-install-recommends \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        rsync \\\n        software-properties-common \\\n        zip unzip \\\n        zlib1g-dev \\\n        wget \\\n        imagemagick \\\n        graphviz \\\n        cmake \\\n\tgcc g++ \\\n        curl \\\n\twget \\\n        rsync \\\n        sed \\\n        swig \\\n        git-core \\\n\tzip && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n\n# Link NCCL libray and header where the build script expects them.\nRUN mkdir \/usr\/local\/cuda-8.0\/lib &&  \\\n    ln -s \/usr\/lib\/x86_64-linux-gnu\/libnccl.so.2 \/usr\/local\/cuda\/lib\/libnccl.so.2 && \\\n    ln -s \/usr\/include\/nccl.h \/usr\/local\/cuda\/include\/nccl.h\n\n# link CUDA-8.0 + cuDNN 6.0\nRUN ln -s \/usr\/local\/cuda-8.0 \/usr\/local\/cuda && \\\n#    ln -s \/usr\/lib\/x86_64-linux-gnu\/libcudnn.so.6.0.21 \/usr\/local\/cuda\/lib64\/libcudnn.so && \\\n    ldconfig\nENV LD_LIBRARY_PATH=\"\/usr\/local\/cuda\/lib64:\/usr\/local\/nvidia\/lib64\" \\\n    PATH=\"\/usr\/local\/nvidia\/bin:\/usr\/local\/cuda\/bin:\/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin\"\n\nCOPY --from=python-binary \/python.tar.gz \/\nRUN cd \/; tar xzpf python.tar.gz; rm python.tar.gz; ldconfig\n\nENV BAZEL_VERSION 0.5.4\nRUN mkdir \/bazel && \\\n    cd \/bazel && \\\n    curl -H \"User-Agent: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/57.0.2987.133 Safari\/537.36\" -fSsL -O https:\/\/github.com\/bazelbuild\/bazel\/releases\/download\/$BAZEL_VERSION\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla\/5.0 (X11; Linux x86_64) AppleWebKit\/537.36 (KHTML, like Gecko) Chrome\/57.0.2987.133 Safari\/537.36\" -fSsL -o \/bazel\/LICENSE.txt https:\/\/raw.githubusercontent.com\/bazelbuild\/bazel\/master\/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    .\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd \/ && \\\n    rm -f \/bazel\/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\n\n# Check Bazel\/Python is runnable.\n# Also install TensorFlow build dependencies (ensure we have proper numpy)\nRUN bazel version; python -c \"import sys; print(sys.prefix); print(sys.version_info)\" && \\\n    pip install --no-cache-dir wheel numpy scipy && \\\n    pip install --no-cache-dir keras_applications && \\\n    pip install --no-cache-dir keras_preprocessing && \\\n    rm -f \/tmp\/*.whl\n\n# NOTE: python should be linked to python3\nRUN : build TensorFlow pip package && \\\n    cd \/tmp && \\\n    curl -SL https:\/\/github.com\/tensorflow\/tensorflow\/archive\/r${TF_VERSION}.tar.gz | tar xzf - && \\ \n    ldconfig\n\nRUN cd \/tmp\/tensorflow-r${TF_VERSION} && \\\n    ln -s \/usr\/local\/cuda\/lib64\/stubs\/libcuda.so \/usr\/local\/cuda\/lib64\/stubs\/libcuda.so.1 && \\\n        LD_LIBRARY_PATH=\/usr\/local\/cuda\/lib64\/stubs:${LD_LIBRARY_PATH} \\\n        tensorflow\/tools\/ci_build\/builds\/configured GPU \\\n    bazel build -c opt --config=cuda \\\n        --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n\ttensorflow\/tools\/pip_package:build_pip_package && \\\n    rm \/usr\/local\/cuda\/lib64\/stubs\/libcuda.so.1 && \\\n    bazel-bin\/tensorflow\/tools\/pip_package\/build_pip_package \/tmp\/tensorflow_pkg\n\n# Clean up pip wheel and Bazel cache when done.\nRUN rm -rf \/root\/.cache\t&& \\\n    ls -lh \/tmp\/tensorflow_pkg\n\n# vim: ft=dockerfile sts=4 sw=4 et tw=0\n\n\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":1059,
        "end":1127,
        "text":"apt-get install -y --no-install-recommends openjdk-8-jdk-headless &&"
      },
      {
        "label":"apt-install-without-version",
        "start":1134,
        "end":1450,
        "text":"apt-get install -y --no-install-recommends \\\\nlibfreetype6-dev \\\\nlibhdf5-serial-dev \\\\nlibpng12-dev \\\\nlibzmq3-dev \\\\npkg-config \\\\nrsync \\\\nsoftware-properties-common \\\\nzip unzip \\\\nzlib1g-dev \\\\nwget \\\\nimagemagick \\\\ngraphviz \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2280,
        "end":2293,
        "text":"RUN cd \/; tar"
      },
      {
        "label":"use-cd-change-dir",
        "start":2392,
        "end":2406,
        "text":"cd \/bazel && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2991,
        "end":3000,
        "text":"cd \/ && \\"
      },
      {
        "label":"pip-install-without-version",
        "start":3271,
        "end":3429,
        "text":"pip install --no-cache-dir wheel numpy scipy && \\\\npip install --no-cache-dir keras_applications && \\\\npip install --no-cache-dir keras_preprocessing &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":3541,
        "end":3553,
        "text":"cd \/tmp && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3670,
        "end":3706,
        "text":"RUN cd \/tmp\/tensorflow-r${TF_VERSION"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "pip-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7625b13794da227e8ade3f27c8fe1a2b238af633.dockerfile",
    "file_content":"# Copyright 2016 The Kubernetes Authors All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM busybox\nMAINTAINER Satnam Singh <satnam@google.com>\nADD cauldron cauldron\nADD cauldron.go cauldron.go\nENTRYPOINT [\"\/cauldron\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":621,
        "end":664,
        "text":"MAINTAINER Satnam Singh <satnam@google.com>"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":665,
        "end":714,
        "text":"ADD cauldron cauldron\\nADD cauldron.go cauldron.go"
      },
      {
        "label":"miss-specific-tags",
        "start":608,
        "end":620,
        "text":"FROM busybox"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"764e3536a42ff1e10ad67d9eb12df726d93823aa.dockerfile",
    "file_content":"FROM ubuntu:14.04\n\nMAINTAINER Bertrand Bordage, bordage.bertrand@gmail.com\n\n\n# Disables recommended packages installed as dependencies.\nRUN echo \"APT::Install-Recommends \\\"false\\\";\\n\\\nAPT::AutoRemove::RecommendsImportant \\\"false\\\";\\n\\\nAPT::AutoRemove::SuggestsImportant \\\"false\\\";\" > \/etc\/apt\/apt.conf.d\/99_norecommends\n\nADD http:\/\/packages.elasticsearch.org\/GPG-KEY-elasticsearch \/\nRUN apt-key add GPG-KEY-elasticsearch\nRUN rm GPG-KEY-elasticsearch\nRUN echo \"deb http:\/\/packages.elasticsearch.org\/elasticsearch\/0.90\/debian stable main\" >> \/etc\/apt\/sources.list\nRUN apt-get update\n\nRUN apt-mark auto `apt-mark showmanual`\nRUN apt-mark manual ubuntu-minimal\nRUN apt-get -y autoremove\nRUN apt-get -y upgrade\n\n\nRUN apt-get -y install git mercurial ca-certificates\nRUN git clone https:\/\/github.com\/dezede\/dezede\nWORKDIR \/dezede\/\nRUN git submodule init\nRUN git submodule update\n\n\nRUN apt-get -y install postgresql postgresql-server-dev-9.3 redis-server\nRUN apt-get -y install elasticsearch openjdk-7-jre\nRUN apt-get -y install python2.7 python-pip python-dev\nRUN apt-get -y install libxml2 libxml2-dev libxslt1-dev  # lxml dependencies\nRUN apt-get -y install npm  # For LESS & elasticsearch\n\n# Installs LESS CSS\nRUN npm install -g less@1.7.0\nRUN ln -s \/usr\/bin\/nodejs \/usr\/bin\/node\n\nRUN apt-get -y build-dep pillow\nRUN pip install -r requirements.txt\n\n\nRUN apt-get clean\n\n\n# Enables Redis UNIX socket\nRUN echo \"unixsocket \/var\/run\/redis\/redis.sock\\n\\\nunixsocketperm 777\" >> \/etc\/redis\/redis.conf\n\n\nUSER postgres\nRUN service postgresql start && psql -c \"CREATE USER dezede CREATEDB;\" && psql -c \"CREATE DATABASE dezede OWNER dezede;\"\nRUN sed -i 's\/# Database administrative login by Unix domain socket\/&\\nlocal dezede,test_dezede dezede trust\/' \/etc\/postgresql\/9.3\/main\/pg_hba.conf\n\n\nUSER root\nEXPOSE 8000\n\nCMD service postgresql start && service redis-server start && python manage.py runserver 0.0.0.0:8000\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":74,
        "text":"MAINTAINER Bertrand Bordage, bordage.bertrand@gmail.com"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":321,
        "end":382,
        "text":"ADD http:\/\/packages.elasticsearch.org\/GPG-KEY-elasticsearch \/"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":875,
        "end":1185,
        "text":"RUN apt-get -y install postgresql postgresql-server-dev-9.3 redis-server\\nRUN apt-get -y install elasticsearch openjdk-7-jre\\nRUN apt-get -y install python2.7 python-pip python-dev\\nRUN apt-get -y install libxml2 libxml2-dev libxslt1-dev # lxml dependencies\\nRUN apt-get -y install npm # For LESS & elasticsearch"
      },
      {
        "label":"apt-install-without-version",
        "start":875,
        "end":1185,
        "text":"RUN apt-get -y install postgresql postgresql-server-dev-9.3 redis-server\\nRUN apt-get -y install elasticsearch openjdk-7-jre\\nRUN apt-get -y install python2.7 python-pip python-dev\\nRUN apt-get -y install libxml2 libxml2-dev libxslt1-dev # lxml dependencies\\nRUN apt-get -y install npm # For LESS & elasticsearch"
      },
      {
        "label":"root-privilege-user",
        "start":1778,
        "end":1787,
        "text":"USER root"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"76e32a766057b846befc7e42f3e548718c63be11.dockerfile",
    "file_content":"FROM ros:dashing\n\nLABEL maintainer=\"Lander Usategui lander@erlerobotics.com\"\n\nENV TERM xterm\nENV ROS_DISTRO dashing\nENV ROS_WS=\/opt\/ws_moveit\nWORKDIR $ROS_WS\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN \\\n       apt-get update -qq && apt-get install -qq -y \\\n         wget \\\n         clang clang-format-3.9 clang-tidy clang-tools \\\n      && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Download moveit source, so that we can get necessary dependencies\nRUN mkdir -p $ROS_WS\/src \\\n    && wget https:\/\/raw.githubusercontent.com\/AcutronicRobotics\/moveit2\/master\/moveit2.repos \\\n    && vcs import src < moveit2.repos \\\n    && cd src && git clone https:\/\/github.com\/AcutronicRobotics\/moveit2\n    # wstool init --shallow . https:\/\/raw.githubusercontent.com\/ros-planning\/moveit2\/master\/moveit.rosinstall\n\n# Download all MoveIt 2 dependencies\nRUN \\\n    apt-get -qq update && \\\n    rosdep update -q && \\\n    rosdep install -q -y --from-paths . --ignore-src --rosdistro ${ROS_DISTRO} --as-root=apt:false || true && \\\n    # Clear apt-cache to reduce image size\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# Remove the source code from this container\n# TODO: in the future we may want to keep this here for further optimization of later containers\nRUN cd $ROS_WS && \\\n    rm -rf src\/\n\n\n# Continous Integration Setting\nENV IN_DOCKER 1\nENV DOCKER 1 # old version, keep for now\n\nCMD [\"bash\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":231,
        "end":326,
        "text":"apt-get install -qq -y \\\\nwget \\\\nclang clang-format-3.9 clang-tidy clang-tools"
      },
      {
        "label":"apt-install-without-version",
        "start":231,
        "end":326,
        "text":"apt-get install -qq -y \\\\nwget \\\\nclang clang-format-3.9 clang-tidy clang-tools"
      },
      {
        "label":"use-cd-change-dir",
        "start":604,
        "end":617,
        "text":"cd src && git"
      },
      {
        "label":"use-cd-change-dir",
        "start":1207,
        "end":1221,
        "text":"RUN cd $ROS_WS"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"77fa0e1f09d11c92a529c185cb22c883a073fbc5.dockerfile",
    "file_content":"FROM ubuntu:16.04\n\n# Locales\nRUN apt-get clean && apt-get -y update && apt-get install -y locales && locale-gen en_US.UTF-8\nENV LANG \"en_US.UTF-8\"\nENV LANGUAGE \"en_US.UTF-8\"\nENV LC_ALL \"en_US.UTF-8\"\n\n# Set the environment variables\nENV JAVA_HOME \/usr\/lib\/jvm\/java-8-openjdk-amd64\nENV ANDROID_HOME \/opt\/android-sdk-linux\n# Need by cmake\nENV ANDROID_NDK_HOME \/opt\/android-ndk\nENV ANDROID_NDK \/opt\/android-ndk\nENV PATH ${PATH}:${ANDROID_HOME}\/tools:${ANDROID_HOME}\/tools\/bin:${ANDROID_HOME}\/platform-tools\nENV PATH ${PATH}:${NDK_HOME}\nENV NDK_CCACHE \/usr\/bin\/ccache\n\n# The 32 bit binaries because aapt requires it\n# `file` is need by the script that creates NDK toolchains\n# Keep the packages in alphabetical order to make it easy to avoid duplication\nRUN DEBIAN_FRONTEND=noninteractive dpkg --add-architecture i386 \\\n    && apt-get update -qq \\\n    && apt-get install -y bsdmainutils \\\n                          build-essential \\\n                          ccache \\\n                          curl \\\n                          file \\\n                          git \\\n                          libc6:i386 \\\n                          libgcc1:i386 \\\n                          libncurses5:i386 \\\n                          libstdc++6:i386 \\\n                          libz1:i386 \\\n                          openjdk-8-jdk-headless \\\n                          s3cmd \\\n                          unzip \\\n                          wget \\\n                          zip \\\n    && apt-get clean\n\n# Install the Android SDK\nRUN cd \/opt && \\\n    wget -q https:\/\/dl.google.com\/android\/repository\/sdk-tools-linux-3859397.zip -O android-tools-linux.zip && \\\n    unzip android-tools-linux.zip -d ${ANDROID_HOME} && \\\n    rm -f android-tools-linux.zip\n\n# Grab what's needed in the SDK\nRUN sdkmanager --update\n\n# Accept licenses before installing components, no need to echo y for each component\n# License is valid for all the standard components in versions installed from this file\n# Non-standard components: MIPS system images, preview versions, GDK (Google Glass) and Android Google TV require separate licenses, not accepted there\nRUN yes | sdkmanager --licenses\n\n# SDKs\n# Please keep these in descending order!\n# The `yes` is for accepting all non-standard tool licenses.\n# Please keep all sections in descending order!\nRUN yes | sdkmanager \\\n    'platform-tools' \\\n    'build-tools;28.0.3' \\\n    'extras;android;m2repository' \\\n    'platforms;android-27' \\\n    'cmake;3.6.4111459'\n\n# Install the NDK\nRUN mkdir \/opt\/android-ndk-tmp && \\\n    cd \/opt\/android-ndk-tmp && \\\n    wget -q http:\/\/dl.google.com\/android\/ndk\/android-ndk-r10e-linux-x86_64.bin -O android-ndk.bin && \\\n    chmod a+x .\/android-ndk.bin && \\\n    .\/android-ndk.bin && \\\n    mv android-ndk-r10e \/opt\/android-ndk && \\\n    rm -rf \/opt\/android-ndk-tmp && \\\n    chmod -R a+rX \/opt\/android-ndk && \\\n    echo \"Pkg.Desc = Android NDK\\nPkg.Revision = 10.0.0\" > \/opt\/android-ndk\/source.properties\n\n# Make the SDK universally writable\nRUN chmod -R a+rwX ${ANDROID_HOME}\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":71,
        "end":100,
        "text":"apt-get install -y locales &&"
      },
      {
        "label":"apt-install-without-version",
        "start":71,
        "end":97,
        "text":"apt-get install -y locales"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":850,
        "end":1420,
        "text":"apt-get install -y bsdmainutils \\\\nbuild-essential \\\\nccache \\\\ncurl \\\\nfile \\\\ngit \\\\nlibc6:i386 \\\\nlibgcc1:i386 \\\\nlibncurses5:i386 \\\\nlibstdc++6:i386 \\\\nlibz1:i386 \\\\nopenjdk-8-jdk-headless \\\\ns3cmd \\\\nunzip \\\\nwget \\"
      },
      {
        "label":"apt-install-without-version",
        "start":850,
        "end":1418,
        "text":"apt-get install -y bsdmainutils \\\\nbuild-essential \\\\nccache \\\\ncurl \\\\nfile \\\\ngit \\\\nlibc6:i386 \\\\nlibgcc1:i386 \\\\nlibncurses5:i386 \\\\nlibstdc++6:i386 \\\\nlibz1:i386 \\\\nopenjdk-8-jdk-headless \\\\ns3cmd \\\\nunzip \\\\nwget"
      },
      {
        "label":"use-cd-change-dir",
        "start":1501,
        "end":1515,
        "text":"RUN cd \/opt &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":2517,
        "end":2540,
        "text":"cd \/opt\/android-ndk-tmp"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"783ae38b2063e5338f44e9b8f3ba672f0e8b8f59.dockerfile",
    "file_content":"# Suricata 1.4.2\n#\n# VERSION               1\nFROM      opennsm\/debian\nMAINTAINER Jon Schipp <jonschipp@gmail.com>\n\n# Metadata\nLABEL organization=opennsm\nLABEL program=suricata\n# Specify container username e.g. training, demo\nENV VIRTUSER opennsm\n# Specify program\nENV PROG suricata\n# Specify Suricata version to download and install (e.g. 1.4.2)\nENV VERS 1.4.2\n# Install directory \nENV PREFIX \/opt\n# Path should include prefix\nENV PATH \/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin:$PREFIX\/bin\n\n# Install dependencies\nRUN apt-get update -qq\nRUN apt-get install -yq libpcre3 libpcre3-dbg libpcre3-dev \\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libmagic-dev libcap-ng-dev \\\nlibjansson-dev pkg-config libgeoip-dev libnetfilter-queue-dev\n\n# Compile and install libpcap\nUSER $VIRTUSER\nWORKDIR \/home\/$VIRTUSER\nRUN wget http:\/\/www.openinfosecfoundation.org\/download\/$PROG-$VERS.tar.gz\nRUN tar -xvzf $PROG-$VERS.tar.gz\nWORKDIR \/home\/$VIRTUSER\/$PROG-$VERS\nRUN .\/configure --enable-nfqueue --enable-geoip --prefix=$PREFIX --enable-profiling --enable-debug --enable-debug-validation --enable-unittests --sysconfdir=\/etc --localstatedir=\/var && make\nUSER root\nRUN make install && make install-full\nRUN chmod u+s $PREFIX\/bin\/$PROG\n\n# Cleanup\nRUN rm -rf \/home\/$VIRTUSER\/$PROG-$VERS\n\n# Environment\nWORKDIR \/home\/$VIRTUSER\nUSER opennsm\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":70,
        "end":113,
        "text":"MAINTAINER Jon Schipp <jonschipp@gmail.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":45,
        "end":69,
        "text":"FROM opennsm\/debian"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":556,
        "end":817,
        "text":"RUN apt-get install -yq libpcre3 libpcre3-dbg libpcre3-dev \\\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libmagic-dev libcap-ng-dev \\\\nlibjansson-dev pkg-config libgeoip-dev libnetfilter-queue-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":556,
        "end":817,
        "text":"RUN apt-get install -yq libpcre3 libpcre3-dbg libpcre3-dev \\\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libmagic-dev libcap-ng-dev \\\\nlibjansson-dev pkg-config libgeoip-dev libnetfilter-queue-dev"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "miss-apt-no-install-recommends"
    ]
  },
  {
    "filename":"785644481a9c750d6b8f49d37dd579da379bea81.dockerfile",
    "file_content":"FROM tomcat:8.0.33-jre8\n\n# based on: https:\/\/jigsaw.w3.org\/css-validator\/DOWNLOAD.html\n\n# git\nRUN apt-get update && \\\n    apt-get install -y git curl wget software-properties-common\n\n# jdk\nRUN echo \"deb http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu xenial main\" | tee \/etc\/apt\/sources.list.d\/webupd8team-java.list && \\\n    echo \"deb-src http:\/\/ppa.launchpad.net\/webupd8team\/java\/ubuntu xenial main\" | tee -a \/etc\/apt\/sources.list.d\/webupd8team-java.list && \\\n    apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv-keys EEA14886 && \\\n    apt-get update && \\\n    echo oracle-java8-installer shared\/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n    apt-get install -y oracle-java8-installer && \\\n    rm -rf \/var\/lib\/apt\/lists\/* && \\\n    rm -rf \/var\/cache\/oracle-jdk8-installer\n\nENV JAVA_HOME \/usr\/lib\/jvm\/java-8-oracle\n\n# ant\nENV ANT_VERSION 1.9.7\nRUN cd && \\\n    wget -q http:\/\/archive.apache.org\/dist\/ant\/binaries\/apache-ant-${ANT_VERSION}-bin.tar.gz && \\\n    tar -xzf apache-ant-${ANT_VERSION}-bin.tar.gz && \\\n    mv apache-ant-${ANT_VERSION} \/opt\/ant && \\\n    rm apache-ant-${ANT_VERSION}-bin.tar.gz\nENV ANT_HOME \/opt\/ant\nENV PATH ${PATH}:\/opt\/ant\/bin\n\n# css-validator\nWORKDIR \/opt\nRUN git clone --depth=1 --branch=master https:\/\/github.com\/w3c\/css-validator.git\n\n# replace the value of property servlet.lib with the full path to servlet.jar\nRUN SERVLET_API_FILE=$(find \/ -name \"servlet-api.jar\" | sed -e 's\/[\\\/&]\/\\\\&\/g') && \\\n    sed -i -e \"s\/\\\/usr\\\/share\\\/java\\\/servlet-2.3.jar\/${SERVLET_API_FILE}\/g\" \/opt\/css-validator\/build.xml\n\n# build the source\nRUN cd \/opt\/css-validator && \\\n    ant war && \\\n    cp css-validator.war ${CATALINA_HOME}\/webapps\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":122,
        "end":181,
        "text":"apt-get install -y git curl wget software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":122,
        "end":181,
        "text":"apt-get install -y git curl wget software-properties-common"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":684,
        "end":728,
        "text":"apt-get install -y oracle-java8-installer &&"
      },
      {
        "label":"apt-install-without-version",
        "start":684,
        "end":730,
        "text":"apt-get install -y oracle-java8-installer && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":883,
        "end":894,
        "text":"RUN cd && \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"797c094d162bb239655d913ad582eda00d1d0049.dockerfile",
    "file_content":"FROM ubuntu:14.04\n\nLABEL maintainer=\"Mahmoud Zalt <mahmoud@zalt.me>\"\n\nRUN apt-key adv --recv-keys --keyserver hkp:\/\/keyserver.ubuntu.com:80 0x5a16e7281be7a449\n\nRUN apt-get update -y \\\n    && apt-get install -y software-properties-common wget \\\n    && wget -O - http:\/\/dl.hhvm.com\/conf\/hhvm.gpg.key | sudo apt-key add - \\\n    && add-apt-repository \"deb http:\/\/dl.hhvm.com\/ubuntu $(lsb_release -sc) main\" \\\n    && apt-get update -y \\\n    && apt-get install -y hhvm \\\n    && apt-get clean \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\nRUN mkdir -p \/var\/www\n\nCOPY server.ini \/etc\/hhvm\/server.ini\n\nARG PUID=1000\nENV PUID ${PUID}\n\nRUN usermod -u ${PUID} www-data\n\nWORKDIR \/var\/www\n\nCMD [\"\/usr\/bin\/hhvm\", \"-m\", \"server\", \"-c\", \"\/etc\/hhvm\/server.ini\"]\n\nEXPOSE 9000\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":191,
        "end":241,
        "text":"apt-get install -y software-properties-common wget"
      },
      {
        "label":"apt-install-without-version",
        "start":191,
        "end":241,
        "text":"apt-get install -y software-properties-common wget"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":439,
        "end":464,
        "text":"apt-get install -y hhvm \\"
      },
      {
        "label":"apt-install-without-version",
        "start":439,
        "end":464,
        "text":"apt-get install -y hhvm \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-sudo-run",
        "start":248,
        "end":316,
        "text":"&& wget -O - http:\/\/dl.hhvm.com\/conf\/hhvm.gpg.key | sudo apt-key add"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"7a33d000b0414195ced4e7b7ae2098ee039d449b.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/php:7.1.13-fpm-jessie-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":509,
        "end":529,
        "text":"sudo apt-get update;"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":535,
        "end":649,
        "text":"apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":535,
        "end":649,
        "text":"apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-sudo-run",
        "start":968,
        "end":1028,
        "text":"sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key"
      },
      {
        "label":"use-sudo-run",
        "start":1079,
        "end":1098,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1105,
        "end":1199,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1105,
        "end":1199,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-sudo-run",
        "start":1215,
        "end":1234,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1241,
        "end":1335,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1241,
        "end":1335,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1500,
        "end":1531,
        "text":"apt-get install libfontconfig \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1500,
        "end":1531,
        "text":"apt-get install libfontconfig \\"
      },
      {
        "label":"use-sudo-run",
        "start":1495,
        "end":1531,
        "text":"sudo apt-get install libfontconfig \\"
      },
      {
        "label":"use-sudo-run",
        "start":1696,
        "end":1762,
        "text":"sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin"
      },
      {
        "label":"use-sudo-run",
        "start":2375,
        "end":2434,
        "text":"&& sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install"
      },
      {
        "label":"use-sudo-run",
        "start":2443,
        "end":2463,
        "text":"sudo apt-get install"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2448,
        "end":2537,
        "text":"apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\"
      },
      {
        "label":"apt-install-without-version",
        "start":2448,
        "end":2537,
        "text":"apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4262,
        "end":4271,
        "text":"cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"7a51799df60c7e7ec5f8bfc7f7eaf4b3c09b93a5.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/golang:1.11rc1-stretch-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":970,
        "end":1008,
        "text":"sudo apt-key adv --keyserver keyserver"
      },
      {
        "label":"use-sudo-run",
        "start":1078,
        "end":1100,
        "text":"&& sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1107,
        "end":1201,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1107,
        "end":1201,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4261,
        "end":4273,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"48a3409d761a2bfc601e406a5b1a32cd62c51969.dockerfile",
    "file_content":"\nFROM ubuntu:16.04\n\n#MAINTAINER Gary Bradski\n\n########################################################################\n# Running this docker to set up a shared directory and display with the host:\n#\n# To newly create and build this docker image:\n# ============================================\n#\n# Create a directory <container_name>: \n#    $ mkdir <container_name>\n# Copy this Dockerfile into that directory:\n#    cp Dockerfile <container_name>\/.\n# Move to that directory:\n#    $ cd <container_name>\n# To build the docker file (might have to run with sudo \n#    $ sudo docker build -t <container_name> .\n#\n# To run the image, or run it again retaining its state \n# =====================================================\n#    but also exporting display from the container and\n#    sharing a directory between host and container:\n#\n# Allow other processes to share the display:\n#    $ xhost +    #Allows or other processes to capture (show) the display\n# Now run the docker (Usually $DISPLAY is :0) and allow use of the camera -- you may need sudo privalage\n#    $ sudo docker run  -it  -e DISPLAY=$DISPLAY  -v \/tmp\/.X11-unix:\/tmp\/.X11-unix \\\n#                       --device \/dev\/video0 \\\n#                       -v \/<path_to_a host_directory>\/<directory_on_host>\/:\/<directory_path\/name>\/  <container_name>\n#\n# =======================================================\n# Handy docker commands:\n# List all the docker images\n#    $ sudo docker ps -a  \n# If the docker image is stopped (otherwise can skip the first command below if not stopped)\n#    $ sudo docker start <container ID from ps -a above>\n#    $ sudo docker attach <container ID from ps -a above>\n########################################################################\n# This is a docker file which will, from scratch:\n#\n#   * pull in all the dependencies needed for OpenCV 3.2 including python 2 dependencies\n#   * pull in OpenCV 3.2 and opencv_contrib and build them\n#       + executable files end up in opencv-3.2.0\/build\/bin\n#   * pull in the Learning OpenCV 3 example code and build it\n#       + executable files end up in Learning_OpenCV-3_examples\/build\n#   * To get to the top level directory, just type: cd\n#\n# If you just want to do this \"by hand\" in your home, replace the \"RUN\"s below with \"sudo\"\n#\n# This Docker uses the ubuntu 16.04 version of ffmpeg, which is older than the ones in my other dockerfiles.\n# this shouldn't cause you any problems but definitely *DO NOT* use this for generating audiofiles \/ movies for redistribution.\n#\n# But it is somewhat less capable than the ones in the ffmpeg containers.\n########################################################################\n\n\n# First: get all the dependencies:\n#\nRUN apt-get update\nRUN apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev \\\nlibavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev \\\nlibjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev unzip\n\nRUN apt-get install -y wget\n\n# Just get a simple editor for convienience (you could just cancel this line)\nRUN apt-get install -y vim\n\n\n# Second: get and build OpenCV 3.2\n#\nRUN cd \\\n    && wget https:\/\/github.com\/opencv\/opencv\/archive\/3.2.0.zip \\\n    && unzip 3.2.0.zip \\\n    && cd opencv-3.2.0 \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j8 \\\n    && make install \\\n    && cd \\\n    && rm 3.2.0.zip\n\n\n# Third: install and build opencv_contrib\n#\nRUN cd \\\n    && wget https:\/\/github.com\/opencv\/opencv_contrib\/archive\/3.2.0.zip \\\n    && unzip 3.2.0.zip \\\n    && cd opencv-3.2.0\/build \\\n    && cmake -DOPENCV_EXTRA_MODULES_PATH=..\/..\/opencv_contrib-3.2.0\/modules\/ .. \\\n    && make -j8 \\\n    && make install \\\n    && cd ..\/.. \\\n    && rm 3.2.0.zip\n\n\n# Forth: get and build the Learning OpenCV 3 examples:\n#    I copy the needed data to where the executables will be: opencv-3.2.0\/build\/bin\n#\nRUN cd \\\n    && git clone https:\/\/github.com\/oreillymedia\/Learning-OpenCV-3_examples.git \\\n    && cd Learning-OpenCV-3_examples \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make -j8\n\n#You could then run python and do your stuff...\n#CMD [\"python\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":2713,
        "end":2935,
        "text":"RUN apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev \\\\nlibavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev \\\\nlibjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev unzip"
      },
      {
        "label":"apt-install-without-version",
        "start":2713,
        "end":2935,
        "text":"RUN apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev \\\\nlibavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev \\\\nlibjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev unzip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2937,
        "end":2964,
        "text":"RUN apt-get install -y wget"
      },
      {
        "label":"apt-install-without-version",
        "start":2937,
        "end":2964,
        "text":"RUN apt-get install -y wget"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3044,
        "end":3070,
        "text":"RUN apt-get install -y vim"
      },
      {
        "label":"apt-install-without-version",
        "start":3044,
        "end":3070,
        "text":"RUN apt-get install -y vim"
      },
      {
        "label":"use-cd-change-dir",
        "start":3110,
        "end":3118,
        "text":"RUN cd \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3213,
        "end":3231,
        "text":"&& cd opencv-3.2.0"
      },
      {
        "label":"use-cd-change-dir",
        "start":3259,
        "end":3272,
        "text":"&& cd build \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3335,
        "end":3342,
        "text":"&& cd \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3409,
        "end":3417,
        "text":"RUN cd \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3520,
        "end":3546,
        "text":"&& cd opencv-3.2.0\/build \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3673,
        "end":3686,
        "text":"&& cd ..\/.. \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3849,
        "end":3859,
        "text":"#\\nRUN cd \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4006,
        "end":4019,
        "text":"&& cd build \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3946,
        "end":3980,
        "text":"&& cd Learning-OpenCV-3_examples \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"495f9192131a2d742c61f62cf1a0a7a78bb80456.dockerfile",
    "file_content":"FROM alpine:3.1\nMAINTAINER Steffen Roegner \"steffen.roegner@gmail.com\"\nUSER root\n\nENV JAVA_HOME=\/usr\nENV HADOOP_HOME=\/usr\/hdp\/current\/hadoop-client\nENV HADOOP_HDFS_HOME=\/usr\/hdp\/current\/hadoop-hdfs-client\nENV HADOOP_MAPRED_HOME=\/usr\/hdp\/current\/hadoop-mapreduce-client\nENV HADOOP_YARN_HOME=\/usr\/hdp\/current\/hadoop-yarn-client\nENV HADOOP_LIBEXEC_DIR=\/usr\/hdp\/current\/hadoop-client\/libexec\n\nENV REFRESHED_AT 2016-03-29\n\nRUN apk add --update curl py-pip lzo rsync zip openjdk7-jre-base; \\\n    rm -rf \/var\/cache\/apk\/*; \\\n    pip install supervisor \n\nRUN curl -L http:\/\/public-repo-1.hortonworks.com\/HDP\/centos6\/2.x\/updates\/2.3.4.0\/tars\/hadoop-2.7.1.2.3.4.0-3485.tar.gz | tar xz -C \/usr\/lib\nRUN curl -L http:\/\/apache.osuosl.org\/zookeeper\/stable\/zookeeper-3.4.6.tar.gz | tar xz -C \/usr\/lib\n\nRUN cd \/usr\/lib\/hadoop-2.7.1.2.3.4.0-3485 && \\\n    rm -rf share\/doc share\/hadoop\/kms share\/hadoop\/httpfs; \\\n    find . -name '*sources*jar' -exec rm -f {} \\;\n\nRUN addgroup hadoop; \\\n    for n in hdfs mapred yarn zookeeper; do \\\n      echo -e \"hadoop\\nhadoop\" adduser -S -G hadoop $n; \\\n    done\n    \nRUN getent passwd hdfs\n\nRUN mkdir -p \/data1\/hdfs \/data1\/mapred \/data1\/yarn \/var\/log\/hadoop \/var\/log\/hadoop-yarn \/var\/log\/supervisor \/var\/log\/consul \/var\/lib\/consul\/data \/var\/lib\/consul\/ui \/etc\/consul \/etc\/consul-leader \/var\/lib\/zookeeper; \\\n    chown hdfs.hadoop \/data1\/hdfs && \\\n    chown mapred.hadoop \/data1\/mapred && \\\n    chown yarn.hadoop \/data1\/yarn; \\\n    chown zookeeper.hadoop \/var\/lib\/zookeeper; \\\n    chmod 775 \/var\/log\/hadoop; chgrp hadoop \/var\/log\/hadoop\n\nCOPY supervisord.conf \/etc\/\nCOPY hadoop \/etc\/hadoop\/conf\nCOPY conf.zk\/zookeeper-env.sh \/etc\/zookeeper\/conf\/\nCOPY conf.zk\/zoo.cfg \/etc\/zookeeper\/conf\/\nCOPY check_hadoop.sh \/usr\/local\/sbin\/\nCOPY bootstrap-node.conf \/etc\/supervisor\/conf.d\/\nCOPY bootstrap-node.sh \/usr\/local\/sbin\/\nCOPY hadoop-group.conf \/etc\/supervisor\/conf.d\/\nCOPY consul\/consul.conf \/etc\/supervisor\/conf.d\/\nCOPY consul \/etc\/consul\/\nCOPY consul\/consul.json \/etc\/consul-leader\/\n\nUSER hdfs\nRUN HADOOP_ROOT_LOGGER=\"WARN,console\" \/usr\/bin\/hdfs namenode -format\nUSER root\nVOLUME \/etc\/hadoop\/conf\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":16,
        "end":70,
        "text":"MAINTAINER Steffen Roegner \"steffen.roegner@gmail.com\""
      },
      {
        "label":"pip-install-without-version",
        "start":521,
        "end":543,
        "text":"pip install supervisor"
      },
      {
        "label":"use-cd-change-dir",
        "start":785,
        "end":826,
        "text":"RUN cd \/usr\/lib\/hadoop-2.7.1.2.3.4.0-3485"
      },
      {
        "label":"root-privilege-user",
        "start":2076,
        "end":2085,
        "text":"USER root"
      }
    ],
    "label_list":[
      "root-privilege-user",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"4a99e5b5d3fb07514b4302cf0ba24c89a7168d37.dockerfile",
    "file_content":"FROM docker.io\/base\/archlinux\nMAINTAINER Jacek Danecki <jacek.danecki@intel.com>\n\nCOPY neo \/root\/neo\nCOPY scripts\/prepare-arch-gcc-5.sh \/root\nCOPY scripts\/build-arch-dep.sh \/root\nCOPY scripts\/prepare-workspace.sh \/root\n\nRUN \/root\/prepare-arch-gcc-5.sh\nRUN \/root\/prepare-workspace.sh\nRUN cd \/root\/build ; cmake -G Ninja -DBUILD_TYPE=Release -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_C_COMPILER=gcc-5 -DCMAKE_CXX_COMPILER=g++-5 \\\n    -DDO_NOT_RUN_AUB_TESTS=1 -DDONT_CARE_OF_VIRTUALS=1 ..\/neo ; ninja -j `nproc`\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":30,
        "end":80,
        "text":"MAINTAINER Jacek Danecki <jacek.danecki@intel.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":29,
        "text":"FROM docker.io\/base\/archlinux"
      },
      {
        "label":"use-cd-change-dir",
        "start":283,
        "end":303,
        "text":"RUN cd \/root\/build ;"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4b76caed9158429ad32ce4c3679351a180abd413.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/php:7.2.11-apache-stretch-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":970,
        "end":1033,
        "text":"&& sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key"
      },
      {
        "label":"use-sudo-run",
        "start":1081,
        "end":1103,
        "text":"&& sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1113,
        "end":1204,
        "text":"-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1114,
        "end":1204,
        "text":"get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4284,
        "end":4296,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"4bf85fed0862460c953af514f47f1acf1f84e52c.dockerfile",
    "file_content":"FROM ubuntu:16.04\nMAINTAINER Event Store LLP <ops@geteventstore.com>\n\nENV ES_VERSION=5.0.1-1 \\\n    DEBIAN_FRONTEND=noninteractive \\\n    EVENTSTORE_CLUSTER_GOSSIP_PORT=2112\n\nRUN apt-get update \\\n    && apt-get install tzdata curl iproute2 -y \\\n    && curl -s https:\/\/packagecloud.io\/install\/repositories\/EventStore\/EventStore-OSS\/script.deb.sh | bash \\\n    && apt-get install eventstore-oss=$ES_VERSION -y \\\n    && apt-get autoremove \\\n    && apt-get clean \\\n    && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nEXPOSE 1112 2112 1113 2113\n\nVOLUME \/var\/lib\/eventstore\n\nCOPY eventstore.conf \/etc\/eventstore\/\nCOPY entrypoint.sh \/\n\nHEALTHCHECK --timeout=2s CMD curl -sf http:\/\/localhost:2113\/stats || exit 1\n\nENTRYPOINT [\"\/entrypoint.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":18,
        "end":67,
        "text":"MAINTAINER Event Store LLP <ops@geteventstore.com"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":201,
        "end":239,
        "text":"apt-get install tzdata curl iproute2 -"
      },
      {
        "label":"apt-install-without-version",
        "start":201,
        "end":239,
        "text":"apt-get install tzdata curl iproute2 -"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":359,
        "end":406,
        "text":"apt-get install eventstore-oss=$ES_VERSION -y \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"4c7b6b55af43d2246d61ec08f3ff8d9ce7a620af.dockerfile",
    "file_content":"FROM python:3.5-alpine\n\nMAINTAINER \"Zach Kazanski\"\nLABEL project=\"docker-nginx-uwsgi-django\"\nLABEL version = \"1.0.0\"\nLABEL author=\"Zach Kazanski\"\nLABEL author_email=\"kazanski.zachary@gmail.com\"\n\nRUN apk add --update \\\n    nginx \\\n    supervisor \\ \n    python-dev \\\n    build-base \\\n    linux-headers \\\n    pcre-dev \\\n    py-pip \\ \n    vim \\\n  && rm -rf \/var\/cache\/apk\/* && \\\n  chown -R nginx:www-data \/var\/lib\/nginx\n\nRUN pip install https:\/\/github.com\/unbit\/uwsgi\/archive\/uwsgi-2.0.zip#egg=uwsgi\n\nADD . \/app\nWORKDIR \/app\n\nRUN pip install django\n\nRUN mkdir \/etc\/nginx\/sites-enabled\nRUN rm \/etc\/nginx\/nginx.conf\nRUN ln -s \/app\/nginx\/nginx.conf \/etc\/nginx\/\nRUN ln -s \/app\/nginx\/nginx-app.conf \/etc\/nginx\/sites-enabled\/\nRUN rm \/etc\/supervisord.conf\nRUN ln -s \/app\/supervisord\/supervisord.conf \/etc\/\n\nEXPOSE 80\n\nCMD [\"supervisord\", \"-n\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":24,
        "end":50,
        "text":"MAINTAINER \"Zach Kazanski\""
      },
      {
        "label":"use-add-instead-of-copy",
        "start":497,
        "end":507,
        "text":"ADD . \/app"
      },
      {
        "label":"pip-install-without-version",
        "start":522,
        "end":544,
        "text":"RUN pip install django"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "root-privilege-user",
      "use-deprecated-maintainer",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"4f5bba4721cb737a1f8a540b43d3da02401f4e15.dockerfile",
    "file_content":"FROM centos:7 as builder\nMAINTAINER p.timmermans@evs.com\nRUN yum upgrade -y && yum clean all && rm -rf \/var\/cache\/yum\nADD https:\/\/nodejs.org\/dist\/v10.5.0\/node-v10.5.0-linux-x64.tar.xz .\/\nRUN tar xvf \/node-v10.5.0-linux-x64.tar.xz && rm \/node-v10.5.0-linux-x64.tar.xz \nENV PATH $PATH:\/node-v10.5.0-linux-x64\/bin\nRUN npm install -g yarn\n#RUN yum install -y git && yum clean all && mkdir \/root\/.ssh\nADD ssh_keys \/root\/.ssh\nRUN chmod 700 \/root\/.ssh && chmod 600 \/root\/.ssh\/* && chmod 644 \/root\/.ssh\/known_hosts\nADD server \/opt\/server\nRUN cd \/opt\/server && yarn install --production=true\nRUN mv \/opt\/server \/opt\/manager\nADD client \/tmp\/client\nRUN cd \/tmp\/client && yarn install \n#RUN find \/tmp\/client\/src -name \"*.js\" -exec sed -i -e \"s\/ console.log\/ \\\/\\\/console.log\/\" {} \\; && \\\n#    find \/tmp\/client\/src -name \"*.js\" -exec sed -i -e \"s\/^console.log\/\\\/\\\/console.log\/\" {} \\;\nRUN cd \/tmp\/client && yarn build\nRUN mv \/tmp\/client\/build \/opt\/manager\/app\n\nFROM centos:7 \nRUN yum upgrade -y && yum install -y openssh-clients && yum clean all && rm -rf \/var\/cache\/yum\nCOPY --from=builder \/node-v10.5.0-linux-x64 \/node-v10.5.0-linux-x64\nENV PATH $PATH:\/node-v10.5.0-linux-x64\/bin\nADD ssh_keys \/root\/.ssh\nRUN chmod 700 \/root\/.ssh && chmod 600 \/root\/.ssh\/* && chmod 644 \/root\/.ssh\/known_hosts\nCOPY --from=builder \/opt\/manager \/opt\/manager\nWORKDIR \/opt\/manager\nVOLUME \/var\/run\/docker.sock\nEXPOSE 8080\nCMD [\"node\", \"server.js\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":25,
        "end":56,
        "text":"MAINTAINER p.timmermans@evs.com"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":118,
        "end":186,
        "text":"ADD https:\/\/nodejs.org\/dist\/v10.5.0\/node-v10.5.0-linux-x64.tar.xz .\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":396,
        "end":419,
        "text":"ADD ssh_keys \/root\/.ssh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":507,
        "end":529,
        "text":"ADD server \/opt\/server"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":615,
        "end":637,
        "text":"ADD client \/tmp\/client"
      },
      {
        "label":"use-cd-change-dir",
        "start":530,
        "end":556,
        "text":"RUN cd \/opt\/server && yarn"
      },
      {
        "label":"use-cd-change-dir",
        "start":870,
        "end":902,
        "text":"RUN cd \/tmp\/client && yarn build"
      },
      {
        "label":"use-cd-change-dir",
        "start":638,
        "end":672,
        "text":"RUN cd \/tmp\/client && yarn install"
      },
      {
        "label":"yum-install-without-version",
        "start":980,
        "end":1013,
        "text":"&& yum install -y openssh-clients"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1167,
        "end":1190,
        "text":"ADD ssh_keys \/root\/.ssh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"50592c62fdac258740dbb4638768ce19fe4a682b.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\n#\n# DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n#\nFROM circleci\/golang:1.11beta1-node\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1072,
        "end":1104,
        "text":"&& sudo apt-get update; sudo apt"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1101,
        "end":1195,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1101,
        "end":1195,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4255,
        "end":4267,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"50674ddc5149d0da879d33670d36cc7fef36b749.dockerfile",
    "file_content":"FROM ubuntu:trusty\n\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \\\n    apt-transport-https \\\n    python-dev \\\n    wget \\\n    curl \\\n    git \\\n    mercurial \\\n    make \\\n    ruby \\\n    ruby-dev \\\n    rpm \\\n    zip \\\n    python-pip \\\n    autoconf \\\n    libtool\n\nRUN pip install boto requests python-jose --upgrade\nRUN gem install fpm\n\n# Install node\nENV NODE_VERSION v10.14.2\nRUN wget -q https:\/\/nodejs.org\/dist\/${NODE_VERSION}\/node-${NODE_VERSION}-linux-x64.tar.gz; \\\n   tar -xvf node-${NODE_VERSION}-linux-x64.tar.gz -C \/ --strip-components=1; \\\n   rm -f node-${NODE_VERSION}-linux-x64.tar.gz\n\nRUN curl -sS https:\/\/dl.yarnpkg.com\/debian\/pubkey.gpg | apt-key add - && \\\n    echo \"deb https:\/\/dl.yarnpkg.com\/debian\/ stable main\" | sudo tee \/etc\/apt\/sources.list.d\/yarn.list &&  \\\n    apt-get update && sudo apt-get install yarn\n\n# Install go\nENV GOPATH \/root\/go\nENV GO_VERSION 1.12\nENV GO_ARCH amd64\nENV GO111MODULES ON\nRUN wget https:\/\/storage.googleapis.com\/golang\/go${GO_VERSION}.linux-${GO_ARCH}.tar.gz; \\\n   tar -C \/usr\/local\/ -xf \/go${GO_VERSION}.linux-${GO_ARCH}.tar.gz ; \\\n   rm \/go${GO_VERSION}.linux-${GO_ARCH}.tar.gz\nENV PATH \/usr\/local\/go\/bin:$PATH\n\nENV PROJECT_DIR $GOPATH\/src\/github.com\/influxdata\/chronograf\nENV PATH $GOPATH\/bin:$PATH\nRUN mkdir -p $PROJECT_DIR\nWORKDIR $PROJECT_DIR\n\nVOLUME $PROJECT_DIR\n\nENTRYPOINT [ \"\/root\/go\/src\/github.com\/influxdata\/chronograf\/etc\/build.py\" ]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":38,
        "end":277,
        "text":"DEBIAN_FRONTEND=noninteractive apt install -y \\\\napt-transport-https \\\\npython-dev \\\\nwget \\\\ncurl \\\\ngit \\\\nmercurial \\\\nmake \\\\nruby \\\\nruby-dev \\\\nrpm \\\\nzip \\\\npython-pip \\\\nautoconf \\\\nlibtool"
      },
      {
        "label":"apt-install-without-version",
        "start":38,
        "end":277,
        "text":"DEBIAN_FRONTEND=noninteractive apt install -y \\\\napt-transport-https \\\\npython-dev \\\\nwget \\\\ncurl \\\\ngit \\\\nmercurial \\\\nmake \\\\nruby \\\\nruby-dev \\\\nrpm \\\\nzip \\\\npython-pip \\\\nautoconf \\\\nlibtool"
      },
      {
        "label":"pip-install-without-version",
        "start":279,
        "end":320,
        "text":"RUN pip install boto requests python-jose"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":819,
        "end":844,
        "text":"sudo apt-get install yarn"
      },
      {
        "label":"apt-install-without-version",
        "start":824,
        "end":844,
        "text":"apt-get install yarn"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5093b793b0632bb548745f512f0087b9c0de1e4e.dockerfile",
    "file_content":"# Copyright 2015 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM debian:jessie\n\n# Install Git and basic packages.\nRUN apt-get update && apt-get install -y \\\n  autoconf \\\n  autotools-dev \\\n  build-essential \\\n  bzip2 \\\n  ccache \\\n  curl \\\n  gcc \\\n  gcc-multilib \\\n  git \\\n  golang \\\n  gyp \\\n  lcov \\\n  libc6 \\\n  libc6-dbg \\\n  libc6-dev \\\n  libgtest-dev \\\n  libtool \\\n  make \\\n  perl \\\n  strace \\\n  python-dev \\\n  python-setuptools \\\n  python-yaml \\\n  telnet \\\n  unzip \\\n  wget \\\n  zip && apt-get clean\n\n#================\n# Build profiling\nRUN apt-get update && apt-get install -y time && apt-get clean\n\n# Google Cloud platform API libraries\nRUN apt-get update && apt-get install -y python-pip && apt-get clean\nRUN pip install --upgrade google-api-python-client\n\n#====================\n# Python dependencies\n\n# Install dependencies\n\nRUN apt-get update && apt-get install -y \\\n    python-all-dev \\\n    python3-all-dev \\\n    python-pip\n\n# Install Python packages from PyPI\nRUN pip install pip --upgrade\nRUN pip install virtualenv\nRUN pip install futures==2.2.0 enum34==1.0.4 protobuf==3.2.0 six==1.10.0\n\n# Prepare ccache\nRUN ln -s \/usr\/bin\/ccache \/usr\/local\/bin\/gcc\nRUN ln -s \/usr\/bin\/ccache \/usr\/local\/bin\/g++\nRUN ln -s \/usr\/bin\/ccache \/usr\/local\/bin\/cc\nRUN ln -s \/usr\/bin\/ccache \/usr\/local\/bin\/c++\nRUN ln -s \/usr\/bin\/ccache \/usr\/local\/bin\/clang\nRUN ln -s \/usr\/bin\/ccache \/usr\/local\/bin\/clang++\n\n\nRUN mkdir \/var\/local\/jenkins\n\n# Define the default command.\nCMD [\"bash\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":654,
        "end":927,
        "text":"apt-get install -y \\\\nautoconf \\\\nautotools-dev \\\\nbuild-essential \\\\nbzip2 \\\\nccache \\\\ncurl \\\\ngcc \\\\ngcc-multilib \\\\ngit \\\\ngolang \\\\ngyp \\\\nlcov \\\\nlibc6 \\\\nlibc6-dbg \\\\nlibc6-dev \\\\nlibgtest-dev \\\\nlibtool \\\\nmake \\\\nperl \\\\nstrace \\\\npython-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":654,
        "end":949,
        "text":"apt-get install -y \\\\nautoconf \\\\nautotools-dev \\\\nbuild-essential \\\\nbzip2 \\\\nccache \\\\ncurl \\\\ngcc \\\\ngcc-multilib \\\\ngit \\\\ngolang \\\\ngyp \\\\nlcov \\\\nlibc6 \\\\nlibc6-dbg \\\\nlibc6-dev \\\\nlibgtest-dev \\\\nlibtool \\\\nmake \\\\nperl \\\\nstrace \\\\npython-dev \\\\npython-setuptools \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1078,
        "end":1101,
        "text":"apt-get install -y time"
      },
      {
        "label":"apt-install-without-version",
        "start":1078,
        "end":1101,
        "text":"apt-get install -y time"
      },
      {
        "label":"pip-install-without-version",
        "start":1227,
        "end":1277,
        "text":"RUN pip install --upgrade google-api-python-client"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1180,
        "end":1209,
        "text":"apt-get install -y python-pip"
      },
      {
        "label":"pip-install-without-version",
        "start":1180,
        "end":1209,
        "text":"apt-get install -y python-pip"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1348,
        "end":1448,
        "text":"RUN apt-get update && apt-get install -y \\\\npython-all-dev \\\\npython3-all-dev \\\\npython-pip"
      },
      {
        "label":"apt-install-without-version",
        "start":1348,
        "end":1448,
        "text":"RUN apt-get update && apt-get install -y \\\\npython-all-dev \\\\npython3-all-dev \\\\npython-pip"
      },
      {
        "label":"pip-install-without-version",
        "start":1486,
        "end":1542,
        "text":"RUN pip install pip --upgrade\\nRUN pip install virtualenv"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7d7f1c66d0b243dafed31902fc441b524a03532b.dockerfile",
    "file_content":"FROM ubuntu:15.10\n\nENV DEBIAN_FRONTEND noninteractive\n\n# create \/app folder and set it as workdir\nRUN mkdir \/app\nWORKDIR \/app\n\n# update and upgrade packages\nRUN apt-get update && apt-get upgrade -y && apt-get clean && apt-get install -y \\\n  build-essential \\\n  git \\\n  python \\\n  python-dev \\\n  wget\n\nRUN wget https:\/\/bootstrap.pypa.io\/get-pip.py && python get-pip.py && rm get-pip.py\n\nADD requirements-dev.txt requirements.txt \/app\/\n\n# install app requirements\nRUN pip install -r requirements-dev.txt --index-url=https:\/\/artifactory.globoi.com\/artifactory\/api\/pypi\/pypi-all\/simple\/\n\n# add soucecode to \/app\nADD . \/app\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":218,
        "end":299,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ngit \\\\npython \\\\npython-dev \\\\nwget"
      },
      {
        "label":"apt-install-without-version",
        "start":218,
        "end":299,
        "text":"apt-get install -y \\\\nbuild-essential \\\\ngit \\\\npython \\\\npython-dev \\\\nwget"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":386,
        "end":433,
        "text":"ADD requirements-dev.txt requirements.txt \/app\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":608,
        "end":618,
        "text":"ADD . \/app"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7dbf8a5fdc0021df1753c38d7f96d41c1f4213b0.dockerfile",
    "file_content":"# This expects to be run with the root of the repo as the context directory\n\nFROM ubuntu:xenial-20190222\n\n# Install add-apt-repository\n# Add mongo, redis, and go repos\n# Install mongo, redis, and go\nRUN apt-get update && \\\n    apt-get install -y software-properties-common apt-transport-https && \\\n    add-apt-repository -y ppa:gophers\/archive && \\\n    apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5 && \\\n    echo \"deb [ arch=amd64,arm64 ] https:\/\/repo.mongodb.org\/apt\/ubuntu xenial\/mongodb-org\/3.6 multiverse\" | tee \/etc\/apt\/sources.list.d\/mongodb-org-3.6.list && \\\n    apt-get update && \\\n    apt-get install -y \\\n        golang-1.10-go \\\n        mongodb-org=3.6.11 \\\n        mongodb-org-server=3.6.11 \\\n        mongodb-org-shell=3.6.11 \\\n        mongodb-org-mongos=3.6.11 \\\n        mongodb-org-tools=3.6.11 \\\n        redis-server=2:3.0.6-1ubuntu0.3\n\nENV PATH=\"\/usr\/lib\/go-1.10\/bin:${PATH}\"\nENV GOPATH=\"\/go\"\n\nRUN mkdir -p \/go\/src\/github.com\/tulip\/oplogtoredis\n\nADD .\/vendor \/go\/src\/github.com\/tulip\/oplogtoredis\/vendor\nADD .\/lib \/go\/src\/github.com\/tulip\/oplogtoredis\/lib\nADD .\/*.go \/go\/src\/github.com\/tulip\/oplogtoredis\n\nWORKDIR \/go\/src\/github.com\/tulip\/oplogtoredis\n\n# Build the app\nRUN go build -o app && mv .\/app \/bin\/oplogtoredis\n\n# Set up CMD\nADD .\/integration-tests\/fault-injection \/go\/src\/github.com\/tulip\/oplogtoredis\/integration-tests\/fault-injection\nADD .\/integration-tests\/helpers \/go\/src\/github.com\/tulip\/oplogtoredis\/integration-tests\/helpers\n\nWORKDIR \/go\/src\/github.com\/tulip\/oplogtoredis\/integration-tests\/fault-injection\nCMD go test . -timeout 5m -v\n\n\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":227,
        "end":292,
        "text":"apt-get install -y software-properties-common apt-transport-https"
      },
      {
        "label":"apt-install-without-version",
        "start":227,
        "end":292,
        "text":"apt-get install -y software-properties-common apt-transport-https"
      },
      {
        "label":"apt-install-without-version",
        "start":650,
        "end":695,
        "text":"apt-get install -y \\\\ngolang-1.10-go \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":650,
        "end":695,
        "text":"apt-get install -y \\\\ngolang-1.10-go \\"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1018,
        "end":1176,
        "text":"ADD .\/vendor \/go\/src\/github.com\/tulip\/oplogtoredis\/vendor\\nADD .\/lib \/go\/src\/github.com\/tulip\/oplogtoredis\/lib\\nADD .\/*.go \/go\/src\/github.com\/tulip\/oplogtoredis"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1305,
        "end":1512,
        "text":"ADD .\/integration-tests\/fault-injection \/go\/src\/github.com\/tulip\/oplogtoredis\/integration-tests\/fault-injection\\nADD .\/integration-tests\/helpers \/go\/src\/github.com\/tulip\/oplogtoredis\/integration-tests\/helpers"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"7ed1e14f1edb79dae68e5e80c2314c79fd0dc2a7.dockerfile",
    "file_content":"# Copyright 2016 The Kubernetes Authors All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM BASEIMAGE\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update -y \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -yy -q \\\n    install \\\n    iptables \\\n    ethtool \\\n    ca-certificates \\\n    file \\\n    util-linux \\\n    socat \\\n    curl \\\n    && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \\\n    && DEBIAN_FRONTEND=noninteractive apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nRUN cp \/usr\/bin\/nsenter \/nsenter\n\nCOPY hyperkube \/hyperkube\nRUN chmod a+rx \/hyperkube\n\nCOPY master-multi.json \/etc\/kubernetes\/manifests-multi\/master.json\nCOPY kube-proxy.json \/etc\/kubernetes\/manifests-multi\/kube-proxy.json\n\nCOPY master.json \/etc\/kubernetes\/manifests\/master.json\nCOPY etcd.json \/etc\/kubernetes\/manifests\/etcd.json\nCOPY kube-proxy.json \/etc\/kubernetes\/manifests\/kube-proxy.json\n\nCOPY safe_format_and_mount \/usr\/share\/google\/safe_format_and_mount\nRUN chmod a+rx \/usr\/share\/google\/safe_format_and_mount\n\nCOPY setup-files.sh \/setup-files.sh\nRUN chmod a+rx \/setup-files.sh\n\nCOPY make-ca-cert.sh \/make-ca-cert.sh\nRUN chmod a+x \/make-ca-cert.sh\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":686,
        "end":849,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get -yy -q \\\\ninstall \\\\niptables \\\\nethtool \\\\nca-certificates \\\\nfile \\\\nutil-linux \\\\nsocat \\\\ncurl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":686,
        "end":849,
        "text":"DEBIAN_FRONTEND=noninteractive apt-get -yy -q \\\\ninstall \\\\niptables \\\\nethtool \\\\nca-certificates \\\\nfile \\\\nutil-linux \\\\nsocat \\\\ncurl \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"80101bbd16ef4f99ca57ea865058b23580b95c95.dockerfile",
    "file_content":"# Use an official Ubuntu 16.04 as a parent image\n\nFROM ubuntu:16.04\nMAINTAINER travis.janssen@ibm.com \n\n# Set MOFED directory, image and working directory\nENV MOFED_DIR MLNX_OFED_LINUX-4.3-1.0.1.0-ubuntu16.04-x86_64\nENV MOFED_SITE_PLACE MLNX_OFED-4.3-1.0.1.0\nENV MOFED_IMAGE MLNX_OFED_LINUX-4.3-1.0.1.0-ubuntu16.04-x86_64.tgz\n\nWORKDIR \/tmp\/\n\n# Pick up some MOFED dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    wget \\\n    net-tools \\\n    ethtool \\\n    perl \\\n    lsb-release \\\n    iproute2 \\\n    pciutils \\\n    libnl-route-3-200 \\\n    kmod \\\n    libnuma1 \\\n    lsof \\\n    linux-headers-4.4.0-92-generic \\\n    pkg-config flex gfortran chrpath graphviz automake tcl m4 dpatch libglib2.0-0 libgfortran3 debhelper autoconf swig bison autotools-dev tk libltdl-dev \\\n    python-libxml2 && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# Download and install Mellanox OFED 4.2.1 for Ubuntu 16.04\nRUN wget http:\/\/content.mellanox.com\/ofed\/${MOFED_SITE_PLACE}\/${MOFED_IMAGE} && \\\n    tar -xzvf ${MOFED_IMAGE} && \\\n    ${MOFED_DIR}\/mlnxofedinstall --user-space-only --without-fw-update --all -q && \\\n    cd .. && \\\n    rm -rf ${MOFED_DIR} && \\\n    rm -rf *.tgz\n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":68,
        "end":101,
        "text":"MAINTAINER travis.janssen@ibm.com"
      },
      {
        "label":"apt-install-without-version",
        "start":398,
        "end":820,
        "text":"apt-get install -y --no-install-recommends \\\\nwget \\\\nnet-tools \\\\nethtool \\\\nperl \\\\nlsb-release \\\\niproute2 \\\\npciutils \\\\nlibnl-route-3-200 \\\\nkmod \\\\nlibnuma1 \\\\nlsof \\\\nlinux-headers-4.4.0-92-generic \\\\npkg-config flex gfortran chrpath graphviz automake tcl m4 dpatch libglib2.0-0 libgfortran3 debhelper autoconf swig bison autotools-dev tk libltdl-dev \\\\npython-libxml2 && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1119,
        "end":1129,
        "text":"cd .. && \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"808170bc9e68251ae2b20136f5530c1ab7ad1bab.dockerfile",
    "file_content":"FROM circleci\/clojure:lein  \n  \nLABEL maintainer=\"Allan Davies <allandaviesza@gmail.com>\"  \n  \nRUN sudo apt-get update && sudo apt-get install -y \\  \nrsync \\  \nbuild-essential \\  \ngettext-base \\  \njq \\  \n&& sudo rm -rf \/var\/lib\/apt\/lists\/*  \n  \nRUN git clone https:\/\/github.com\/sass\/sassc.git sassc \\  \n&& git clone \\--recursive https:\/\/github.com\/sass\/libsass.git \\  \n&& cd sassc \\  \n&& export SASS_LIBSASS_PATH=$(readlink -f ..\/libsass) \\  \n&& make \\  \n&& sudo cp .\/bin\/sassc \/usr\/local\/bin  \n\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":95,
        "end":118,
        "text":"RUN sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":122,
        "end":201,
        "text":"sudo apt-get install -y \\\\nrsync \\\\nbuild-essential \\\\ngettext-base \\\\njq \\"
      },
      {
        "label":"apt-install-without-version",
        "start":122,
        "end":201,
        "text":"sudo apt-get install -y \\\\nrsync \\\\nbuild-essential \\\\ngettext-base \\\\njq \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":369,
        "end":382,
        "text":"&& cd sassc \\"
      },
      {
        "label":"use-sudo-run",
        "start":455,
        "end":492,
        "text":"&& sudo cp .\/bin\/sassc \/usr\/local\/bin"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"8083a51a7a7f61960b8895ccb182ca988a188452.dockerfile",
    "file_content":"FROM hdfgroup\/hdf5lib:1.8.16\nMAINTAINER John Readey <jreadey@hdfgroup.org>\nRUN cd \/usr\/local\/src                                    ; \\\n    pip install tornado                                  ; \\\n    pip install requests                                 ; \\\n    pip install pytz                                     ; \\\n    pip install watchdog                                 ; \\\n    git clone https:\/\/github.com\/HDFGroup\/hdf5-json.git  ; \\\n    cd hdf5-json                                         ; \\\n    python setup.py install                              ; \\\n    cd \/usr\/local\/src                                    ; \\\n    git clone https:\/\/github.com\/HDFGroup\/h5serv.git     ; \\\n    cd h5serv                                            ; \\\n    mv data \/                                            ; \\\n    ln -s \/data \n                              \nEXPOSE 5000 5000\n  \n\nCOPY entrypoint.sh \/\n\nENTRYPOINT [\"\/entrypoint.sh\"]\n\n",
    "risk_labels":[
      {
        "label":"use-cd-change-dir",
        "start":75,
        "end":96,
        "text":"RUN cd \/usr\/local\/src"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":29,
        "end":73,
        "text":"MAINTAINER John Readey <jreadey@hdfgroup.org"
      },
      {
        "label":"pip-install-without-version",
        "start":140,
        "end":379,
        "text":"pip install tornado ; \\\\npip install requests ; \\\\npip install pytz ; \\\\npip install watchdog ; \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":445,
        "end":501,
        "text":"cd hdf5-json ; \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":567,
        "end":623,
        "text":"cd \/usr\/local\/src ; \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":689,
        "end":745,
        "text":"cd h5serv ; \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "root-privilege-user",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "pip-install-without-version"
    ]
  },
  {
    "filename":"825f31420bd463ac08b3e0addb0a8840d389b9f1.dockerfile",
    "file_content":"# Build Geth in a stock Go builder container  \nFROM golang:1.9-alpine3.7 as builder  \n  \nRUN apk add --no-cache make gcc musl-dev linux-headers  \n  \nADD . \/go-ethereum  \nRUN cd \/go-ethereum && make geth  \n  \n# Pull Geth into a second stage deploy alpine container  \nFROM alpine:latest  \n  \nRUN apk add --no-cache ca-certificates  \nCOPY \\--from=builder \/go-ethereum\/build\/bin\/geth \/usr\/local\/bin\/  \n  \nEXPOSE 8545 8546 30303 30303\/udp  \nENTRYPOINT [\"geth\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":149,
        "end":167,
        "text":"ADD . \/go-ethereum"
      },
      {
        "label":"use-cd-change-dir",
        "start":170,
        "end":189,
        "text":"RUN cd \/go-ethereum"
      },
      {
        "label":"miss-specific-tags",
        "start":266,
        "end":284,
        "text":"FROM alpine:latest"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-cd-change-dir",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"82ab418339eaccb402c69ff1b45bfb4112203f2f.dockerfile",
    "file_content":"FROM golang:1.10\n\nRUN apt-get update\nRUN apt-get -y install curl g++ make bzip2 nano unixodbc unixodbc-dev mysql-client\n\nWORKDIR \/go\/src\/horgh-replicator\nCOPY . .\n\nCOPY files\/vertica-client-7.2.0-0.x86_64.tar.gz \/vertica-client.tar.gz\nRUN tar -xvf \/vertica-client.tar.gz -C \/\n\n#installing dep and vendors\nRUN go get -u github.com\/golang\/dep\/...\n\nRUN [\"sh\", \"-c\", \"cd \/go\/src\/horgh-replicator\/src \\\n    && dep ensure -update \\\n    && go build main.go \\\n    && mv main horgh-replicator\"]\n\nWORKDIR \/go\/src\/horgh-replicator\/src\n\nENTRYPOINT [\".\/horgh-replicator\", \"listen\"]",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":37,
        "end":119,
        "text":"RUN apt-get -y install curl g++ make bzip2 nano unixodbc unixodbc-dev mysql-client"
      },
      {
        "label":"apt-install-without-version",
        "start":37,
        "end":119,
        "text":"RUN apt-get -y install curl g++ make bzip2 nano unixodbc unixodbc-dev mysql-client"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":363,
        "end":391,
        "text":"\"cd \/go\/src\/horgh-replicator"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"8477d1c74c909c89491bbd178fa7f74fe285606c.dockerfile",
    "file_content":"# Get base image\nFROM ubuntu:15.04\n\n# Install the required packages\nRUN apt-get update && apt-get -y install python-pip rabbitmq-server git wget clamav && pip install Flask && pip install elasticsearch && pip install pika && pip install -U flask-cors\n\n# Install docker\nRUN wget -qO- https:\/\/get.docker.com\/ | sh\n\n# Package the code\nRUN git clone https:\/\/github.com\/BU-NU-CLOUD-SP16\/Container-Code-Classification \/usr\/local\/ccs\n\nWORKDIR \/usr\/local\/ccs\/scripts\n\n# Install sdhash\nRUN \/usr\/local\/ccs\/scripts\/install_sdhash.sh\n\n# Update the code and clamav database\nRUN git pull && freshclam\n\nCMD [\"\/bin\/bash\", \"start_services.sh\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":90,
        "end":154,
        "text":"apt-get -y install python-pip rabbitmq-server git wget clamav &&"
      },
      {
        "label":"apt-install-without-version",
        "start":90,
        "end":151,
        "text":"apt-get -y install python-pip rabbitmq-server git wget clamav"
      },
      {
        "label":"pip-install-without-version",
        "start":205,
        "end":221,
        "text":"pip install pika"
      },
      {
        "label":"pip-install-without-version",
        "start":155,
        "end":201,
        "text":"pip install Flask && pip install elasticsearch"
      },
      {
        "label":"pip-install-without-version",
        "start":222,
        "end":250,
        "text":"&& pip install -U flask-cors"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"84bd6c294d9c7144b9e0d4b4142f90f538c2197a.dockerfile",
    "file_content":"FROM ubuntu:xenial AS base\nMAINTAINER Joakim Brännström <joakim.brannstrom@gmx.com>\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install wget\n\nRUN wget -O - http:\/\/apt.llvm.org\/llvm-snapshot.gpg.key | apt-key add -\n\nRUN echo \"deb http:\/\/apt.llvm.org\/xenial\/ llvm-toolchain-xenial-3.9 main\" >> \/etc\/apt\/sources.list.d\/llvm.list\n\n# Dependencies:\n# ca-certificates - \"Problem with the SSL CA cert\" when cloning dextool otherwise.\n# sqlite3 - generates SQLite reports.\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        ca-certificates \\\n        git \\\n        sqlite3 libsqlite3-dev \\\n        make cmake ninja-build \\\n        llvm-4.0 llvm-4.0-dev clang-4.0 libclang-4.0-dev\n\nRUN apt-get -y --no-install-recommends install \\\n        gcc g++ \\\n        curl \\\n        xz-utils\n\nWORKDIR \/opt\n\nRUN git clone --depth 1 https:\/\/github.com\/joakim-brannstrom\/dextool.git\n\nENV LDC_VERSION=1.11.0\nRUN curl -fsS https:\/\/dlang.org\/install.sh | bash -s ldc-$LDC_VERSION\nENV PATH \"~\/dlang\/ldc-$LDC_VERSION\/bin:$PATH\"\nENV DC \"ldc2\"\n\nRUN mkdir -p build && cd build && cmake ..\/dextool -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=\/opt\/dextool_install\nRUN cd build && make install\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":27,
        "end":83,
        "text":"MAINTAINER Joakim Brännström <joakim.brannstrom@gmx.com>"
      },
      {
        "label":"apt-install-without-version",
        "start":113,
        "end":160,
        "text":"apt-get -y --no-install-recommends install wget"
      },
      {
        "label":"apt-install-without-version",
        "start":512,
        "end":719,
        "text":"apt-get -y --no-install-recommends install \\\\nca-certificates \\\\ngit \\\\nsqlite3 libsqlite3-dev \\\\nmake cmake ninja-build \\\\nllvm-4.0 llvm-4.0-dev clang-4.0 libclang-4.0-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":721,
        "end":819,
        "text":"RUN apt-get -y --no-install-recommends install \\\\ngcc g++ \\\\ncurl \\\\nxz-utils"
      },
      {
        "label":"use-cd-change-dir",
        "start":1185,
        "end":1200,
        "text":"RUN cd build &&"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"53c02b41d276d69f8d55db70d3d53b02376f8358.dockerfile",
    "file_content":"# Shell image that installs Kaui on startup\nFROM killbill\/base\nMAINTAINER Kill Bill core team <killbilling-users@googlegroups.com>\n\nENV KAUI_INSTALL_DIR \/var\/lib\/kaui\n\nRUN sudo mkdir -p $KAUI_INSTALL_DIR\nRUN sudo chown -R $TOMCAT_OWNER:$TOMCAT_GROUP $KAUI_INSTALL_DIR\n\n# Default kpm.yml, override as needed\nCOPY .\/kpm.yml $KAUI_INSTALL_DIR\n\nCOPY .\/kaui.sh $KAUI_INSTALL_DIR\n\nENV KPM_INSTALL_CMD ansible-playbook $ANSIBLE_OPTS  \\\n                                     -e kpm_install_dir=$KPM_INSTALL_DIR \\\n                                     -e kpm_version=$KPM_VERSION \\\n                                     -e kpm_yml=$KAUI_INSTALL_DIR\/kpm.yml \\\n                                     -e tomcat_owner=$TOMCAT_OWNER \\\n                                     -e tomcat_group=$TOMCAT_GROUP \\\n                                     -e catalina_base=$CATALINA_BASE \\\n                                     $KILLBILL_CLOUD_ANSIBLE_ROLES\/kaui.yml\n# Run kpm install and start Tomcat\nCMD [\"\/var\/lib\/kaui\/kaui.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":63,
        "end":129,
        "text":"MAINTAINER Kill Bill core team <killbilling-users@googlegroups.com"
      },
      {
        "label":"miss-specific-tags",
        "start":44,
        "end":62,
        "text":"FROM killbill\/base"
      },
      {
        "label":"use-sudo-run",
        "start":168,
        "end":267,
        "text":"RUN sudo mkdir -p $KAUI_INSTALL_DIR\\nRUN sudo chown -R $TOMCAT_OWNER:$TOMCAT_GROUP $KAUI_INSTALL_DIR"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"541257de5c1e5a67977f3f23c1c0c7f2e5a1b17d.dockerfile",
    "file_content":"FROM ubuntu:14.04\nRUN apt-get update && apt-get install -y python-pip python-dev\nRUN mkdir -p \/server\nADD requirements.txt \/server\/requirements.txt\nWORKDIR \/server\nRUN pip install -r requirements.txt\n\nADD . \/server\nEXPOSE 8080\nCMD python app.py\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":102,
        "end":147,
        "text":"ADD requirements.txt \/server\/requirements.txt"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":201,
        "end":214,
        "text":"ADD . \/server"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":37,
        "end":80,
        "text":"&& apt-get install -y python-pip python-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":37,
        "end":77,
        "text":"&& apt-get install -y python-pip python-"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"542d26c0c0b4777e60f733493c0dbe87d2e00fb4.dockerfile",
    "file_content":"FROM ubuntu:16.04  \nMAINTAINER Derrick Shultz <warlock05@gmail.com>  \nRUN apt-get update && apt-get install -y --force-yes lame madplay ezstream  \nVOLUME [\"\/ezstream\", \"\/music\"]  \nENTRYPOINT [\"\/usr\/bin\/ezstream\", \"-c\", \"\/ezstream\/ezstream.xml\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":67,
        "text":"MAINTAINER Derrick Shultz <warlock05@gmail.com>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":92,
        "end":144,
        "text":"apt-get install -y --force-yes lame madplay ezstream"
      },
      {
        "label":"apt-install-without-version",
        "start":92,
        "end":144,
        "text":"apt-get install -y --force-yes lame madplay ezstream"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"55ab299ecd12fafce01f08e8a0222c41cd196799.dockerfile",
    "file_content":"# PHP Symfony2 dockerfile with PHP 5.5\n\nFROM gezpage\/ubuntu\n\nMAINTAINER gezpage@gmail.com\n\nADD files\/install.sh \/root\/install.sh\nRUN \/root\/install.sh\n\nADD files\/000-default.conf \/etc\/apache2\/sites-enabled\/000-default.conf\nADD files\/cliphp.ini \/etc\/php5\/cli\/php.ini\nADD files\/apachephp.ini \/etc\/php5\/apache2\/php.ini\nADD files\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf\nADD files\/.bashrc \/home\/www-user\/.bashrc\n\nRUN chown www-user.www-data \/home\/www-user\/.bashrc\n\nEXPOSE 22 80\n\nCMD [\"\/usr\/bin\/supervisord\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":61,
        "end":89,
        "text":"MAINTAINER gezpage@gmail.com"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":91,
        "end":128,
        "text":"ADD files\/install.sh \/root\/install.sh"
      },
      {
        "label":"miss-specific-tags",
        "start":40,
        "end":59,
        "text":"FROM gezpage\/ubuntu"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":151,
        "end":422,
        "text":"ADD files\/000-default.conf \/etc\/apache2\/sites-enabled\/000-default.conf\\nADD files\/cliphp.ini \/etc\/php5\/cli\/php.ini\\nADD files\/apachephp.ini \/etc\/php5\/apache2\/php.ini\\nADD files\/supervisord.conf \/etc\/supervisor\/conf.d\/supervisord.conf\\nADD files\/.bashrc \/home\/www-user\/.bashrc"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"574e853b236b8d2c7aeff608cb23ba3b0e50a54e.dockerfile",
    "file_content":"FROM debian:stretch\nMAINTAINER Lovell Fuller <npm@lovell.info>\n\n# Create Debian-based container suitable for cross-compiling Linux ARMv6 binaries\n\n# Build dependencies\nRUN \\\n  apt-get update && \\\n  apt-get install -y curl && \\\n  dpkg --add-architecture armhf && \\\n  apt-get update && \\\n  apt-get install -y autoconf libtool nasm gtk-doc-tools texinfo gperf advancecomp libglib2.0-dev jq gettext intltool autopoint cmake && \\\n  mkdir \/root\/tools && \\\n  curl -Ls https:\/\/github.com\/rvagg\/rpi-newer-crosstools\/archive\/master.tar.gz | tar xzC \/root\/tools --strip-components=1 && \\\n  curl https:\/\/sh.rustup.rs -sSf | sh -s -- -y && \\\n  ~\/.cargo\/bin\/rustup target add arm-unknown-linux-gnueabihf\n\n# Compiler settings\nENV \\\n  PATH=\"\/root\/.cargo\/bin:\/root\/tools\/x64-gcc-6.5.0\/arm-rpi-linux-gnueabihf\/bin:$PATH\" \\\n  PLATFORM=\"linux-armv6\" \\\n  CHOST=\"arm-rpi-linux-gnueabihf\" \\\n  RUST_TARGET=\"arm-unknown-linux-gnueabihf\" \\\n  FLAGS=\"-marm -mcpu=arm1176jzf-s -mfpu=vfp -mfloat-abi=hard -Os -D_GLIBCXX_USE_CXX11_ABI=0\"\n\nCOPY Toolchain.cmake \/root\/\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":62,
        "text":"MAINTAINER Lovell Fuller <npm@lovell.info>"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":198,
        "end":221,
        "text":"apt-get install -y curl"
      },
      {
        "label":"apt-install-without-version",
        "start":198,
        "end":221,
        "text":"apt-get install -y curl"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":288,
        "end":444,
        "text":"apt-get install -y autoconf libtool nasm gtk-doc-tools texinfo gperf advancecomp libglib2.0-dev jq gettext intltool autopoint cmake && \\\\nmkdir \/root\/tools"
      },
      {
        "label":"apt-install-without-version",
        "start":288,
        "end":444,
        "text":"apt-get install -y autoconf libtool nasm gtk-doc-tools texinfo gperf advancecomp libglib2.0-dev jq gettext intltool autopoint cmake && \\\\nmkdir \/root\/tools"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"57d1113d31f6ac2e4968a615e652f5b0ad20d02d.dockerfile",
    "file_content":"FROM ubuntu:16.04  \nRUN apt-get update  \nRUN apt-get install libfontconfig curl bzip2 -y  \nRUN curl -sL https:\/\/deb.nodesource.com\/setup_9.x nodesource_setup.sh | bash  \nRUN apt-get install nodejs -y  \n  \nWORKDIR \/root  \nRUN npm install phantomjs-prebuilt pageres pageres-cli  \n  \nADD entrypoint.sh \/entrypoint.sh  \nADD map.js \/map.js  \n  \nWORKDIR \/  \nENTRYPOINT [\"\/entrypoint.sh\"]  \n\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":41,
        "end":85,
        "text":"RUN apt-get install libfontconfig curl bzip2"
      },
      {
        "label":"apt-install-without-version",
        "start":41,
        "end":85,
        "text":"RUN apt-get install libfontconfig curl bzip2"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":281,
        "end":334,
        "text":"ADD entrypoint.sh \/entrypoint.sh\\nADD map.js \/map.js"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"57e1bfeba8df23346b6747ae699f127913bb8326.dockerfile",
    "file_content":"#  \n# DesertBit Nginx Dockerfile  \n#  \nFROM nginx  \n  \nMAINTAINER Roland Singer, roland.singer@desertbit.com  \n  \nADD nginx.conf \/etc\/nginx\/nginx.conf  \nADD includes \/etc\/nginx\/includes  \nADD run.sh \/usr\/bin\/run.sh  \nRUN chmod +x \/usr\/bin\/run.sh && \\  \nmkdir -p \/etc\/nginx\/conf.d && \\  \nmkdir -p \/etc\/nginx\/certs  \n  \nVOLUME [\"\/etc\/nginx\/conf.d\", \"\/etc\/nginx\/certs\", \"\/var\/log\/nginx\"]  \n  \nEXPOSE 80 443  \nCMD [\"\/usr\/bin\/run.sh\"]\n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":39,
        "end":49,
        "text":"FROM nginx"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":55,
        "end":108,
        "text":"MAINTAINER Roland Singer, roland.singer@desertbit.com"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":114,
        "end":214,
        "text":"ADD nginx.conf \/etc\/nginx\/nginx.conf\\nADD includes \/etc\/nginx\/includes\\nADD run.sh \/usr\/bin\/run.sh"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"588be591562f7e58942dc6ed050d0677b2c7fede.dockerfile",
    "file_content":"FROM openforis\/java\nMAINTAINER OpenForis\nEXPOSE 80\n\nENV USER_GROUP \"sepalUsers\"\n\nADD config \/config\nADD script \/script\n\nRUN chmod -R 500 \/script && \\\n    chmod -R 400 \/config; sync && \\\n    \/script\/init_image.sh\n\nADD binary\/sepal-user.jar \/opt\/sepal\/bin\/sepal-user.jar\n\nCMD [\"\/script\/init_container.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":81,
        "end":118,
        "text":"ADD config \/config\\nADD script \/script"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":19,
        "text":"FROM openforis\/java"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":40,
        "text":"MAINTAINER OpenForis"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":213,
        "end":264,
        "text":"ADD binary\/sepal-user.jar \/opt\/sepal\/bin\/sepal-user"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"592645dcfd49df9419402f34ab243c93ae74a242.dockerfile",
    "file_content":"FROM ubuntu:trusty\n\nRUN apt-get update && apt-get -y install dpkg-dev python-tox python-setuptools \\\n  python-dev debhelper python-yaml libyaml-dev git wget\n\nRUN cd `mktemp -d` && wget http:\/\/mirrors.kernel.org\/ubuntu\/pool\/universe\/d\/dh-virtualenv\/dh-virtualenv_0.11-1_all.deb && dpkg -i dh-virtualenv_0.11-1_all.deb && apt-get -f install\n\nENV HOME \/work\nENV PWD \/work\nWORKDIR \/work",
    "risk_labels":[
      {
        "label":"use-cd-change-dir",
        "start":158,
        "end":184,
        "text":"RUN cd `mktemp -d` && wget"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":42,
        "end":156,
        "text":"apt-get -y install dpkg-dev python-tox python-setuptools \\\\npython-dev debhelper python-yaml libyaml-dev git wget"
      },
      {
        "label":"apt-install-without-version",
        "start":42,
        "end":156,
        "text":"apt-get -y install dpkg-dev python-tox python-setuptools \\\\npython-dev debhelper python-yaml libyaml-dev git wget"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"5b92a36da09fde0bcc570716cf1c446b6c4e2343.dockerfile",
    "file_content":"FROM nvidia\/cuda:8.0-devel-ubuntu16.04\n\n\n# Develop\nRUN apt-get update && apt-get install -y \\\n        software-properties-common \\\n        wget curl git cmake cmake-curses-gui \\\n        libboost-all-dev \\\n        libflann-dev \\\n        libgsl0-dev \\\n        libgoogle-perftools-dev \\\n        libeigen3-dev \\\n\tca-certificates \\\n\tmake \\\n\tautoconf \\\n\tlibtool \\\n\tpkg-config \\\n\tpython \\\n\tlibxext-dev \\\n\tx11proto-gl-dev &&\\\n\trm -rf \/var\/lib\/apt\/lists\/*\n \nRUN dpkg --add-architecture i386 && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        gcc-multilib \\\n        libxext-dev:i386 \\\n        libx11-dev:i386 && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# Intall some basic GUI and sound libs\nRUN apt-get update && apt-get install -y \\\n        xz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme \\\n        fonts-dejavu fonts-liberation hicolor-icon-theme \\\n        libcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module \\\n        libasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 \\\n        libgl1-mesa-glx libgl1-mesa-dri language-pack-en \\\n        && update-locale LANG=en_US.UTF-8 LC_MESSAGES=POSIX\n\n# Intall some basic GUI tools\nRUN apt-get update && apt-get install -y \\\n        cmake-qt-gui \\\n        gnome-terminal\n\n# Intall ROS\nRUN sh -c 'echo \"deb http:\/\/packages.ros.org\/ros\/ubuntu $(lsb_release -sc) main\" > \/etc\/apt\/sources.list.d\/ros-latest.list'\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116\nRUN apt-get update && apt-get install -y ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common\nRUN apt-get update && apt-get install -y ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers ros-kinetic-rosbridge-server\nRUN apt-get update && apt-get install -y libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests\n\n# Add basic user\nENV USERNAME autoware\nENV PULSE_SERVER \/run\/pulse\/native\nRUN useradd -m $USERNAME && \\\n        echo \"$USERNAME:$USERNAME\" | chpasswd && \\\n        usermod --shell \/bin\/bash $USERNAME && \\\n        usermod -aG sudo $USERNAME && \\\n        echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> \/etc\/sudoers.d\/$USERNAME && \\\n        chmod 0440 \/etc\/sudoers.d\/$USERNAME && \\\n        # Replace 1000 with your user\/group id\n        usermod  --uid 1000 $USERNAME && \\\n        groupmod --gid 1000 $USERNAME\n\n# Setup .bashrc for ROS\nRUN echo \"source \/opt\/ros\/kinetic\/setup.bash\" >> \/home\/$USERNAME\/.bashrc && \\\n        #Fix for qt and X server errors\n        echo \"export QT_X11_NO_MITSHM=1\" >> \/home\/$USERNAME\/.bashrc && \\\n        # cd to home on login\n        echo \"cd\" >> \/home\/$USERNAME\/.bashrc\n\n# ENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},graphics\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        pkg-config \\\n        libxau-dev \\\n        libxdmcp-dev \\\n        libxcb1-dev \\\n        libxext-dev \\\n        libx11-dev && \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\nCOPY --from=nvidia\/opengl:1.0-glvnd-runtime-ubuntu16.04 \\\n  \/usr\/local\/lib\/x86_64-linux-gnu \\\n  \/usr\/local\/lib\/x86_64-linux-gnu\n\nCOPY --from=nvidia\/opengl:1.0-glvnd-runtime-ubuntu16.04 \\\n  \/usr\/local\/share\/glvnd\/egl_vendor.d\/10_nvidia.json \\\n  \/usr\/local\/share\/glvnd\/egl_vendor.d\/10_nvidia.json\n\nRUN echo '\/usr\/local\/lib\/x86_64-linux-gnu' >> \/etc\/ld.so.conf.d\/glvnd.conf && \\\n    ldconfig && \\\n    echo '\/usr\/local\/$LIB\/libGL.so.1' >> \/etc\/ld.so.preload && \\\n    echo '\/usr\/local\/$LIB\/libEGL.so.1' >> \/etc\/ld.so.preload\n\n# nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES \\\n    ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES \\\n    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\n# Change user\nUSER autoware\n\nRUN sudo rosdep init \\\n        && rosdep update \\\n        && echo \"source \/opt\/ros\/kinetic\/setup.bash\" >> ~\/.bashrc\n\n# YOLO_V2 and YOLO_V3\nRUN cd ~ && git clone https:\/\/github.com\/pjreddie\/darknet.git darknet \\\n    && cd ~\/darknet && git checkout 56d69e73aba37283ea7b9726b81afd2f79cd1134\n\nCOPY --chown=autoware:autoware .\/docker\/generic\/data\/yolov2\/yolo.cfg \/home\/$USERNAME\/darknet\/cfg\/yolo.cfg\nCOPY --chown=autoware:autoware .\/docker\/generic\/data\/yolov2\/yolo.weights \/home\/$USERNAME\/darknet\/data\/yolo.weights\nCOPY --chown=autoware:autoware .\/docker\/generic\/data\/yolov3\/yolov3.cfg \/home\/$USERNAME\/darknet\/cfg\/yolov3.cfg\nCOPY --chown=autoware:autoware .\/docker\/generic\/data\/yolov3\/yolov3.weights \/home\/$USERNAME\/darknet\/data\/yolov3.weights\n\n\n# SSD dependencies\nRUN sudo apt-get update && sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libboost-all-dev\nRUN sudo apt-get update && sudo apt-get install -y libatlas-base-dev libgoogle-glog-dev libgflags-dev liblmdb-dev\nRUN sudo apt-get update && sudo apt-get install -y libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11\n\n# SSD setup\nRUN cd ~ && git clone https:\/\/github.com\/weiliu89\/caffe.git ssdcaffe \\\n    && cd ~\/ssdcaffe && git checkout 4817bf8b4200b35ada8ed0dc378dceaf38c539e4\n\nCOPY --chown=autoware:autoware .\/docker\/generic\/data\/ssd\/Makefile.config \/home\/$USERNAME\/ssdcaffe\/Makefile.config\nCOPY --chown=autoware:autoware .\/docker\/generic\/data\/ssd\/models\/ \/home\/$USERNAME\/ssdcaffe\/models\/\n\nRUN cd ~\/ssdcaffe && make && make distribute\n\n\n# Install Autoware\nCOPY . \/home\/$USERNAME\/autoware\nRUN sudo chown -R autoware \/home\/$USERNAME\/autoware\nRUN \/bin\/bash -c 'source \/opt\/ros\/kinetic\/setup.bash; cd \/home\/$USERNAME\/autoware\/ros\/src; git submodule update --init --recursive; catkin_init_workspace; cd ..\/; .\/catkin_make_release'\nRUN echo \"source \/home\/$USERNAME\/autoware\/ros\/devel\/setup.bash\" >> \/home\/$USERNAME\/.bashrc\n\n# Setting\nENV LANG=\"en_US.UTF-8\"\nRUN echo \"export LANG=\\\"en_US.UTF-8\\\"\" >> \/home\/$USERNAME\/.bashrc\n\n# Install dev tools\nRUN sudo apt-get -y install vim tmux\n\n# Change Terminal Color\nRUN gconftool-2 --set \"\/apps\/gnome-terminal\/profiles\/Default\/use_theme_background\" --type bool false\nRUN gconftool-2 --set \"\/apps\/gnome-terminal\/profiles\/Default\/use_theme_colors\" --type bool false\nRUN gconftool-2 --set \"\/apps\/gnome-terminal\/profiles\/Default\/background_color\" --type string \"#000000\"\n\n\n# Default CMD\nCMD [\"\/bin\/bash\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":73,
        "end":413,
        "text":"apt-get install -y \\\\nsoftware-properties-common \\\\nwget curl git cmake cmake-curses-gui \\\\nlibboost-all-dev \\\\nlibflann-dev \\\\nlibgsl0-dev \\\\nlibgoogle-perftools-dev \\\\nlibeigen3-dev \\\\nca-certificates \\\\nmake \\\\nautoconf \\\\nlibtool \\\\npkg-config \\\\npython \\\\nlibxext-dev \\\\nx11proto-gl-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":73,
        "end":438,
        "text":"apt-get install -y \\\\nsoftware-properties-common \\\\nwget curl git cmake cmake-curses-gui \\\\nlibboost-all-dev \\\\nlibflann-dev \\\\nlibgsl0-dev \\\\nlibgoogle-perftools-dev \\\\nlibeigen3-dev \\\\nca-certificates \\\\nmake \\\\nautoconf \\\\nlibtool \\\\npkg-config \\\\npython \\\\nlibxext-dev \\\\nx11proto-gl-dev &&\\\\nrm -rf \/var\/lib\/apt"
      },
      {
        "label":"apt-install-without-version",
        "start":509,
        "end":627,
        "text":"apt-get install -y --no-install-recommends \\\\ngcc-multilib \\\\nlibxext-dev:i386 \\\\nlibx11-dev:i386"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":727,
        "end":1077,
        "text":"apt-get install -y \\\\nxz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme \\\\nfonts-dejavu fonts-liberation hicolor-icon-theme \\\\nlibcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module \\\\nlibasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 \\\\nlibgl1-mesa-glx libgl1-mesa-dri language-pack-en \\"
      },
      {
        "label":"apt-install-without-version",
        "start":727,
        "end":1075,
        "text":"apt-get install -y \\\\nxz-utils file locales dbus-x11 pulseaudio dmz-cursor-theme \\\\nfonts-dejavu fonts-liberation hicolor-icon-theme \\\\nlibcanberra-gtk3-0 libcanberra-gtk-module libcanberra-gtk3-module \\\\nlibasound2 libgtk2.0-0 libdbus-glib-1-2 libxt6 libexif12 \\\\nlibgl1-mesa-glx libgl1-mesa-dri language-pack-en"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1191,
        "end":1257,
        "text":"apt-get install -y \\\\ncmake-qt-gui \\\\ngnome-terminal"
      },
      {
        "label":"apt-install-without-version",
        "start":1191,
        "end":1257,
        "text":"apt-get install -y \\\\ncmake-qt-gui \\\\ngnome-terminal"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1957,
        "end":2213,
        "text":"apt-get install -y libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests"
      },
      {
        "label":"apt-install-without-version",
        "start":1957,
        "end":2213,
        "text":"apt-get install -y libnlopt-dev freeglut3-dev qtbase5-dev libqt5opengl5-dev libssh2-1-dev libarmadillo-dev libpcap-dev gksu libgl1-mesa-dev libglew-dev python-wxgtk3.0 software-properties-common libmosquitto-dev libyaml-cpp-dev python-flask python-requests"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1528,
        "end":1934,
        "text":"apt-get install -y ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common\\nRUN apt-get update && apt-get install -y ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers ros-kinetic-rosbridge-server"
      },
      {
        "label":"apt-install-without-version",
        "start":1528,
        "end":1934,
        "text":"apt-get install -y ros-kinetic-desktop-full ros-kinetic-nmea-msgs ros-kinetic-nmea-navsat-driver ros-kinetic-sound-play ros-kinetic-jsk-visualization ros-kinetic-grid-map ros-kinetic-gps-common\\nRUN apt-get update && apt-get install -y ros-kinetic-controller-manager ros-kinetic-ros-control ros-kinetic-ros-controllers ros-kinetic-gazebo-ros-control ros-kinetic-joystick-drivers ros-kinetic-rosbridge-server"
      },
      {
        "label":"apt-install-without-version",
        "start":3104,
        "end":3281,
        "text":"apt-get install -y --no-install-recommends \\\\npkg-config \\\\nlibxau-dev \\\\nlibxdmcp-dev \\\\nlibxcb1-dev \\\\nlibxext-dev \\\\nlibx11-dev && \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4277,
        "end":4299,
        "text":"&& cd ~\/darknet && git"
      },
      {
        "label":"use-sudo-run",
        "start":4822,
        "end":4853,
        "text":"RUN sudo apt-get update && sudo"
      },
      {
        "label":"use-sudo-run",
        "start":4969,
        "end":5000,
        "text":"RUN sudo apt-get update && sudo"
      },
      {
        "label":"use-sudo-run",
        "start":5061,
        "end":5084,
        "text":"RUN sudo apt-get update"
      },
      {
        "label":"use-sudo-run",
        "start":5175,
        "end":5198,
        "text":"RUN sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":4822,
        "end":5282,
        "text":"RUN sudo apt-get update && sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler\\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libboost-all-dev\\nRUN sudo apt-get update && sudo apt-get install -y libatlas-base-dev libgoogle-glog-dev libgflags-dev liblmdb-dev\\nRUN sudo apt-get update && sudo apt-get install -y libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11"
      },
      {
        "label":"apt-install-without-version",
        "start":4854,
        "end":5282,
        "text":"apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler\\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libboost-all-dev\\nRUN sudo apt-get update && sudo apt-get install -y libatlas-base-dev libgoogle-glog-dev libgflags-dev liblmdb-dev\\nRUN sudo apt-get update && sudo apt-get install -y libhdf5-10 libhdf5-serial-dev libhdf5-dev libhdf5-cpp-11"
      },
      {
        "label":"use-cd-change-dir",
        "start":5296,
        "end":5307,
        "text":"RUN cd ~ &&"
      },
      {
        "label":"use-cd-change-dir",
        "start":5371,
        "end":5387,
        "text":"&& cd ~\/ssdcaffe"
      },
      {
        "label":"use-cd-change-dir",
        "start":5659,
        "end":5676,
        "text":"RUN cd ~\/ssdcaffe"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"6679ffcb3a8eb41ad982cbd671c1e6dad37e148f.dockerfile",
    "file_content":"# Based on the mozilla-central lint image, as it is nice and small.\nFROM quay.io\/mozilla\/lint\n\n# Add git to the image.\nRUN apt-get update -y && apt-get install -y git\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":141,
        "end":166,
        "text":"&& apt-get install -y git"
      },
      {
        "label":"apt-install-without-version",
        "start":141,
        "end":166,
        "text":"&& apt-get install -y git"
      },
      {
        "label":"miss-specific-tags",
        "start":68,
        "end":93,
        "text":"FROM quay.io\/mozilla\/lint"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"67d3b91f21d938367dda96836d72e8bf31d80bde.dockerfile",
    "file_content":"#\n# To build:\n#  docker build --rm -t vpp-centos-userspace-cni .\n#\n\n\n# -------- Builder stage.\nFROM centos\nMAINTAINER Billy McFall <bmcfall@redhat.com>\n\n# Add any additional repos to image\nCOPY *.repo \/etc\/yum.repos.d\/\n# Install VPP - Needed by CNI-VPP\nRUN yum install -y vpp-plugins vpp-devel vpp-api-python vpp-api-lua vpp-api-java; yum clean all\n\n#\n# Download and Build vpp-app\n#\n\n# Pull in GO\nRUN rpm --import https:\/\/mirror.go-repo.io\/centos\/RPM-GPG-KEY-GO-REPO && curl -s https:\/\/mirror.go-repo.io\/centos\/go-repo.repo | tee \/etc\/yum.repos.d\/go-repo.repo\nRUN yum install -y git golang make\n\n# Build the vpp-app\nWORKDIR \/root\/go\/src\/github.com\/intel\/\nRUN git clone https:\/\/github.com\/intel\/userspace-cni-network-plugin\nWORKDIR \/root\/go\/src\/github.com\/intel\/userspace-cni-network-plugin\nRUN make extras\nRUN cp cnivpp\/vpp-app\/vpp-app \/usr\/sbin\/vpp-app\n\n\n# -------- Import stage.\nFROM centos\n\n# Install UserSpace CNI\nCOPY --from=0 \/usr\/sbin\/vpp-app \/usr\/sbin\/vpp-app\n\n\n# Add any additional repos to image\nCOPY *.repo \/etc\/yum.repos.d\/\n\n\n# Install VPP\nRUN yum install -y vpp-plugins vpp-devel vpp-api-python vpp-api-lua vpp-api-java; yum clean all\n\n# Overwrite VPP systemfiles\nCOPY startup.conf \/etc\/vpp\/startup.conf\nCOPY 80-vpp.conf \/etc\/sysctl.d\/80-vpp.conf\n\n\n# Install script to start both VPP and vpp-agent\nCOPY vppcni.sh vppcni.sh\n\n\n# Setup VPP UserGroup and User\n#RUN useradd --no-log-init -r -g vpp vpp\n#USER vpp\n\n\n# For Development, overwrite repo generated vpp-app with local development binary.\n# Needs to be commented out before each merge.\n#COPY vpp-app \/usr\/sbin\/vpp-app\n\n\nCMD bash -C '.\/vppcni.sh';'bash'\n#CMD [ \".\/vppcni.sh\" ]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":107,
        "end":150,
        "text":"MAINTAINER Billy McFall <bmcfall@redhat.com"
      },
      {
        "label":"miss-specific-tags",
        "start":95,
        "end":106,
        "text":"FROM centos"
      },
      {
        "label":"yum-install-without-version",
        "start":253,
        "end":348,
        "text":"RUN yum install -y vpp-plugins vpp-devel vpp-api-python vpp-api-lua vpp-api-java; yum clean all"
      },
      {
        "label":"miss-specific-tags",
        "start":881,
        "end":892,
        "text":"FROM centos"
      },
      {
        "label":"yum-install-without-version",
        "start":1052,
        "end":1147,
        "text":"RUN yum install -y vpp-plugins vpp-devel vpp-api-python vpp-api-lua vpp-api-java; yum clean all"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"687b6aa50798056a0312cecfe922b0e737e88d1d.dockerfile",
    "file_content":"FROM quay.io\/pypa\/manylinux1_x86_64\n\n# Set up repoforge\nCOPY RPM-GPG-KEY.dag.txt \/tmp\/\nRUN rpm --import \/tmp\/RPM-GPG-KEY.dag.txt\n\nENV RPMFORGE_FILE \"rpmforge-release-0.5.3-1.el5.rf.x86_64.rpm\"\nADD \"https:\/\/repoforge.cu.be\/redhat\/el5\/en\/x86_64\/dag\/RPMS\/${RPMFORGE_FILE}\" \/tmp\/${RPMFORGE_FILE}\n\nRUN rpm -i \/tmp\/${RPMFORGE_FILE}\n\n# Install SDL and portmidi dependencies\nRUN yum install -y zlib-devel libjpeg-devel libX11-devel\\\n    alsa-lib-devel mesa-libGLU-devel audiofile-devel \\\n    cmake alsa-lib-devel java-1.7.0-openjdk-devel jpackage-utils libtiff-devel \\\n    mikmod-devel smpeg-devel giflib-devel libsndfile-devel dbus-devel \\\n    pulseaudio-libs-devel xz\n\n# Build and install PNG\nADD libpng \/png_build\/\nRUN [\"bash\", \"\/png_build\/build-png.sh\"]\n\n# Build and install WEBP\nADD libwebp \/webp_build\/\nRUN [\"bash\", \"\/webp_build\/build-webp.sh\"]\n\n# Build and install freetype\nADD freetype \/freetype_build\/\nRUN [\"bash\", \"\/freetype_build\/build-freetype.sh\"]\n\n# Build and install fluidsynth\nADD fluidsynth \/fluidsynth_build\/\nRUN [\"bash\", \"\/fluidsynth_build\/build-fluidsynth.sh\"]\n\nADD ogg \/ogg_build\/\nRUN [\"bash\", \"\/ogg_build\/build-ogg.sh\"]\n\n# Build and install flac\nADD flac \/flac_build\/\nRUN [\"bash\", \"\/flac_build\/build-flac.sh\"]\n\n# Build and install SDL\nADD sdl_libs \/sdl_build\/\nRUN [\"bash\", \"\/sdl_build\/build-sdl-libs.sh\"]\n\n# Build and install SDL and portmidi\nADD portmidi \/portmidi_build\/\nRUN [\"bash\", \"\/portmidi_build\/build-portmidi.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":193,
        "end":291,
        "text":"ADD \"https:\/\/repoforge.cu.be\/redhat\/el5\/en\/x86_64\/dag\/RPMS\/${RPMFORGE_FILE}\" \/tmp\/${RPMFORGE_FILE}"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":35,
        "text":"FROM quay.io\/pypa\/manylinux1_x86_64"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":687,
        "end":709,
        "text":"ADD libpng \/png_build\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":776,
        "end":800,
        "text":"ADD libwebp \/webp_build\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":873,
        "end":902,
        "text":"ADD freetype \/freetype_build\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":985,
        "end":1017,
        "text":"ADD fluidsynth \/fluidsynth_build"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1074,
        "end":1093,
        "text":"ADD ogg \/ogg_build\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1160,
        "end":1181,
        "text":"ADD flac \/flac_build\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1249,
        "end":1273,
        "text":"ADD sdl_libs \/sdl_build\/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":1357,
        "end":1386,
        "text":"ADD portmidi \/portmidi_build\/"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"yum-install-without-version",
        "start":367,
        "end":661,
        "text":"RUN yum install -y zlib-devel libjpeg-devel libX11-devel\\\\nalsa-lib-devel mesa-libGLU-devel audiofile-devel \\\\ncmake alsa-lib-devel java-1.7.0-openjdk-devel jpackage-utils libtiff-devel \\\\nmikmod-devel smpeg-devel giflib-devel libsndfile-devel dbus-devel \\\\npulseaudio-libs-devel xz"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"68e867812fe6b0fc9d1deb946085d0be45043976.dockerfile",
    "file_content":"FROM ubuntu:xenial\n\nARG wdir=\"\/opt\"\nWORKDIR $wdir\nENV PATH=\"${wdir}\/linuxdeployqt:${PATH}\"\n\nRUN apt-get update && apt-get install -y software-properties-common\nRUN add-apt-repository ppa:nixnote\/nixnote2-stable -y && \\\n    add-apt-repository ppa:beineri\/opt-qt-5.11.0-xenial -y && \\\n    apt-get update -qq\n\n# last line is for webkit build from source\n# qt pkg names: https:\/\/askubuntu.com\/questions\/508503\/whats-the-development-package-for-qt5-in-14-04\nRUN apt-get update && apt-get install -y git-core build-essential \\\n                              qt511base qt511tools qt511webchannel qt511script qt511translations qt511websockets qt511xmlpatterns qt511declarative qt511location qt511sensors \\\n                              wget curl make pkg-config \\\n                              libboost-dev libboost-test-dev libboost-program-options-dev libevent-dev libcurl4-openssl-dev \\\n                              libpoppler-qt5-dev libhunspell-dev nixnote2-tidy \\\n                              cmake build-essential perl python ruby flex gperf bison cmake ninja-build libfontconfig1-dev libicu-dev libsqlite3-dev zlib1g-dev libpng-dev libjpeg-dev libxslt1-dev libxml2-dev libhyphen-dev libxcomposite-dev libxrender-dev libglib2.0-dev libgstreamer-plugins-base1.0-dev\n\n\n# install linuxdeployqt\nRUN wget -nv \"https:\/\/github.com\/probonopd\/linuxdeployqt\/releases\/download\/continuous\/linuxdeployqt-continuous-x86_64.AppImage\" && \\\n        chmod a+x .\/linuxdeployqt-continuous-x86_64.AppImage && \\\n        .\/linuxdeployqt-continuous-x86_64.AppImage --appimage-extract && \\\n        mv squashfs-root linuxdeployqt && \\\n        mv linuxdeployqt\/AppRun linuxdeployqt\/linuxdeployqt\n\nRUN cd $wdir && git clone \"https:\/\/github.com\/robert7\/nixnote2.git\" && cd nixnote2 && git checkout master\n\nCMD \/bin\/bash\n\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":114,
        "end":159,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"apt-install-without-version",
        "start":114,
        "end":159,
        "text":"apt-get install -y software-properties-common"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":475,
        "end":1264,
        "text":"apt-get install -y git-core build-essential \\\\nqt511base qt511tools qt511webchannel qt511script qt511translations qt511websockets qt511xmlpatterns qt511declarative qt511location qt511sensors \\\\nwget curl make pkg-config \\\\nlibboost-dev libboost-test-dev libboost-program-options-dev libevent-dev libcurl4-openssl-dev \\\\nlibpoppler-qt5-dev libhunspell-dev nixnote2-tidy \\\\ncmake build-essential perl python ruby flex gperf bison cmake ninja-build libfontconfig1-dev libicu-dev libsqlite3-dev zlib1g-dev libpng-dev libjpeg-dev libxslt1-dev libxml2-dev libhyphen-dev libxcomposite-dev libxrender-dev libglib2.0-dev libgstreamer-plugins-base1.0-dev"
      },
      {
        "label":"apt-install-without-version",
        "start":475,
        "end":1264,
        "text":"apt-get install -y git-core build-essential \\\\nqt511base qt511tools qt511webchannel qt511script qt511translations qt511websockets qt511xmlpatterns qt511declarative qt511location qt511sensors \\\\nwget curl make pkg-config \\\\nlibboost-dev libboost-test-dev libboost-program-options-dev libevent-dev libcurl4-openssl-dev \\\\nlibpoppler-qt5-dev libhunspell-dev nixnote2-tidy \\\\ncmake build-essential perl python ruby flex gperf bison cmake ninja-build libfontconfig1-dev libicu-dev libsqlite3-dev zlib1g-dev libpng-dev libjpeg-dev libxslt1-dev libxml2-dev libhyphen-dev libxcomposite-dev libxrender-dev libglib2.0-dev libgstreamer-plugins-base1.0-dev"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":1670,
        "end":1695,
        "text":"RUN cd $wdir && git clone"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"69424e5bf34316e473fd8bd7b980fd99a7abfaf1.dockerfile",
    "file_content":"FROM ubuntu:14.04\nRUN apt-get update\nRUN apt-get install -y nginx\nADD .\/nginx.conf \/etc\/nginx\/sites-available\/default\nRUN service nginx restart\n\n# automatically copies the package source,\n# fetches the application dependencies\n# builds the program, and configures it to run on startup.\nFROM golang:onbuild\nEXPOSE 8080\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":66,
        "end":117,
        "text":"ADD .\/nginx.conf \/etc\/nginx\/sites-available\/default"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":37,
        "end":65,
        "text":"RUN apt-get install -y nginx"
      },
      {
        "label":"apt-install-without-version",
        "start":37,
        "end":65,
        "text":"RUN apt-get install -y nginx"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"69522026ba356d5d89da3aaff88dee77af9dd5e9.dockerfile",
    "file_content":"FROM balenalib\/amd64-debian:stretch-build\nLABEL io.balena.device-type=\"up-board\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tless \\\n\t\tkmod \\\n\t\tnano \\\n\t\tnet-tools \\\n\t\tifupdown \\\n\t\tiputils-ping \\\n\t\ti2c-tools \\\n\t\tusbutils \\\n\t&& rm -rf \/var\/lib\/apt\/lists\/*\n\n# MRAA\nENV MRAA_COMMIT 967585c9ea0e1a8818d2172d2395d8502f6180a2\nENV MRAA_VERSION 2.0.0\n# UPM\nENV UPM_COMMIT 16e72d2ff709e27d411f38b002bc0284354951e2\nENV UPM_VERSION 1.7.1\n\n# Install mraa\nRUN set -x \\\n\t&& buildDeps=' \\\n\t\tlibpcre3-dev \\\n\t\tpython-dev \\\n\t\tswig \\\n\t\tpkg-config \\\n\t' \\\n\t&& if ! apt-cache show 'build-essential' 2>\/dev\/null | grep -q '^Version:'; then buildDeps=\"$buildDeps build-essential\"; fi \\\n\t&& if ! apt-cache show 'git' 2>\/dev\/null | grep -q '^Version:'; then buildDeps=\"$buildDeps git\"; fi \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf \/var\/lib\/apt\/lists\/* \\\n\t&& mkdir \/cmake \\ \n\t&& curl -SL https:\/\/cmake.org\/files\/v3.5\/cmake-3.5.2.tar.gz -o cmake.tar.gz \\\n\t&& echo \"92d8410d3d981bb881dfff2aed466da55a58d34c7390d50449aa59b32bb5e62a  cmake.tar.gz\" | sha256sum -c - \\\n\t&& tar -xzf cmake.tar.gz -C \/cmake --strip-components=1 \\\n\t&& cd \/cmake \\\n\t&& .\/configure \\\n\t&& make -j $(nproc) \\\n\t&& make install \\\n\t&& cd \/ \\\n\t&& git clone https:\/\/github.com\/intel-iot-devkit\/mraa.git \\\n\t&& cd \/mraa \\\n\t&& git checkout $MRAA_COMMIT \\\n\t&& mkdir build && cd build \\\n\t&& cmake .. -DWERROR=NO -DBUILDSWIGNODE=OFF -DBUILDSWIGPYTHON=OFF -DCMAKE_INSTALL_PREFIX:PATH=\/usr \\\n\t&& make -j $(nproc) \\\n\t&& make install \\\n\t&& cd \/ \\\n\t&& git clone https:\/\/github.com\/intel-iot-devkit\/upm.git \\\n\t&& cd \/upm \\\n\t&& git checkout $UPM_COMMIT \\\n\t&& mkdir build && cd build \\\n\t&& cmake .. -DWERROR=NO -DBUILDSWIGNODE=OFF -DBUILDSWIGPYTHON=OFF -DCMAKE_INSTALL_PREFIX:PATH=\/usr \\\n\t&& make -j $(nproc) \\\n\t&& make install \\\n\t&& cd \/cmake \\\n\t&& make uninstall \\\n\t&& apt-get purge -y --auto-remove $buildDeps \\\n\t&& cd \/ && rm -rf mraa upm cmake\n\n# Update Shared Library Cache\nRUN echo \"\/usr\/local\/lib\/i386-linux-gnu\/\" >> \/etc\/ld.so.conf \\\n\t&& ldconfig",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":104,
        "end":246,
        "text":"apt-get install -y --no-install-recommends \\\\nless \\\\nkmod \\\\nnano \\\\nnet-tools \\\\nifupdown \\\\niputils-ping \\\\ni2c-tools \\\\nusbutils \\"
      },
      {
        "label":"apt-install-without-version",
        "start":808,
        "end":864,
        "text":"&& apt-get install -y $buildDeps --no-install-recommends"
      },
      {
        "label":"use-cd-change-dir",
        "start":1166,
        "end":1180,
        "text":"&& cd \/cmake \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1242,
        "end":1251,
        "text":"&& cd \/ \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1314,
        "end":1327,
        "text":"&& cd \/mraa \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1535,
        "end":1544,
        "text":"&& cd \/ \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"695ac9b6985fe56594aa73d1dc5be6b2cdfedbf8.dockerfile",
    "file_content":"# etcd-secure  \n#  \n# VERSION 0.0.2  \nFROM coreos\/etcd  \nMAINTAINER bfosberry  \nVOLUME \/opt\/keys  \n  \nADD .\/run.sh \/opt\/etcd\/run.sh  \n  \nENTRYPOINT [\"\/opt\/etcd\/run.sh\"]  \n\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":102,
        "end":131,
        "text":"ADD .\/run.sh \/opt\/etcd\/run.sh"
      },
      {
        "label":"miss-specific-tags",
        "start":38,
        "end":54,
        "text":"FROM coreos\/etcd"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":57,
        "end":77,
        "text":"MAINTAINER bfosberry"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"69de9b8b66d0271eaf88091743878948a4ef8bca.dockerfile",
    "file_content":"FROM debian:latest\n\nRUN apt-get update\nRUN apt-get install build-essential -y\nRUN apt-get install gdb -y\nRUN apt-get install procps -y\n\nRUN apt-get install tzdata\nENV TZ=Asia\/Shanghai\nRUN ln -snf \/usr\/share\/zoneinfo\/$TZ \/etc\/localtime && echo $TZ > \/etc\/timezone\nRUN dpkg-reconfigure -f noninteractive tzdata\n\nWORKDIR \/app\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":39,
        "end":134,
        "text":"RUN apt-get install build-essential -y\\nRUN apt-get install gdb -y\\nRUN apt-get install procps -y"
      },
      {
        "label":"apt-install-without-version",
        "start":39,
        "end":134,
        "text":"RUN apt-get install build-essential -y\\nRUN apt-get install gdb -y\\nRUN apt-get install procps -y"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM debian:latest"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":136,
        "end":162,
        "text":"RUN apt-get install tzdata"
      },
      {
        "label":"apt-install-without-version",
        "start":136,
        "end":162,
        "text":"RUN apt-get install tzdata"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6a7c975249299fb251c715703fe89020c6655346.dockerfile",
    "file_content":"FROM alpine:3.6\nMAINTAINER Elementar Sistemas <contato@elementarsistemas.com.br>\n\nRUN apk --no-cache add bash py-pip && pip install awscli\nADD watch \/watch\n\nVOLUME \/data\n\nENTRYPOINT [ \".\/watch\" ]\nCMD [\"\/data\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":139,
        "end":155,
        "text":"ADD watch \/watch"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":16,
        "end":80,
        "text":"MAINTAINER Elementar Sistemas <contato@elementarsistemas.com.br>"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"pip-install-without-version",
        "start":120,
        "end":138,
        "text":"pip install awscli"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6adfdd134e85adddf2df94d55a3ed0d8f911208b.dockerfile",
    "file_content":"FROM samdoshi\/haskell-stack\nMAINTAINER James Dabbs <jamesdabbs@gmail.com>\n\nWORKDIR \/app\nADD . \/app\n\nRUN stack setup\nRUN stack build\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":88,
        "end":98,
        "text":"ADD . \/app"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":28,
        "end":73,
        "text":"MAINTAINER James Dabbs <jamesdabbs@gmail.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":27,
        "text":"FROM samdoshi\/haskell-stack"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6c11f83def613e0219ea1cca4800850876c0c910.dockerfile",
    "file_content":"FROM debian:stretch-20170907\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y apt-utils \\\n                       forensics-all \\\n                       foremost \\\n                       binwalk \\\n                       exiftool \\\n                       outguess \\\n                       pngtools \\\n                       pngcheck \\\n                       stegosuite \\\n                       git \\\n                       hexedit \\\n                       python3-pip \\\n                       python-pip \\\n                       autotools-dev \\\n                       automake \\\n                       libevent-dev \\\n                       bsdmainutils \\\n                       ffmpeg \\\n                       crunch \\\n                       cewl \\\n                       sonic-visualiser \\\n                       xxd \\\n                       atomicparsley && \\\n    pip3 install python-magic && \\\n    pip install tqdm\n\nCOPY install \/tmp\/install\nRUN chmod a+x \/tmp\/install\/*.sh && \\\n    for i in \/tmp\/install\/*.sh;do echo $i && $i;done && \\\n    rm -rf \/tmp\/install\n\n# Use this section to try new installation scripts.\n# All previous steps will be cached\n#\n# COPY install_dev \/tmp\/install\n# RUN find \/tmp\/install -name '*.sh' -exec chmod a+x {} + && \\\n#     for f in $(ls \/tmp\/install\/* | sort );do \/bin\/sh $f;done && \\\n#     rm -rf \/tmp\/install\n\nCOPY examples \/examples\n\nCOPY scripts \/opt\/scripts\nRUN find \/opt\/scripts -name '*.sh' -exec chmod a+x {} + && \\\n    find \/opt\/scripts -name '*.py' -exec chmod a+x {} +\nENV PATH=\"\/opt\/scripts:${PATH}\"\n\nWORKDIR \/data\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":122,
        "end":916,
        "text":"apt-get install -y apt-utils \\\\nforensics-all \\\\nforemost \\\\nbinwalk \\\\nexiftool \\\\noutguess \\\\npngtools \\\\npngcheck \\\\nstegosuite \\\\ngit \\\\nhexedit \\\\npython3-pip \\\\npython-pip \\\\nautotools-dev \\\\nautomake \\\\nlibevent-dev \\\\nbsdmainutils \\\\nffmpeg \\\\ncrunch \\\\ncewl \\\\nsonic-visualiser \\\\nxxd \\\\natomicparsley"
      },
      {
        "label":"apt-install-without-version",
        "start":122,
        "end":916,
        "text":"apt-get install -y apt-utils \\\\nforensics-all \\\\nforemost \\\\nbinwalk \\\\nexiftool \\\\noutguess \\\\npngtools \\\\npngcheck \\\\nstegosuite \\\\ngit \\\\nhexedit \\\\npython3-pip \\\\npython-pip \\\\nautotools-dev \\\\nautomake \\\\nlibevent-dev \\\\nbsdmainutils \\\\nffmpeg \\\\ncrunch \\\\ncewl \\\\nsonic-visualiser \\\\nxxd \\\\natomicparsley"
      },
      {
        "label":"pip-install-without-version",
        "start":926,
        "end":977,
        "text":"pip3 install python-magic && \\\\npip install tqdm"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "pip-install-without-version",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6cb6f35398496f7bd748d4ea698488d660328c4b.dockerfile",
    "file_content":"FROM sotonsailbot\/ros:indigo-desktop-catkin\nMaintainer Martin Biggs\n\nRUN sudo apt-get update \\\n && sudo apt-get install --assume-yes ros-indigo-ros-tutorials \\\n && sudo rm -fr \/var\/lib\/apt\/lists\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":164,
        "end":194,
        "text":"sudo rm -fr \/var\/lib\/apt\/lists"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":104,
        "end":157,
        "text":"apt-get install --assume-yes ros-indigo-ros-tutorials"
      },
      {
        "label":"apt-install-without-version",
        "start":104,
        "end":157,
        "text":"apt-get install --assume-yes ros-indigo-ros-tutorials"
      },
      {
        "label":"use-sudo-run",
        "start":69,
        "end":92,
        "text":"RUN sudo apt-get update"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":44,
        "end":67,
        "text":"Maintainer Martin Biggs"
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-sudo-run"
    ]
  },
  {
    "filename":"6f4af21dbae1eb7fe1e2ce668ff796cb60283b7e.dockerfile",
    "file_content":"FROM microsoft\/vsts-agent:ubuntu-16.04\n\n# Install basic command-line utilities\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    curl \\\n    dnsutils \\\n    file \\\n    ftp \\\n    iproute2 \\\n    iputils-ping \\\n    locales \\\n    openssh-client \\\n    rsync\\\n    shellcheck \\\n    sudo \\\n    telnet \\\n    time \\\n    unzip \\\n    wget \\\n    zip \\\n    tzdata \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Setup the locale\nENV LANG en_US.UTF-8\nENV LC_ALL $LANG\nRUN locale-gen $LANG \\\n && update-locale\n\n# Accept EULA - needed for certain Microsoft packages like SQL Server Client Tools\nENV ACCEPT_EULA=Y\n\n# Install essential build tools\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    build-essential \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Ansible\nRUN apt-get update \\   \n && apt-get install -y --no-install-recommends \\\n    ansible \\      \n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Azure CLI (instructions taken from https:\/\/docs.microsoft.com\/en-us\/cli\/azure\/install-azure-cli)\nRUN echo \"deb [arch=amd64] https:\/\/packages.microsoft.com\/repos\/azure-cli\/ $(lsb_release -cs) main\" \\\n  | tee \/etc\/apt\/sources.list.d\/azure-cli.list \\\n && curl -L https:\/\/packages.microsoft.com\/keys\/microsoft.asc | apt-key add - \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    azure-cli \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/* \\\n && az --version\n\n# Install Clang (only appears to work on xenial)\nRUN [ \"xenial\" = \"xenial\" ] \\\n && wget -O - https:\/\/apt.llvm.org\/llvm-snapshot.gpg.key | apt-key add - \\\n && apt-add-repository \"deb http:\/\/apt.llvm.org\/xenial\/ llvm-toolchain-xenial-6.0 main\" \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends clang-6.0 \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/* \\\n || echo -n\n\n# Install CMake\nRUN curl -sL https:\/\/cmake.org\/files\/v3.10\/cmake-3.10.2-Linux-x86_64.sh -o cmake.sh \\\n && chmod +x cmake.sh \\\n && .\/cmake.sh --prefix=\/usr\/local --exclude-subdir \\\n && rm cmake.sh\n\n# Install Erlang\nRUN echo \"deb http:\/\/binaries.erlang-solutions.com\/debian xenial contrib\" > \/etc\/apt\/sources.list.d\/eslerlang.list \\\n && wget -O - http:\/\/binaries.erlang-solutions.com\/debian\/erlang_solutions.asc | apt-key add - \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends esl-erlang \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n\n# Install Firefox\nRUN apt-get update \\\n && apt-get install -y firefox \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Go\nRUN curl -sL https:\/\/dl.google.com\/go\/go1.9.4.linux-amd64.tar.gz -o go1.9.4.linux-amd64.tar.gz \\\n && mkdir -p \/usr\/local\/go1.9.4 \\\n && tar -C \/usr\/local\/go1.9.4 -xzf go1.9.4.linux-amd64.tar.gz --strip-components=1 go \\\n && rm go1.9.4.linux-amd64.tar.gz\nRUN curl -sL https:\/\/dl.google.com\/go\/go1.10.linux-amd64.tar.gz -o go1.10.linux-amd64.tar.gz \\\n && mkdir -p \/usr\/local\/go1.10 \\\n && tar -C \/usr\/local\/go1.10 -xzf go1.10.linux-amd64.tar.gz --strip-components=1 go \\\n && rm go1.10.linux-amd64.tar.gz\nENV GOROOT_1_9_X64=\/usr\/local\/go1.9.4 \\\n    GOROOT_1_10_X64=\/usr\/local\/go1.10 \\\n    GOROOT=\/usr\/local\/go1.10\nENV PATH $PATH:$GOROOT\/bin\n\n# Install Google Chrome\nRUN wget -q -O - https:\/\/dl-ssl.google.com\/linux\/linux_signing_key.pub | apt-key add - \\\n && echo \"deb [arch=amd64] http:\/\/dl.google.com\/linux\/chrome\/deb\/ stable main\" | tee \/etc\/apt\/sources.list.d\/google-chrome.list \\\n && apt-get update \\\n && apt-get install -y google-chrome-stable \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\nENV CHROME_BIN \/usr\/bin\/google-chrome\n\n# Install Haskell\nRUN apt-get update \\\n && apt-get install -y haskell-platform \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Helm\nRUN curl https:\/\/raw.githubusercontent.com\/kubernetes\/helm\/master\/scripts\/get | bash\n\n# Install Heroku CLI\nRUN curl https:\/\/cli-assets.heroku.com\/install.sh | sh\n\n# Install HHVM\nRUN apt-get update \\\n && apt-key adv --recv-keys --keyserver hkp:\/\/keyserver.ubuntu.com:80 0xB4112585D386EB94 \\\n && add-apt-repository https:\/\/dl.hhvm.com\/ubuntu \\\n && apt-get update \\\n && apt-get install -y hhvm \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n\n# Install ImageMagick\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends --fix-missing \\\n    imagemagick \\\n    libmagickcore-dev \\\n    libmagickwand-dev \\\n    libmagic-dev \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Java OpenJDKs\nRUN apt-add-repository -y ppa:openjdk-r\/ppa\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-7-jdk \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-8-jdk \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-9-jdk \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-10-jdk \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends openjdk-11-jdk \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nRUN update-alternatives --set java \/usr\/lib\/jvm\/java-8-openjdk-amd64\/jre\/bin\/java\nENV JAVA_HOME_7_X64=\/usr\/lib\/jvm\/java-7-openjdk-amd64 \\\n    JAVA_HOME_8_X64=\/usr\/lib\/jvm\/java-8-openjdk-amd64 \\\n    JAVA_HOME_9_X64=\/usr\/lib\/jvm\/java-9-openjdk-amd64 \\\n    JAVA_HOME_10_X64=\/usr\/lib\/jvm\/java-10-openjdk-amd64 \\\n    JAVA_HOME_11_X64=\/usr\/lib\/jvm\/java-11-openjdk-amd64 \\\n    JAVA_HOME=\/usr\/lib\/jvm\/java-8-openjdk-amd64 \\\n    JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8\n\n# Install Java Tools (Ant, Gradle, Maven)\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    ant \\\n    ant-optional \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nRUN curl -sL https:\/\/services.gradle.org\/distributions\/gradle-4.6-bin.zip -o gradle-4.6.zip \\\n && unzip -d \/usr\/share gradle-4.6.zip \\\n && ln -s \/usr\/share\/gradle-4.6\/bin\/gradle \/usr\/bin\/gradle \\\n && rm gradle-4.6.zip\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    maven \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nENV ANT_HOME=\/usr\/share\/ant \\\n    GRADLE_HOME=\/usr\/share\/gradle \\\n    M2_HOME=\/usr\/share\/maven\n\n# Install kubectl\nRUN curl -LO https:\/\/storage.googleapis.com\/kubernetes-release\/release\/$(curl -s https:\/\/storage.googleapis.com\/kubernetes-release\/release\/stable.txt)\/bin\/linux\/amd64\/kubectl \\\n && chmod +x .\/kubectl \\\n && mv .\/kubectl \/usr\/local\/bin\/kubectl\n\n# Install Mercurial\nRUN apt-get update \\\n  && apt-get install -y mercurial \\\n  && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Miniconda\nRUN curl -sL https:\/\/repo.continuum.io\/miniconda\/Miniconda3-latest-Linux-x86_64.sh -o miniconda.sh \\\n && chmod +x miniconda.sh \\\n && .\/miniconda.sh -b -p \/usr\/share\/miniconda \\\n && rm miniconda.sh\nENV CONDA=\/usr\/share\/miniconda\n\n# Install Mono\nRUN apt-key adv --keyserver hkp:\/\/keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \\\n && echo \"deb https:\/\/download.mono-project.com\/repo\/ubuntu stable-xenial main\" | tee \/etc\/apt\/sources.list.d\/mono-official-stable.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends apt-transport-https mono-complete \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n\n# Install MS SQL Server client tools (https:\/\/docs.microsoft.com\/en-us\/sql\/linux\/sql-server-linux-setup-tools?view=sql-server-2017)\nRUN [ \"xenial\" = \"xenial\" ] \\\n  && curl https:\/\/packages.microsoft.com\/keys\/microsoft.asc | apt-key add - \\\n  && curl https:\/\/packages.microsoft.com\/config\/ubuntu\/16.04\/prod.list | tee \/etc\/apt\/sources.list.d\/msprod.list \\\n  && apt-get update \\\n  && apt-get install -y mssql-tools unixodbc-dev \\\n  && rm -rf \/var\/lib\/apt\/lists\/* \\\n  && rm -rf \/etc\/apt\/sources.list.d\/* \\\n  || echo -n\nENV PATH=$PATH:\/opt\/mssql-tools\/bin\n\n# Install MySQL Client\nRUN apt-get update \\\n  && apt-get install -y mysql-client \\\n  && rm -rf \/var\/lib\/apt\/lists\/*\nENV mysql=\/usr\/bin\/mysql\n\n# Install MySQL Server\nENV MYSQL_ROOT_PASSWORD=\nRUN bash -c 'debconf-set-selections <<< \"mysql-server mysql-server\/root_password password $MYSQL_ROOT_PASSWORD\"'\nRUN bash -c 'debconf-set-selections <<< \"mysql-server mysql-server\/root_password_again password $MYSQL_ROOT_PASSWORD\"'\nRUN apt-get update \\\n  && apt-get install -y mysql-server \\\n  && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install .NET Core SDK and initialize package cache\nRUN curl https:\/\/packages.microsoft.com\/config\/ubuntu\/16.04\/packages-microsoft-prod.deb > packages-microsoft-prod.deb \\\n && dpkg -i packages-microsoft-prod.deb \\\n && rm packages-microsoft-prod.deb \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    dotnet-sdk-2.2 \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\nRUN dotnet help\nENV dotnet=\/usr\/bin\/dotnet\n\n# Install AzCopy (depends on .NET Core)\nRUN apt-key adv --keyserver packages.microsoft.com --recv-keys EB3E94ADBE1229CF \\\n && echo \"deb [arch=amd64] https:\/\/packages.microsoft.com\/repos\/microsoft-ubuntu-xenial-prod\/ xenial main\" | tee \/etc\/apt\/sources.list.d\/azure.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends azcopy \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n\n# Install LTS Node.js and related tools\nRUN curl -sL https:\/\/git.io\/n-install | bash -s -- -ny - \\\n && ~\/n\/bin\/n lts \\\n && npm install -g bower \\\n && npm install -g grunt \\\n && npm install -g gulp \\\n && npm install -g n \\\n && npm install -g webpack webpack-cli --save-dev \\\n && npm install -g parcel-bundler \\\n && npm i -g npm \\\n && rm -rf ~\/n\nENV bower=\/usr\/local\/bin\/bower \\\n    grunt=\/usr\/local\/bin\/grunt\n\n# Install PhantomJS\nRUN apt-get update \\\n && apt-get install -y chrpath libssl-dev libxft-dev libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && export PHANTOM_JS=phantomjs-2.1.1-linux-x86_64 \\\n && wget https:\/\/bitbucket.org\/ariya\/phantomjs\/downloads\/$PHANTOM_JS.tar.bz2 \\\n && tar xvjf $PHANTOM_JS.tar.bz2 \\\n && mv $PHANTOM_JS \/usr\/local\/share \\\n && ln -sf \/usr\/local\/share\/$PHANTOM_JS\/bin\/phantomjs \/usr\/local\/bin\n\n# Install PHP versions and libraries\nRUN apt-add-repository ppa:ondrej\/php -y \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    php5.6 \\\n    php5.6-amqp \\\n    php5.6-bcmath \\\n    php5.6-bz2 \\\n    php5.6-cgi \\\n    php5.6-cli \\\n    php5.6-common \\\n    php5.6-curl \\\n    php5.6-dba \\\n    php5.6-dev \\\n    php5.6-enchant \\\n    php5.6-fpm \\\n    php5.6-gd \\\n    php5.6-gmp \\\n    php5.6-imap \\\n    php5.6-interbase \\\n    php5.6-intl \\\n    php5.6-json \\\n    php5.6-ldap \\\n    php5.6-mbstring \\\n    php5.6-mcrypt \\\n    php5.6-mysql \\\n    php5.6-odbc \\\n    php5.6-opcache \\\n    php5.6-pgsql \\\n    php5.6-phpdbg \\\n    php5.6-pspell \\\n    php5.6-readline \\\n    php5.6-recode \\\n    php5.6-snmp \\\n    php5.6-soap \\\n    php5.6-sqlite3 \\\n    php5.6-sybase \\\n    php5.6-tidy \\\n    php5.6-xml \\\n    php5.6-xmlrpc \\\n    php5.6-xsl \\\n    php5.6-zip \\\n && apt-get remove --purge -yq php5.6-dev \\\n && apt-get install -y --no-install-recommends \\\n    php7.0 \\\n    php7.0-amqp \\\n    php7.0-bcmath \\\n    php7.0-bz2 \\\n    php7.0-cgi \\\n    php7.0-cli \\\n    php7.0-common \\\n    php7.0-curl \\\n    php7.0-dba \\\n    php7.0-dev \\\n    php7.0-enchant \\\n    php7.0-fpm \\\n    php7.0-gd \\\n    php7.0-gmp \\\n    php7.0-imap \\\n    php7.0-interbase \\\n    php7.0-intl \\\n    php7.0-json \\\n    php7.0-ldap \\\n    php7.0-mbstring \\\n    php7.0-mcrypt \\\n    php7.0-mysql \\\n    php7.0-odbc \\\n    php7.0-opcache \\\n    php7.0-pgsql \\\n    php7.0-phpdbg \\\n    php7.0-pspell \\\n    php7.0-readline \\\n    php7.0-recode \\\n    php7.0-snmp \\\n    php7.0-soap \\\n    php7.0-sqlite3 \\\n    php7.0-sybase \\\n    php7.0-tidy \\\n    php7.0-xml \\\n    php7.0-xmlrpc \\\n    php7.0-xsl \\\n    php7.0-zip \\\n && apt-get remove --purge -yq php7.0-dev \\\n && apt-get install -y --no-install-recommends \\\n    php7.1 \\\n    php7.1-amqp \\\n    php7.1-bcmath \\\n    php7.1-bz2 \\\n    php7.1-cgi \\\n    php7.1-cli \\\n    php7.1-common \\\n    php7.1-curl \\\n    php7.1-dba \\\n    php7.1-dev \\\n    php7.1-enchant \\\n    php7.1-fpm \\\n    php7.1-gd \\\n    php7.1-gmp \\\n    php7.1-imap \\\n    php7.1-interbase \\\n    php7.1-intl \\\n    php7.1-json \\\n    php7.1-ldap \\\n    php7.1-mbstring \\\n    php7.1-mcrypt \\\n    php7.1-mysql \\\n    php7.1-odbc \\\n    php7.1-opcache \\\n    php7.1-pgsql \\\n    php7.1-phpdbg \\\n    php7.1-pspell \\\n    php7.1-readline \\\n    php7.1-recode \\\n    php7.1-snmp \\\n    php7.1-soap \\\n    php7.1-sqlite3 \\\n    php7.1-sybase \\\n    php7.1-tidy \\\n    php7.1-xml \\\n    php7.1-xmlrpc \\\n    php7.1-xsl \\\n    php7.1-zip \\\n && apt-get remove --purge -yq php7.1-dev \\\n && apt-get install -y --no-install-recommends \\\n    php7.2 \\\n    php7.2-apcu \\\n    php7.2-amqp \\\n    php7.2-bcmath \\\n    php7.2-bz2 \\\n    php7.2-cgi \\\n    php7.2-cli \\\n    php7.2-common \\\n    php7.2-curl \\\n    php7.2-dba \\\n    php7.2-dev \\\n    php7.2-enchant \\\n    php7.2-fpm \\\n    php7.2-gd \\\n    php7.2-gmp \\\n    php7.2-imap \\\n    php7.2-interbase \\\n    php7.2-intl \\\n    php7.2-json \\\n    php7.2-ldap \\\n    php7.2-mbstring \\\n    php7.2-mysql \\\n    php7.2-odbc \\\n    php7.2-opcache \\\n    php7.2-pgsql \\\n    php7.2-phpdbg \\\n    php7.2-pspell \\\n    php7.2-readline \\\n    php7.2-recode \\\n    php7.2-snmp \\\n    php7.2-soap \\\n    php7.2-sqlite3 \\\n    php7.2-sybase \\\n    php7.2-tidy \\\n    php7.2-xml \\\n    php7.2-xmlrpc \\\n    php7.2-xsl \\\n    php7.2-zip \\\n && apt-get install -y --no-install-recommends \\\n    php-igbinary \\\n    php-memcache \\\n    php-memcached \\\n    php-mongodb \\\n    php-redis \\\n    php-xdebug \\\n    php-yaml \\\n    php-zmq \\\n && apt-get remove --purge -yq php7.2-dev \\\n && apt-get install -y --no-install-recommends snmp \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install composer (for PHP)\nCOPY --from=composer:latest \/usr\/bin\/composer \/usr\/bin\/composer\nENV COMPOSER_ALLOW_SUPERUSER=1\n\n# Install phpunit (for PHP)\nRUN wget -q -O phpunit https:\/\/phar.phpunit.de\/phpunit-7.phar \\\n && chmod +x phpunit \\\n && mv phpunit \/usr\/local\/bin\/phpunit\n\n# Install Pollinate\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends pollinate \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Powershell Core\nRUN curl https:\/\/packages.microsoft.com\/keys\/microsoft.asc | apt-key add - \\\n && curl https:\/\/packages.microsoft.com\/config\/ubuntu\/16.04\/prod.list | tee \/etc\/apt\/sources.list.d\/microsoft.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    powershell \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n\n# Instally PyPy2\nRUN wget -q -P \/tmp https:\/\/bitbucket.org\/pypy\/pypy\/downloads\/pypy2-v6.0.0-linux64.tar.bz2 \\\n && tar -x -C \/opt -f \/tmp\/pypy2-v6.0.0-linux64.tar.bz2 \\\n && rm \/tmp\/pypy2-v6.0.0-linux64.tar.bz2 \\\n && mv \/opt\/pypy2-v6.0.0-linux64 \/opt\/pypy2 \\\n && ln -s \/opt\/pypy2\/bin\/pypy \/usr\/local\/bin\/pypy\n\n# Install PyPy3\nRUN wget -q -P \/tmp https:\/\/bitbucket.org\/pypy\/pypy\/downloads\/pypy3-v6.0.0-linux64.tar.bz2 \\\n && tar -x -C \/opt -f \/tmp\/pypy3-v6.0.0-linux64.tar.bz2 \\\n && rm \/tmp\/pypy3-v6.0.0-linux64.tar.bz2 \\\n && mv \/opt\/pypy3-v6.0.0-linux64 \/opt\/pypy3 \\\n && ln -s \/opt\/pypy3\/bin\/pypy3 \/usr\/local\/bin\/pypy3\n\n# Install Python\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    python \\\n    python-pip \\\n    python3 \\\n    python3-pip \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install rebar3 (for Erlang)\nRUN wget -q -O rebar3 https:\/\/s3.amazonaws.com\/rebar3\/rebar3 \\\n && chmod +x rebar3 \\\n && mv rebar3 \/usr\/local\/bin\/rebar3\n\n# Install Ruby requirements\nRUN apt-get update \\\n && apt-get install -y libz-dev openssl libssl-dev \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Scala build tools\nRUN curl -s https:\/\/raw.githubusercontent.com\/paulp\/sbt-extras\/master\/sbt > \/usr\/local\/bin\/sbt \\\n && chmod 0755 \/usr\/local\/bin\/sbt\n\n# Install Sphinx\nRUN [ \"xenial\" = \"xenial\" ] \\\n  && apt-get update \\\n  && apt-get install -y sphinxsearch \\\n  && rm -rf \/var\/lib\/apt\/lists\/* \\\n  || echo -n\n\n# Install Subversion\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends subversion \\\n && rm -rf \/var\/lib\/apt\/lists\/*\nENV svn=\/usr\/bin\/svn\n\n# Install Terraform\nRUN TERRAFORM_VERSION=$(curl -s https:\/\/checkpoint-api.hashicorp.com\/v1\/check\/terraform | jq -r .current_version) \\\n && curl -LO https:\/\/releases.hashicorp.com\/terraform\/${TERRAFORM_VERSION}\/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n && unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d \/usr\/local\/bin \\\n && rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip\n\n# XSLT transformation\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    xsltproc \\\n    xalan \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install yarn\nRUN curl -sS https:\/\/dl.yarnpkg.com\/debian\/pubkey.gpg | apt-key add - \\\n && echo \"deb https:\/\/dl.yarnpkg.com\/debian\/ stable main\" | tee \/etc\/apt\/sources.list.d\/yarn.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends yarn \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n\n# Install Xvfb\nRUN apt-get update \\\n && apt-get install -y xvfb \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Download hosted tool cache\nENV AGENT_TOOLSDIRECTORY=\/opt\/hostedtoolcache\nRUN azcopy --recursive --source https:\/\/vstsagenttools.blob.core.windows.net\/tools\/hostedtoolcache\/linux --destination $AGENT_TOOLSDIRECTORY\n\n# Install the tools from the hosted tool cache\nRUN original_directory=$PWD \\\n && setups=$(find $AGENT_TOOLSDIRECTORY -name setup.sh) \\\n && for setup in $setups; do \\\n        chmod +x $setup; \\\n        cd $(dirname $setup); \\\n        .\/$(basename $setup); \\\n        cd $original_directory; \\\n    done;\n\n# Add the latest Ruby version in the tool cache to the path\nENV PATH $PATH:\/opt\/hostedtoolcache\/Ruby\/2.5.1\/x64\/bin\n\n# Clean system\nRUN apt-get clean \\\n && rm -rf \/var\/lib\/apt\/lists\/* \\\n && rm -rf \/etc\/apt\/sources.list.d\/*\n",
    "risk_labels":[
      {
        "label":"apt-install-without-version",
        "start":101,
        "end":373,
        "text":"&& apt-get install -y --no-install-recommends \\\\ncurl \\\\ndnsutils \\\\nfile \\\\nftp \\\\niproute2 \\\\niputils-ping \\\\nlocales \\\\nopenssh-client \\\\nrsync\\\\nshellcheck \\\\nsudo \\\\ntelnet \\\\ntime \\\\nunzip \\\\nwget \\\\nzip \\\\ntzdata \\"
      },
      {
        "label":"apt-install-without-version",
        "start":662,
        "end":729,
        "text":"&& apt-get install -y --no-install-recommends \\\\nbuild-essential"
      },
      {
        "label":"apt-install-without-version",
        "start":808,
        "end":869,
        "text":"&& apt-get install -y --no-install-recommends \\\\nansible \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1272,
        "end":1358,
        "text":"apt-get install -y --no-install-recommends \\\\napt-transport-https \\\\nazure-cli \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1719,
        "end":1773,
        "text":"apt-get install -y --no-install-recommends clang-6.0 \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":2484,
        "end":2510,
        "text":"apt-get install -y firefox"
      },
      {
        "label":"apt-install-without-version",
        "start":2481,
        "end":2510,
        "text":"&& apt-get install -y firefox"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3461,
        "end":3505,
        "text":"&& apt-get install -y google-chrome-stable \\"
      },
      {
        "label":"apt-install-without-version",
        "start":3464,
        "end":3505,
        "text":"apt-get install -y google-chrome-stable \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":3656,
        "end":3694,
        "text":"&& apt-get install -y haskell-platform"
      },
      {
        "label":"apt-install-without-version",
        "start":3659,
        "end":3694,
        "text":"apt-get install -y haskell-platform"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":4109,
        "end":4137,
        "text":"&& apt-get install -y hhvm \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4112,
        "end":4137,
        "text":"apt-get install -y hhvm \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4257,
        "end":4400,
        "text":"apt-get install -y --no-install-recommends --fix-missing \\\\nimagemagick \\\\nlibmagickcore-dev \\\\nlibmagickwand-dev \\\\nlibmagic-dev \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4524,
        "end":4585,
        "text":"&& apt-get install -y --no-install-recommends openjdk-7-jdk \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4640,
        "end":4701,
        "text":"&& apt-get install -y --no-install-recommends openjdk-8-jdk \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4756,
        "end":4817,
        "text":"&& apt-get install -y --no-install-recommends openjdk-9-jdk \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4850,
        "end":4934,
        "text":"RUN apt-get update \\\\n&& apt-get install -y --no-install-recommends openjdk-10-jdk \\"
      },
      {
        "label":"apt-install-without-version",
        "start":4989,
        "end":5051,
        "text":"&& apt-get install -y --no-install-recommends openjdk-11-jdk \\"
      },
      {
        "label":"apt-install-without-version",
        "start":5608,
        "end":5684,
        "text":"&& apt-get install -y --no-install-recommends \\\\nant \\\\nant-optional \\"
      },
      {
        "label":"apt-install-without-version",
        "start":5960,
        "end":6016,
        "text":"apt-get install -y --no-install-recommends \\\\nmaven \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":6449,
        "end":6482,
        "text":"&& apt-get install -y mercurial \\"
      },
      {
        "label":"apt-install-without-version",
        "start":6449,
        "end":6482,
        "text":"&& apt-get install -y mercurial \\"
      },
      {
        "label":"apt-install-without-version",
        "start":7057,
        "end":7135,
        "text":"apt-get install -y --no-install-recommends apt-transport-https mono-complete \\"
      },
      {
        "label":"apt-install-without-version",
        "start":7587,
        "end":7633,
        "text":"&& apt-get install -y mssql-tools unixodbc-dev"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":7590,
        "end":7635,
        "text":"apt-get install -y mssql-tools unixodbc-dev \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":8209,
        "end":8240,
        "text":"apt-get install -y mysql-server"
      },
      {
        "label":"apt-install-without-version",
        "start":8209,
        "end":8240,
        "text":"apt-get install -y mysql-server"
      },
      {
        "label":"apt-install-without-version",
        "start":8551,
        "end":8645,
        "text":"&& apt-get install -y --no-install-recommends \\\\napt-transport-https \\\\ndotnet-sdk-2.2 \\"
      },
      {
        "label":"apt-install-without-version",
        "start":9055,
        "end":9109,
        "text":"&& apt-get install -y --no-install-recommends azcopy \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      },
      {
        "label":"use-cd-change-dir",
        "start":17381,
        "end":17404,
        "text":"cd $(dirname $setup); \\"
      }
    ],
    "label_list":[
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"6f819445cd4671000010b71e4c553fca35411afa.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/buildpack-deps:bionic-scm\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/archive.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"Acquire::Check-Valid-Until false;\" | sudo tee -a \/etc\/apt\/apt.conf.d\/10-nocheckvalid \\\n    && echo 'Package: *\\nPin: origin \"archive.debian.org\"\\nPin-Priority: 500' | sudo tee -a \/etc\/apt\/preferences.d\/10-archive-pin \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi\n\nENV OPENSSL_CONF \/\n\n## install phantomjs\n#\nRUN PHANTOMJS_URL=\"https:\/\/circle-downloads.s3.amazonaws.com\/circleci-images\/cache\/linux-amd64\/phantomjs-latest.tar.bz2\" \\\n  && sudo apt-get install libfontconfig \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/phantomjs.tar.bz2 ${PHANTOMJS_URL} \\\n  && tar -x -C \/tmp -f \/tmp\/phantomjs.tar.bz2 \\\n  && sudo mv \/tmp\/phantomjs-*-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin \\\n  && rm -rf \/tmp\/phantomjs.tar.bz2 \/tmp\/phantomjs-* \\\n  && phantomjs --version\n\n# install firefox\n\n# If you are upgrading to any version newer than 47.0.1, you must check the compatibility with\n# selenium. See https:\/\/github.com\/SeleniumHQ\/selenium\/issues\/2559#issuecomment-237079591\n\nRUN FIREFOX_URL=\"https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_47.0.1-0ubuntu1_amd64.deb\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.deb $FIREFOX_URL \\\n  && echo 'ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb  \/tmp\/firefox.deb' | sha256sum -c \\\n  && sudo dpkg -i \/tmp\/firefox.deb || sudo apt-get -f install  \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.deb \\\n  && firefox --version\n\n# install geckodriver—disabling this temporarily, we will likely want this code in the future, but until we're ready to upgrade our version of firefox to 53+, geckodriver wont' be compatible...\n\n# RUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n#      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n#      && cd \/tmp \\\n#      && tar xf geckodriver_linux64.tar.gz \\\n#      && rm -rf geckodriver_linux64.tar.gz \\\n#      && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n#      && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n#      && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n    && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n    && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n    && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n        \"\/opt\/google\/chrome\/google-chrome\" \\\n    && google-chrome --version\n\nRUN CHROME_VERSION=\"$(google-chrome --version)\" \\\n    && export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's\/^Google Chrome \/\/')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} \\\n    && CHROMEDRIVER_VERSION=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) \\\n    && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_VERSION\/chromedriver_linux64.zip\" \\\n    && cd \/tmp \\\n    && unzip chromedriver_linux64.zip \\\n    && rm -rf chromedriver_linux64.zip \\\n    && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n    && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n    && chromedriver --version\n      \n# install libgconf-2-4 manually since chrome no longer pulls it in automatically\nRUN sudo apt-get install -y libgconf-2-4\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1679,
        "end":1718,
        "text":"&& sudo apt-get install libfontconfig \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1272,
        "end":1366,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1272,
        "end":1366,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":4651,
        "end":4663,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"a3de46047a698ec36c22dea714277e1d598582b2.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/openjdk:13-ea-9-jdk\n\n# install java 8\n#\nRUN if grep -q Debian \/etc\/os-release && grep -q jessie \/etc\/os-release; then \\\n    echo \"deb http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/http.us.debian.org\/debian\/ jessie-backports main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-get update; sudo apt-get install -y -t jessie-backports openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; elif grep -q Ubuntu \/etc\/os-release && grep -q Trusty \/etc\/os-release; then \\\n    echo \"deb http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && echo \"deb-src http:\/\/ppa.launchpad.net\/openjdk-r\/ppa\/ubuntu trusty main\" | sudo tee -a \/etc\/apt\/sources.list \\\n    && sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key DA1A4A13543B466853BAF164EB9B1D8886F44E2A \\\n    && sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; else \\\n    sudo apt-get update; sudo apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\\n  ; fi \\\n  && sudo apt-get install -y bzip2 libgconf-2-4 # for extracting firefox and running chrome, respectively\n\n# install firefox\n#\nRUN FIREFOX_URL=\"https:\/\/download.mozilla.org\/?product=firefox-latest-ssl&os=linux64&lang=en-US\" \\\n  && ACTUAL_URL=$(curl -Ls -o \/dev\/null -w %{url_effective} $FIREFOX_URL) \\\n  && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/firefox.tar.bz2 $ACTUAL_URL \\\n  && sudo tar -xvjf \/tmp\/firefox.tar.bz2 -C \/opt \\\n  && sudo ln -s \/opt\/firefox\/firefox \/usr\/local\/bin\/firefox \\\n  && sudo apt-get install -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 \\\n  && rm -rf \/tmp\/firefox.* \\\n  && firefox --version\n\n# install geckodriver\n\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$(curl https:\/\/api.github.com\/repos\/mozilla\/geckodriver\/releases\/latest | jq -r \".assets[] | select(.name | test(\\\"linux64\\\")) | .browser_download_url\") \\\n     && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n     && cd \/tmp \\\n     && tar xf geckodriver_linux64.tar.gz \\\n     && rm -rf geckodriver_linux64.tar.gz \\\n     && sudo mv geckodriver \/usr\/local\/bin\/geckodriver \\\n     && sudo chmod +x \/usr\/local\/bin\/geckodriver \\\n     && geckodriver --version\n\n# install chrome\n\nRUN curl --silent --show-error --location --fail --retry 3 --output \/tmp\/google-chrome-stable_current_amd64.deb https:\/\/dl.google.com\/linux\/direct\/google-chrome-stable_current_amd64.deb \\\n      && (sudo dpkg -i \/tmp\/google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n      && rm -rf \/tmp\/google-chrome-stable_current_amd64.deb \\\n      && sudo sed -i 's|HERE\/chrome\"|HERE\/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n           \"\/opt\/google\/chrome\/google-chrome\" \\\n      && google-chrome --version\n\nRUN export CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http:\/\/chromedriver.storage.googleapis.com\/LATEST_RELEASE) \\\n      && curl --silent --show-error --location --fail --retry 3 --output \/tmp\/chromedriver_linux64.zip \"http:\/\/chromedriver.storage.googleapis.com\/$CHROMEDRIVER_RELEASE\/chromedriver_linux64.zip\" \\\n      && cd \/tmp \\\n      && unzip chromedriver_linux64.zip \\\n      && rm -rf chromedriver_linux64.zip \\\n      && sudo mv chromedriver \/usr\/local\/bin\/chromedriver \\\n      && sudo chmod +x \/usr\/local\/bin\/chromedriver \\\n      && chromedriver --version\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > \/tmp\/entrypoint \\\n  && chmod +x \/tmp\/entrypoint \\\n        && sudo mv \/tmp\/entrypoint \/docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"\/docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]\n",
    "risk_labels":[
      {
        "label":"use-sudo-run",
        "start":1008,
        "end":1027,
        "text":"sudo apt-get update"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1034,
        "end":1128,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1034,
        "end":1128,
        "text":"apt-get install -y openjdk-8-jre openjdk-8-jre-headless openjdk-8-jdk openjdk-8-jdk-headless \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":3424,
        "end":3436,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user",
      "use-sudo-run"
    ]
  },
  {
    "filename":"a766312b5e42ac31f8ef3443d897b170d6bb6c8c.dockerfile",
    "file_content":"FROM centos:latest\nMAINTAINER Support <support@atomicorp.com>\n\n#VOLUME [\"\/var\/lib\/openvas\"]\n\nADD run.sh \/run.sh\nADD openvas-docker-setup.sh \/openvas-docker-setup.sh\nADD config\/redis.conf \/etc\/redis.conf\nADD config\/texlive.repo \/etc\/yum.repos.d\/texlive.repo\n\n\n\nRUN \/openvas-docker-setup.sh && rm -f \/openvas-docker-setup.sh\n\nCMD \/run.sh\nEXPOSE 443\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":19,
        "end":61,
        "text":"MAINTAINER Support <support@atomicorp.com>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM centos:latest"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":93,
        "end":256,
        "text":"ADD run.sh \/run.sh\\nADD openvas-docker-setup.sh \/openvas-docker-setup.sh\\nADD config\/redis.conf \/etc\/redis.conf\\nADD config\/texlive.repo \/etc\/yum.repos.d\/texlive.repo"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a9200ad61dda3f0a2791f069b034bf52aecaa85f.dockerfile",
    "file_content":"# sudo docker build -t dreamlab\/goffish3-hama-source .\n\nFROM dreamlab\/goffish3-hama-base\nMAINTAINER dreamlab\n\nUSER root\n\n# maven\nENV MAVEN_VERSION 3.3.9\nENV USER_HOME_DIR \/root\n\nRUN mkdir -p \/usr\/share\/maven \/usr\/share\/maven\/ref \\\n  && curl -fsSL http:\/\/apache.osuosl.org\/maven\/maven-3\/$MAVEN_VERSION\/binaries\/apache-maven-$MAVEN_VERSION-bin.tar.gz \\\n    | tar -xzC \/usr\/share\/maven --strip-components=1 \\\n  && ln -s \/usr\/share\/maven\/bin\/mvn \/usr\/bin\/mvn\n\nENV MAVEN_HOME \/usr\/share\/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR\/.m2\"\nCOPY mvn-entrypoint.sh \/usr\/local\/bin\/mvn-entrypoint.sh\nCOPY settings-docker.xml \/usr\/share\/maven\/ref\/\n\n\nRUN mkdir $HAMA_HOME\/properties\n\nADD bootstrap.sh \/etc\/bootstrap.sh\nRUN chown root:root \/etc\/bootstrap.sh && \\\n    chmod 700 \/etc\/bootstrap.sh\n\nENV BOOTSTRAP \/etc\/bootstrap.sh\n\n\n\n#GOFFISH COMMAND\n\nADD goffish \/bin\nRUN chmod +x \/bin\/goffish\n\n\nCMD [\"\/etc\/bootstrap.sh\", \"-d\"]\n\n# Hdfs ports\nEXPOSE 50010 50020 50070 50075 50090 19888 8030 8031 8032 8033 8040 8042 8088 49707 2122\n# Mapred ports\n#EXPOSE 19888\n#Yarn ports\n#EXPOSE 8030 8031 8032 8033 8040 8042 8088\n#Other ports\n#EXPOSE 49707 2122   \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":89,
        "end":108,
        "text":"MAINTAINER dreamlab"
      },
      {
        "label":"miss-specific-tags",
        "start":56,
        "end":88,
        "text":"FROM dreamlab\/goffish3-hama-base"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":664,
        "end":736,
        "text":"ADD bootstrap.sh \/etc\/bootstrap.sh\\nRUN chown root:root \/etc\/bootstrap.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":828,
        "end":844,
        "text":"ADD goffish \/bin"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "use-deprecated-maintainer",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"a927bc3cdc2fedb4da4355064fbfc1dd117783ab.dockerfile",
    "file_content":"# Builds Suricata Dalton agent using Suricata source tarball\nFROM ubuntu:16.04\nMAINTAINER David Wharton\n\nARG SURI_VERSION\n\n# tcpdump is for pcap analysis; not *required* for\n#  the agent but nice to have....\nRUN apt-get update -y && apt-get install -y \\\n    python \\\n    tcpdump \\\n    libpcre3 libpcre3-dbg libpcre3-dev \\\n    build-essential autoconf automake libtool libpcap-dev libnet1-dev \\\n    libyaml-0-2 libyaml-dev zlib1g zlib1g-dev libcap-ng-dev libcap-ng0 \\\n    make libmagic-dev libjansson-dev libjansson4 pkg-config\n\n# for debugging agent\n#RUN apt-get install -y less nano\n\n# download, build, and install Suricata from source\nRUN mkdir -p \/src\/suricata-${SURI_VERSION}\nWORKDIR \/src\nADD http:\/\/downloads.suricata-ids.org\/suricata-${SURI_VERSION}.tar.gz suricata-${SURI_VERSION}.tar.gz\nRUN tar -zxf suricata-${SURI_VERSION}.tar.gz -C suricata-${SURI_VERSION} --strip-components=1\nWORKDIR \/src\/suricata-${SURI_VERSION}\nRUN .\/configure --enable-profiling && make -j $(nproc) && make install && make install-conf && ldconfig\n\nRUN mkdir -p \/opt\/dalton-agent\/\nWORKDIR \/opt\/dalton-agent\nCOPY dalton-agent.py \/opt\/dalton-agent\/dalton-agent.py\nCOPY dalton-agent.conf \/opt\/dalton-agent\/dalton-agent.conf\n\nCMD python \/opt\/dalton-agent\/dalton-agent.py -c \/opt\/dalton-agent\/dalton-agent.conf 2>&1\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":79,
        "end":103,
        "text":"MAINTAINER David Wharton"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":233,
        "end":526,
        "text":"apt-get install -y \\\\npython \\\\ntcpdump \\\\nlibpcre3 libpcre3-dbg libpcre3-dev \\\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libcap-ng-dev libcap-ng0 \\\\nmake libmagic-dev libjansson-dev libjansson4 pkg-config"
      },
      {
        "label":"apt-install-without-version",
        "start":233,
        "end":526,
        "text":"apt-get install -y \\\\npython \\\\ntcpdump \\\\nlibpcre3 libpcre3-dbg libpcre3-dev \\\\nbuild-essential autoconf automake libtool libpcap-dev libnet1-dev \\\\nlibyaml-0-2 libyaml-dev zlib1g zlib1g-dev libcap-ng-dev libcap-ng0 \\\\nmake libmagic-dev libjansson-dev libjansson4 pkg-config"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":693,
        "end":794,
        "text":"ADD http:\/\/downloads.suricata-ids.org\/suricata-${SURI_VERSION}.tar.gz suricata-${SURI_VERSION}.tar.gz"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ab3780eea9ffbf4d9872f4e35621e76b17d7495f.dockerfile",
    "file_content":"FROM debian  \n  \nRUN apt-get update && apt-get install -y curl && rm -rf \/var\/lib\/apt\/lists\/*  \n  \nENV HANDS_ON_SERVER docker.devel.iit.cnr.it  \nENV HANDS_ON_PORT 18273  \nCOPY book \/  \n  \nCMD \/book  \n\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":11,
        "text":"FROM debian"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":36,
        "end":62,
        "text":"&& apt-get install -y curl"
      },
      {
        "label":"apt-install-without-version",
        "start":39,
        "end":62,
        "text":"apt-get install -y curl"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"acb9323853e1b2cdb39480c6a369eb4e0ee64c0a.dockerfile",
    "file_content":"# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM gcr.io\/clusterfuzz-images\/oss-fuzz\/base\n\nRUN apt-get install -y libc6-i386 lib32gcc1\nENV UNTRUSTED_WORKER True\n",
    "risk_labels":[
      {
        "label":"miss-specific-tags",
        "start":570,
        "end":614,
        "text":"FROM gcr.io\/clusterfuzz-images\/oss-fuzz\/base"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":616,
        "end":659,
        "text":"RUN apt-get install -y libc6-i386 lib32gcc1"
      },
      {
        "label":"apt-install-without-version",
        "start":616,
        "end":659,
        "text":"RUN apt-get install -y libc6-i386 lib32gcc1"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "miss-apt-no-install-recommends",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ad26a9fa6c989b19ac7cb753558cedb7539d3f6a.dockerfile",
    "file_content":"# Redash v5.0 (All-in-One)\n# docker run --rm -p 5000:5000 -p 5432:5432 supinf\/redash:5.0\n# docker run --rm -p 5000:5000 -e REDASH_MAIL_SERVER=email-smtp.us-east-1.amazonaws.com -e REDASH_MAIL_PORT=465 -e REDASH_MAIL_USE_TLS=true -e REDASH_MAIL_USE_SSL=true -e REDASH_MAIL_USERNAME=user -e REDASH_MAIL_PASSWORD=pass -e REDASH_MAIL_DEFAULT_SENDER=no-reply@example.com supinf\/redash:5.0\n\nFROM supinf\/redash:core-5.0\n\nENV REDASH_DATABASE_URL=postgresql:\/\/postgres@localhost:5432\/postgres \\\n    REDASH_REDIS_URL=redis:\/\/localhost:6379\/0 \\\n    S6_VERSION=v1.21.4.0 \\\n    S6_LOGGING=1\n\nUSER root\n\n# Install s6-overlay for running multiple processes in a container\nRUN mkdir -p \/var\/cache\/apt \\\n    && apt-get install -y gnupg2 curl \\\n    && s6_dl=https:\/\/github.com\/just-containers\/s6-overlay\/releases\/download \\\n    && s6_tar=s6-overlay-amd64.tar.gz \\\n    && curl --location --silent --show-error -O \"${s6_dl}\/${S6_VERSION}\/${s6_tar}\" \\\n    && curl --location --silent --show-error -O \"${s6_dl}\/${S6_VERSION}\/${s6_tar}.sig\" \\\n    && curl --location --silent --show-error https:\/\/keybase.io\/justcontainers\/key.asc | gpg --import \\\n    && gpg --verify ${s6_tar}.sig ${s6_tar} \\\n    && tar xzf ${s6_tar} -C \/ \\\n    && apt-get remove --purge -y gnupg2 curl \\\n    && apt autoremove -y \\\n    && rm -rf ${s6_tar} ${s6_tar}.sig \/var\/cache\n\n# Install PostgreSQL v9.5\nRUN mkdir -p \/var\/cache\/apt \\\n    && apt-get install -y postgresql postgresql-contrib \\\n    && echo \"host  all  postgres  0.0.0.0\/0  trust\" > \/etc\/postgresql\/9.5\/main\/pg_hba.conf \\\n    && echo \"host  all  redash    0.0.0.0\/0  trust\" >> \/etc\/postgresql\/9.5\/main\/pg_hba.conf \\\n    && echo \"listen_addresses='*'\" >> \/etc\/postgresql\/9.5\/main\/postgresql.conf \\\n    && echo \"stats_temp_directory='\/tmp'\" >> \/etc\/postgresql\/9.5\/main\/postgresql.conf \\\n    && rm -rf \/var\/cache\n\n# Install Redis v4.0\nRUN mkdir -p \/var\/cache\/apt \\\n    && apt-get install -y build-essential curl tcl \\\n    && cd \/tmp \\\n    && curl --location --silent --show-error -O http:\/\/download.redis.io\/redis-stable.tar.gz \\\n    && tar xzf redis-stable.tar.gz \\\n    && cd redis-stable \\\n    && make && make install \\\n    && mkdir \/etc\/redis \\\n    && cp \/tmp\/redis-stable\/redis.conf \/etc\/redis \\\n    && adduser --system --group --no-create-home redis \\\n    && mkdir -p \/var\/lib\/redis \\\n    && chown redis:redis \/var\/lib\/redis \\\n    && chmod 770 \/var\/lib\/redis \\\n    && apt-get remove --purge -y build-essential curl tcl \\\n    && apt autoremove -y \\\n    && cd \/ \\\n    && rm -rf \/var\/cache \/tmp\/*\n\n# Configure user services with \/etc\/services.d\/\nRUN mkdir -p \/etc\/services.d\/postgres \\\n    && echo \"#!\/usr\/bin\/with-contenv sh\\n\\\ns6-setuidgid postgres \/usr\/lib\/postgresql\/9.5\/bin\/postgres \\\n-D \/var\/lib\/postgresql\/9.5\/main \\\n-c config_file=\/etc\/postgresql\/9.5\/main\/postgresql.conf\" \\\n      > \/etc\/services.d\/postgres\/run\n\nRUN mkdir -p \/etc\/services.d\/redis \\\n    && echo \"#!\/usr\/bin\/with-contenv sh\\n\\\n\/usr\/local\/bin\/redis-server \/etc\/redis\/redis.conf\" \\\n      > \/etc\/services.d\/redis\/run\n\nRUN mkdir -p \/etc\/services.d\/celery-worker \\\n    && echo \"#!\/usr\/bin\/with-contenv sh\\n\\\nsleep 3\\n\\\ncd \/app\\n\\\ns6-setuidgid postgres \/app\/bin\/docker-entrypoint create_db\\n\\\ns6-setuidgid redash \/app\/bin\/docker-entrypoint scheduler\" \\\n      > \/etc\/services.d\/celery-worker\/run\n\nEXPOSE 5432\n\nENTRYPOINT [\"\/init\"]\nCMD [\"s6-setuidgid\", \"redash\", \"\/app\/bin\/docker-entrypoint\", \"server\"]\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":691,
        "end":726,
        "text":"&& apt-get install -y gnupg2 curl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":691,
        "end":726,
        "text":"&& apt-get install -y gnupg2 curl \\"
      },
      {
        "label":"miss-apt-no-install-recommends",
        "start":1880,
        "end":1925,
        "text":"apt-get install -y build-essential curl tcl \\"
      },
      {
        "label":"apt-install-without-version",
        "start":1880,
        "end":1925,
        "text":"apt-get install -y build-essential curl tcl \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":1930,
        "end":1942,
        "text":"&& cd \/tmp \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2082,
        "end":2099,
        "text":"cd redis-stable \\"
      },
      {
        "label":"use-cd-change-dir",
        "start":2465,
        "end":2474,
        "text":"&& cd \/ \\"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-cd-change-dir",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ad27ebffe109e53ce527aa51656cefa126231f90.dockerfile",
    "file_content":"FROM centos:centos6\nMAINTAINER Anil Madhavapeddy <anil@recoil.org>\nRUN yum install -y sudo passwd git\nRUN useradd -d \/home\/opam -m -s \/bin\/bash opam\nRUN passwd -l opam\nADD opamsudo \/etc\/sudoers.d\/opam\nRUN chmod 440 \/etc\/sudoers.d\/opam\nRUN chown root:root \/etc\/sudoers.d\/opam\nRUN sed -i.bak 's\/^Defaults.*requiretty\/\/g' \/etc\/sudoers\nADD opam-installext \/usr\/bin\/opam-installext\nRUN git config --global user.email \"docker@example.com\"\nRUN git config --global user.name \"Docker CI\"\nRUN yum groupinstall -y \"Development Tools\"\nRUN curl -o \/etc\/yum.repos.d\/home:ocaml.repo -OL http:\/\/download.opensuse.org\/repositories\/home:ocaml\/CentOS_6\/home:ocaml.repo\nRUN yum install -y opam\nRUN chown -R opam:opam \/home\/opam\nUSER opam\nENV HOME \/home\/opam\nENV OPAMYES 1\nWORKDIR \/home\/opam\nUSER opam\nRUN sudo -u opam git clone git:\/\/github.com\/ocaml\/opam-repository\nRUN sudo -u opam opam init --comp=4.02.1 -a -y \/home\/opam\/opam-repository\nRUN sudo -u opam opam installext ocamlfind camlp4\nWORKDIR \/home\/opam\/opam-repository\nONBUILD RUN sudo -u opam sh -c \"cd \/home\/opam\/opam-repository && git pull && opam update -u -y\"\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":20,
        "end":66,
        "text":"MAINTAINER Anil Madhavapeddy <anil@recoil.org>"
      },
      {
        "label":"yum-install-without-version",
        "start":67,
        "end":101,
        "text":"RUN yum install -y sudo passwd git"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":168,
        "end":200,
        "text":"ADD opamsudo \/etc\/sudoers.d\/opam"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":332,
        "end":376,
        "text":"ADD opam-installext \/usr\/bin\/opam-installext"
      },
      {
        "label":"yum-install-without-version",
        "start":650,
        "end":673,
        "text":"RUN yum install -y opam"
      },
      {
        "label":"use-sudo-run",
        "start":781,
        "end":963,
        "text":"RUN sudo -u opam git clone git:\/\/github.com\/ocaml\/opam-repository\\nRUN sudo -u opam opam init --comp=4.02.1 -a -y \/home\/opam\/opam-repository\\nRUN sudo -u opam opam installext ocamlfind"
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "use-sudo-run"
    ]
  },
  {
    "filename":"ada58ca81a70e4ba5b486b55269d210c495d92a7.dockerfile",
    "file_content":"FROM phusion\/passenger-ruby23:0.9.19\n\n# Set correct environment variables.\nENV HOME \/root\n\n# Use baseimage-docker's init process.\nCMD [\"\/sbin\/my_init\"]\n\n# Additional packages: we are adding the netcat package so we can\n# make pings to the database service\nRUN apt-get update && apt-get install -y -o Dpkg::Options::=\"--force-confold\" netcat\n\n# Enable Nginx and Passenger\nRUN rm -f \/etc\/service\/nginx\/down\n\n# Add virtual host entry for the application. Make sure\n# the file is in the correct path\nRUN rm \/etc\/nginx\/sites-enabled\/default\nADD webapp.conf \/etc\/nginx\/sites-enabled\/webapp.conf\n\n# In case we need some environmental variables in Nginx. Make sure\n# the file is in the correct path\nADD rails-env.conf \/etc\/nginx\/main.d\/rails-env.conf\n\n# Install gems: it's better to build an independent layer for the gems\n# so they are cached during builds unless Gemfile changes\nWORKDIR \/tmp\nADD Gemfile \/tmp\/\nADD Gemfile.lock \/tmp\/\nRUN bundle install\n\n# Copy application into the container and use right permissions: passenger\n# uses the app user for running the application\nRUN mkdir \/home\/app\/webapp\nCOPY . \/home\/app\/webapp\nRUN usermod -u 1000 app\nRUN chown -R app:app \/home\/app\/webapp\nWORKDIR \/home\/app\/webapp\n\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n\nEXPOSE 80\n",
    "risk_labels":[
      {
        "label":"miss-apt-no-install-recommends",
        "start":278,
        "end":340,
        "text":"apt-get install -y -o Dpkg::Options::=\"--force-confold\" netcat"
      },
      {
        "label":"apt-install-without-version",
        "start":278,
        "end":340,
        "text":"apt-get install -y -o Dpkg::Options::=\"--force-confold\" netcat"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":536,
        "end":583,
        "text":"ADD webapp.conf \/etc\/nginx\/sites-enabled\/webapp"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":691,
        "end":737,
        "text":"ADD rails-env.conf \/etc\/nginx\/main.d\/rails-env"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":904,
        "end":925,
        "text":"ADD Gemfile.lock \/tmp"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":886,
        "end":897,
        "text":"ADD Gemfile"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "miss-apt-no-install-recommends",
      "apt-install-without-version",
      "use-add-instead-of-copy",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ae020a8e496c326971c6c71419d8b07eb7c419ad.dockerfile",
    "file_content":"FROM ubuntu:latest  \nMAINTAINER Christian Lück <christian@lueck.tv>  \n  \n# add archeologit user account  \nRUN useradd -m -d \/home\/archeologit archeologit  \n  \n# download latest master of ArcheoloGit  \nADD https:\/\/github.com\/marmelab\/ArcheoloGit\/archive\/master.zip \/master.zip  \n  \nRUN echo \"Install ArcheoloGit\" >&2 && \\  \n\\  \necho \"[1\/7] Install system dependencies\" >&2 && \\  \nDEBIAN_FRONTEND=noninteractive apt-get update && \\  \napt-get install -y --no-install-recommends git python3 && \\  \napt-get install -y --no-install-recommends unzip npm && \\  \n\\  \necho \"[2\/7] Unpack zipball\" >&2 && \\  \nunzip \/master.zip -d \/home\/archeologit && \\  \nmv \/home\/archeologit\/ArcheoloGit-master \/home\/archeologit\/ArcheoloGit && \\  \n\\  \necho \"[3\/7] Install bower via npm\" >&2 && \\  \nnpm install -g bower && \\  \n\\  \necho \"[4\/7] Install components via bower\" >&2 && \\  \nln -s \/usr\/bin\/nodejs \/usr\/bin\/node && \\  \ncd \/home\/archeologit\/ArcheoloGit && \\  \nHOME=\/home\/archeologit bower install --allow-root && \\  \n\\  \necho \"[5\/7] Assign proper access\" >&2 && \\  \nchown -R archeologit:archeologit \/home\/archeologit\/ArcheoloGit && \\  \n\\  \necho \"[6\/7] Uninstall bower (leave components)\" >&2 && \\  \nnpm uninstall -g bower && \\  \nrm -rf \/.npm\/ && \\  \n\\  \necho \"[7\/7] Uninstall system dependencies (leave only git\/python)\" >&2 && \\  \napt-get purge -y unzip npm && \\  \napt-get autoremove -y && \\  \napt-get clean  \n  \n# install assets (requires HOME to be set)  \nUSER archeologit  \n  \nWORKDIR \/home\/archeologit\/ArcheoloGit  \n  \n# this is the directory where the source git repository should be mounted to  \nVOLUME \/data  \n  \n# expose only http port 8000  \nEXPOSE 8000  \n# always analyze source volume, then start a lightweight webserver  \nCMD .\/run.sh \/data && python3 -m http.server 8000  \n\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":21,
        "end":67,
        "text":"MAINTAINER Christian Lück <christian@lueck.tv>"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":18,
        "text":"FROM ubuntu:latest"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":201,
        "end":275,
        "text":"ADD https:\/\/github.com\/marmelab\/ArcheoloGit\/archive\/master.zip \/master.zip"
      },
      {
        "label":"apt-install-without-version",
        "start":432,
        "end":555,
        "text":"apt-get install -y --no-install-recommends git python3 && \\\\napt-get install -y --no-install-recommends unzip npm && \\\\n\\"
      }
    ],
    "label_list":[
      "miss-specific-tags",
      "apt-install-without-version",
      "use-deprecated-maintainer",
      "use-add-instead-of-copy"
    ]
  },
  {
    "filename":"c2f0e40d59c3fd66ed49e4236f716e52c75fc607.dockerfile",
    "file_content":"# \"ported\" by Adam Miller <maxamillion@fedoraproject.org> from\n#   https:\/\/github.com\/fedora-cloud\/Fedora-Dockerfiles\n#\n# Originally written for Fedora-Dockerfiles by\n#   scollier <scollier@redhat.com>\n\nFROM centos:centos7\nMAINTAINER The CentOS Project <cloud-ops@centos.org>\n\nRUN yum -y update; yum clean all\nRUN yum -y install sudo epel-release; yum clean all\nRUN yum -y install postgresql-server postgresql postgresql-contrib supervisor; yum clean all\n\nADD .\/postgresql-setup \/usr\/bin\/postgresql-setup\nADD .\/supervisord.conf \/etc\/supervisord.conf\nADD .\/start_postgres.sh \/start_postgres.sh\n\n#Sudo requires a tty. fix that.\nRUN sed -i 's\/.*requiretty$\/#Defaults requiretty\/' \/etc\/sudoers\nRUN chmod +x \/usr\/bin\/postgresql-setup\nRUN chmod +x \/start_postgres.sh\n\nRUN \/usr\/bin\/postgresql-setup initdb\n\nADD .\/postgresql.conf \/var\/lib\/pgsql\/data\/postgresql.conf\n\nRUN chown -v postgres.postgres \/var\/lib\/pgsql\/data\/postgresql.conf\n\nRUN echo \"host    all             all             0.0.0.0\/0               md5\" >> \/var\/lib\/pgsql\/data\/pg_hba.conf\n\nVOLUME [\"\/var\/lib\/pgsql\"]\n\nEXPOSE 5432\n\nCMD [\"\/bin\/bash\", \"\/start_postgres.sh\"]\n",
    "risk_labels":[
      {
        "label":"use-deprecated-maintainer",
        "start":223,
        "end":275,
        "text":"MAINTAINER The CentOS Project <cloud-ops@centos.org>"
      },
      {
        "label":"yum-install-without-version",
        "start":277,
        "end":454,
        "text":"RUN yum -y update; yum clean all\\nRUN yum -y install sudo epel-release; yum clean all\\nRUN yum -y install postgresql-server postgresql postgresql-contrib supervisor; yum clean all"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":456,
        "end":592,
        "text":"ADD .\/postgresql-setup \/usr\/bin\/postgresql-setup\\nADD .\/supervisord.conf \/etc\/supervisord.conf\\nADD .\/start_postgres.sh \/start_postgres.sh"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":800,
        "end":857,
        "text":"ADD .\/postgresql.conf \/var\/lib\/pgsql\/data\/postgresql.conf"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "yum-install-without-version",
      "use-deprecated-maintainer",
      "root-privilege-user"
    ]
  },
  {
    "filename":"c301c23d3b7d6ca21cf477d28567887ded3fcca1.dockerfile",
    "file_content":"FROM stellar\/base:latest\n\nMAINTAINER Mat Schaffer <mat@stellar.org>\n\nENV STELLAR_CORE_VERSION 11.2.0rc3-968-19cf49b0\n\nEXPOSE 11625\nEXPOSE 11626\n\nVOLUME \/data\nVOLUME \/postgresql-unix-sockets\nVOLUME \/heka\n\nADD install \/\nRUN \/install\n\nADD heka \/heka\nADD confd \/etc\/confd\nADD utils \/utils\nADD start \/\n\nCMD [\"\/start\"]\n",
    "risk_labels":[
      {
        "label":"use-add-instead-of-copy",
        "start":232,
        "end":296,
        "text":"ADD heka \/heka\\nADD confd \/etc\/confd\\nADD utils \/utils\\nADD start \/"
      },
      {
        "label":"use-add-instead-of-copy",
        "start":204,
        "end":217,
        "text":"ADD install \/"
      },
      {
        "label":"use-deprecated-maintainer",
        "start":26,
        "end":62,
        "text":"MAINTAINER Mat Schaffer <mat@stellar"
      },
      {
        "label":"miss-specific-tags",
        "start":0,
        "end":24,
        "text":"FROM stellar\/base:latest"
      },
      {
        "label":"root-privilege-user",
        "start":-1,
        "end":-1,
        "text":"The USER directive was not explicitly declared; the process will run as the default root user."
      }
    ],
    "label_list":[
      "use-add-instead-of-copy",
      "use-deprecated-maintainer",
      "miss-specific-tags",
      "root-privilege-user"
    ]
  },
  {
    "filename":"ce937a38da85d16972753448a2f245bec8da4caa.dockerfile",
    "file_content":"# ———————————————————————————————\n# Builder environment for ppc64le + Go\n# ———————————————————————————————\nFROM ppc64le\/fedora:24\n\n# ———————————————————————————————\n# Pin each dnf package version here:\n# ———————————————————————————————\nARG DEV_TOOLS_VER=24-3.fc24\nARG FEDORA_PACKAGER_VER=1.7-4.fc24\nARG BTRFS_PROGS_VER=4.9.17-1.fc24\nARG DEVICE_MAPPER_VER=2:2.02.145-1.fc24\nARG GLIBC_STATIC_VER=2.26-21.fc24\nARG LIBSECCOMP_VER=2.3.1-4.fc24\nARG LIBSELINUX_VER=2.8-5.fc24\nARG LIBTOOL_LTDL_VER=2.4.6-19.fc24\nARG PKGCONFIG_VER=1.4.2-1.fc24\nARG SELINUX_POLICY_VER=3.13.1-192.fc24\nARG SELINUX_POLICY_DEVEL_VER=3.13.1-192.fc24\nARG SYSTEMD_VER=234-12.fc24\nARG TAR_VER=1.29-1.fc24\nARG GIT_VER=2.14.1-1.fc24\nARG CMAKE_VER=3.9.2-1.fc24\n\n# Install build‐time tools with pinned versions\nRUN dnf install -y \\\n      @development-tools-${DEV_TOOLS_VER} \\\n      fedora-packager-${FEDORA_PACKAGER_VER} \\\n      btrfs-progs-devel-${BTRFS_PROGS_VER} \\\n      device-mapper-devel-${DEVICE_MAPPER_VER} \\\n      glibc-static-${GLIBC_STATIC_VER} \\\n      libseccomp-devel-${LIBSECCOMP_VER} \\\n      libselinux-devel-${LIBSELINUX_VER} \\\n      libtool-ltdl-devel-${LIBTOOL_LTDL_VER} \\\n      pkgconfig-${PKGCONFIG_VER} \\\n      selinux-policy-${SELINUX_POLICY_VER} \\\n      selinux-policy-devel-${SELINUX_POLICY_DEVEL_VER} \\\n      systemd-devel-${SYSTEMD_VER} \\\n      tar-${TAR_VER} \\\n      git-${GIT_VER} \\\n      cmake-${CMAKE_VER} \\\n    && dnf clean all\n\n# ———————————————————————————————\n# Pin Go download by version+checksum\n# ———————————————————————————————\nARG GO_VERSION=1.7.4\nARG GO_SHA256=c86e1e7391c5df207634e812b346fe9ee0980313f4c6b6e4e2388a16d29fdd8e\nRUN curl -fsSL https:\/\/golang.org\/dl\/go${GO_VERSION}.linux-ppc64le.tar.gz -o go.tar.gz \\\n    && echo \"${GO_SHA256}  go.tar.gz\" | sha256sum -c - \\\n    && tar -xzf go.tar.gz -C \/usr\/local \\\n    && rm go.tar.gz\n\n# Put Go on PATH\nENV PATH=\/usr\/local\/go\/bin:$PATH \\\n    AUTO_GOPATH=1 \\\n    DOCKER_BUILDTAGS=\"pkcs11 seccomp selinux\" \\\n    RUNC_BUILDTAGS=\"seccomp selinux\"\n\n# ———————————————————————————————\n# Runtime (non-root) user\n# ———————————————————————————————\nRUN useradd -r -u 1000 -m -d \/home\/appuser appuser \n\nUSER appuser\nWORKDIR \/home\/appuser\n\n# Default to a shell (replace with your real ENTRYPOINT)\nCMD [\"bash\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d16bff23d0e1da6cc69fdce05dee222a467fb0e2.dockerfile",
    "file_content":"FROM balenalib\/aarch64-alpine:3.9-run\n\nENV GO_VERSION 1.12.5\n\n# Set up nsswitch.conf for Go's \"netgo\" implementation.\nRUN [ ! -e \/etc\/nsswitch.conf ] && echo 'hosts: files dns' > \/etc\/nsswitch.conf\n\n# Install dependencies and Go\nRUN apk add --no-cache git gcc ca-certificates curl \\\n    && mkdir -p \/usr\/local\/go \\\n    && curl -SLO \"http:\/\/resin-packages.s3.amazonaws.com\/golang\/v$GO_VERSION\/go$GO_VERSION.linux-alpine-aarch64.tar.gz\" \\\n    && echo \"983d78e68083b3ebaf918cdc3be8fa448b1e158d4a184090e8e07a2a250c3bee  go$GO_VERSION.linux-alpine-aarch64.tar.gz\" | sha256sum -c - \\\n    && tar -xzf \"go$GO_VERSION.linux-alpine-aarch64.tar.gz\" -C \/usr\/local\/go --strip-components=1 \\\n    && rm -f go$GO_VERSION.linux-alpine-aarch64.tar.gz \\\n    && apk del curl\n\n# Set environment variables for Go\nENV GOROOT \/usr\/local\/go\nENV GOPATH \/go\nENV PATH $GOPATH\/bin:\/usr\/local\/go\/bin:$PATH\n\n# Create a non-root user and set appropriate permissions\nRUN adduser -D go && mkdir -p \"$GOPATH\/src\" \"$GOPATH\/bin\" && chown -R go:go \"$GOPATH\"\n\nUSER go\n\nWORKDIR $GOPATH\n\nCMD [\"echo\", \"'No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https:\/\/balena.io\/docs'\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a84f2fd8c3f6def7d48fa8748ab5a70b714da0b2.dockerfile",
    "file_content":"###\n### DO NOT MODIFY THIS FILE.  THIS FILE HAS BEEN AUTOGENERATED\n###\n\nFROM circleci\/golang:1.10.4-node\n\nLABEL org.opencontainers.image.authors=\"CircleCI Team\" \\\n      org.opencontainers.image.description=\"Go + Node image with Java8, PhantomJS, Firefox, Chrome & drivers\"\n\n# 🔐 Pinned version args\nARG OPENJDK_VER=8u171-b11-0+deb9u1\nARG CURL_VER=7.52.1-5+deb9u10\nARG JQ_VER=1.5+dfsg-2\nARG UNZIP_VER=6.0-21+deb9u1\nARG BZIP2_VER=1.0.6-8.1\nARG PHANTOMJS_VER=2.1.1\nARG PHANTOMJS_SHA=3f5f1bf7b9d6c37a5a3b7e2f758a0f66eabda4d3\nARG FIREFOX_VER=47.0.1-0ubuntu1\nARG FIREFOX_SHA=ef016febe5ec4eaf7d455a34579834bcde7703cb0818c80044f4d148df8473bb\nARG CHROME_VER=90.0.4430.212-1\nARG CHROMEDRIVER_VER=90.0.4430.24\n\n# 1️⃣ Install system deps, fully pinned\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      openjdk-8-jdk=${OPENJDK_VER} \\\n      curl=${CURL_VER} \\\n      jq=${JQ_VER} \\\n      unzip=${UNZIP_VER} \\\n      bzip2=${BZIP2_VER} \\\n      libfontconfig1=2.11.0-6.7+deb9u2 \\\n      libgtk-3-0=3.22.11-2+deb9u1 \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n# 2️⃣ Install PhantomJS with checksum\nRUN curl -fsSL -o \/tmp\/phantomjs.tar.bz2 \\\n      https:\/\/bitbucket.org\/ariya\/phantomjs\/downloads\/phantomjs-${PHANTOMJS_VER}-linux-x86_64.tar.bz2 && \\\n    echo \"${PHANTOMJS_SHA}  \/tmp\/phantomjs.tar.bz2\" | sha1sum -c - && \\\n    tar -xjf \/tmp\/phantomjs.tar.bz2 -C \/tmp && \\\n    mv \/tmp\/phantomjs-${PHANTOMJS_VER}-linux-x86_64\/bin\/phantomjs \/usr\/local\/bin && \\\n    rm -rf \/tmp\/phantomjs*\n\n# 3️⃣ Install Firefox\nRUN curl -fsSL -o \/tmp\/firefox.deb \\\n      https:\/\/s3.amazonaws.com\/circle-downloads\/firefox-mozilla-build_${FIREFOX_VER}_amd64.deb && \\\n    echo \"${FIREFOX_SHA}  \/tmp\/firefox.deb\" | sha256sum -c - && \\\n    dpkg -i \/tmp\/firefox.deb || apt-get install -y --no-install-recommends -f && \\\n    rm -f \/tmp\/firefox.deb\n\n# 4️⃣ Install GeckoDriver\nRUN curl -fsSL -o \/tmp\/geckodriver.tar.gz \\\n      https:\/\/github.com\/mozilla\/geckodriver\/releases\/download\/v0.27.0\/geckodriver-v0.27.0-linux64.tar.gz && \\\n    tar -xzf \/tmp\/geckodriver.tar.gz -C \/usr\/local\/bin && \\\n    chmod +x \/usr\/local\/bin\/geckodriver && \\\n    rm \/tmp\/geckodriver.tar.gz\n\n# 5️⃣ Install Chrome & Chromedriver (both pinned)\nRUN curl -fsSL -o \/tmp\/chrome.deb \\\n      https:\/\/dl.google.com\/linux\/deb\/pool\/main\/g\/google-chrome-stable\/google-chrome-stable_${CHROME_VER}_amd64.deb && \\\n    dpkg -i \/tmp\/chrome.deb || apt-get install -y --no-install-recommends -f && \\\n    rm -f \/tmp\/chrome.deb && \\\n    curl -fsSL -o \/tmp\/chromedriver.zip \\\n      https:\/\/chromedriver.storage.googleapis.com\/${CHROMEDRIVER_VER}\/chromedriver_linux64.zip && \\\n    unzip \/tmp\/chromedriver.zip -d \/usr\/local\/bin && \\\n    chmod +x \/usr\/local\/bin\/chromedriver && \\\n    rm -f \/tmp\/chromedriver.zip\n\n# 6️⃣ Setup XVFB launcher\nENV DISPLAY=:99\nRUN printf '#!\/bin\/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' \\\n    > \/usr\/local\/bin\/docker-entrypoint.sh && \\\n    chmod +x \/usr\/local\/bin\/docker-entrypoint.sh\n\n# 7️⃣ Create non-root user\nRUN groupadd --system circleci && \\\n    useradd --system --create-home --gid circleci circleci\n\nUSER circleci\nWORKDIR \/home\/circleci\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"\/bin\/sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"ef638e4d7cc5fe6f003aa4756840ae6ce7544ecc.dockerfile",
    "file_content":"FROM %%DOCKER_NAMESPACE%%\/%%DOCKER_PREFIX%%openstack-neutron-alpine:%%DOCKER_TAG%%\n\nARG APP_USER=harbor\nARG APP_UID=10001\nARG APP_GID=10001\n\nRUN addgroup -S -g ${APP_GID} ${APP_USER} \\\n && adduser  -S -u ${APP_UID} -G ${APP_USER} ${APP_USER}\n\nCOPY --chown=${APP_USER}:${APP_USER} .\/assets\/ \/opt\/harbor\/assets\n\nRUN set -e; cp -rf \/opt\/harbor\/assets\/* \/; rm -rf \/opt\/harbor\/assets\n\nUSER ${APP_USER}\n\nLABEL license=\"Apache-2.0\" \\\n      vendor=\"Port Direct\" \\\n      url=\"https:\/\/port.direct\/\" \\\n      vcs-type=\"Git\" \\\n      vcs-url=\"https:\/\/github.com\/portdirect\/harbor\" \\\n      name=\"%%DOCKER_FULLIMAGE%%\" \\\n      vcs-ref=\"%%DOCKER_TAG%%\" \\\n      build-date=\"%%DOCKER_BUILD_DATE%%\"",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a74388d6db80c11c71faffc4594cca18173be2c7.dockerfile",
    "file_content":"# -----------------------------------------------------------------------------\n# Docker Registry on Ubuntu 18.04 with Go 1.1.1 and non-root user\n# -----------------------------------------------------------------------------\nFROM ubuntu:18.04\n\nLABEL maintainer=\"Your Name <you@example.com>\"\n\n# Install only the packages you need, pin them, no recommends, clean up in one RUN\nRUN set -eux; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        curl=7.58.0-2ubuntu3.16 \\\n        build-essential=12.4ubuntu1 \\\n        git=1:2.17.1-1ubuntu0.7; \\\n    rm -rf \/var\/lib\/apt\/lists\/*\n\n# Install Go 1.1.1\nARG GO_VERSION=1.1.1\nARG GO_SHA256=7e5935ec96c13cfc17c570d44a0181bb4b2fc33ebb6994c552d6cc423b092f07\nRUN set -eux; \\\n    curl -fsSL \"https:\/\/go.googlecode.com\/files\/go${GO_VERSION}.linux-amd64.tar.gz\" -o go.tar.gz; \\\n    echo \"${GO_SHA256}  go.tar.gz\" | sha256sum -c -; \\\n    tar -C \/usr\/local -xzf go.tar.gz; \\\n    rm go.tar.gz\n\nENV PATH=\/usr\/local\/go\/bin:$PATH \\\n    GOPATH=\/go \\\n    CGO_ENABLED=0\n\n# Validate Go installation\nWORKDIR \/tmp\nRUN printf 'package main\\nimport \"fmt\"\\nfunc main() { fmt.Println(\"OK\") }' > hello.go && \\\n    go build -o hello hello.go && \\\n    .\/hello\n\n# Build docker-registry from source\nWORKDIR \/docker-registry\nRUN git clone --depth=1 https:\/\/github.com\/docker\/docker-registry.git . && \\\n    make -C contrib\/golang_impl && \\\n    cp contrib\/golang_impl\/bin\/docker-registry \/usr\/local\/bin\/\n\n# Create and switch to non-root user\nRUN groupadd -r appuser && useradd -r -g appuser appuser\nUSER appuser\n\n# Run as non-root, expose only port 80\nWORKDIR \/home\/appuser\nEXPOSE 80\n\nENTRYPOINT [\"\/usr\/local\/bin\/docker-registry\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"f078f3779342835444238bb561dd17b285906d0d.dockerfile",
    "file_content":"FROM postgres:9.5\n\nENV PGDATA=\/var\/lib\/postgresql\/data\/pgdata \\\n    POSTGRES_DB=parrot\n\n# copy and set ownership so that the 'postgres' user can read the config\nCOPY --chown=postgres:postgres postgres.conf \/configs\/postgres.conf\n\nVOLUME [\"\/var\/log\/postgresql\", \"${PGDATA}\"]\n\n# switch to the postgres user (non-root)\nUSER postgres\n\nCMD [\"postgres\", \"-c\", \"config_file=\/configs\/postgres.conf\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"ee5e5beea5aef2db91c3958e8aa7ca7e6823a861.dockerfile",
    "file_content":"# pinned base image\nFROM callforamerica\/debian:1.0.0@sha256:<digest>\n\nARG ERLANG_VERSION=19.2\nARG COUCHDB_VERSION=2.0.0\n\nENV APP=couchdb \\\n    HOME=\/opt\/couchdb \\\n    ERLANG_VERSION=${ERLANG_VERSION} \\\n    COUCHDB_VERSION=${COUCHDB_VERSION} \\\n    ERL_MAX_PORTS=65536 \\\n    COUCHDB_LOG_LEVEL=info\n\nLABEL org.opencontainers.image.authors=\"Joe Black <joeblack949@gmail.com>\" \\\n      lang.erlang.version=\"${ERLANG_VERSION}\" \\\n      app.couchdb.version=\"${COUCHDB_VERSION}\"\n\n# non-root runtime user\nRUN groupadd -r \"${APP}\" --gid 1000 && \\\n    useradd  -r -g \"${APP}\" --uid 1000 -d \"${HOME}\" -s \/usr\/sbin\/nologin \"${APP}\"\n\nCOPY --chown=${APP}:${APP} build.sh \/tmp\/build.sh\nRUN bash \/tmp\/build.sh && rm \/tmp\/build.sh\n\nCOPY build\/50-couchdb-functions.sh \/etc\/profile.d\/\nCOPY build\/couchdb-helper \/usr\/local\/bin\/\nCOPY entrypoint \/\n\nEXPOSE 5984 5986\nVOLUME [\"\/volumes\/couchdb\/data\"]\n\nWORKDIR ${HOME}\nUSER ${APP}\n\nHEALTHCHECK --interval=15s --timeout=5s CMD curl -fs http:\/\/localhost:5984\/_users || exit 1\n\nENTRYPOINT [\"\/dumb-init\" ,\"--\"]\nCMD [\"\/entrypoint\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d5766e18a1789d9167b16bd93f5f3611b3f94db1.dockerfile",
    "file_content":"ARG MON_AGENT_BASE_VERSION\nFROM monasca\/agent-base:${MON_AGENT_BASE_VERSION}\n\n# optional rebuild trigger\nARG REBUILD=1\n\nCOPY start.sh \/\nCOPY templates\/ \/templates\n\n# pin package version and drop privileges\nRUN apk add --no-cache util-linux=2.37.4-r0 \\\n && addgroup -S monasca && adduser -S -G monasca monasca\n\nUSER monasca\nWORKDIR \/home\/monasca\n\nCMD [\"\/start.sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d369844d5bdf5b08e3462577e1e3da507c1573dd.dockerfile",
    "file_content":"FROM node:8.11.4-alpine\n\nENV NODE_ENV=production\n\n# non-root execution\nRUN addgroup -g 1001 app \\\n && adduser  -D -G app -u 1001 app\n\nWORKDIR \/app\/website\n\n# dependencies first for better layer-cache\nCOPY --chown=app:app .\/website\/package.json .\/website\/yarn.lock* .\/\nRUN yarn install --frozen-lockfile --production --non-interactive\n\n# project files\nCOPY --chown=app:app .\/docs     \/app\/docs\nCOPY --chown=app:app .\/website  \/app\/website\n\nUSER app\n\nEXPOSE 3000 35729\nCMD [\"yarn\",\"start\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a9b65564083715aa578fef95a5494153783da139.dockerfile",
    "file_content":"# ------------------------------------------------------------------------------\n# DBpedia Spotlight Nightly\n# ------------------------------------------------------------------------------\n    FROM openjdk:8u212-jre-alpine3.9\n\n    LABEL org.opencontainers.image.authors=\"DBpedia Spotlight Team <dbp-spotlight-developers@lists.sourceforge.net>\" \\\n          org.opencontainers.image.license=\"Apache-2.0\" \\\n          org.opencontainers.image.description=\"DBpedia Spotlight nightly build\"\n    \n    # ─── Create non-root user ─────────────────────────────────────────────────────\n    RUN addgroup -S spotlight && adduser -S -G spotlight spotlight\n    \n    # ─── Set safe WORKDIR before any file operations ──────────────────────────────\n    WORKDIR \/opt\/spotlight\n    \n    # ─── Fetch and install Spotlight artifacts ────────────────────────────────────\n    ENV RELEASE_SERVER=downloads.dbpedia-spotlight.org \\\n        RELEASE_FILENAME=dbpedia-spotlight-nightly-build.jar \\\n        LANGUAGE_MODEL=en.tar.gz\n    \n    # Install curl, fetch files, extract, clean up — all in one layer\n    RUN apk add --no-cache curl && \\\n        curl -fSL \"http:\/\/${RELEASE_SERVER}\/spotlight\/${RELEASE_FILENAME}\" -o \"${RELEASE_FILENAME}\" && \\\n        curl -fSL \"http:\/\/${RELEASE_SERVER}\/2016-10\/en\/model\/${LANGUAGE_MODEL}\" -o \"${LANGUAGE_MODEL}\" && \\\n        tar xvf \"${LANGUAGE_MODEL}\" && \\\n        rm \"${LANGUAGE_MODEL}\" && \\\n        apk del curl\n    \n    # ─── Application entrypoint ───────────────────────────────────────────────────\n    COPY spotlight.sh \/usr\/local\/bin\/spotlight.sh\n    RUN chmod +x \/usr\/local\/bin\/spotlight.sh && \\\n        chown spotlight:spotlight \/usr\/local\/bin\/spotlight.sh\n    \n    # ─── Switch to non-root user and finalize ─────────────────────────────────────\n    USER spotlight\n    \n    EXPOSE 80\n    \n    ENTRYPOINT [\"\/usr\/local\/bin\/spotlight.sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d4e29881cca4e06a5e5b7f76708405b625031194.dockerfile",
    "file_content":"# Use the cypress browser image as a base\nFROM cypress\/browsers:chrome67\n\n# Create and use a non-root user for security\nRUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser\n\n# Set the working directory for the app\nENV APP \/usr\/src\/app\nWORKDIR $APP\n\n# Copy package.json and install dependencies\nCOPY package.json $APP\/package.json\nRUN npm install && npm run cypress:install > \/dev\/null\n\n# Copy the necessary files for Cypress tests\nCOPY client\/cypress $APP\/client\/cypress\nCOPY cypress.json $APP\/cypress.json\n\n# Verify Cypress installation\nRUN .\/node_modules\/.bin\/cypress verify\n\n# Switch to a non-root user for security\nUSER appuser\n\n# Default command (for Cypress)\nCMD [\"npx\", \"cypress\", \"run\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"cf5c898283ffa08a966006928fb90bcd0f2663d4.dockerfile",
    "file_content":"# 1) Pin to specific, immutable tags rather than “blurry” aliases\nFROM composer:2.5.8 AS composer\n\nFROM php:7.1.33-cli\n\n# 2) Create a dedicated non-root user\nRUN groupadd -g 1000 appuser \\\n && useradd  -u 1000 -g appuser -m appuser\n\n# 3) Copy only what’s needed from the composer stage\nCOPY --from=composer \/srv\/composer \/srv\/composer\n\n# 4) Install exactly-versioned tools in one RUN, with -y and --no-install-recommends\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n      jq=1.5+dfsg-2ubuntu0.3 \\\n # 5) Symlink composer into PATH and fix ownership, then clean up\n && ln -s \/srv\/composer\/vendor\/bin\/composer \/usr\/local\/bin\/composer \\\n && chown -R appuser:appuser \/srv\/composer \/usr\/local\/bin\/composer \\\n && rm -rf \/var\/lib\/apt\/lists\/*\n\n# 6) Switch to non-root user for runtime\nUSER appuser\nWORKDIR \/home\/appuser\n\n# 7) Single ENTRYPOINT and CMD\nENTRYPOINT [\"composer\"]\nCMD [\"help\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d16edc82125bba3af8e6b0992b48c61e80ad89ac.dockerfile",
    "file_content":"# Base image\nFROM balenalib\/nitrogen6xq2g-debian:stretch-build\n\n# Define environment variables for Node and Yarn versions\nENV NODE_VERSION 9.11.2\nENV YARN_VERSION 1.15.2\n\n# Install dependencies, Node.js and Yarn\nRUN for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5 \\\n    ; do \\\n        gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n        gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n        gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" ; \\\n    done \\\n    && curl -SLO \"http:\/\/resin-packages.s3.amazonaws.com\/node\/v$NODE_VERSION\/node-v$NODE_VERSION-linux-armv7hf.tar.gz\" \\\n    && echo \"b94f8935568f746da0cbb89ec97508039c2cad2fc1750ab04150b098614b9241  node-v$NODE_VERSION-linux-armv7hf.tar.gz\" | sha256sum -c - \\\n    && tar -xzf \"node-v$NODE_VERSION-linux-armv7hf.tar.gz\" -C \/usr\/local --strip-components=1 \\\n    && rm \"node-v$NODE_VERSION-linux-armv7hf.tar.gz\" \\\n    && curl -fSLO --compressed \"https:\/\/yarnpkg.com\/downloads\/$YARN_VERSION\/yarn-v$YARN_VERSION.tar.gz\" \\\n    && curl -fSLO --compressed \"https:\/\/yarnpkg.com\/downloads\/$YARN_VERSION\/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n    && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n    && mkdir -p \/opt\/yarn \\\n    && tar -xzf yarn-v$YARN_VERSION.tar.gz -C \/opt\/yarn --strip-components=1 \\\n    && ln -s \/opt\/yarn\/bin\/yarn \/usr\/local\/bin\/yarn \\\n    && ln -s \/opt\/yarn\/bin\/yarn \/usr\/local\/bin\/yarnpkg \\\n    && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n    && npm config set unsafe-perm true -g --unsafe-perm \\\n    && rm -rf \/tmp\/*\n\n# Add non-root user for running the application securely\nRUN useradd -ms \/bin\/bash node\nUSER node\n\n# Set the working directory for the application\nWORKDIR \/home\/node\n\n# Expose any required ports\nEXPOSE 8080\n\n# Default command to run the app\nCMD [\"echo\", \"No CMD command was set in Dockerfile! Details about CMD command could be found in Dockerfile Guide section in our Docs. Here's the link: https:\/\/balena.io\/docs\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"aaa1d06fb3c9bd86525183dc5822f18d08e9a00e.dockerfile",
    "file_content":"# Use a specific, immutable base\nFROM ubuntu:18.04\n\n# Create non-root user early\nRUN groupadd --system appgroup && \\\n    useradd --system --create-home --gid appgroup --shell \/bin\/bash appuser\n\n# Install and pin all system packages in one layer\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      python3=3.6.7-1~18.04.1 \\\n      python3-pip=9.0.1-2.3~ubuntu1.18.04.4 \\\n      gcc=4:7.4.0-1ubuntu2.3 \\\n      tdsodbc=1.1.13-1build1 \\\n      unixodbc-dev=2.3.4-2ubuntu1 \\\n      unixodbc-bin=2.3.4-2ubuntu1 \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n# Copy ODBC driver config\nCOPY odbcinst.ini \/etc\/odbcinst.ini\n\n# Switch to non-root\nUSER appuser\nWORKDIR \/home\/appuser\n\n# Copy application code\nCOPY --chown=appuser:appgroup . .\n\n# Install Python dependencies with versions pinned in requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Default command\nCMD [\"python3\", \".\/main.py\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d12fc43a2d96b8ccdd6f63cccb86a9aa147d2905.dockerfile",
    "file_content":"# Copyright 2017 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This Dockerfile will build an image that is configured\n# to run Fluentd with an Elasticsearch plug-in and the\n# provided configuration file.\n\nFROM gcr.io\/google_containers\/ubuntu-slim:0.6\n\n# Create a non-root user and group\nRUN groupadd --system fluentd && useradd --system --gid fluentd fluentd\n\n# Ensure there are enough file descriptors for running Fluentd.\nRUN ulimit -n 65536\n\n# Disable prompts from apt.\nENV DEBIAN_FRONTEND noninteractive\n\n# Copy the Fluentd configuration file.\nCOPY td-agent.conf \/etc\/td-agent\/td-agent.conf\n\nCOPY build.sh \/tmp\/build.sh\nRUN \/tmp\/build.sh\n\n# Set the user to the non-root user created\nUSER fluentd\n\nENV LD_PRELOAD \/opt\/td-agent\/embedded\/lib\/libjemalloc.so\n\n# Run the Fluentd service.\nENTRYPOINT [\"td-agent\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"ab0225f7428459b77d79548473cc2fe8b5b3d0ed.dockerfile",
    "file_content":"FROM centos:7.9.2009\n\nLABEL maintainer=\"json_hc@163.com\" \\\n      org.opencontainers.image.description=\"MariaDB 10.0.33 runtime based on CentOS 7.9\" \\\n      org.opencontainers.image.licenses=\"GPL-2.0\"\n\n# 1️⃣ Remove conflicting MySQL libraries early\nRUN yum remove -y mysql-libs && yum clean all\n\n# 2️⃣ Copy and install pinned MariaDB RPMs (exact versions only)\nCOPY MariaDB-10.0.33-centos7-x86_64-client.rpm  \/root\/\nCOPY MariaDB-10.0.33-centos7-x86_64-common.rpm  \/root\/\nCOPY MariaDB-10.0.33-centos7-x86_64-compat.rpm  \/root\/\nCOPY MariaDB-10.0.33-centos7-x86_64-server.rpm  \/root\/\n\nRUN set -eux; \\\n    yum install -y \\\n      \/root\/MariaDB-10.0.33-centos7-x86_64-client.rpm \\\n      \/root\/MariaDB-10.0.33-centos7-x86_64-common.rpm \\\n      \/root\/MariaDB-10.0.33-centos7-x86_64-compat.rpm \\\n      \/root\/MariaDB-10.0.33-centos7-x86_64-server.rpm && \\\n    rm -f \/root\/MariaDB-10.0.33-centos7-x86_64-*.rpm && \\\n    yum clean all\n\n# 3️⃣ Create dedicated non-root user\nRUN groupadd -r mariadb && useradd -r -g mariadb -s \/sbin\/nologin -d \/var\/lib\/mysql mariadb\n\n# 4️⃣ Copy configuration and initialization files (owned by non-root)\nCOPY --chown=mariadb:mariadb business.sql \/root\/business.sql\nCOPY --chown=mariadb:mariadb server.cnf   \/etc\/my.cnf.d\/server.cnf\nCOPY --chown=mariadb:mariadb setup.sh     \/usr\/local\/bin\/setup.sh\n\nRUN chmod 700 \/usr\/local\/bin\/setup.sh\n\n# 5️⃣ Setup environment and default volume\nVOLUME [\"\/var\/lib\/mysql\"]\nWORKDIR \/var\/lib\/mysql\nUSER mariadb\n\nEXPOSE 3306\n\n# 6️⃣ Final startup\nENTRYPOINT [\"\/usr\/local\/bin\/setup.sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"a81f8a32b54b78cb067ef50b835e1b1bdf2f9f85.dockerfile",
    "file_content":"# ------------------------------------------------------------------------------\n# Dockerfile for ATAC-seq pipeline\n# Hardened: no MAINTAINER, apt-get with --no-install-recommends, explicit WORKDIR\n# ------------------------------------------------------------------------------\n\n# 1. Pin the base image to a specific, non-blurry tag\nFROM ubuntu:18.04\n\n# 2. Metadata via LABEL instead of MAINTAINER\nLABEL org.opencontainers.image.authors=\"Tobias Rausch <rausch@embl.de>\" \\\n      org.opencontainers.image.description=\"ATAC-seq analysis pipeline\"\n\n# 3. Create and switch to a non-root user up front\nRUN groupadd --system ubuntu && \\\n    useradd --system --create-home --gid ubuntu --uid 1000 ubuntu\n\n# 4. Install required build tools in one RUN, with -y and --no-install-recommends, then clean\nUSER root\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n      build-essential=12.4ubuntu1 \\\n      g++=4:7.4.0-1ubuntu2.3 \\\n      git=1:2.17.1-1ubuntu0.7 \\\n      unzip=6.0-21ubuntu1.2 \\\n      wget=1.19.4-1ubuntu2.2 \\\n    && rm -rf \/var\/lib\/apt\/lists\/*\n\n# 5. Use WORKDIR to avoid RUN cd ...\nWORKDIR \/opt\/ATACseq\n\n# 6. Clone and build the pipeline\nRUN git clone --depth 1 https:\/\/github.com\/tobiasrausch\/ATACseq.git . && \\\n    make all\n\n# 7. Drop privileges to non-root user\nUSER ubuntu\nWORKDIR \/home\/ubuntu\n\n# 8. Default to an interactive shell\nCMD [\"\/bin\/bash\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  },
  {
    "filename":"d5889383040460ba8702e37f9d796fc363e534d1.dockerfile",
    "file_content":"FROM balenalib\/armv7hf-alpine:3.7-run\n\n#––– pin Alpine 3.7 package versions –––\nARG LESS_VERSION=\"481-r0\"\nARG NANO_VERSION=\"2.7.2-r0\"\nARG NETTOOLS_VERSION=\"1.60-r0\"\nARG IFUPDOWN_VERSION=\"0.8.19-r3\"\nARG USBUTILS_VERSION=\"1.0.2-r0\"\nARG GNUPG_VERSION=\"2.1.18-r0\"\n\n# install only these exact versions\nRUN apk add --no-cache \\\n        less=${LESS_VERSION} \\\n        nano=${NANO_VERSION} \\\n        net-tools=${NETTOOLS_VERSION} \\\n        ifupdown=${IFUPDOWN_VERSION} \\\n        usbutils=${USBUTILS_VERSION} \\\n        gnupg=${GNUPG_VERSION}\n\n# drop to a non-root user\nRUN adduser -D -H -u 10001 appuser\n\nUSER appuser\nWORKDIR \/home\/appuser\n\nCMD [\"sh\"]",
    "risk_labels":[
      {
        "label":"dockerfile-without-risk",
        "start":-1,
        "end":-1,
        "text":"The dockerfile has been scanned and no security risks were detected."
      }
    ],
    "label_list":[
      "dockerfile-without-risk"
    ]
  }
]